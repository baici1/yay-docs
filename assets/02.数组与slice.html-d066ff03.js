const n=JSON.parse('{"key":"v-5d0aa364","path":"/language/Go/02.%E6%95%B0%E7%BB%84%E4%B8%8Eslice.html","title":"数组与slice","lang":"en-US","frontmatter":{"title":"数组与slice","date":"2022-07-01T20:53:31.000Z","category":["语言基础","go"],"author":{"name":"团子","url":"https://github.com/baici1"},"comment":false,"description":"数组与Slice原理 数组 数组是一个具有固定长度且拥有0个或者多个相同数据类型元素的序列。 数组的每一个元素都是通过索引去访问的，索引从0到数组长度减一。Go内置的函数len可以返回数组中元素个数。 package main import \\"fmt\\" func main(){ \\tvar a [3]int \\tb:=[3]int{1,2,3} \\tc:=[...]int{1,2,3} \\td:=[...]int{9:-1} \\tfmt.Println(\\"a:\\",a) \\tfmt.Println(\\"b:\\",b) \\tfmt.Println(\\"c:\\",c) \\tfmt.Println(\\"d:\\",d) }","icon":null,"isOriginal":true,"star":false,"article":true,"timeline":true,"image":null,"banner":null,"head":[["meta",{"property":"og:url","content":"https://yay-docs.yangdiy.cn/language/Go/02.%E6%95%B0%E7%BB%84%E4%B8%8Eslice.html"}],["meta",{"property":"og:site_name","content":"yay-docs"}],["meta",{"property":"og:title","content":"数组与slice"}],["meta",{"property":"og:description","content":"数组与Slice原理 数组 数组是一个具有固定长度且拥有0个或者多个相同数据类型元素的序列。 数组的每一个元素都是通过索引去访问的，索引从0到数组长度减一。Go内置的函数len可以返回数组中元素个数。 package main import \\"fmt\\" func main(){ \\tvar a [3]int \\tb:=[3]int{1,2,3} \\tc:=[...]int{1,2,3} \\td:=[...]int{9:-1} \\tfmt.Println(\\"a:\\",a) \\tfmt.Println(\\"b:\\",b) \\tfmt.Println(\\"c:\\",c) \\tfmt.Println(\\"d:\\",d) }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-05-31T15:06:12.000Z"}],["meta",{"property":"article:author","content":"团子"}],["meta",{"property":"article:published_time","content":"2022-07-01T20:53:31.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-31T15:06:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数组与slice\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-07-01T20:53:31.000Z\\",\\"dateModified\\":\\"2023-05-31T15:06:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"团子\\",\\"url\\":\\"https://github.com/baici1\\"}]}"]]},"headers":[{"level":2,"title":"数组","slug":"数组","link":"#数组","children":[]},{"level":2,"title":"切片","slug":"切片","link":"#切片","children":[{"level":3,"title":"底层数组","slug":"底层数组","link":"#底层数组","children":[]},{"level":3,"title":"Slice扩容规则","slug":"slice扩容规则","link":"#slice扩容规则","children":[]}]},{"level":2,"title":"参考文章","slug":"参考文章","link":"#参考文章","children":[]},{"level":2,"title":"奇怪的问题","slug":"奇怪的问题","link":"#奇怪的问题","children":[]}],"git":{"createdTime":1685545572000,"updatedTime":1685545572000,"contributors":[{"name":"Y先生","email":"249337001@qq.com","commits":1}]},"readingTime":{"minutes":7.8,"words":2339},"filePathRelative":"language/Go/02.数组与slice.md","localizedDate":"July 1, 2022","excerpt":"<h1> 数组与Slice原理</h1>\\n<h2> 数组</h2>\\n<p>数组是一个具有固定长度且拥有0个或者多个相同数据类型元素的序列。</p>\\n<p>数组的每一个元素都是通过索引去访问的，索引从0到数组长度减一。Go内置的函数<code>len</code>可以返回数组中元素个数。</p>\\n<div class=\\"language-go line-numbers-mode\\" data-ext=\\"go\\"><pre class=\\"language-go\\"><code><span class=\\"token keyword\\">package</span> main\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token string\\">\\"fmt\\"</span>\\n\\n<span class=\\"token keyword\\">func</span> <span class=\\"token function\\">main</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n\\t<span class=\\"token keyword\\">var</span> a <span class=\\"token punctuation\\">[</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">int</span>\\n\\tb<span class=\\"token operator\\">:=</span><span class=\\"token punctuation\\">[</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">{</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">}</span>\\n\\tc<span class=\\"token operator\\">:=</span><span class=\\"token punctuation\\">[</span><span class=\\"token operator\\">...</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">{</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">2</span><span class=\\"token punctuation\\">,</span><span class=\\"token number\\">3</span><span class=\\"token punctuation\\">}</span>\\n\\td<span class=\\"token operator\\">:=</span><span class=\\"token punctuation\\">[</span><span class=\\"token operator\\">...</span><span class=\\"token punctuation\\">]</span><span class=\\"token builtin\\">int</span><span class=\\"token punctuation\\">{</span><span class=\\"token number\\">9</span><span class=\\"token punctuation\\">:</span><span class=\\"token operator\\">-</span><span class=\\"token number\\">1</span><span class=\\"token punctuation\\">}</span>\\n\\tfmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"a:\\"</span><span class=\\"token punctuation\\">,</span>a<span class=\\"token punctuation\\">)</span>\\n\\tfmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"b:\\"</span><span class=\\"token punctuation\\">,</span>b<span class=\\"token punctuation\\">)</span>\\n\\tfmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"c:\\"</span><span class=\\"token punctuation\\">,</span>c<span class=\\"token punctuation\\">)</span>\\n\\tfmt<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">Println</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"d:\\"</span><span class=\\"token punctuation\\">,</span>d<span class=\\"token punctuation\\">)</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
