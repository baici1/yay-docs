const t=JSON.parse('{"key":"v-663d49b4","path":"/language/Python/02.%E8%BF%9B%E9%98%B6%E4%B8%8E%E7%AE%97%E6%B3%95.html","title":"进阶与算法","lang":"en-US","frontmatter":{"title":"进阶与算法","date":"2022-07-07T11:27:26.000Z","category":["语言基础","python"],"author":{"name":"团子","url":"https://github.com/baici1"},"comment":false,"description":"类 内置方法： __init__：在调用类时自动触发，通过object产生的空对象自动调用__init__() __new__：在__init__触发前自动触发，调用该类时，内部会通过__new__产生一个新的对象 __getattr__：在 \\"对象.属性\\" 获取属性时，若 \\"没有该属性\\" 时触发 __getattribute__：在 \\"对象.属性\\" 获取属性时，\\"无论有没有该属性\\" 都会触发，默认return一个None __setattr__：当 \\"对象.属性 = 属性值\\" ，\\"添加或修改属性\\" 时触发 __call__：在调用对象 \\"对象 + ()\\" 时触发 __str__：在 \\"打印对象\\" 时触发 __getitem__：在对象通过 \\"对象[key]\\" 获取属性时触发 __setitem__：在对象通过 \\"对象[key]=value值\\" 获取属性时触发","icon":null,"isOriginal":true,"star":false,"article":true,"timeline":true,"image":null,"banner":null,"head":[["meta",{"property":"og:url","content":"https://yay-docs.yangdiy.cn/language/Python/02.%E8%BF%9B%E9%98%B6%E4%B8%8E%E7%AE%97%E6%B3%95.html"}],["meta",{"property":"og:site_name","content":"yay-docs"}],["meta",{"property":"og:title","content":"进阶与算法"}],["meta",{"property":"og:description","content":"类 内置方法： __init__：在调用类时自动触发，通过object产生的空对象自动调用__init__() __new__：在__init__触发前自动触发，调用该类时，内部会通过__new__产生一个新的对象 __getattr__：在 \\"对象.属性\\" 获取属性时，若 \\"没有该属性\\" 时触发 __getattribute__：在 \\"对象.属性\\" 获取属性时，\\"无论有没有该属性\\" 都会触发，默认return一个None __setattr__：当 \\"对象.属性 = 属性值\\" ，\\"添加或修改属性\\" 时触发 __call__：在调用对象 \\"对象 + ()\\" 时触发 __str__：在 \\"打印对象\\" 时触发 __getitem__：在对象通过 \\"对象[key]\\" 获取属性时触发 __setitem__：在对象通过 \\"对象[key]=value值\\" 获取属性时触发"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-05-31T15:06:12.000Z"}],["meta",{"property":"article:author","content":"团子"}],["meta",{"property":"article:published_time","content":"2022-07-07T11:27:26.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-31T15:06:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"进阶与算法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-07-07T11:27:26.000Z\\",\\"dateModified\\":\\"2023-05-31T15:06:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"团子\\",\\"url\\":\\"https://github.com/baici1\\"}]}"]]},"headers":[],"git":{"createdTime":1685545572000,"updatedTime":1685545572000,"contributors":[{"name":"Y先生","email":"249337001@qq.com","commits":1}]},"readingTime":{"minutes":4.09,"words":1227},"filePathRelative":"language/Python/02.进阶与算法.md","localizedDate":"July 7, 2022","excerpt":"<h1> 类</h1>\\n<p>内置方法：</p>\\n<ul>\\n<li><code>__init__</code>：在调用类时自动触发，通过object产生的空对象自动调用__init__()</li>\\n<li><code>__new__</code>：在__init__触发前自动触发，调用该类时，内部会通过__new__产生一个新的对象</li>\\n<li><code>__getattr__</code>：在 \\"对象.属性\\" 获取属性时，若 \\"没有该属性\\" 时触发</li>\\n<li><code>__getattribute__</code>：在 \\"对象.属性\\" 获取属性时，\\"无论有没有该属性\\" 都会触发，默认return一个None</li>\\n<li><code>__setattr__</code>：当 \\"对象.属性 = 属性值\\" ，\\"添加或修改属性\\" 时触发</li>\\n<li><code>__call__</code>：在调用对象 \\"对象 + ()\\" 时触发</li>\\n<li><code>__str__</code>：在 \\"打印对象\\" 时触发</li>\\n<li><code>__getitem__</code>：在对象通过 \\"对象[key]\\" 获取属性时触发</li>\\n<li><code>__setitem__</code>：在对象通过 \\"对象[key]=value值\\" 获取属性时触发</li>\\n</ul>","autoDesc":true}');export{t as data};
