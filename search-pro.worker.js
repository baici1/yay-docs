const it="ENTRIES",R="KEYS",q="VALUES",_="";class S{constructor(t,s){const n=t._tree,i=Array.from(n.keys());this.set=t,this._type=s,this._path=i.length>0?[{node:n,keys:i}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=x(this._path);if(x(s)===_)return{done:!1,value:this.result()};const n=t.get(x(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=x(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>x(t)).filter(t=>t!==_).join("")}value(){return x(this._path).node.get(_)}result(){switch(this._type){case q:return this.value();case R:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const x=e=>e[e.length-1],ut=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const i=t.length+1,u=i+s,o=new Uint8Array(u*i).fill(s+1);for(let r=0;r<i;++r)o[r]=r;for(let r=1;r<u;++r)o[r*i]=r;return P(e,t,s,n,o,1,i,""),n},P=(e,t,s,n,i,u,o,r)=>{const a=u*o;t:for(const c of e.keys())if(c===_){const d=i[a-1];d<=s&&n.set(r,[e.get(c),d])}else{let d=u;for(let l=0;l<c.length;++l,++d){const m=c[l],F=o*d,f=F-o;let h=i[F];const g=Math.max(0,d-s-1),A=Math.min(o-1,d+s);for(let C=g;C<A;++C){const B=m!==t[C],b=i[f+C]+ +B,z=i[f+C+1]+1,D=i[F+C]+1,W=i[F+C+1]=Math.min(b,z,D);W<h&&(h=W)}if(h>s)continue t}P(e.get(c),t,s,n,i,d,o,r+c)}};let N=class v{constructor(t=new Map,s=""){this._size=void 0,this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=I(this._tree,t.slice(this._prefix.length));if(s===void 0){const[i,u]=V(n);for(const o of i.keys())if(o!==_&&o.startsWith(u)){const r=new Map;return r.set(o.slice(u.length),i.get(o)),new v(r,t)}}return new v(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ot(this._tree,t)}entries(){return new S(this,it)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ut(this._tree,t,s)}get(t){const s=j(this._tree,t);return s!==void 0?s.get(_):void 0}has(t){const s=j(this._tree,t);return s!==void 0&&s.has(_)}keys(){return new S(this,R)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,L(this._tree,t).set(_,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=L(this._tree,t);return n.set(_,s(n.get(_))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=L(this._tree,t);let i=n.get(_);return i===void 0&&n.set(_,i=s()),i}values(){return new S(this,q)}[Symbol.iterator](){return this.entries()}static from(t){const s=new v;for(const[n,i]of t)s.set(n,i);return s}static fromObject(t){return v.from(Object.entries(t))}};const I=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==_&&t.startsWith(n))return s.push([e,n]),I(e.get(n),t.slice(n.length),s);return s.push([e,t]),I(void 0,"",s)},j=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==_&&t.startsWith(s))return j(e.get(s),t.slice(s.length))},L=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==_&&t[n]===u[0]){const o=Math.min(s-n,u.length);let r=1;for(;r<o&&t[n+r]===u[r];)++r;const a=e.get(u);if(r===u.length)e=a;else{const c=new Map;c.set(u.slice(r),a),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const i=new Map;return e.set(t.slice(n),i),i}return e},ot=(e,t)=>{const[s,n]=I(e,t);if(s!==void 0){if(s.delete(_),s.size===0)G(n);else if(s.size===1){const[i,u]=s.entries().next().value;J(n,i,u)}}},G=e=>{if(e.length===0)return;const[t,s]=V(e);if(t.delete(s),t.size===0)G(e.slice(0,-1));else if(t.size===1){const[n,i]=t.entries().next().value;n!==_&&J(e.slice(0,-1),n,i)}},J=(e,t,s)=>{if(e.length===0)return;const[n,i]=V(e);n.set(i+t,s),n.delete(i)},V=e=>e[e.length-1],rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,T="or",U="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},H=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},ht=({score:e},{score:t})=>t-e,dt=()=>new Map,O=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},K=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,at={[T]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:i,terms:u,match:o}=t.get(s);n.score=n.score+i,n.match=Object.assign(n.match,o),H(n.terms,u)}}return e},[U]:(e,t)=>{const s=new Map;for(const n of t.keys()){const i=e.get(n);if(i==null)continue;const{score:u,terms:o,match:r}=t.get(n);H(i.terms,o),s.set(n,{score:i.score+u,terms:i.terms,match:Object.assign(i.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},ft=(e,t,s,n,i,u)=>{const{k:o,b:r,d:a}=u;return Math.log(1+(s-t+.5)/(t+.5))*(a+e*(o+1)/(e+o*(1-r+r*n/i)))},Ft=e=>(t,s,n)=>{const i=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:i,prefix:u}},gt={k:1.2,b:.7,d:.5},mt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},X={combineWith:T,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:gt},pt={combineWith:U,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},Y={minDirtFactor:.1,minDirtCount:20},yt={..._t,...Y};class At{constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...mt,...t,autoVacuum:s,searchOptions:{...X,...t.searchOptions||{}},autoSuggestOptions:{...pt,...t.autoSuggestOptions||{}}},this._index=new N,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=Y,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const i={};for(const[u,o]of n)i[u]=Object.fromEntries(o);t.push([s,i])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const Q=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},Z=(e,t,s,n)=>{for(const i of Object.keys(e._fieldIds))if(e._fieldIds[i]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${i}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},Ct=(e,t,s,n)=>{if(!e._index.has(n)){Z(e,s,t,n);return}const i=e._index.fetch(n,dt),u=i.get(t);u==null||u.get(s)==null?Z(e,s,t,n):u.get(s)<=1?u.size<=1?i.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},tt=(e,t=T)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(at[s])||new Map},$=(e,t,s,n,i,u,o,r,a=new Map)=>{if(i==null)return a;for(const c of Object.keys(u)){const d=u[c],l=e._fieldIds[c],m=i.get(l);if(m==null)continue;let F=m.size;const f=e._avgFieldLength[l];for(const h of m.keys()){if(!e._documentIds.has(h)){Ct(e,l,h,s),F-=1;continue}const g=o?o(e._documentIds.get(h),s,e._storedFields.get(h)):1;if(!g)continue;const A=m.get(h),C=e._fieldLength.get(h)[l],B=ft(A,F,e._documentCount,C,f,r),b=n*d*g*B,z=a.get(h);if(z){z.score+=b,lt(z.terms,t);const D=K(z.match,s);D?D.push(c):z.match[s]=[c]}else a.set(h,{score:b,terms:[t],match:{[s]:[c]}})}}return a},zt=(e,t,s)=>{const n={...e._options.searchOptions,...s},i=(n.fields||e._options.fields).reduce((h,g)=>({...h,[g]:K(n.boost,g)||1}),{}),{boostDocument:u,weights:o,maxFuzzy:r,bm25:a}=n,{fuzzy:c,prefix:d}={...X.weights,...o},l=e._index.get(t.term),m=$(e,t.term,t.term,1,l,i,u,a);let F,f;if(t.prefix&&(F=e._index.atPrefix(t.term)),t.fuzzy){const h=t.fuzzy===!0?.2:t.fuzzy,g=h<1?Math.min(r,Math.round(t.term.length*h)):h;g&&(f=e._index.fuzzyGet(t.term,g))}if(F)for(const[h,g]of F){const A=h.length-t.term.length;if(!A)continue;f==null||f.delete(h);const C=d*h.length/(h.length+.3*A);$(e,t.term,h,C,g,i,u,a,m)}if(f)for(const h of f.keys()){const[g,A]=f.get(h);if(!A)continue;const C=c*h.length/(h.length+A);$(e,t.term,h,C,g,i,u,a,m)}return m},et=(e,t,s={})=>{if(typeof t!="string"){const d={...s,...t,queries:void 0},l=t.queries.map(m=>et(e,m,d));return tt(l,d.combineWith)}const{tokenize:n,processTerm:i,searchOptions:u}=e._options,o={tokenize:n,processTerm:i,...u,...s},{tokenize:r,processTerm:a}=o,c=r(t).flatMap(d=>a(d)).filter(d=>!!d).map(Ft(o)).map(d=>zt(e,d,o));return tt(c,o.combineWith)},xt=(e,t,s={})=>{const n=et(e,t,s),i=[];for(const[u,{score:o,terms:r,match:a}]of n){const c=r.length,d={id:e._documentIds.get(u),score:o*c,terms:Object.keys(a),match:a};Object.assign(d,e._storedFields.get(u)),(s.filter==null||s.filter(d))&&i.push(d)}return i.sort(ht),i},Et=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:i,fieldLength:u,averageFieldLength:o,storedFields:r,dirtCount:a,serializationVersion:c},d)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const l=new At(d);l._documentCount=t,l._nextId=s,l._documentIds=O(n),l._idToShortId=new Map,l._fieldIds=i,l._fieldLength=O(u),l._avgFieldLength=o,l._storedFields=O(r),l._dirtCount=a||0,l._index=new N;for(const[m,F]of l._documentIds)l._idToShortId.set(F,m);for(const[m,F]of e){const f=new Map;for(const h of Object.keys(F)){let g=F[h];c===1&&(g=g.ds),f.set(parseInt(h,10),O(g))}l._index.set(m,f)}return l},st=Object.entries,wt=Object.fromEntries,E=100,w=20,M=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),i=[];let u=0,o=0;const r=(c,d=!1)=>{let l="";o===0?l=c.length>w?`… ${c.slice(-w)}`:c:d?l=c.length+o>E?`${c.slice(0,E-o)}… `:c:l=c.length>w?`${c.slice(0,w)} … ${c.slice(-w)}`:c,l&&i.push(l),o+=l.length,d||(i.push(["mark",t]),o+=t.length,o>=E&&i.push(" …"))};let a=s.indexOf(n,u);if(a===-1)return null;for(;a>=0;){const c=a+n.length;if(r(e.slice(u,a)),u=c,o>E)break;a=s.indexOf(n,u)}return o<E&&r(e.slice(u),!0),i};var p=(e=>(e.heading="h",e.anchor="a",e.text="t",e.customFields="c",e))(p||{}),k=(e=>(e.title="t",e.heading="h",e.text="p",e.custom="c",e))(k||{}),y=(e=>(e.type="t",e.key="k",e.anchor="a",e.header="h",e.index="i",e.display="d",e))(y||{});const nt=/[\u4e00-\u9fa5]/g,kt=(e,t,s={})=>{const n={};return xt(t,e,{fuzzy:.2,prefix:!0,boost:{[p.heading]:2,[p.text]:1,[p.customFields]:4},processTerm:i=>{const u=i.match(nt)||[],o=i.replace(nt,"").toLowerCase();return o?[o,...u]:[...u]},...s}).forEach(i=>{const{id:u,terms:o,score:r}=i,a=u.includes("/"),c=!a&&u.includes("#"),d=u.includes("@"),[l,m]=u.split(/[#@]/),{contents:F}=n[l]??={title:"",contents:[]};if(c)F.push([{[y.type]:k.heading,[y.key]:l,[y.anchor]:i[p.anchor],[y.display]:o.map(f=>M(i[p.heading],f)).filter(f=>f!==null)},r]);else if(a){const[f]=m.split("/"),{[p.heading]:h="",[p.anchor]:g=""}=Q(t,`${l}#${f}`)||{};F.push([{[y.type]:k.text,[y.key]:l,[y.header]:h,[y.anchor]:g,[y.display]:o.map(A=>M(i[p.text],A)).filter(A=>A!==null)},r])}else d?F.push([{[y.type]:k.custom,[y.key]:l,[y.index]:m,[y.display]:o.map(f=>i[p.customFields].map(h=>M(h,f))).flat().filter(f=>f!==null)},r]):F.push([{[y.type]:k.title,[y.key]:l,[y.display]:o.map(f=>M(i[p.heading],f)).filter(f=>f!==null)},r])}),st(n).sort(([,i],[,u])=>u.contents.reduce((o,[,r])=>o+r,0)-i.contents.reduce((o,[,r])=>o+r,0)).map(([i,{title:u,contents:o}])=>{if(!u){const r=Q(t,i);r&&(u=r[p.heading])}return{title:u,contents:o.map(([r])=>r)}})},vt=wt(st(JSON.parse("{\"/zh/\":{\"documentCount\":240,\"nextId\":240,\"documentIds\":{\"0\":\"v-2d0ad528\",\"1\":\"v-2d0ad528#0/0\",\"2\":\"v-2d0ad528#0/1\",\"3\":\"v-2d0ad528#0/2\",\"4\":\"v-858cfdd6\",\"5\":\"v-858cfdd6#0/0\",\"6\":\"v-269ae70f\",\"7\":\"v-2b64e284\",\"8\":\"v-2b64e284#1\",\"9\":\"v-2b64e284#1/0\",\"10\":\"v-2b64e284#1/1\",\"11\":\"v-2b64e284#1/2\",\"12\":\"v-2b64e284#1/3\",\"13\":\"v-2b64e284@0\",\"14\":\"v-c1942916\",\"15\":\"v-c1942916#0/0\",\"16\":\"v-c1942916#0/1\",\"17\":\"v-c1942916#0/2\",\"18\":\"v-c1942916#0/3\",\"19\":\"v-c1942916#0/4\",\"20\":\"v-c1942916#0/5\",\"21\":\"v-c1942916#0/6\",\"22\":\"v-c1942916#0/7\",\"23\":\"v-c1942916#0/8\",\"24\":\"v-c1942916#0/9\",\"25\":\"v-c1942916#0/10\",\"26\":\"v-c1942916#0/11\",\"27\":\"v-c1942916#0/12\",\"28\":\"v-c1942916@0\",\"29\":\"v-c1942916@1\",\"30\":\"v-65c00218\",\"31\":\"v-65c00218#0/0\",\"32\":\"v-65c00218#0/1\",\"33\":\"v-65c00218#0/2\",\"34\":\"v-65c00218@0\",\"35\":\"v-65c00218@1\",\"36\":\"v-36295574\",\"37\":\"v-36295574#0/0\",\"38\":\"v-36295574#0/1\",\"39\":\"v-36295574#1\",\"40\":\"v-36295574#1/0\",\"41\":\"v-36295574#2\",\"42\":\"v-36295574#2/0\",\"43\":\"v-36295574#2/1\",\"44\":\"v-36295574#2/2\",\"45\":\"v-36295574#3\",\"46\":\"v-36295574#3/0\",\"47\":\"v-36295574#4\",\"48\":\"v-36295574#4/0\",\"49\":\"v-36295574#4/1\",\"50\":\"v-36295574#5\",\"51\":\"v-36295574#5/0\",\"52\":\"v-36295574#6\",\"53\":\"v-36295574#6/0\",\"54\":\"v-36295574#6/1\",\"55\":\"v-36295574#6/2\",\"56\":\"v-36295574#6/3\",\"57\":\"v-36295574#6/4\",\"58\":\"v-36295574#6/5\",\"59\":\"v-36295574#6/6\",\"60\":\"v-36295574#6/7\",\"61\":\"v-36295574#6/8\",\"62\":\"v-36295574#6/9\",\"63\":\"v-36295574#6/10\",\"64\":\"v-36295574#6/11\",\"65\":\"v-36295574#6/12\",\"66\":\"v-36295574#7\",\"67\":\"v-36295574#7/0\",\"68\":\"v-36295574#8\",\"69\":\"v-36295574#8/0\",\"70\":\"v-36295574#8/1\",\"71\":\"v-36295574#9\",\"72\":\"v-36295574#9/0\",\"73\":\"v-36295574#9/1\",\"74\":\"v-36295574#9/2\",\"75\":\"v-36295574#10\",\"76\":\"v-36295574#10/0\",\"77\":\"v-36295574#10/1\",\"78\":\"v-36295574#11\",\"79\":\"v-36295574#11/0\",\"80\":\"v-36295574#11/1\",\"81\":\"v-36295574#12\",\"82\":\"v-36295574#12/0\",\"83\":\"v-36295574#12/1\",\"84\":\"v-36295574#13\",\"85\":\"v-36295574#13/0\",\"86\":\"v-36295574#13/1\",\"87\":\"v-36295574#13/2\",\"88\":\"v-36295574#14\",\"89\":\"v-36295574#14/0\",\"90\":\"v-36295574#14/1\",\"91\":\"v-36295574#15\",\"92\":\"v-36295574#15/0\",\"93\":\"v-36295574#15/1\",\"94\":\"v-36295574#16\",\"95\":\"v-36295574#16/0\",\"96\":\"v-36295574#17\",\"97\":\"v-36295574#17/0\",\"98\":\"v-36295574#18\",\"99\":\"v-36295574#18/0\",\"100\":\"v-36295574#19\",\"101\":\"v-36295574#19/0\",\"102\":\"v-36295574#20\",\"103\":\"v-36295574#20/0\",\"104\":\"v-36295574#20/1\",\"105\":\"v-36295574#21\",\"106\":\"v-36295574#21/0\",\"107\":\"v-36295574#21/1\",\"108\":\"v-36295574#21/2\",\"109\":\"v-36295574#21/3\",\"110\":\"v-36295574#21/4\",\"111\":\"v-36295574#22\",\"112\":\"v-36295574#22/0\",\"113\":\"v-36295574#23\",\"114\":\"v-36295574#23/0\",\"115\":\"v-36295574#23/1\",\"116\":\"v-36295574#24\",\"117\":\"v-36295574#24/0\",\"118\":\"v-36295574#25\",\"119\":\"v-36295574#25/0\",\"120\":\"v-36295574#26\",\"121\":\"v-36295574#26/0\",\"122\":\"v-36295574#26/1\",\"123\":\"v-36295574@0\",\"124\":\"v-36295574@1\",\"125\":\"v-62ced1a6\",\"126\":\"v-62ced1a6#0/0\",\"127\":\"v-62ced1a6#1\",\"128\":\"v-62ced1a6#1/0\",\"129\":\"v-62ced1a6#1/1\",\"130\":\"v-62ced1a6#1/2\",\"131\":\"v-62ced1a6#1/3\",\"132\":\"v-62ced1a6#1/4\",\"133\":\"v-62ced1a6#2\",\"134\":\"v-62ced1a6#2/0\",\"135\":\"v-62ced1a6#2/1\",\"136\":\"v-62ced1a6#2/2\",\"137\":\"v-62ced1a6#2/3\",\"138\":\"v-62ced1a6#2/4\",\"139\":\"v-62ced1a6#2/5\",\"140\":\"v-62ced1a6#3\",\"141\":\"v-62ced1a6#3/0\",\"142\":\"v-62ced1a6#3/1\",\"143\":\"v-62ced1a6#3/2\",\"144\":\"v-62ced1a6#3/3\",\"145\":\"v-62ced1a6#3/4\",\"146\":\"v-62ced1a6#3/5\",\"147\":\"v-62ced1a6#3/6\",\"148\":\"v-62ced1a6#3/7\",\"149\":\"v-62ced1a6#3/8\",\"150\":\"v-62ced1a6#3/9\",\"151\":\"v-62ced1a6#3/10\",\"152\":\"v-62ced1a6@0\",\"153\":\"v-62ced1a6@1\",\"154\":\"v-9ef49308\",\"155\":\"v-9ef49308#1\",\"156\":\"v-9ef49308#1/0\",\"157\":\"v-9ef49308#2\",\"158\":\"v-9ef49308#2/0\",\"159\":\"v-9ef49308@0\",\"160\":\"v-9ef49308@1\",\"161\":\"v-3fbd497c\",\"162\":\"v-3fbd497c#1\",\"163\":\"v-3fbd497c#1/0\",\"164\":\"v-3fbd497c#2\",\"165\":\"v-3fbd497c#2/0\",\"166\":\"v-3fbd497c@0\",\"167\":\"v-3fbd497c@1\",\"168\":\"v-46587e86\",\"169\":\"v-46587e86#1\",\"170\":\"v-46587e86#1/0\",\"171\":\"v-46587e86#2\",\"172\":\"v-46587e86#2/0\",\"173\":\"v-46587e86@0\",\"174\":\"v-46587e86@1\",\"175\":\"v-56a32aab\",\"176\":\"v-56a32aab#1\",\"177\":\"v-56a32aab#1/0\",\"178\":\"v-56a32aab#2\",\"179\":\"v-56a32aab#2/0\",\"180\":\"v-56a32aab@0\",\"181\":\"v-56a32aab@1\",\"182\":\"v-6e6c1b81\",\"183\":\"v-6e6c1b81#1\",\"184\":\"v-6e6c1b81#1/0\",\"185\":\"v-6e6c1b81#2\",\"186\":\"v-6e6c1b81#2/0\",\"187\":\"v-6e6c1b81@0\",\"188\":\"v-6e6c1b81@1\",\"189\":\"v-7020f420\",\"190\":\"v-7020f420#0/0\",\"191\":\"v-7020f420#1\",\"192\":\"v-7020f420#1/0\",\"193\":\"v-7020f420#2\",\"194\":\"v-7020f420#2/0\",\"195\":\"v-7020f420@0\",\"196\":\"v-7020f420@1\",\"197\":\"v-71d5ccbf\",\"198\":\"v-71d5ccbf#1\",\"199\":\"v-71d5ccbf#1/0\",\"200\":\"v-71d5ccbf#2\",\"201\":\"v-71d5ccbf#2/0\",\"202\":\"v-71d5ccbf@0\",\"203\":\"v-71d5ccbf@1\",\"204\":\"v-738aa55e\",\"205\":\"v-738aa55e#1\",\"206\":\"v-738aa55e#1/0\",\"207\":\"v-738aa55e#2\",\"208\":\"v-738aa55e#2/0\",\"209\":\"v-738aa55e@0\",\"210\":\"v-738aa55e@1\",\"211\":\"v-49be79ce\",\"212\":\"v-49be79ce#1\",\"213\":\"v-49be79ce#1/0\",\"214\":\"v-49be79ce#2\",\"215\":\"v-49be79ce#2/0\",\"216\":\"v-49be79ce@0\",\"217\":\"v-49be79ce@1\",\"218\":\"v-4b73526d\",\"219\":\"v-4b73526d#0/0\",\"220\":\"v-4b73526d#1\",\"221\":\"v-4b73526d#1/0\",\"222\":\"v-4b73526d#2\",\"223\":\"v-4b73526d#2/0\",\"224\":\"v-4b73526d@0\",\"225\":\"v-4b73526d@1\",\"226\":\"v-4d282b0c\",\"227\":\"v-4d282b0c#1\",\"228\":\"v-4d282b0c#1/0\",\"229\":\"v-4d282b0c#2\",\"230\":\"v-4d282b0c#2/0\",\"231\":\"v-4d282b0c@0\",\"232\":\"v-4d282b0c@1\",\"233\":\"v-4edd03ab\",\"234\":\"v-4edd03ab#1\",\"235\":\"v-4edd03ab#1/0\",\"236\":\"v-4edd03ab#2\",\"237\":\"v-4edd03ab#2/0\",\"238\":\"v-4edd03ab@0\",\"239\":\"v-4edd03ab@1\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2],\"1\":[null,7],\"2\":[null,19],\"3\":[null,9],\"4\":[2],\"5\":[null,11],\"6\":[2],\"7\":[5],\"8\":[1],\"9\":[null,3],\"10\":[null,2],\"11\":[null,2],\"12\":[null,2],\"13\":[null,null,1],\"14\":[4],\"15\":[null,15],\"16\":[null,11],\"17\":[null,2],\"18\":[null,2],\"19\":[null,2],\"20\":[null,2],\"21\":[null,1],\"22\":[null,3],\"23\":[null,2],\"24\":[null,6],\"25\":[null,1],\"26\":[null,1],\"27\":[null,3],\"28\":[null,null,1],\"29\":[null,null,1],\"30\":[4],\"31\":[null,4],\"32\":[null,5],\"33\":[null,5],\"34\":[null,null,1],\"35\":[null,null,2],\"36\":[3],\"37\":[null,20],\"38\":[null,22],\"39\":[3],\"40\":[null,18],\"41\":[3],\"42\":[null,11],\"43\":[null,2],\"44\":[null,20],\"45\":[3],\"46\":[null,20],\"47\":[3],\"48\":[null,14],\"49\":[null,12],\"50\":[2],\"51\":[null,22],\"52\":[2],\"53\":[null,11],\"54\":[null,2],\"55\":[null,9],\"56\":[null,6],\"57\":[null,2],\"58\":[null,2],\"59\":[null,2],\"60\":[null,2],\"61\":[null,2],\"62\":[null,2],\"63\":[null,2],\"64\":[null,2],\"65\":[null,2],\"66\":[2],\"67\":[null,2],\"68\":[2],\"69\":[null,3],\"70\":[null,2],\"71\":[2],\"72\":[null,4],\"73\":[null,4],\"74\":[null,2],\"75\":[1],\"76\":[null,7],\"77\":[null,2],\"78\":[1],\"79\":[null,8],\"80\":[null,2],\"81\":[1],\"82\":[null,8],\"83\":[null,2],\"84\":[2],\"85\":[null,3],\"86\":[null,3],\"87\":[null,2],\"88\":[2],\"89\":[null,8],\"90\":[null,2],\"91\":[1],\"92\":[null,28],\"93\":[null,2],\"94\":[1],\"95\":[null,2],\"96\":[1],\"97\":[null,2],\"98\":[1],\"99\":[null,2],\"100\":[1],\"101\":[null,2],\"102\":[3],\"103\":[null,19],\"104\":[null,2],\"105\":[2],\"106\":[null,3],\"107\":[null,2],\"108\":[null,2],\"109\":[null,2],\"110\":[null,2],\"111\":[2],\"112\":[null,2],\"113\":[2],\"114\":[null,9],\"115\":[null,2],\"116\":[2],\"117\":[null,2],\"118\":[4],\"119\":[null,2],\"120\":[1],\"121\":[null,2],\"122\":[null,6],\"123\":[null,null,1],\"124\":[null,null,1],\"125\":[2],\"126\":[null,11],\"127\":[2],\"128\":[null,12],\"129\":[null,8],\"130\":[null,9],\"131\":[null,6],\"132\":[null,9],\"133\":[2],\"134\":[null,10],\"135\":[null,1],\"136\":[null,22],\"137\":[null,17],\"138\":[null,9],\"139\":[null,9],\"140\":[2],\"141\":[null,5],\"142\":[null,2],\"143\":[null,4],\"144\":[null,7],\"145\":[null,8],\"146\":[null,1],\"147\":[null,2],\"148\":[null,2],\"149\":[null,1],\"150\":[null,3],\"151\":[null,12],\"152\":[null,null,1],\"153\":[null,null,4],\"154\":[1],\"155\":[3],\"156\":[null,4],\"157\":[3],\"158\":[null,4],\"159\":[null,null,1],\"160\":[null,null,4],\"161\":[1],\"162\":[3],\"163\":[null,4],\"164\":[3],\"165\":[null,4],\"166\":[null,null,3],\"167\":[null,null,3],\"168\":[1],\"169\":[3],\"170\":[null,4],\"171\":[3],\"172\":[null,4],\"173\":[null,null,3],\"174\":[null,null,3],\"175\":[1],\"176\":[3],\"177\":[null,4],\"178\":[3],\"179\":[null,4],\"180\":[null,null,1],\"181\":[null,null,3],\"182\":[3],\"183\":[3],\"184\":[null,4],\"185\":[3],\"186\":[null,4],\"187\":[null,null,1],\"188\":[null,null,4],\"189\":[3],\"190\":[null,8],\"191\":[3],\"192\":[null,4],\"193\":[3],\"194\":[null,4],\"195\":[null,null,1],\"196\":[null,null,4],\"197\":[3],\"198\":[3],\"199\":[null,4],\"200\":[3],\"201\":[null,4],\"202\":[null,null,3],\"203\":[null,null,4],\"204\":[3],\"205\":[3],\"206\":[null,4],\"207\":[3],\"208\":[null,4],\"209\":[null,null,3],\"210\":[null,null,4],\"211\":[3],\"212\":[3],\"213\":[null,4],\"214\":[3],\"215\":[null,4],\"216\":[null,null,3],\"217\":[null,null,5],\"218\":[3],\"219\":[null,11],\"220\":[3],\"221\":[null,4],\"222\":[3],\"223\":[null,4],\"224\":[null,null,3],\"225\":[null,null,5],\"226\":[3],\"227\":[3],\"228\":[null,4],\"229\":[3],\"230\":[null,4],\"231\":[null,null,1],\"232\":[null,null,5],\"233\":[3],\"234\":[3],\"235\":[null,4],\"236\":[3],\"237\":[null,4],\"238\":[null,null,1],\"239\":[null,null,5]},\"averageFieldLength\":[2.3665179302071007,5.990696013465726,0.5693597807156238],\"storedFields\":{\"0\":{\"h\":\"博客主页\"},\"1\":{\"t\":\"这是一个博客主页的案例。\"},\"2\":{\"t\":\"要使用此布局，你应该在页面前端设置 layout: BlogHome 和 home: true。\"},\"3\":{\"t\":\"相关配置文档请见 博客主页。\"},\"4\":{\"h\":\"介绍页\"},\"5\":{\"t\":\"将你的个人介绍和档案放置在此处。\"},\"6\":{\"h\":\"幻灯片页\"},\"7\":{\"h\":\"主要功能与配置演示\"},\"8\":{\"h\":\"目录\",\"a\":\"目录\"},\"9\":{\"t\":\"Markdown 展示\"},\"10\":{\"t\":\"页面展示\"},\"11\":{\"t\":\"禁用展示\"},\"12\":{\"t\":\"加密展示\"},\"13\":{\"c\":[\"使用指南\"]},\"14\":{\"h\":\"布局与功能禁用\"},\"15\":{\"t\":\"你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。\"},\"16\":{\"t\":\"本页面就是一个示例，禁用了如下功能:\"},\"17\":{\"t\":\"导航栏\"},\"18\":{\"t\":\"侧边栏\"},\"19\":{\"t\":\"路径导航\"},\"20\":{\"t\":\"页面信息\"},\"21\":{\"t\":\"贡献者\"},\"22\":{\"t\":\"编辑此页链接\"},\"23\":{\"t\":\"更新时间\"},\"24\":{\"t\":\"上一篇/下一篇 链接\"},\"25\":{\"t\":\"评论\"},\"26\":{\"t\":\"页脚\"},\"27\":{\"t\":\"返回顶部按钮\"},\"28\":{\"c\":[\"使用指南\"]},\"29\":{\"c\":[\"禁用\"]},\"30\":{\"h\":\"密码加密的文章\"},\"31\":{\"t\":\"实际的文章内容。\"},\"32\":{\"t\":\"段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字。\"},\"33\":{\"t\":\"段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字。\"},\"34\":{\"c\":[\"使用指南\"]},\"35\":{\"c\":[\"文章加密\"]},\"36\":{\"h\":\"Markdown 展示\"},\"37\":{\"t\":\"VuePress 主要从 Markdown 文件生成页面。因此，你可以使用它轻松生成文档或博客站点。\"},\"38\":{\"t\":\"你应该创建和编写 Markdown 文件，以便 VuePress 可以根据文件结构将它们转换为不同的页面。\"},\"39\":{\"h\":\"Markdown 介绍\",\"a\":\"markdown-介绍\"},\"40\":{\"t\":\"如果你是一个新手，还不会编写 Markdown，请先阅读 Markdown 介绍 和 Markdown 演示。\"},\"41\":{\"h\":\"Markdown 配置\",\"a\":\"markdown-配置\"},\"42\":{\"t\":\"VuePress 通过 Frontmatter 为每个 Markdown 页面引入配置。\"},\"43\":{\"t\":\"相关信息\"},\"44\":{\"t\":\"Frontmatter 是 VuePress 中很重要的一个概念，如果你不了解它，你需要阅读 Frontmatter 介绍。\"},\"45\":{\"h\":\"Markdown 扩展\",\"a\":\"markdown-扩展\"},\"46\":{\"t\":\"VuePress 会使用 markdown-it 来解析 Markdown 内容，因此可以借助于 markdown-it 插件来实现 语法扩展 。\"},\"47\":{\"h\":\"VuePress 扩展\",\"a\":\"vuepress-扩展\"},\"48\":{\"t\":\"为了丰富文档写作，VuePress 对 Markdown 语法进行了扩展。\"},\"49\":{\"t\":\"关于这些扩展，请阅读 VuePress 中的 Markdown 扩展。\"},\"50\":{\"h\":\"主题扩展\",\"a\":\"主题扩展\"},\"51\":{\"t\":\"通过 vuepress-plugin-md-enhance，主题扩展了更多 Markdown 语法，提供更加丰富的写作功能。\"},\"52\":{\"h\":\"自定义容器\",\"a\":\"自定义容器\"},\"53\":{\"t\":\"安全的在 Markdown 中使用 {{ variable }}。\"},\"54\":{\"t\":\"自定义标题\"},\"55\":{\"t\":\"信息容器，包含 代码 与 链接。\"},\"56\":{\"t\":\"const a = 1; \"},\"57\":{\"t\":\"自定义标题\"},\"58\":{\"t\":\"提示容器\"},\"59\":{\"t\":\"自定义标题\"},\"60\":{\"t\":\"警告容器\"},\"61\":{\"t\":\"自定义标题\"},\"62\":{\"t\":\"危险容器\"},\"63\":{\"t\":\"自定义标题\"},\"64\":{\"t\":\"详情容器\"},\"65\":{\"t\":\"查看详情\"},\"66\":{\"h\":\"代码块\",\"a\":\"代码块\"},\"67\":{\"t\":\"查看详情\"},\"68\":{\"h\":\"上下角标\",\"a\":\"上下角标\"},\"69\":{\"t\":\"19th H2O\"},\"70\":{\"t\":\"查看详情\"},\"71\":{\"h\":\"自定义对齐\",\"a\":\"自定义对齐\"},\"72\":{\"t\":\"我是居中的\"},\"73\":{\"t\":\"我在右对齐\"},\"74\":{\"t\":\"查看详情\"},\"75\":{\"h\":\"Attrs\",\"a\":\"attrs\"},\"76\":{\"t\":\"一个拥有 ID 的 单词。\"},\"77\":{\"t\":\"查看详情\"},\"78\":{\"h\":\"脚注\",\"a\":\"脚注\"},\"79\":{\"t\":\"此文字有脚注[1].\"},\"80\":{\"t\":\"查看详情\"},\"81\":{\"h\":\"标记\",\"a\":\"标记\"},\"82\":{\"t\":\"你可以标记 重要的内容 。\"},\"83\":{\"t\":\"查看详情\"},\"84\":{\"h\":\"任务列表\",\"a\":\"任务列表\"},\"85\":{\"t\":\" 计划 1\"},\"86\":{\"t\":\" 计划 2\"},\"87\":{\"t\":\"查看详情\"},\"88\":{\"h\":\"图片增强\",\"a\":\"图片增强\"},\"89\":{\"t\":\"支持为图片设置颜色模式和大小\"},\"90\":{\"t\":\"查看详情\"},\"91\":{\"h\":\"卡片\",\"a\":\"卡片\"},\"92\":{\"t\":\"title: Mr.Hope desc: Where there is light, there is hope logo: https://mrhope.site/logo.svg link: https://mrhope.site color: rgba(253, 230, 138, 0.15) \"},\"93\":{\"t\":\"查看详情\"},\"94\":{\"h\":\"图表\",\"a\":\"图表\"},\"95\":{\"t\":\"查看详情\"},\"96\":{\"h\":\"Echarts\",\"a\":\"echarts\"},\"97\":{\"t\":\"查看详情\"},\"98\":{\"h\":\"流程图\",\"a\":\"流程图\"},\"99\":{\"t\":\"查看详情\"},\"100\":{\"h\":\"Mermaid\",\"a\":\"mermaid\"},\"101\":{\"t\":\"查看详情\"},\"102\":{\"h\":\"Tex 语法\",\"a\":\"tex-语法\"},\"103\":{\"t\":\"∂ωr∂r​(ωyω​)=(ωyω​){(logy)r+i=1∑r​ωi(−1)ir⋯(r−i+1)(logy)r−i​}\"},\"104\":{\"t\":\"查看详情\"},\"105\":{\"h\":\"导入文件\",\"a\":\"导入文件\"},\"106\":{\"t\":\"Markdown 展示\"},\"107\":{\"t\":\"页面展示\"},\"108\":{\"t\":\"禁用展示\"},\"109\":{\"t\":\"加密展示\"},\"110\":{\"t\":\"查看详情\"},\"111\":{\"h\":\"代码演示\",\"a\":\"代码演示\"},\"112\":{\"t\":\"查看详情\"},\"113\":{\"h\":\"样式化\",\"a\":\"样式化\"},\"114\":{\"t\":\"向 Mr.Hope 捐赠一杯咖啡。 \"},\"115\":{\"t\":\"查看详情\"},\"116\":{\"h\":\"交互演示\",\"a\":\"交互演示\"},\"117\":{\"t\":\"查看详情\"},\"118\":{\"h\":\"Vue 交互演示\",\"a\":\"vue-交互演示\"},\"119\":{\"t\":\"查看详情\"},\"120\":{\"h\":\"幻灯片\",\"a\":\"幻灯片\"},\"121\":{\"t\":\"查看详情\"},\"122\":{\"t\":\"这是脚注内容 ↩︎\"},\"123\":{\"c\":[\"使用指南\"]},\"124\":{\"c\":[\"Markdown\"]},\"125\":{\"h\":\"页面配置\"},\"126\":{\"t\":\"more 注释之前的内容被视为文章摘要。\"},\"127\":{\"h\":\"页面信息\",\"a\":\"页面信息\"},\"128\":{\"t\":\"你可以在 Markdown 的 Frontmatter 中设置页面信息。\"},\"129\":{\"t\":\"作者设置为 Ms.Hope。\"},\"130\":{\"t\":\"写作日期为 2020 年 1 月 1 日\"},\"131\":{\"t\":\"分类为 “使用指南”\"},\"132\":{\"t\":\"标签为 “页面配置” 和 “使用指南”\"},\"133\":{\"h\":\"页面内容\",\"a\":\"页面内容\"},\"134\":{\"t\":\"你可以自由在这里书写你的 Markdown。\"},\"135\":{\"t\":\"提示\"},\"136\":{\"t\":\"你可以将图片和 Markdown 文件放置在一起，但是你需要使用相对链接./ 进行引用。\"},\"137\":{\"t\":\"对于 .vuepress/public 文件夹的图片，请使用绝对链接 / 进行引用。\"},\"138\":{\"t\":\"主题包含了一个自定义徽章可以使用:\"},\"139\":{\"t\":\"文字结尾应该有深蓝色的 徽章文字 徽章。 \"},\"140\":{\"h\":\"页面结构\",\"a\":\"页面结构\"},\"141\":{\"t\":\"此页面应当包含:\"},\"142\":{\"t\":\"路径导航\"},\"143\":{\"t\":\"标题和页面信息\"},\"144\":{\"t\":\"TOC (文章标题列表)\"},\"145\":{\"t\":\"贡献者、更新时间等页面元信息\"},\"146\":{\"t\":\"评论\"},\"147\":{\"t\":\"导航栏\"},\"148\":{\"t\":\"侧边栏\"},\"149\":{\"t\":\"页脚\"},\"150\":{\"t\":\"返回顶部按钮\"},\"151\":{\"t\":\"你可以通过主题选项和页面 Frontmatter 自定义它们。\"},\"152\":{\"c\":[\"使用指南\"]},\"153\":{\"c\":[\"页面配置\",\"使用指南\"]},\"154\":{\"h\":\"樱桃\"},\"155\":{\"h\":\"标题 2\",\"a\":\"标题-2\"},\"156\":{\"t\":\"这里是内容。\"},\"157\":{\"h\":\"标题 3\",\"a\":\"标题-3\"},\"158\":{\"t\":\"这里是内容。\"},\"159\":{\"c\":[\"樱桃\"]},\"160\":{\"c\":[\"红\",\"小\",\"圆\"]},\"161\":{\"h\":\"火龙果\"},\"162\":{\"h\":\"标题 2\",\"a\":\"标题-2\"},\"163\":{\"t\":\"这里是内容。\"},\"164\":{\"h\":\"标题 3\",\"a\":\"标题-3\"},\"165\":{\"t\":\"这里是内容。\"},\"166\":{\"c\":[\"火龙果\",\"水果\"]},\"167\":{\"c\":[\"红\",\"大\"]},\"168\":{\"h\":\"草莓\"},\"169\":{\"h\":\"标题 2\",\"a\":\"标题-2\"},\"170\":{\"t\":\"这里是内容。\"},\"171\":{\"h\":\"标题 3\",\"a\":\"标题-3\"},\"172\":{\"t\":\"这里是内容。\"},\"173\":{\"c\":[\"水果\",\"草莓\"]},\"174\":{\"c\":[\"红\",\"小\"]},\"175\":{\"h\":\"番茄\"},\"176\":{\"h\":\"标题 2\",\"a\":\"标题-2\"},\"177\":{\"t\":\"这里是内容。\"},\"178\":{\"h\":\"标题 3\",\"a\":\"标题-3\"},\"179\":{\"t\":\"这里是内容。\"},\"180\":{\"c\":[\"蔬菜\"]},\"181\":{\"c\":[\"红\",\"圆\"]},\"182\":{\"h\":\"苹果 1\"},\"183\":{\"h\":\"标题 2\",\"a\":\"标题-2\"},\"184\":{\"t\":\"这里是内容。\"},\"185\":{\"h\":\"标题 3\",\"a\":\"标题-3\"},\"186\":{\"t\":\"这里是内容。\"},\"187\":{\"c\":[\"苹果\"]},\"188\":{\"c\":[\"红\",\"大\",\"圆\"]},\"189\":{\"h\":\"苹果 2\"},\"190\":{\"t\":\"一个被星标了的苹果文章。\"},\"191\":{\"h\":\"标题 2\",\"a\":\"标题-2\"},\"192\":{\"t\":\"这里是内容。\"},\"193\":{\"h\":\"标题 3\",\"a\":\"标题-3\"},\"194\":{\"t\":\"这里是内容。\"},\"195\":{\"c\":[\"苹果\"]},\"196\":{\"c\":[\"红\",\"大\",\"圆\"]},\"197\":{\"h\":\"苹果 3\"},\"198\":{\"h\":\"标题 2\",\"a\":\"标题-2\"},\"199\":{\"t\":\"这里是内容。\"},\"200\":{\"h\":\"标题 3\",\"a\":\"标题-3\"},\"201\":{\"t\":\"这里是内容。\"},\"202\":{\"c\":[\"苹果\",\"水果\"]},\"203\":{\"c\":[\"红\",\"大\",\"圆\"]},\"204\":{\"h\":\"苹果 4\"},\"205\":{\"h\":\"标题 2\",\"a\":\"标题-2\"},\"206\":{\"t\":\"这里是内容。\"},\"207\":{\"h\":\"标题 3\",\"a\":\"标题-3\"},\"208\":{\"t\":\"这里是内容。\"},\"209\":{\"c\":[\"苹果\",\"水果\"]},\"210\":{\"c\":[\"红\",\"大\",\"圆\"]},\"211\":{\"h\":\"香蕉 1\"},\"212\":{\"h\":\"标题 2\",\"a\":\"标题-2\"},\"213\":{\"t\":\"这里是内容。\"},\"214\":{\"h\":\"标题 3\",\"a\":\"标题-3\"},\"215\":{\"t\":\"这里是内容。\"},\"216\":{\"c\":[\"香蕉\",\"水果\"]},\"217\":{\"c\":[\"黄\",\"弯曲的\",\"长\"]},\"218\":{\"h\":\"香蕉 2\"},\"219\":{\"t\":\"一个被数字 10 星标了的香蕉文章。\"},\"220\":{\"h\":\"标题 2\",\"a\":\"标题-2\"},\"221\":{\"t\":\"这里是内容。\"},\"222\":{\"h\":\"标题 3\",\"a\":\"标题-3\"},\"223\":{\"t\":\"这里是内容。\"},\"224\":{\"c\":[\"香蕉\",\"水果\"]},\"225\":{\"c\":[\"黄\",\"弯曲的\",\"长\"]},\"226\":{\"h\":\"香蕉 3\"},\"227\":{\"h\":\"标题 2\",\"a\":\"标题-2\"},\"228\":{\"t\":\"这里是内容。\"},\"229\":{\"h\":\"标题 3\",\"a\":\"标题-3\"},\"230\":{\"t\":\"这里是内容。\"},\"231\":{\"c\":[\"香蕉\"]},\"232\":{\"c\":[\"黄\",\"弯曲的\",\"长\"]},\"233\":{\"h\":\"香蕉 4\"},\"234\":{\"h\":\"标题 2\",\"a\":\"标题-2\"},\"235\":{\"t\":\"这里是内容。\"},\"236\":{\"h\":\"标题 3\",\"a\":\"标题-3\"},\"237\":{\"t\":\"这里是内容。\"},\"238\":{\"c\":[\"香蕉\"]},\"239\":{\"c\":[\"黄\",\"弯曲的\",\"长\"]}},\"dirtCount\":0,\"index\":[[\"数字\",{\"1\":{\"219\":1}}],[\"长\",{\"2\":{\"217\":1,\"225\":1,\"232\":1,\"239\":1}}],[\"弯曲\",{\"2\":{\"217\":1,\"225\":1,\"232\":1,\"239\":1}}],[\"黄\",{\"2\":{\"217\":1,\"225\":1,\"232\":1,\"239\":1}}],[\"香蕉\",{\"0\":{\"211\":1,\"218\":1,\"226\":1,\"233\":1},\"1\":{\"219\":1},\"2\":{\"216\":1,\"224\":1,\"231\":1,\"238\":1}}],[\"4\",{\"0\":{\"204\":1,\"233\":1}}],[\"星标\",{\"1\":{\"190\":1,\"219\":1}}],[\"苹果\",{\"0\":{\"182\":1,\"189\":1,\"197\":1,\"204\":1},\"1\":{\"190\":1},\"2\":{\"187\":1,\"195\":1,\"202\":1,\"209\":1}}],[\"蔬菜\",{\"2\":{\"180\":1}}],[\"番茄\",{\"0\":{\"175\":1}}],[\"草莓\",{\"0\":{\"168\":1},\"2\":{\"173\":1}}],[\"大\",{\"2\":{\"167\":1,\"188\":1,\"196\":1,\"203\":1,\"210\":1}}],[\"大小\",{\"1\":{\"89\":1}}],[\"水果\",{\"2\":{\"166\":1,\"173\":1,\"202\":1,\"209\":1,\"216\":1,\"224\":1}}],[\"火龙果\",{\"0\":{\"161\":1},\"2\":{\"166\":1}}],[\"圆\",{\"2\":{\"160\":1,\"181\":1,\"188\":1,\"196\":1,\"203\":1,\"210\":1}}],[\"小\",{\"2\":{\"160\":1,\"174\":1}}],[\"红\",{\"2\":{\"160\":1,\"167\":1,\"174\":1,\"181\":1,\"188\":1,\"196\":1,\"203\":1,\"210\":1}}],[\"3\",{\"0\":{\"157\":1,\"164\":1,\"171\":1,\"178\":1,\"185\":1,\"193\":1,\"197\":1,\"200\":1,\"207\":1,\"214\":1,\"222\":1,\"226\":1,\"229\":1,\"236\":1}}],[\"樱桃\",{\"0\":{\"154\":1},\"2\":{\"159\":1}}],[\"选项\",{\"1\":{\"151\":1}}],[\"元\",{\"1\":{\"145\":1}}],[\"等\",{\"1\":{\"145\":1}}],[\"、\",{\"1\":{\"145\":1}}],[\"应当\",{\"1\":{\"141\":1}}],[\"应该\",{\"1\":{\"2\":1,\"38\":1,\"139\":1}}],[\"深蓝色\",{\"1\":{\"139\":1}}],[\"结尾\",{\"1\":{\"139\":1}}],[\"结构\",{\"0\":{\"140\":1},\"1\":{\"38\":1}}],[\"徽章\",{\"1\":{\"138\":1,\"139\":2}}],[\"绝对\",{\"1\":{\"137\":1}}],[\"public\",{\"1\":{\"137\":1}}],[\"plugin\",{\"1\":{\"51\":1}}],[\"引用\",{\"1\":{\"136\":1,\"137\":1}}],[\"引入\",{\"1\":{\"42\":1}}],[\"相对\",{\"1\":{\"136\":1}}],[\"相关\",{\"1\":{\"3\":1,\"43\":1}}],[\"但是\",{\"1\":{\"136\":1}}],[\"书写\",{\"1\":{\"134\":1}}],[\"自由\",{\"1\":{\"134\":1}}],[\"自定义\",{\"0\":{\"52\":1,\"71\":1},\"1\":{\"54\":1,\"57\":1,\"59\":1,\"61\":1,\"63\":1,\"138\":1,\"151\":1}}],[\"”\",{\"1\":{\"131\":1,\"132\":2}}],[\"“\",{\"1\":{\"131\":1,\"132\":2}}],[\"分类\",{\"1\":{\"131\":1}}],[\"日\",{\"1\":{\"130\":1}}],[\"日期\",{\"1\":{\"130\":1}}],[\"月\",{\"1\":{\"130\":1}}],[\"年\",{\"1\":{\"130\":1}}],[\"作者\",{\"1\":{\"129\":1}}],[\"摘要\",{\"1\":{\"126\":1}}],[\"视为\",{\"1\":{\"126\":1}}],[\"被\",{\"1\":{\"126\":1,\"190\":1,\"219\":1}}],[\"之前\",{\"1\":{\"126\":1}}],[\"注释\",{\"1\":{\"126\":1}}],[\"︎\",{\"1\":{\"122\":1}}],[\"↩\",{\"1\":{\"122\":1}}],[\"交互\",{\"0\":{\"116\":1,\"118\":1}}],[\"咖啡\",{\"1\":{\"114\":1}}],[\"捐赠\",{\"1\":{\"114\":1}}],[\"向\",{\"1\":{\"114\":1}}],[\"化\",{\"0\":{\"113\":1}}],[\"样式\",{\"0\":{\"113\":1}}],[\"导入\",{\"0\":{\"105\":1}}],[\"导航\",{\"1\":{\"17\":1,\"19\":1,\"142\":1,\"147\":1}}],[\"⋯\",{\"1\":{\"103\":1}}],[\"−\",{\"1\":{\"103\":3}}],[\"∑\",{\"1\":{\"103\":1}}],[\"+\",{\"1\":{\"103\":1}}],[\"y\",{\"1\":{\"103\":2}}],[\"​\",{\"1\":{\"103\":5}}],[\"r\",{\"1\":{\"103\":6}}],[\"rgba\",{\"1\":{\"92\":1}}],[\"ω\",{\"1\":{\"103\":6}}],[\"∂\",{\"1\":{\"103\":2}}],[\"流程图\",{\"0\":{\"98\":1}}],[\"echarts\",{\"0\":{\"96\":1}}],[\"enhance\",{\"1\":{\"51\":1}}],[\"图表\",{\"0\":{\"94\":1}}],[\"图片\",{\"0\":{\"88\":1},\"1\":{\"89\":1,\"136\":1,\"137\":1}}],[\")\",{\"1\":{\"92\":1,\"103\":6,\"144\":1}}],[\"0.15\",{\"1\":{\"92\":1}}],[\"(\",{\"1\":{\"92\":1,\"103\":6,\"144\":1}}],[\"color\",{\"1\":{\"92\":1}}],[\"const\",{\"1\":{\"56\":1}}],[\"svg\",{\"1\":{\"92\":1}}],[\"site\",{\"1\":{\"92\":2}}],[\",\",{\"1\":{\"92\":4},\"2\":{\"153\":1,\"160\":2,\"166\":1,\"167\":1,\"173\":1,\"174\":1,\"181\":1,\"188\":2,\"196\":2,\"202\":1,\"203\":2,\"209\":1,\"210\":2,\"216\":1,\"217\":2,\"224\":1,\"225\":2,\"232\":2,\"239\":2}}],[\"logy\",{\"1\":{\"103\":2}}],[\"logo\",{\"1\":{\"92\":2}}],[\"link\",{\"1\":{\"92\":1}}],[\"light\",{\"1\":{\"92\":1}}],[\"layout\",{\"1\":{\"2\":1}}],[\"where\",{\"1\":{\"92\":1}}],[\"desc\",{\"1\":{\"92\":1}}],[\"toc\",{\"1\":{\"144\":1}}],[\"tex\",{\"0\":{\"102\":1}}],[\"there\",{\"1\":{\"92\":2}}],[\"title\",{\"1\":{\"92\":1}}],[\"true\",{\"1\":{\"2\":1}}],[\"卡片\",{\"0\":{\"91\":1}}],[\"模式\",{\"1\":{\"89\":1}}],[\"颜色\",{\"1\":{\"89\":1}}],[\"支持\",{\"1\":{\"89\":1}}],[\"增强\",{\"0\":{\"88\":1}}],[\"计划\",{\"1\":{\"85\":1,\"86\":1}}],[\"列表\",{\"0\":{\"84\":1},\"1\":{\"144\":1}}],[\"任务\",{\"0\":{\"84\":1}}],[\"标签\",{\"1\":{\"132\":1}}],[\"标记\",{\"0\":{\"81\":1},\"1\":{\"82\":1}}],[\"标题\",{\"0\":{\"155\":1,\"157\":1,\"162\":1,\"164\":1,\"169\":1,\"171\":1,\"176\":1,\"178\":1,\"183\":1,\"185\":1,\"191\":1,\"193\":1,\"198\":1,\"200\":1,\"205\":1,\"207\":1,\"212\":1,\"214\":1,\"220\":1,\"222\":1,\"227\":1,\"229\":1,\"234\":1,\"236\":1},\"1\":{\"54\":1,\"57\":1,\"59\":1,\"61\":1,\"63\":1,\"143\":1,\"144\":1}}],[\".\",{\"1\":{\"79\":1,\"92\":4,\"114\":1,\"129\":1,\"136\":1,\"137\":1}}],[\"]\",{\"1\":{\"79\":1}}],[\"[\",{\"1\":{\"79\":1}}],[\"有\",{\"1\":{\"79\":1,\"139\":1}}],[\"脚注\",{\"0\":{\"78\":1},\"1\":{\"79\":1,\"122\":1}}],[\"单词\",{\"1\":{\"76\":1}}],[\"i+1\",{\"1\":{\"103\":1}}],[\"ir\",{\"1\":{\"103\":1}}],[\"i\",{\"1\":{\"103\":3}}],[\"is\",{\"1\":{\"92\":2}}],[\"id\",{\"1\":{\"76\":1}}],[\"it\",{\"1\":{\"46\":2}}],[\"拥有\",{\"1\":{\"76\":1}}],[\"右\",{\"1\":{\"73\":1}}],[\"居中\",{\"1\":{\"72\":1}}],[\"我\",{\"1\":{\"72\":1,\"73\":1}}],[\"https\",{\"1\":{\"92\":2}}],[\"hope\",{\"1\":{\"92\":2,\"114\":1,\"129\":1}}],[\"home\",{\"1\":{\"2\":1}}],[\"h2o\",{\"1\":{\"69\":1}}],[\"角标\",{\"0\":{\"68\":1}}],[\"块\",{\"0\":{\"66\":1}}],[\"查看\",{\"1\":{\"65\":1,\"67\":1,\"70\":1,\"74\":1,\"77\":1,\"80\":1,\"83\":1,\"87\":1,\"90\":1,\"93\":1,\"95\":1,\"97\":1,\"99\":1,\"101\":1,\"104\":1,\"110\":1,\"112\":1,\"115\":1,\"117\":1,\"119\":1,\"121\":1}}],[\"详情\",{\"1\":{\"64\":1,\"65\":1,\"67\":1,\"70\":1,\"74\":1,\"77\":1,\"80\":1,\"83\":1,\"87\":1,\"90\":1,\"93\":1,\"95\":1,\"97\":1,\"99\":1,\"101\":1,\"104\":1,\"110\":1,\"112\":1,\"115\":1,\"117\":1,\"119\":1,\"121\":1}}],[\"危险\",{\"1\":{\"62\":1}}],[\"警告\",{\"1\":{\"60\":1}}],[\"提示\",{\"1\":{\"58\":1,\"135\":1}}],[\"提供\",{\"1\":{\"51\":1}}],[\";\",{\"1\":{\"56\":1}}],[\"=\",{\"1\":{\"56\":1,\"103\":2}}],[\"attrs\",{\"0\":{\"75\":1}}],[\"a\",{\"1\":{\"56\":1}}],[\"代码\",{\"0\":{\"66\":1,\"111\":1},\"1\":{\"55\":1}}],[\"包含\",{\"1\":{\"55\":1,\"138\":1,\"141\":1}}],[\"}\",{\"1\":{\"53\":2,\"103\":1}}],[\"vue\",{\"0\":{\"118\":1}}],[\"vuepress\",{\"0\":{\"47\":1},\"1\":{\"37\":1,\"38\":1,\"42\":1,\"44\":1,\"46\":1,\"48\":1,\"49\":1,\"51\":1,\"137\":1}}],[\"variable\",{\"1\":{\"53\":1}}],[\"{\",{\"1\":{\"53\":2,\"103\":1}}],[\"安全\",{\"1\":{\"53\":1}}],[\"容器\",{\"0\":{\"52\":1},\"1\":{\"55\":1,\"58\":1,\"60\":1,\"62\":1,\"64\":1}}],[\"多\",{\"1\":{\"51\":1}}],[\"更加\",{\"1\":{\"51\":1}}],[\"更\",{\"1\":{\"51\":1}}],[\"更新\",{\"1\":{\"23\":1,\"145\":1}}],[\"ms\",{\"1\":{\"129\":1}}],[\"more\",{\"1\":{\"126\":1}}],[\"mermaid\",{\"0\":{\"100\":1}}],[\"mrhope\",{\"1\":{\"92\":2}}],[\"mr\",{\"1\":{\"92\":1,\"114\":1}}],[\"md\",{\"1\":{\"51\":1}}],[\"markdown\",{\"0\":{\"36\":1,\"39\":1,\"41\":1,\"45\":1},\"1\":{\"9\":1,\"37\":1,\"38\":1,\"40\":3,\"42\":1,\"46\":3,\"48\":1,\"49\":1,\"51\":1,\"53\":1,\"106\":1,\"128\":1,\"134\":1,\"136\":1},\"2\":{\"124\":1}}],[\"这里\",{\"1\":{\"134\":1,\"156\":1,\"158\":1,\"163\":1,\"165\":1,\"170\":1,\"172\":1,\"177\":1,\"179\":1,\"184\":1,\"186\":1,\"192\":1,\"194\":1,\"199\":1,\"201\":1,\"206\":1,\"208\":1,\"213\":1,\"215\":1,\"221\":1,\"223\":1,\"228\":1,\"230\":1,\"235\":1,\"237\":1}}],[\"这些\",{\"1\":{\"49\":1}}],[\"这是\",{\"1\":{\"1\":1,\"122\":1}}],[\"关于\",{\"1\":{\"49\":1}}],[\"进行\",{\"1\":{\"48\":1,\"136\":1,\"137\":1}}],[\"对于\",{\"1\":{\"137\":1}}],[\"对齐\",{\"0\":{\"71\":1},\"1\":{\"73\":1}}],[\"对\",{\"1\":{\"48\":1}}],[\"写作\",{\"1\":{\"48\":1,\"51\":1,\"130\":1}}],[\"丰富\",{\"1\":{\"48\":1,\"51\":1}}],[\"语法\",{\"0\":{\"102\":1},\"1\":{\"46\":1,\"48\":1,\"51\":1}}],[\"实现\",{\"1\":{\"46\":1}}],[\"实际\",{\"1\":{\"31\":1}}],[\"插件\",{\"1\":{\"46\":1}}],[\"借助于\",{\"1\":{\"46\":1}}],[\"内容\",{\"0\":{\"133\":1},\"1\":{\"46\":1,\"82\":1,\"122\":1,\"126\":1,\"156\":1,\"158\":1,\"163\":1,\"165\":1,\"170\":1,\"172\":1,\"177\":1,\"179\":1,\"184\":1,\"186\":1,\"192\":1,\"194\":1,\"199\":1,\"201\":1,\"206\":1,\"208\":1,\"213\":1,\"215\":1,\"221\":1,\"223\":1,\"228\":1,\"230\":1,\"235\":1,\"237\":1}}],[\"解析\",{\"1\":{\"46\":1}}],[\"来\",{\"1\":{\"46\":2}}],[\"-\",{\"1\":{\"46\":2,\"51\":3}}],[\"会\",{\"1\":{\"46\":1}}],[\"扩展\",{\"0\":{\"45\":1,\"47\":1,\"50\":1},\"1\":{\"46\":1,\"48\":1,\"49\":2,\"51\":1}}],[\"需要\",{\"1\":{\"44\":1,\"136\":1}}],[\"概念\",{\"1\":{\"44\":1}}],[\"重要\",{\"1\":{\"44\":1,\"82\":1}}],[\"很\",{\"1\":{\"44\":1}}],[\"中\",{\"1\":{\"44\":1,\"49\":1,\"53\":1,\"128\":1}}],[\"每个\",{\"1\":{\"42\":1}}],[\"阅读\",{\"1\":{\"40\":1,\"44\":1,\"49\":1}}],[\"先\",{\"1\":{\"40\":1}}],[\"不\",{\"1\":{\"44\":1}}],[\"不会\",{\"1\":{\"40\":1}}],[\"不同\",{\"1\":{\"38\":1}}],[\"还\",{\"1\":{\"40\":1}}],[\"新手\",{\"1\":{\"40\":1}}],[\"是\",{\"1\":{\"40\":1,\"44\":1,\"72\":1,\"156\":1,\"158\":1,\"163\":1,\"165\":1,\"170\":1,\"172\":1,\"177\":1,\"179\":1,\"184\":1,\"186\":1,\"192\":1,\"194\":1,\"199\":1,\"201\":1,\"206\":1,\"208\":1,\"213\":1,\"215\":1,\"221\":1,\"223\":1,\"228\":1,\"230\":1,\"235\":1,\"237\":1}}],[\"如果\",{\"1\":{\"40\":1,\"44\":1}}],[\"如下\",{\"1\":{\"16\":1}}],[\"为了\",{\"1\":{\"48\":1}}],[\"为\",{\"1\":{\"38\":1,\"42\":1,\"89\":1,\"129\":1,\"130\":1,\"131\":1,\"132\":1}}],[\"转换\",{\"1\":{\"38\":1}}],[\"根据\",{\"1\":{\"38\":1}}],[\"以便\",{\"1\":{\"38\":1}}],[\"编写\",{\"1\":{\"38\":1,\"40\":1}}],[\"编辑\",{\"1\":{\"22\":1}}],[\"创建\",{\"1\":{\"38\":1}}],[\"站点\",{\"1\":{\"37\":1}}],[\"或\",{\"1\":{\"37\":1}}],[\"轻松\",{\"1\":{\"37\":1}}],[\"它们\",{\"1\":{\"38\":1,\"151\":1}}],[\"它\",{\"1\":{\"37\":1,\"44\":1}}],[\"因此\",{\"1\":{\"37\":1,\"46\":1}}],[\"生成\",{\"1\":{\"37\":2}}],[\"从\",{\"1\":{\"37\":1}}],[\"2020\",{\"1\":{\"130\":1}}],[\"230\",{\"1\":{\"92\":1}}],[\"253\",{\"1\":{\"92\":1}}],[\"2\",{\"0\":{\"155\":1,\"162\":1,\"169\":1,\"176\":1,\"183\":1,\"189\":1,\"191\":1,\"198\":1,\"205\":1,\"212\":1,\"218\":1,\"220\":1,\"227\":1,\"234\":1},\"1\":{\"33\":14,\"86\":1}}],[\"10\",{\"1\":{\"219\":1}}],[\"138\",{\"1\":{\"92\":1}}],[\"19th\",{\"1\":{\"69\":1}}],[\"1\",{\"0\":{\"182\":1,\"211\":1},\"1\":{\"32\":12,\"56\":1,\"79\":1,\"85\":1,\"103\":2,\"130\":2}}],[\"段落\",{\"1\":{\"32\":12,\"33\":14}}],[\"文件夹\",{\"1\":{\"137\":1}}],[\"文件\",{\"0\":{\"105\":1},\"1\":{\"37\":1,\"38\":2,\"136\":1}}],[\"文字\",{\"1\":{\"32\":12,\"33\":14,\"79\":1,\"139\":2}}],[\"文章内容\",{\"1\":{\"31\":1}}],[\"文章\",{\"0\":{\"30\":1},\"1\":{\"126\":1,\"144\":1,\"190\":1,\"219\":1},\"2\":{\"35\":1}}],[\"文档\",{\"1\":{\"3\":1,\"37\":1,\"48\":1}}],[\"密码\",{\"0\":{\"30\":1}}],[\"按钮\",{\"1\":{\"27\":1,\"150\":1}}],[\"顶部\",{\"1\":{\"27\":1,\"150\":1}}],[\"返回\",{\"1\":{\"27\":1,\"150\":1}}],[\"评论\",{\"1\":{\"25\":1,\"146\":1}}],[\"下\",{\"1\":{\"24\":1}}],[\"/\",{\"1\":{\"24\":1,\"92\":5,\"136\":1,\"137\":2}}],[\"一起\",{\"1\":{\"136\":1}}],[\"一杯\",{\"1\":{\"114\":1}}],[\"一篇\",{\"1\":{\"24\":2}}],[\"一个\",{\"1\":{\"1\":1,\"16\":1,\"40\":1,\"44\":1,\"76\":1,\"138\":1,\"190\":1,\"219\":1}}],[\"上下\",{\"0\":{\"68\":1}}],[\"上\",{\"1\":{\"24\":1}}],[\"时间\",{\"1\":{\"23\":1,\"145\":1}}],[\"链接\",{\"1\":{\"22\":1,\"24\":1,\"55\":1,\"136\":1,\"137\":1}}],[\"贡献者\",{\"1\":{\"21\":1,\"145\":1}}],[\"信息\",{\"0\":{\"127\":1},\"1\":{\"20\":1,\"43\":1,\"55\":1,\"128\":1,\"143\":1,\"145\":1}}],[\"路径\",{\"1\":{\"19\":1,\"142\":1}}],[\"侧边\",{\"1\":{\"18\":1,\"148\":1}}],[\"栏\",{\"1\":{\"17\":1,\"18\":1,\"147\":1,\"148\":1}}],[\"了解\",{\"1\":{\"44\":1}}],[\"了\",{\"1\":{\"16\":1,\"48\":1,\"51\":1,\"138\":1,\"190\":1,\"219\":1}}],[\"示例\",{\"1\":{\"16\":1}}],[\"就是\",{\"1\":{\"16\":1}}],[\"本\",{\"1\":{\"16\":1}}],[\"frontmatter\",{\"1\":{\"15\":1,\"42\":1,\"44\":2,\"128\":1,\"151\":1}}],[\"通过\",{\"1\":{\"15\":1,\"42\":1,\"51\":1,\"151\":1}}],[\"可以\",{\"1\":{\"15\":1,\"37\":1,\"38\":1,\"46\":1,\"82\":1,\"128\":1,\"134\":1,\"136\":1,\"138\":1,\"151\":1}}],[\"加密\",{\"0\":{\"30\":1},\"1\":{\"12\":1,\"109\":1},\"2\":{\"35\":1}}],[\"禁用\",{\"0\":{\"14\":1},\"1\":{\"11\":1,\"15\":1,\"16\":1,\"108\":1},\"2\":{\"29\":1}}],[\"展示\",{\"0\":{\"36\":1},\"1\":{\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"106\":1,\"107\":1,\"108\":1,\"109\":1}}],[\"目录\",{\"0\":{\"8\":1}}],[\"演示\",{\"0\":{\"7\":1,\"111\":1,\"116\":1,\"118\":1},\"1\":{\"40\":1}}],[\"与\",{\"0\":{\"7\":1,\"14\":1},\"1\":{\"15\":1,\"55\":1}}],[\"功能\",{\"0\":{\"7\":1,\"14\":1},\"1\":{\"15\":1,\"16\":1,\"51\":1}}],[\"主题\",{\"0\":{\"50\":1},\"1\":{\"51\":1,\"138\":1,\"151\":1}}],[\"主要\",{\"0\":{\"7\":1},\"1\":{\"37\":1}}],[\"主页\",{\"0\":{\"0\":1},\"1\":{\"1\":1,\"3\":1}}],[\"幻灯片\",{\"0\":{\"6\":1,\"120\":1}}],[\"放置\",{\"1\":{\"5\":1,\"136\":1}}],[\"档案\",{\"1\":{\"5\":1}}],[\"个人\",{\"1\":{\"5\":1}}],[\"将\",{\"1\":{\"5\":1,\"38\":1,\"136\":1}}],[\"页脚\",{\"1\":{\"26\":1,\"149\":1}}],[\"页\",{\"0\":{\"4\":1,\"6\":1}}],[\"页面\",{\"0\":{\"125\":1,\"127\":1,\"133\":1,\"140\":1},\"1\":{\"2\":1,\"10\":1,\"15\":2,\"16\":1,\"20\":1,\"37\":1,\"38\":1,\"42\":1,\"107\":1,\"128\":1,\"132\":1,\"141\":1,\"143\":1,\"145\":1,\"151\":1},\"2\":{\"153\":1}}],[\"介绍\",{\"0\":{\"4\":1,\"39\":1},\"1\":{\"5\":1,\"40\":1,\"44\":1}}],[\"见\",{\"1\":{\"3\":1}}],[\"请\",{\"1\":{\"3\":1,\"40\":1,\"49\":1,\"137\":1}}],[\"配置\",{\"0\":{\"7\":1,\"41\":1,\"125\":1},\"1\":{\"3\":1,\"42\":1,\"132\":1},\"2\":{\"153\":1}}],[\"和\",{\"1\":{\"2\":1,\"5\":1,\"38\":1,\"40\":1,\"89\":1,\"132\":1,\"136\":1,\"143\":1,\"151\":1}}],[\"bloghome\",{\"1\":{\"2\":1}}],[\":\",{\"1\":{\"2\":2,\"16\":1,\"92\":7,\"138\":1,\"141\":1}}],[\" \",{\"0\":{\"36\":1,\"39\":1,\"41\":1,\"45\":1,\"47\":1,\"102\":1,\"118\":1,\"155\":1,\"157\":1,\"162\":1,\"164\":1,\"169\":1,\"171\":1,\"176\":1,\"178\":1,\"182\":1,\"183\":1,\"185\":1,\"189\":1,\"191\":1,\"193\":1,\"197\":1,\"198\":1,\"200\":1,\"204\":1,\"205\":1,\"207\":1,\"211\":1,\"212\":1,\"214\":1,\"218\":1,\"220\":1,\"222\":1,\"226\":1,\"227\":1,\"229\":1,\"233\":1,\"234\":1,\"236\":1},\"1\":{\"2\":5,\"3\":1,\"9\":1,\"15\":1,\"24\":1,\"32\":24,\"33\":28,\"37\":3,\"38\":4,\"40\":6,\"42\":5,\"44\":5,\"46\":9,\"48\":3,\"49\":4,\"51\":3,\"53\":5,\"55\":3,\"56\":4,\"69\":1,\"76\":3,\"82\":2,\"85\":2,\"86\":2,\"92\":19,\"106\":1,\"114\":3,\"122\":1,\"126\":1,\"128\":4,\"129\":1,\"130\":6,\"131\":1,\"132\":3,\"134\":1,\"136\":3,\"137\":4,\"139\":3,\"144\":1,\"151\":2,\"219\":2}}],[\"设置\",{\"1\":{\"2\":1,\"15\":1,\"89\":1,\"128\":1,\"129\":1}}],[\"前端\",{\"1\":{\"2\":1}}],[\"在\",{\"1\":{\"2\":1,\"5\":1,\"15\":1,\"53\":1,\"73\":1,\"128\":1,\"134\":1,\"136\":1}}],[\"你\",{\"1\":{\"2\":1,\"5\":1,\"15\":1,\"37\":1,\"38\":1,\"40\":1,\"44\":2,\"82\":1,\"128\":1,\"134\":2,\"136\":2,\"151\":1}}],[\"，\",{\"1\":{\"2\":1,\"15\":1,\"16\":1,\"37\":1,\"38\":1,\"40\":2,\"44\":2,\"46\":1,\"48\":1,\"49\":1,\"51\":2,\"55\":1,\"136\":1,\"137\":1}}],[\"布局\",{\"0\":{\"14\":1},\"1\":{\"2\":1,\"15\":1}}],[\"此页\",{\"1\":{\"22\":1}}],[\"此处\",{\"1\":{\"5\":1}}],[\"此\",{\"1\":{\"2\":1,\"79\":1,\"141\":1}}],[\"使用指南\",{\"1\":{\"131\":1,\"132\":1},\"2\":{\"13\":1,\"28\":1,\"34\":1,\"123\":1,\"152\":1,\"153\":1}}],[\"使用\",{\"1\":{\"2\":1,\"37\":1,\"46\":1,\"53\":1,\"136\":1,\"137\":1,\"138\":1}}],[\"要\",{\"1\":{\"2\":1}}],[\"。\",{\"1\":{\"1\":1,\"2\":1,\"3\":1,\"5\":1,\"15\":1,\"31\":1,\"32\":1,\"33\":1,\"37\":2,\"38\":1,\"40\":1,\"42\":1,\"44\":1,\"46\":1,\"48\":1,\"49\":1,\"51\":1,\"53\":1,\"55\":1,\"76\":1,\"82\":1,\"114\":1,\"126\":1,\"128\":1,\"129\":1,\"134\":1,\"136\":1,\"137\":1,\"139\":1,\"151\":1,\"156\":1,\"158\":1,\"163\":1,\"165\":1,\"170\":1,\"172\":1,\"177\":1,\"179\":1,\"184\":1,\"186\":1,\"190\":1,\"192\":1,\"194\":1,\"199\":1,\"201\":1,\"206\":1,\"208\":1,\"213\":1,\"215\":1,\"219\":1,\"221\":1,\"223\":1,\"228\":1,\"230\":1,\"235\":1,\"237\":1}}],[\"案例\",{\"1\":{\"1\":1}}],[\"的\",{\"0\":{\"30\":1},\"1\":{\"1\":1,\"5\":1,\"15\":1,\"31\":1,\"38\":1,\"44\":1,\"49\":1,\"51\":1,\"53\":1,\"72\":1,\"76\":1,\"82\":1,\"126\":1,\"128\":1,\"134\":1,\"137\":1,\"139\":1,\"190\":1,\"219\":1},\"2\":{\"217\":1,\"225\":1,\"232\":1,\"239\":1}}],[\"博客\",{\"0\":{\"0\":1},\"1\":{\"1\":1,\"3\":1,\"37\":1}}]],\"serializationVersion\":2},\"/\":{\"documentCount\":3468,\"nextId\":3468,\"documentIds\":{\"0\":\"v-184f4da6\",\"1\":\"v-184f4da6#0/0\",\"2\":\"v-790e9c77\",\"3\":\"v-790e9c77#1\",\"4\":\"v-790e9c77#1/0\",\"5\":\"v-790e9c77#1/1\",\"6\":\"v-790e9c77#1/2\",\"7\":\"v-790e9c77#1/3\",\"8\":\"v-790e9c77#1/4\",\"9\":\"v-790e9c77#2\",\"10\":\"v-2e3eac9e\",\"11\":\"v-718199a0\",\"12\":\"v-5b262943\",\"13\":\"v-5b262943#1\",\"14\":\"v-5b262943#1/0\",\"15\":\"v-5b262943#1/1\",\"16\":\"v-5b262943#1/2\",\"17\":\"v-5b262943#1/3\",\"18\":\"v-5b262943#1/4\",\"19\":\"v-5b262943#1/5\",\"20\":\"v-5b262943#1/6\",\"21\":\"v-5b262943#1/7\",\"22\":\"v-5b262943#1/8\",\"23\":\"v-5b262943#1/9\",\"24\":\"v-5b262943#1/10\",\"25\":\"v-5b262943#1/11\",\"26\":\"v-5b262943#2\",\"27\":\"v-5b262943#3\",\"28\":\"v-5b262943#3/0\",\"29\":\"v-5b262943#3/1\",\"30\":\"v-5b262943#3/2\",\"31\":\"v-5b262943#3/3\",\"32\":\"v-5b262943#3/4\",\"33\":\"v-5b262943#3/5\",\"34\":\"v-5b262943#3/6\",\"35\":\"v-5b262943#4\",\"36\":\"v-5b262943#4/7\",\"37\":\"v-5b262943#4/8\",\"38\":\"v-5b262943#4/9\",\"39\":\"v-5b262943#4/10\",\"40\":\"v-5b262943#4/11\",\"41\":\"v-5b262943#4/12\",\"42\":\"v-5b262943#4/13\",\"43\":\"v-5b262943#4/14\",\"44\":\"v-5b262943#4/15\",\"45\":\"v-5b262943#4/16\",\"46\":\"v-5b262943#4/17\",\"47\":\"v-5b262943#5\",\"48\":\"v-5b262943#5/0\",\"49\":\"v-5b262943#5/1\",\"50\":\"v-5b262943#5/2\",\"51\":\"v-25eb8624\",\"52\":\"v-25eb8624#1\",\"53\":\"v-25eb8624#1/0\",\"54\":\"v-25eb8624#1/1\",\"55\":\"v-25eb8624#1/2\",\"56\":\"v-25eb8624#1/3\",\"57\":\"v-25eb8624#1/4\",\"58\":\"v-25eb8624#1/5\",\"59\":\"v-25eb8624#1/6\",\"60\":\"v-25eb8624#1/7\",\"61\":\"v-25eb8624#2\",\"62\":\"v-25eb8624#2/0\",\"63\":\"v-25eb8624#2/1\",\"64\":\"v-25eb8624#2/2\",\"65\":\"v-25eb8624#2/3\",\"66\":\"v-25eb8624#2/4\",\"67\":\"v-25eb8624#2/5\",\"68\":\"v-25eb8624#2/6\",\"69\":\"v-25eb8624#2/7\",\"70\":\"v-25eb8624#2/8\",\"71\":\"v-25eb8624#2/9\",\"72\":\"v-25eb8624#2/10\",\"73\":\"v-25eb8624#3\",\"74\":\"v-25eb8624#3/0\",\"75\":\"v-25eb8624#4\",\"76\":\"v-25eb8624#4/0\",\"77\":\"v-25eb8624#4/1\",\"78\":\"v-25eb8624#4/2\",\"79\":\"v-25eb8624#4/3\",\"80\":\"v-25eb8624#5\",\"81\":\"v-25eb8624#5/0\",\"82\":\"v-25eb8624#5/1\",\"83\":\"v-25eb8624#5/2\",\"84\":\"v-25eb8624#5/3\",\"85\":\"v-25eb8624#5/4\",\"86\":\"v-25eb8624#5/5\",\"87\":\"v-25eb8624#6\",\"88\":\"v-25eb8624#6/0\",\"89\":\"v-25eb8624#6/1\",\"90\":\"v-25eb8624#6/2\",\"91\":\"v-25eb8624#6/3\",\"92\":\"v-25eb8624#6/4\",\"93\":\"v-25eb8624#6/5\",\"94\":\"v-25eb8624#7\",\"95\":\"v-25eb8624#7/0\",\"96\":\"v-25eb8624#7/1\",\"97\":\"v-25eb8624#7/2\",\"98\":\"v-25eb8624#7/3\",\"99\":\"v-25eb8624#8\",\"100\":\"v-25eb8624#8/0\",\"101\":\"v-25eb8624#8/1\",\"102\":\"v-25eb8624#8/2\",\"103\":\"v-25eb8624#8/3\",\"104\":\"v-25eb8624#8/4\",\"105\":\"v-25eb8624#8/5\",\"106\":\"v-25eb8624#9\",\"107\":\"v-25eb8624#9/0\",\"108\":\"v-25eb8624#9/1\",\"109\":\"v-25eb8624#9/2\",\"110\":\"v-25eb8624#9/3\",\"111\":\"v-25eb8624#9/4\",\"112\":\"v-25eb8624#9/5\",\"113\":\"v-25eb8624#9/6\",\"114\":\"v-25eb8624#9/7\",\"115\":\"v-25eb8624#9/8\",\"116\":\"v-25eb8624#9/9\",\"117\":\"v-25eb8624#9/10\",\"118\":\"v-25eb8624#9/11\",\"119\":\"v-25eb8624#9/12\",\"120\":\"v-25eb8624#9/13\",\"121\":\"v-25eb8624#9/14\",\"122\":\"v-25eb8624#9/15\",\"123\":\"v-25eb8624#9/16\",\"124\":\"v-25eb8624#9/17\",\"125\":\"v-25eb8624#9/18\",\"126\":\"v-25eb8624#9/19\",\"127\":\"v-25eb8624#9/20\",\"128\":\"v-25eb8624#9/21\",\"129\":\"v-25eb8624#9/22\",\"130\":\"v-25eb8624#9/23\",\"131\":\"v-25eb8624#9/24\",\"132\":\"v-25eb8624#9/25\",\"133\":\"v-25eb8624#9/26\",\"134\":\"v-25eb8624#9/27\",\"135\":\"v-25eb8624#9/28\",\"136\":\"v-25eb8624#9/29\",\"137\":\"v-25eb8624#9/30\",\"138\":\"v-25eb8624#9/31\",\"139\":\"v-25eb8624#9/32\",\"140\":\"v-25eb8624#10\",\"141\":\"v-25eb8624#10/0\",\"142\":\"v-25eb8624#10/1\",\"143\":\"v-25eb8624#11\",\"144\":\"v-25eb8624#11/0\",\"145\":\"v-25eb8624#11/1\",\"146\":\"v-25eb8624#11/2\",\"147\":\"v-25eb8624#11/3\",\"148\":\"v-25eb8624#11/4\",\"149\":\"v-25eb8624#11/5\",\"150\":\"v-25eb8624#11/6\",\"151\":\"v-25eb8624#11/7\",\"152\":\"v-25eb8624#11/8\",\"153\":\"v-25eb8624#11/9\",\"154\":\"v-25eb8624#11/10\",\"155\":\"v-25eb8624#11/11\",\"156\":\"v-25eb8624#11/12\",\"157\":\"v-25eb8624#11/13\",\"158\":\"v-25eb8624#11/14\",\"159\":\"v-25eb8624#11/15\",\"160\":\"v-25eb8624#11/16\",\"161\":\"v-25eb8624#11/17\",\"162\":\"v-25eb8624#11/18\",\"163\":\"v-25eb8624#11/19\",\"164\":\"v-25eb8624#11/20\",\"165\":\"v-25eb8624#12\",\"166\":\"v-25eb8624#12/0\",\"167\":\"v-25eb8624#12/1\",\"168\":\"v-25eb8624#12/2\",\"169\":\"v-25eb8624#12/3\",\"170\":\"v-25eb8624#12/4\",\"171\":\"v-25eb8624#12/5\",\"172\":\"v-25eb8624#13\",\"173\":\"v-25eb8624#13/0\",\"174\":\"v-25eb8624#13/1\",\"175\":\"v-25eb8624#13/2\",\"176\":\"v-25eb8624#13/3\",\"177\":\"v-25eb8624#13/4\",\"178\":\"v-25eb8624#13/5\",\"179\":\"v-25eb8624#13/6\",\"180\":\"v-25eb8624#13/7\",\"181\":\"v-25eb8624#13/8\",\"182\":\"v-25eb8624#14\",\"183\":\"v-25eb8624#14/9\",\"184\":\"v-25eb8624#15\",\"185\":\"v-25eb8624#15/0\",\"186\":\"v-25eb8624#15/1\",\"187\":\"v-25eb8624#15/2\",\"188\":\"v-25eb8624#15/3\",\"189\":\"v-25eb8624#15/4\",\"190\":\"v-25eb8624#15/5\",\"191\":\"v-25eb8624#15/6\",\"192\":\"v-25eb8624#15/7\",\"193\":\"v-25eb8624#15/8\",\"194\":\"v-25eb8624#15/9\",\"195\":\"v-25eb8624#15/10\",\"196\":\"v-25eb8624#15/11\",\"197\":\"v-25eb8624#15/12\",\"198\":\"v-25eb8624#15/13\",\"199\":\"v-25eb8624#15/14\",\"200\":\"v-25eb8624#15/15\",\"201\":\"v-25eb8624#15/16\",\"202\":\"v-25eb8624#15/17\",\"203\":\"v-25eb8624#15/18\",\"204\":\"v-25eb8624#15/19\",\"205\":\"v-25eb8624#15/20\",\"206\":\"v-25eb8624#15/21\",\"207\":\"v-25eb8624#16\",\"208\":\"v-25eb8624#16/0\",\"209\":\"v-25eb8624#16/1\",\"210\":\"v-25eb8624#16/2\",\"211\":\"v-25eb8624#16/3\",\"212\":\"v-25eb8624#16/4\",\"213\":\"v-25eb8624#16/5\",\"214\":\"v-25eb8624#16/6\",\"215\":\"v-25eb8624#16/7\",\"216\":\"v-25eb8624#16/8\",\"217\":\"v-25eb8624#16/9\",\"218\":\"v-25eb8624#16/10\",\"219\":\"v-25eb8624#16/11\",\"220\":\"v-25eb8624#17\",\"221\":\"v-25eb8624#17/0\",\"222\":\"v-25eb8624#17/1\",\"223\":\"v-25eb8624#17/2\",\"224\":\"v-25eb8624#17/3\",\"225\":\"v-25eb8624#17/4\",\"226\":\"v-25eb8624#17/5\",\"227\":\"v-25eb8624#17/6\",\"228\":\"v-25eb8624#17/7\",\"229\":\"v-25eb8624#17/8\",\"230\":\"v-25eb8624#17/9\",\"231\":\"v-25eb8624#17/10\",\"232\":\"v-25eb8624#17/11\",\"233\":\"v-25eb8624#17/12\",\"234\":\"v-25eb8624#18\",\"235\":\"v-25eb8624#18/0\",\"236\":\"v-25eb8624#18/1\",\"237\":\"v-25eb8624#18/2\",\"238\":\"v-25eb8624#18/3\",\"239\":\"v-25eb8624#18/4\",\"240\":\"v-25eb8624#18/5\",\"241\":\"v-25eb8624#18/6\",\"242\":\"v-25eb8624#18/7\",\"243\":\"v-25eb8624#18/8\",\"244\":\"v-25eb8624#18/9\",\"245\":\"v-25eb8624#19\",\"246\":\"v-25eb8624#19/0\",\"247\":\"v-25eb8624#19/1\",\"248\":\"v-25eb8624#19/2\",\"249\":\"v-25eb8624#19/3\",\"250\":\"v-25eb8624#19/4\",\"251\":\"v-25eb8624#19/5\",\"252\":\"v-25eb8624#19/6\",\"253\":\"v-25eb8624#19/7\",\"254\":\"v-25eb8624#19/8\",\"255\":\"v-25eb8624#20\",\"256\":\"v-25eb8624#20/0\",\"257\":\"v-25eb8624#20/1\",\"258\":\"v-25eb8624#20/2\",\"259\":\"v-25eb8624#20/3\",\"260\":\"v-25eb8624#20/4\",\"261\":\"v-25eb8624#20/5\",\"262\":\"v-25eb8624#20/6\",\"263\":\"v-25eb8624#20/7\",\"264\":\"v-25eb8624#20/8\",\"265\":\"v-25eb8624#20/9\",\"266\":\"v-25eb8624#20/10\",\"267\":\"v-25eb8624#20/11\",\"268\":\"v-25eb8624#20/12\",\"269\":\"v-25eb8624#20/13\",\"270\":\"v-25eb8624#21\",\"271\":\"v-25eb8624#21/0\",\"272\":\"v-25eb8624#21/1\",\"273\":\"v-25eb8624#21/2\",\"274\":\"v-25eb8624#21/3\",\"275\":\"v-25eb8624#21/4\",\"276\":\"v-25eb8624#21/5\",\"277\":\"v-25eb8624#21/6\",\"278\":\"v-25eb8624#21/7\",\"279\":\"v-25eb8624#21/8\",\"280\":\"v-25eb8624#21/9\",\"281\":\"v-25eb8624#21/10\",\"282\":\"v-25eb8624#21/11\",\"283\":\"v-25eb8624#21/12\",\"284\":\"v-25eb8624#21/13\",\"285\":\"v-25eb8624#21/14\",\"286\":\"v-25eb8624#21/15\",\"287\":\"v-25eb8624#21/16\",\"288\":\"v-25eb8624#21/17\",\"289\":\"v-25eb8624#21/18\",\"290\":\"v-25eb8624#22\",\"291\":\"v-25eb8624#22/0\",\"292\":\"v-25eb8624#23\",\"293\":\"v-25eb8624#23/0\",\"294\":\"v-25eb8624#23/1\",\"295\":\"v-25eb8624#23/2\",\"296\":\"v-25eb8624#23/3\",\"297\":\"v-25eb8624#23/4\",\"298\":\"v-25eb8624#23/5\",\"299\":\"v-25eb8624#23/6\",\"300\":\"v-25eb8624#23/7\",\"301\":\"v-25eb8624#23/8\",\"302\":\"v-25eb8624#23/9\",\"303\":\"v-25eb8624#23/10\",\"304\":\"v-25eb8624#23/11\",\"305\":\"v-25eb8624#23/12\",\"306\":\"v-25eb8624#23/13\",\"307\":\"v-25eb8624#23/14\",\"308\":\"v-25eb8624#23/15\",\"309\":\"v-25eb8624#23/16\",\"310\":\"v-25eb8624#23/17\",\"311\":\"v-25eb8624#23/18\",\"312\":\"v-25eb8624#23/19\",\"313\":\"v-25eb8624#23/20\",\"314\":\"v-25eb8624#23/21\",\"315\":\"v-25eb8624#24\",\"316\":\"v-25eb8624#24/0\",\"317\":\"v-25eb8624#24/1\",\"318\":\"v-25eb8624#24/2\",\"319\":\"v-25eb8624#24/3\",\"320\":\"v-25eb8624#24/4\",\"321\":\"v-25eb8624#24/5\",\"322\":\"v-25eb8624#24/6\",\"323\":\"v-25eb8624#24/7\",\"324\":\"v-25eb8624#24/8\",\"325\":\"v-25eb8624#24/9\",\"326\":\"v-25eb8624#24/10\",\"327\":\"v-25eb8624#24/11\",\"328\":\"v-25eb8624#24/12\",\"329\":\"v-25eb8624#24/13\",\"330\":\"v-25eb8624#24/14\",\"331\":\"v-25eb8624#24/15\",\"332\":\"v-25eb8624#24/16\",\"333\":\"v-25eb8624#24/17\",\"334\":\"v-25eb8624#24/18\",\"335\":\"v-25eb8624#24/19\",\"336\":\"v-25eb8624#24/20\",\"337\":\"v-25eb8624#24/21\",\"338\":\"v-25eb8624#24/22\",\"339\":\"v-25eb8624#24/23\",\"340\":\"v-25eb8624#24/24\",\"341\":\"v-25eb8624#24/25\",\"342\":\"v-25eb8624#24/26\",\"343\":\"v-25eb8624#24/27\",\"344\":\"v-25eb8624#24/28\",\"345\":\"v-25eb8624#24/29\",\"346\":\"v-25eb8624#24/30\",\"347\":\"v-25eb8624#24/31\",\"348\":\"v-25eb8624#24/32\",\"349\":\"v-25eb8624#24/33\",\"350\":\"v-25eb8624#25\",\"351\":\"v-25eb8624#25/0\",\"352\":\"v-25eb8624#25/1\",\"353\":\"v-25eb8624#25/2\",\"354\":\"v-25eb8624#25/3\",\"355\":\"v-25eb8624#26\",\"356\":\"v-25eb8624#26/0\",\"357\":\"v-25eb8624#26/1\",\"358\":\"v-25eb8624#26/2\",\"359\":\"v-25eb8624#26/3\",\"360\":\"v-25eb8624#26/4\",\"361\":\"v-25eb8624#26/5\",\"362\":\"v-25eb8624#26/6\",\"363\":\"v-25eb8624#26/7\",\"364\":\"v-25eb8624#26/8\",\"365\":\"v-25eb8624#26/9\",\"366\":\"v-25eb8624#26/10\",\"367\":\"v-25eb8624#26/11\",\"368\":\"v-25eb8624#26/12\",\"369\":\"v-25eb8624#26/13\",\"370\":\"v-25eb8624#26/14\",\"371\":\"v-25eb8624#27\",\"372\":\"v-25eb8624#27/0\",\"373\":\"v-25eb8624#27/1\",\"374\":\"v-25eb8624#27/2\",\"375\":\"v-25eb8624#27/3\",\"376\":\"v-25eb8624#27/4\",\"377\":\"v-25eb8624#27/5\",\"378\":\"v-25eb8624#27/6\",\"379\":\"v-25eb8624#27/7\",\"380\":\"v-25eb8624#27/8\",\"381\":\"v-25eb8624#27/9\",\"382\":\"v-25eb8624#27/10\",\"383\":\"v-25eb8624#27/11\",\"384\":\"v-25eb8624#27/12\",\"385\":\"v-25eb8624#27/13\",\"386\":\"v-25eb8624#27/14\",\"387\":\"v-25eb8624#27/15\",\"388\":\"v-25eb8624#27/16\",\"389\":\"v-25eb8624#27/17\",\"390\":\"v-25eb8624@0\",\"391\":\"v-b27b0c84\",\"392\":\"v-b27b0c84#0/0\",\"393\":\"v-b27b0c84#0/1\",\"394\":\"v-b27b0c84#0/2\",\"395\":\"v-b27b0c84#1\",\"396\":\"v-b27b0c84#2\",\"397\":\"v-b27b0c84#2/0\",\"398\":\"v-b27b0c84#2/1\",\"399\":\"v-b27b0c84#2/2\",\"400\":\"v-b27b0c84#2/3\",\"401\":\"v-b27b0c84#3\",\"402\":\"v-b27b0c84#3/0\",\"403\":\"v-b27b0c84#3/1\",\"404\":\"v-b27b0c84#3/2\",\"405\":\"v-b27b0c84#3/3\",\"406\":\"v-b27b0c84#3/4\",\"407\":\"v-b27b0c84#3/5\",\"408\":\"v-b27b0c84#3/6\",\"409\":\"v-b27b0c84#3/7\",\"410\":\"v-b27b0c84#3/8\",\"411\":\"v-b27b0c84#3/9\",\"412\":\"v-b27b0c84#3/10\",\"413\":\"v-b27b0c84#3/11\",\"414\":\"v-b27b0c84#3/12\",\"415\":\"v-b27b0c84#3/13\",\"416\":\"v-b27b0c84#3/14\",\"417\":\"v-b27b0c84#3/15\",\"418\":\"v-b27b0c84#3/16\",\"419\":\"v-b27b0c84#3/17\",\"420\":\"v-b27b0c84#3/18\",\"421\":\"v-b27b0c84#3/19\",\"422\":\"v-b27b0c84#4\",\"423\":\"v-b27b0c84#4/0\",\"424\":\"v-b27b0c84#4/1\",\"425\":\"v-b27b0c84#4/2\",\"426\":\"v-b27b0c84#5\",\"427\":\"v-b27b0c84#5/0\",\"428\":\"v-b27b0c84#5/1\",\"429\":\"v-b27b0c84#5/2\",\"430\":\"v-b27b0c84#5/3\",\"431\":\"v-b27b0c84#5/4\",\"432\":\"v-b27b0c84#5/5\",\"433\":\"v-b27b0c84#5/6\",\"434\":\"v-b27b0c84#5/7\",\"435\":\"v-b27b0c84#5/8\",\"436\":\"v-b27b0c84#5/9\",\"437\":\"v-b27b0c84#5/10\",\"438\":\"v-b27b0c84#5/11\",\"439\":\"v-b27b0c84#6\",\"440\":\"v-b27b0c84#7\",\"441\":\"v-b27b0c84#7/0\",\"442\":\"v-b27b0c84#8\",\"443\":\"v-b27b0c84#8/0\",\"444\":\"v-b27b0c84#8/1\",\"445\":\"v-b27b0c84#8/2\",\"446\":\"v-b27b0c84#8/3\",\"447\":\"v-b27b0c84#8/4\",\"448\":\"v-b27b0c84#8/5\",\"449\":\"v-b27b0c84#8/6\",\"450\":\"v-b27b0c84#9\",\"451\":\"v-b27b0c84#9/0\",\"452\":\"v-b27b0c84#9/1\",\"453\":\"v-b27b0c84#9/2\",\"454\":\"v-b27b0c84#9/3\",\"455\":\"v-b27b0c84#9/4\",\"456\":\"v-b27b0c84#9/5\",\"457\":\"v-b27b0c84#9/6\",\"458\":\"v-b27b0c84#9/7\",\"459\":\"v-b27b0c84#9/8\",\"460\":\"v-b27b0c84#9/9\",\"461\":\"v-b27b0c84#9/10\",\"462\":\"v-b27b0c84#10\",\"463\":\"v-b27b0c84#10/0\",\"464\":\"v-b27b0c84#11\",\"465\":\"v-b27b0c84#11/0\",\"466\":\"v-b27b0c84#11/1\",\"467\":\"v-b27b0c84#11/2\",\"468\":\"v-b27b0c84#11/3\",\"469\":\"v-b27b0c84#11/4\",\"470\":\"v-b27b0c84#11/5\",\"471\":\"v-b27b0c84#11/6\",\"472\":\"v-b27b0c84#11/7\",\"473\":\"v-b27b0c84#11/8\",\"474\":\"v-b27b0c84#12\",\"475\":\"v-b27b0c84#12/0\",\"476\":\"v-b27b0c84#12/1\",\"477\":\"v-b27b0c84#12/2\",\"478\":\"v-b27b0c84#12/3\",\"479\":\"v-b27b0c84#12/4\",\"480\":\"v-b27b0c84#12/5\",\"481\":\"v-b27b0c84#12/6\",\"482\":\"v-b27b0c84#12/7\",\"483\":\"v-b27b0c84#12/8\",\"484\":\"v-b27b0c84#12/9\",\"485\":\"v-b27b0c84#12/10\",\"486\":\"v-b27b0c84#12/11\",\"487\":\"v-b27b0c84#12/12\",\"488\":\"v-b27b0c84#12/13\",\"489\":\"v-b27b0c84#12/14\",\"490\":\"v-b27b0c84#12/15\",\"491\":\"v-b27b0c84#13\",\"492\":\"v-b27b0c84#13/0\",\"493\":\"v-b27b0c84#13/1\",\"494\":\"v-b27b0c84#13/2\",\"495\":\"v-b27b0c84#13/3\",\"496\":\"v-b27b0c84#13/4\",\"497\":\"v-b27b0c84#13/5\",\"498\":\"v-b27b0c84#14\",\"499\":\"v-b27b0c84#15\",\"500\":\"v-b27b0c84#15/0\",\"501\":\"v-b27b0c84#15/1\",\"502\":\"v-b27b0c84#15/2\",\"503\":\"v-b27b0c84#15/3\",\"504\":\"v-b27b0c84#15/4\",\"505\":\"v-b27b0c84#15/5\",\"506\":\"v-b27b0c84#15/6\",\"507\":\"v-b27b0c84#16\",\"508\":\"v-b27b0c84#16/0\",\"509\":\"v-b27b0c84#16/1\",\"510\":\"v-b27b0c84#16/2\",\"511\":\"v-b27b0c84#16/3\",\"512\":\"v-b27b0c84#16/4\",\"513\":\"v-b27b0c84#17\",\"514\":\"v-b27b0c84#18\",\"515\":\"v-b27b0c84#18/0\",\"516\":\"v-b27b0c84#18/1\",\"517\":\"v-b27b0c84#18/2\",\"518\":\"v-b27b0c84#18/3\",\"519\":\"v-b27b0c84#18/4\",\"520\":\"v-b27b0c84#18/5\",\"521\":\"v-b27b0c84#19\",\"522\":\"v-b27b0c84#19/0\",\"523\":\"v-b27b0c84#19/1\",\"524\":\"v-b27b0c84#19/2\",\"525\":\"v-b27b0c84#19/3\",\"526\":\"v-b27b0c84#19/4\",\"527\":\"v-b27b0c84#20\",\"528\":\"v-b27b0c84#20/0\",\"529\":\"v-b27b0c84#20/1\",\"530\":\"v-b27b0c84#20/2\",\"531\":\"v-b27b0c84#20/3\",\"532\":\"v-b27b0c84#20/4\",\"533\":\"v-b27b0c84#20/5\",\"534\":\"v-b27b0c84#21\",\"535\":\"v-b27b0c84#21/0\",\"536\":\"v-b27b0c84#21/1\",\"537\":\"v-b27b0c84#21/2\",\"538\":\"v-b27b0c84#21/3\",\"539\":\"v-b27b0c84#21/4\",\"540\":\"v-b27b0c84#21/5\",\"541\":\"v-b27b0c84#21/6\",\"542\":\"v-b27b0c84#21/7\",\"543\":\"v-b27b0c84#21/8\",\"544\":\"v-b27b0c84#21/9\",\"545\":\"v-b27b0c84#21/10\",\"546\":\"v-b27b0c84#21/11\",\"547\":\"v-b27b0c84#21/12\",\"548\":\"v-b27b0c84#22\",\"549\":\"v-b27b0c84#22/0\",\"550\":\"v-b27b0c84#22/1\",\"551\":\"v-b27b0c84#22/2\",\"552\":\"v-b27b0c84#22/3\",\"553\":\"v-b27b0c84#22/4\",\"554\":\"v-b27b0c84#23\",\"555\":\"v-b27b0c84#24\",\"556\":\"v-b27b0c84#24/0\",\"557\":\"v-b27b0c84#24/1\",\"558\":\"v-b27b0c84#24/2\",\"559\":\"v-b27b0c84#24/3\",\"560\":\"v-b27b0c84#25\",\"561\":\"v-b27b0c84#25/0\",\"562\":\"v-b27b0c84#25/1\",\"563\":\"v-b27b0c84#25/2\",\"564\":\"v-b27b0c84#25/3\",\"565\":\"v-b27b0c84#25/4\",\"566\":\"v-b27b0c84#25/5\",\"567\":\"v-b27b0c84#25/6\",\"568\":\"v-b27b0c84#25/7\",\"569\":\"v-b27b0c84#25/8\",\"570\":\"v-b27b0c84#26\",\"571\":\"v-b27b0c84#26/0\",\"572\":\"v-b27b0c84#26/1\",\"573\":\"v-b27b0c84#26/2\",\"574\":\"v-b27b0c84#26/3\",\"575\":\"v-b27b0c84#26/4\",\"576\":\"v-b27b0c84#26/5\",\"577\":\"v-b27b0c84#26/6\",\"578\":\"v-b27b0c84#26/7\",\"579\":\"v-b27b0c84#26/8\",\"580\":\"v-b27b0c84#26/9\",\"581\":\"v-b27b0c84#26/10\",\"582\":\"v-b27b0c84#26/11\",\"583\":\"v-b27b0c84#26/12\",\"584\":\"v-b27b0c84#26/13\",\"585\":\"v-b27b0c84#26/14\",\"586\":\"v-b27b0c84#26/15\",\"587\":\"v-b27b0c84#26/16\",\"588\":\"v-b27b0c84#26/17\",\"589\":\"v-b27b0c84#26/18\",\"590\":\"v-b27b0c84#26/19\",\"591\":\"v-b27b0c84#26/20\",\"592\":\"v-b27b0c84#26/21\",\"593\":\"v-b27b0c84#26/22\",\"594\":\"v-b27b0c84#26/23\",\"595\":\"v-b27b0c84#26/24\",\"596\":\"v-b27b0c84#27\",\"597\":\"v-b27b0c84#27/0\",\"598\":\"v-b27b0c84#27/1\",\"599\":\"v-b27b0c84#28\",\"600\":\"v-b27b0c84#29\",\"601\":\"v-b27b0c84#29/0\",\"602\":\"v-b27b0c84#29/1\",\"603\":\"v-b27b0c84#30\",\"604\":\"v-b27b0c84#30/0\",\"605\":\"v-b27b0c84#30/1\",\"606\":\"v-b27b0c84#30/2\",\"607\":\"v-b27b0c84#30/3\",\"608\":\"v-b27b0c84#30/4\",\"609\":\"v-b27b0c84#30/5\",\"610\":\"v-b27b0c84#30/6\",\"611\":\"v-b27b0c84#30/7\",\"612\":\"v-b27b0c84#31\",\"613\":\"v-b27b0c84#31/0\",\"614\":\"v-b27b0c84#32\",\"615\":\"v-b27b0c84#32/0\",\"616\":\"v-b27b0c84#32/1\",\"617\":\"v-b27b0c84#32/2\",\"618\":\"v-b27b0c84#33\",\"619\":\"v-b27b0c84#33/0\",\"620\":\"v-b27b0c84#33/1\",\"621\":\"v-b27b0c84#33/2\",\"622\":\"v-b27b0c84#33/3\",\"623\":\"v-b27b0c84#33/4\",\"624\":\"v-b27b0c84#33/5\",\"625\":\"v-b27b0c84#33/6\",\"626\":\"v-b27b0c84#33/7\",\"627\":\"v-b27b0c84#34\",\"628\":\"v-b27b0c84#34/0\",\"629\":\"v-b27b0c84#34/1\",\"630\":\"v-b27b0c84#34/2\",\"631\":\"v-b27b0c84#34/3\",\"632\":\"v-b27b0c84#34/4\",\"633\":\"v-b27b0c84#34/5\",\"634\":\"v-b27b0c84#34/6\",\"635\":\"v-b27b0c84#34/7\",\"636\":\"v-b27b0c84#35\",\"637\":\"v-b27b0c84#35/0\",\"638\":\"v-b27b0c84#35/1\",\"639\":\"v-b27b0c84#36\",\"640\":\"v-b27b0c84#36/0\",\"641\":\"v-b27b0c84#36/1\",\"642\":\"v-b27b0c84#36/2\",\"643\":\"v-b27b0c84#36/3\",\"644\":\"v-b27b0c84#36/4\",\"645\":\"v-b27b0c84#36/5\",\"646\":\"v-b27b0c84#36/6\",\"647\":\"v-b27b0c84#36/7\",\"648\":\"v-b27b0c84#36/8\",\"649\":\"v-b27b0c84#36/9\",\"650\":\"v-b27b0c84#36/10\",\"651\":\"v-b27b0c84#36/11\",\"652\":\"v-b27b0c84#36/12\",\"653\":\"v-b27b0c84#37\",\"654\":\"v-b27b0c84#37/0\",\"655\":\"v-b27b0c84#37/1\",\"656\":\"v-b27b0c84#37/2\",\"657\":\"v-b27b0c84#38\",\"658\":\"v-b27b0c84#38/0\",\"659\":\"v-b27b0c84#38/1\",\"660\":\"v-b27b0c84#39\",\"661\":\"v-b27b0c84#39/0\",\"662\":\"v-b27b0c84#39/1\",\"663\":\"v-b27b0c84#39/2\",\"664\":\"v-b27b0c84#39/3\",\"665\":\"v-b27b0c84#39/4\",\"666\":\"v-b27b0c84#39/5\",\"667\":\"v-b27b0c84#39/6\",\"668\":\"v-b27b0c84#39/7\",\"669\":\"v-b27b0c84#39/8\",\"670\":\"v-b27b0c84#40\",\"671\":\"v-b27b0c84#40/0\",\"672\":\"v-b27b0c84#40/1\",\"673\":\"v-b27b0c84#40/2\",\"674\":\"v-b27b0c84#40/3\",\"675\":\"v-b27b0c84#40/4\",\"676\":\"v-b27b0c84#40/5\",\"677\":\"v-b27b0c84#40/6\",\"678\":\"v-b27b0c84#40/7\",\"679\":\"v-b27b0c84#40/8\",\"680\":\"v-b27b0c84#40/9\",\"681\":\"v-b27b0c84#40/10\",\"682\":\"v-b27b0c84#40/11\",\"683\":\"v-b27b0c84#40/12\",\"684\":\"v-b27b0c84#40/13\",\"685\":\"v-b27b0c84#40/14\",\"686\":\"v-b27b0c84#41\",\"687\":\"v-b27b0c84#42\",\"688\":\"v-b27b0c84#42/0\",\"689\":\"v-b27b0c84#42/1\",\"690\":\"v-b27b0c84#42/2\",\"691\":\"v-b27b0c84#42/3\",\"692\":\"v-b27b0c84#42/4\",\"693\":\"v-b27b0c84#42/5\",\"694\":\"v-b27b0c84#42/6\",\"695\":\"v-b27b0c84#42/7\",\"696\":\"v-b27b0c84#43\",\"697\":\"v-b27b0c84#43/0\",\"698\":\"v-b27b0c84#43/1\",\"699\":\"v-b27b0c84#43/2\",\"700\":\"v-b27b0c84#43/3\",\"701\":\"v-b27b0c84@0\",\"702\":\"v-22933a83\",\"703\":\"v-22933a83#1\",\"704\":\"v-22933a83#1/0\",\"705\":\"v-22933a83#2\",\"706\":\"v-22933a83#2/0\",\"707\":\"v-22933a83#2/1\",\"708\":\"v-22933a83#2/2\",\"709\":\"v-22933a83#2/3\",\"710\":\"v-22933a83#2/4\",\"711\":\"v-22933a83#2/5\",\"712\":\"v-22933a83#2/6\",\"713\":\"v-22933a83#2/7\",\"714\":\"v-22933a83#2/8\",\"715\":\"v-22933a83#2/9\",\"716\":\"v-22933a83#2/10\",\"717\":\"v-22933a83#2/11\",\"718\":\"v-22933a83#2/12\",\"719\":\"v-22933a83#2/13\",\"720\":\"v-22933a83#2/14\",\"721\":\"v-22933a83#2/15\",\"722\":\"v-22933a83#2/16\",\"723\":\"v-22933a83#2/17\",\"724\":\"v-22933a83#3\",\"725\":\"v-22933a83#3/0\",\"726\":\"v-22933a83#3/1\",\"727\":\"v-22933a83#3/2\",\"728\":\"v-22933a83#3/3\",\"729\":\"v-22933a83#3/4\",\"730\":\"v-22933a83#3/5\",\"731\":\"v-22933a83#4\",\"732\":\"v-22933a83#5\",\"733\":\"v-22933a83#5/0\",\"734\":\"v-22933a83#5/1\",\"735\":\"v-22933a83#5/2\",\"736\":\"v-22933a83#5/3\",\"737\":\"v-22933a83#5/4\",\"738\":\"v-22933a83#5/5\",\"739\":\"v-22933a83#5/6\",\"740\":\"v-22933a83#6\",\"741\":\"v-22933a83#6/0\",\"742\":\"v-22933a83#6/1\",\"743\":\"v-22933a83#6/2\",\"744\":\"v-22933a83#6/3\",\"745\":\"v-22933a83#6/4\",\"746\":\"v-22933a83#6/5\",\"747\":\"v-22933a83#6/6\",\"748\":\"v-22933a83#6/7\",\"749\":\"v-22933a83#6/8\",\"750\":\"v-22933a83#6/9\",\"751\":\"v-22933a83#6/10\",\"752\":\"v-22933a83#6/11\",\"753\":\"v-22933a83#6/12\",\"754\":\"v-22933a83#7\",\"755\":\"v-22933a83#7/0\",\"756\":\"v-22933a83#8\",\"757\":\"v-22933a83#8/0\",\"758\":\"v-22933a83#8/1\",\"759\":\"v-22933a83#8/2\",\"760\":\"v-22933a83#8/3\",\"761\":\"v-22933a83#8/4\",\"762\":\"v-22933a83#8/5\",\"763\":\"v-22933a83#9\",\"764\":\"v-22933a83#9/0\",\"765\":\"v-22933a83#9/1\",\"766\":\"v-22933a83#9/2\",\"767\":\"v-22933a83#9/3\",\"768\":\"v-22933a83#9/4\",\"769\":\"v-22933a83#9/5\",\"770\":\"v-22933a83#9/6\",\"771\":\"v-22933a83#9/7\",\"772\":\"v-22933a83#9/8\",\"773\":\"v-22933a83#9/9\",\"774\":\"v-22933a83#9/10\",\"775\":\"v-22933a83#9/11\",\"776\":\"v-22933a83#9/12\",\"777\":\"v-22933a83#9/13\",\"778\":\"v-22933a83#9/14\",\"779\":\"v-22933a83#9/15\",\"780\":\"v-22933a83#9/16\",\"781\":\"v-22933a83#9/17\",\"782\":\"v-22933a83#9/18\",\"783\":\"v-22933a83#9/19\",\"784\":\"v-22933a83#9/20\",\"785\":\"v-22933a83#9/21\",\"786\":\"v-22933a83#9/22\",\"787\":\"v-22933a83#9/23\",\"788\":\"v-22933a83#9/24\",\"789\":\"v-22933a83#10\",\"790\":\"v-22933a83#10/0\",\"791\":\"v-22933a83#10/1\",\"792\":\"v-22933a83#10/2\",\"793\":\"v-22933a83#10/3\",\"794\":\"v-22933a83#10/4\",\"795\":\"v-22933a83#10/5\",\"796\":\"v-22933a83#10/6\",\"797\":\"v-22933a83#10/7\",\"798\":\"v-22933a83#10/8\",\"799\":\"v-22933a83#10/9\",\"800\":\"v-22933a83#10/10\",\"801\":\"v-22933a83#10/11\",\"802\":\"v-22933a83#10/12\",\"803\":\"v-22933a83#10/13\",\"804\":\"v-22933a83#10/14\",\"805\":\"v-22933a83#10/15\",\"806\":\"v-22933a83#11\",\"807\":\"v-22933a83#11/0\",\"808\":\"v-22933a83#11/1\",\"809\":\"v-22933a83#11/2\",\"810\":\"v-22933a83#11/3\",\"811\":\"v-22933a83#11/4\",\"812\":\"v-22933a83#11/5\",\"813\":\"v-22933a83#11/6\",\"814\":\"v-22933a83#11/7\",\"815\":\"v-22933a83#11/8\",\"816\":\"v-22933a83#11/9\",\"817\":\"v-22933a83#11/10\",\"818\":\"v-22933a83#11/11\",\"819\":\"v-22933a83#11/12\",\"820\":\"v-22933a83#11/13\",\"821\":\"v-22933a83#11/14\",\"822\":\"v-22933a83#11/15\",\"823\":\"v-22933a83#11/16\",\"824\":\"v-22933a83#11/17\",\"825\":\"v-22933a83#11/18\",\"826\":\"v-22933a83#11/19\",\"827\":\"v-22933a83#11/20\",\"828\":\"v-22933a83#11/21\",\"829\":\"v-22933a83#11/22\",\"830\":\"v-22933a83#11/23\",\"831\":\"v-22933a83#11/24\",\"832\":\"v-22933a83#11/25\",\"833\":\"v-22933a83#11/26\",\"834\":\"v-22933a83#11/27\",\"835\":\"v-22933a83#11/28\",\"836\":\"v-22933a83#11/29\",\"837\":\"v-22933a83#11/30\",\"838\":\"v-22933a83#11/31\",\"839\":\"v-22933a83#11/32\",\"840\":\"v-22933a83#11/33\",\"841\":\"v-22933a83#12\",\"842\":\"v-22933a83#12/0\",\"843\":\"v-22933a83#12/1\",\"844\":\"v-22933a83#12/2\",\"845\":\"v-22933a83#12/3\",\"846\":\"v-22933a83#12/4\",\"847\":\"v-22933a83#13\",\"848\":\"v-22933a83#13/0\",\"849\":\"v-22933a83#13/1\",\"850\":\"v-22933a83#13/2\",\"851\":\"v-22933a83#13/3\",\"852\":\"v-22933a83#13/4\",\"853\":\"v-22933a83#13/5\",\"854\":\"v-22933a83#13/6\",\"855\":\"v-22933a83#13/7\",\"856\":\"v-22933a83#14\",\"857\":\"v-22933a83#14/0\",\"858\":\"v-22933a83#14/1\",\"859\":\"v-22933a83#14/2\",\"860\":\"v-22933a83#15\",\"861\":\"v-22933a83#15/0\",\"862\":\"v-22933a83#15/1\",\"863\":\"v-22933a83#15/2\",\"864\":\"v-22933a83#15/3\",\"865\":\"v-22933a83#15/4\",\"866\":\"v-22933a83#16\",\"867\":\"v-22933a83#16/0\",\"868\":\"v-22933a83#16/1\",\"869\":\"v-22933a83#16/2\",\"870\":\"v-22933a83#16/3\",\"871\":\"v-22933a83#16/4\",\"872\":\"v-22933a83#16/5\",\"873\":\"v-22933a83#16/6\",\"874\":\"v-22933a83#16/7\",\"875\":\"v-22933a83#16/8\",\"876\":\"v-22933a83#16/9\",\"877\":\"v-22933a83#16/10\",\"878\":\"v-22933a83#16/11\",\"879\":\"v-22933a83#16/12\",\"880\":\"v-22933a83#17\",\"881\":\"v-22933a83#17/0\",\"882\":\"v-22933a83#18\",\"883\":\"v-22933a83#18/0\",\"884\":\"v-22933a83#19\",\"885\":\"v-22933a83#19/0\",\"886\":\"v-22933a83#19/1\",\"887\":\"v-22933a83#19/2\",\"888\":\"v-22933a83#19/3\",\"889\":\"v-22933a83#19/4\",\"890\":\"v-22933a83#19/5\",\"891\":\"v-22933a83#19/6\",\"892\":\"v-22933a83#19/7\",\"893\":\"v-22933a83#19/8\",\"894\":\"v-22933a83#19/9\",\"895\":\"v-22933a83#19/10\",\"896\":\"v-22933a83#19/11\",\"897\":\"v-22933a83#19/12\",\"898\":\"v-22933a83#19/13\",\"899\":\"v-22933a83#20\",\"900\":\"v-22933a83#20/0\",\"901\":\"v-22933a83#20/1\",\"902\":\"v-22933a83#20/2\",\"903\":\"v-22933a83#20/3\",\"904\":\"v-22933a83#20/4\",\"905\":\"v-22933a83#20/5\",\"906\":\"v-22933a83#20/6\",\"907\":\"v-22933a83#20/7\",\"908\":\"v-22933a83#20/8\",\"909\":\"v-22933a83#20/9\",\"910\":\"v-22933a83#20/10\",\"911\":\"v-22933a83#21\",\"912\":\"v-22933a83#21/0\",\"913\":\"v-22933a83#21/1\",\"914\":\"v-22933a83#21/2\",\"915\":\"v-22933a83#22\",\"916\":\"v-22933a83#22/0\",\"917\":\"v-22933a83#22/1\",\"918\":\"v-22933a83#22/2\",\"919\":\"v-22933a83#22/3\",\"920\":\"v-22933a83#22/4\",\"921\":\"v-22933a83#22/5\",\"922\":\"v-22933a83#23\",\"923\":\"v-22933a83#23/0\",\"924\":\"v-22933a83#23/1\",\"925\":\"v-22933a83#23/2\",\"926\":\"v-22933a83#23/3\",\"927\":\"v-22933a83#24\",\"928\":\"v-22933a83#24/0\",\"929\":\"v-22933a83#24/1\",\"930\":\"v-22933a83#24/2\",\"931\":\"v-22933a83#25\",\"932\":\"v-22933a83#25/0\",\"933\":\"v-22933a83#25/1\",\"934\":\"v-22933a83#25/2\",\"935\":\"v-22933a83#25/3\",\"936\":\"v-22933a83#25/4\",\"937\":\"v-22933a83#25/5\",\"938\":\"v-22933a83#25/6\",\"939\":\"v-22933a83#26\",\"940\":\"v-22933a83#26/0\",\"941\":\"v-22933a83#26/1\",\"942\":\"v-22933a83#26/2\",\"943\":\"v-22933a83#26/3\",\"944\":\"v-22933a83#26/4\",\"945\":\"v-22933a83#26/5\",\"946\":\"v-22933a83#27\",\"947\":\"v-22933a83#27/0\",\"948\":\"v-22933a83#27/1\",\"949\":\"v-22933a83#27/2\",\"950\":\"v-22933a83#27/3\",\"951\":\"v-22933a83#27/4\",\"952\":\"v-22933a83#27/5\",\"953\":\"v-22933a83#27/6\",\"954\":\"v-22933a83#27/7\",\"955\":\"v-22933a83#27/8\",\"956\":\"v-22933a83#28\",\"957\":\"v-22933a83#28/0\",\"958\":\"v-22933a83#28/1\",\"959\":\"v-22933a83#28/2\",\"960\":\"v-22933a83#28/3\",\"961\":\"v-22933a83#29\",\"962\":\"v-22933a83#29/0\",\"963\":\"v-22933a83#29/1\",\"964\":\"v-22933a83#30\",\"965\":\"v-22933a83#30/0\",\"966\":\"v-22933a83#30/1\",\"967\":\"v-22933a83#30/2\",\"968\":\"v-22933a83#30/3\",\"969\":\"v-22933a83#30/4\",\"970\":\"v-22933a83#31\",\"971\":\"v-22933a83#31/0\",\"972\":\"v-22933a83#31/1\",\"973\":\"v-22933a83#31/2\",\"974\":\"v-22933a83#31/3\",\"975\":\"v-22933a83#31/4\",\"976\":\"v-22933a83#31/5\",\"977\":\"v-22933a83#31/6\",\"978\":\"v-22933a83#32\",\"979\":\"v-22933a83#32/0\",\"980\":\"v-22933a83#32/1\",\"981\":\"v-22933a83#32/2\",\"982\":\"v-22933a83#33\",\"983\":\"v-22933a83#33/0\",\"984\":\"v-22933a83#33/1\",\"985\":\"v-22933a83#33/2\",\"986\":\"v-22933a83#33/3\",\"987\":\"v-22933a83#33/4\",\"988\":\"v-22933a83#33/5\",\"989\":\"v-22933a83#33/6\",\"990\":\"v-22933a83#33/7\",\"991\":\"v-22933a83#33/8\",\"992\":\"v-22933a83#33/9\",\"993\":\"v-22933a83#33/10\",\"994\":\"v-22933a83#33/11\",\"995\":\"v-22933a83#33/12\",\"996\":\"v-22933a83#33/13\",\"997\":\"v-22933a83#33/14\",\"998\":\"v-22933a83#33/15\",\"999\":\"v-22933a83#33/16\",\"1000\":\"v-22933a83#33/17\",\"1001\":\"v-22933a83#33/18\",\"1002\":\"v-22933a83#33/19\",\"1003\":\"v-22933a83#33/20\",\"1004\":\"v-22933a83#34\",\"1005\":\"v-22933a83#35\",\"1006\":\"v-22933a83#35/0\",\"1007\":\"v-22933a83#35/1\",\"1008\":\"v-22933a83#35/2\",\"1009\":\"v-22933a83#36\",\"1010\":\"v-22933a83#36/0\",\"1011\":\"v-22933a83#36/1\",\"1012\":\"v-22933a83#36/2\",\"1013\":\"v-22933a83#36/3\",\"1014\":\"v-22933a83#36/4\",\"1015\":\"v-22933a83#36/5\",\"1016\":\"v-22933a83#36/6\",\"1017\":\"v-22933a83#36/7\",\"1018\":\"v-22933a83#36/8\",\"1019\":\"v-22933a83#37\",\"1020\":\"v-22933a83#37/0\",\"1021\":\"v-22933a83#37/1\",\"1022\":\"v-22933a83#37/2\",\"1023\":\"v-22933a83#37/3\",\"1024\":\"v-22933a83#37/4\",\"1025\":\"v-22933a83#38\",\"1026\":\"v-22933a83#38/0\",\"1027\":\"v-22933a83#38/1\",\"1028\":\"v-22933a83#38/2\",\"1029\":\"v-22933a83#38/3\",\"1030\":\"v-22933a83#38/4\",\"1031\":\"v-22933a83#38/5\",\"1032\":\"v-22933a83#38/6\",\"1033\":\"v-22933a83#38/7\",\"1034\":\"v-22933a83#38/8\",\"1035\":\"v-22933a83#38/9\",\"1036\":\"v-22933a83#38/10\",\"1037\":\"v-22933a83#38/11\",\"1038\":\"v-22933a83#38/12\",\"1039\":\"v-22933a83#38/13\",\"1040\":\"v-22933a83#38/14\",\"1041\":\"v-22933a83#38/15\",\"1042\":\"v-22933a83#38/16\",\"1043\":\"v-22933a83#38/17\",\"1044\":\"v-22933a83#38/18\",\"1045\":\"v-22933a83#38/19\",\"1046\":\"v-22933a83#38/20\",\"1047\":\"v-22933a83#38/21\",\"1048\":\"v-22933a83#38/22\",\"1049\":\"v-22933a83#38/23\",\"1050\":\"v-22933a83#38/24\",\"1051\":\"v-22933a83#38/25\",\"1052\":\"v-22933a83#38/26\",\"1053\":\"v-22933a83#38/27\",\"1054\":\"v-22933a83#38/28\",\"1055\":\"v-22933a83#38/29\",\"1056\":\"v-22933a83#38/30\",\"1057\":\"v-22933a83#38/31\",\"1058\":\"v-22933a83#38/32\",\"1059\":\"v-22933a83#38/33\",\"1060\":\"v-22933a83#38/34\",\"1061\":\"v-22933a83@0\",\"1062\":\"v-64a6e616\",\"1063\":\"v-64a6e616#1\",\"1064\":\"v-64a6e616#1/0\",\"1065\":\"v-64a6e616#2\",\"1066\":\"v-64a6e616#2/0\",\"1067\":\"v-64a6e616#2/1\",\"1068\":\"v-64a6e616#2/2\",\"1069\":\"v-64a6e616#2/3\",\"1070\":\"v-64a6e616#2/4\",\"1071\":\"v-64a6e616#2/5\",\"1072\":\"v-64a6e616#2/6\",\"1073\":\"v-64a6e616#2/7\",\"1074\":\"v-64a6e616#2/8\",\"1075\":\"v-64a6e616#3\",\"1076\":\"v-64a6e616#3/0\",\"1077\":\"v-64a6e616#3/1\",\"1078\":\"v-64a6e616#3/2\",\"1079\":\"v-64a6e616#3/3\",\"1080\":\"v-64a6e616#3/4\",\"1081\":\"v-64a6e616#3/5\",\"1082\":\"v-64a6e616#3/6\",\"1083\":\"v-64a6e616#3/7\",\"1084\":\"v-64a6e616#3/8\",\"1085\":\"v-64a6e616#3/9\",\"1086\":\"v-64a6e616#3/10\",\"1087\":\"v-64a6e616#3/11\",\"1088\":\"v-64a6e616#3/12\",\"1089\":\"v-64a6e616#3/13\",\"1090\":\"v-64a6e616#3/14\",\"1091\":\"v-64a6e616#3/15\",\"1092\":\"v-64a6e616#3/16\",\"1093\":\"v-64a6e616#3/17\",\"1094\":\"v-64a6e616#3/18\",\"1095\":\"v-64a6e616#3/19\",\"1096\":\"v-64a6e616#3/20\",\"1097\":\"v-64a6e616#3/21\",\"1098\":\"v-64a6e616#3/22\",\"1099\":\"v-64a6e616#3/23\",\"1100\":\"v-64a6e616#3/24\",\"1101\":\"v-64a6e616#3/25\",\"1102\":\"v-64a6e616#3/26\",\"1103\":\"v-64a6e616#3/27\",\"1104\":\"v-64a6e616#3/28\",\"1105\":\"v-64a6e616#3/29\",\"1106\":\"v-64a6e616#3/30\",\"1107\":\"v-64a6e616#3/31\",\"1108\":\"v-64a6e616#3/32\",\"1109\":\"v-64a6e616#3/33\",\"1110\":\"v-64a6e616#3/34\",\"1111\":\"v-64a6e616#3/35\",\"1112\":\"v-64a6e616#3/36\",\"1113\":\"v-64a6e616#3/37\",\"1114\":\"v-64a6e616#3/38\",\"1115\":\"v-64a6e616#3/39\",\"1116\":\"v-64a6e616#3/40\",\"1117\":\"v-64a6e616#3/41\",\"1118\":\"v-64a6e616#3/42\",\"1119\":\"v-64a6e616#3/43\",\"1120\":\"v-64a6e616#3/44\",\"1121\":\"v-64a6e616#3/45\",\"1122\":\"v-64a6e616#3/46\",\"1123\":\"v-64a6e616#3/47\",\"1124\":\"v-64a6e616#3/48\",\"1125\":\"v-64a6e616#3/49\",\"1126\":\"v-64a6e616#3/50\",\"1127\":\"v-64a6e616#3/51\",\"1128\":\"v-64a6e616#3/52\",\"1129\":\"v-64a6e616#3/53\",\"1130\":\"v-64a6e616#3/54\",\"1131\":\"v-64a6e616#3/55\",\"1132\":\"v-64a6e616#3/56\",\"1133\":\"v-64a6e616#3/57\",\"1134\":\"v-64a6e616#3/58\",\"1135\":\"v-64a6e616#3/59\",\"1136\":\"v-64a6e616#3/60\",\"1137\":\"v-64a6e616#3/61\",\"1138\":\"v-64a6e616#3/62\",\"1139\":\"v-64a6e616#3/63\",\"1140\":\"v-64a6e616#3/64\",\"1141\":\"v-64a6e616#3/65\",\"1142\":\"v-64a6e616#3/66\",\"1143\":\"v-64a6e616#3/67\",\"1144\":\"v-64a6e616#3/68\",\"1145\":\"v-64a6e616#3/69\",\"1146\":\"v-64a6e616#3/70\",\"1147\":\"v-64a6e616#3/71\",\"1148\":\"v-64a6e616#3/72\",\"1149\":\"v-64a6e616#4\",\"1150\":\"v-64a6e616#4/0\",\"1151\":\"v-64a6e616#4/1\",\"1152\":\"v-64a6e616#4/2\",\"1153\":\"v-64a6e616#4/3\",\"1154\":\"v-64a6e616#4/4\",\"1155\":\"v-64a6e616#4/5\",\"1156\":\"v-64a6e616#4/6\",\"1157\":\"v-64a6e616#4/7\",\"1158\":\"v-64a6e616#4/8\",\"1159\":\"v-64a6e616#4/9\",\"1160\":\"v-64a6e616#4/10\",\"1161\":\"v-64a6e616#4/11\",\"1162\":\"v-64a6e616#4/12\",\"1163\":\"v-64a6e616#4/13\",\"1164\":\"v-64a6e616#4/14\",\"1165\":\"v-64a6e616#4/15\",\"1166\":\"v-64a6e616#4/16\",\"1167\":\"v-64a6e616#4/17\",\"1168\":\"v-64a6e616#5\",\"1169\":\"v-64a6e616#5/0\",\"1170\":\"v-64a6e616#5/1\",\"1171\":\"v-64a6e616#5/2\",\"1172\":\"v-64a6e616#5/3\",\"1173\":\"v-64a6e616#5/4\",\"1174\":\"v-64a6e616#5/5\",\"1175\":\"v-64a6e616#5/6\",\"1176\":\"v-64a6e616#5/7\",\"1177\":\"v-64a6e616#5/8\",\"1178\":\"v-64a6e616#6\",\"1179\":\"v-64a6e616#7\",\"1180\":\"v-64a6e616#7/0\",\"1181\":\"v-64a6e616#7/1\",\"1182\":\"v-64a6e616#7/2\",\"1183\":\"v-64a6e616#7/3\",\"1184\":\"v-64a6e616#7/4\",\"1185\":\"v-64a6e616#8\",\"1186\":\"v-64a6e616#8/0\",\"1187\":\"v-64a6e616#8/1\",\"1188\":\"v-64a6e616#8/2\",\"1189\":\"v-64a6e616#8/3\",\"1190\":\"v-64a6e616#8/4\",\"1191\":\"v-64a6e616#8/5\",\"1192\":\"v-64a6e616#8/6\",\"1193\":\"v-64a6e616#8/7\",\"1194\":\"v-64a6e616#8/8\",\"1195\":\"v-64a6e616#8/9\",\"1196\":\"v-64a6e616#8/10\",\"1197\":\"v-64a6e616#8/11\",\"1198\":\"v-64a6e616#8/12\",\"1199\":\"v-64a6e616#9\",\"1200\":\"v-64a6e616#9/0\",\"1201\":\"v-64a6e616#9/1\",\"1202\":\"v-64a6e616#9/2\",\"1203\":\"v-64a6e616#9/3\",\"1204\":\"v-64a6e616#9/4\",\"1205\":\"v-64a6e616#10\",\"1206\":\"v-64a6e616#10/0\",\"1207\":\"v-64a6e616#10/1\",\"1208\":\"v-64a6e616#10/2\",\"1209\":\"v-64a6e616#11\",\"1210\":\"v-64a6e616#11/0\",\"1211\":\"v-64a6e616#11/1\",\"1212\":\"v-64a6e616#11/2\",\"1213\":\"v-64a6e616#11/3\",\"1214\":\"v-64a6e616#11/4\",\"1215\":\"v-64a6e616#11/5\",\"1216\":\"v-64a6e616#11/6\",\"1217\":\"v-64a6e616#11/7\",\"1218\":\"v-64a6e616#11/8\",\"1219\":\"v-64a6e616#11/9\",\"1220\":\"v-64a6e616#11/10\",\"1221\":\"v-64a6e616#11/11\",\"1222\":\"v-64a6e616#11/12\",\"1223\":\"v-64a6e616#11/13\",\"1224\":\"v-64a6e616#11/14\",\"1225\":\"v-64a6e616#11/15\",\"1226\":\"v-64a6e616#11/16\",\"1227\":\"v-64a6e616#11/17\",\"1228\":\"v-64a6e616#11/18\",\"1229\":\"v-64a6e616#11/19\",\"1230\":\"v-64a6e616#11/20\",\"1231\":\"v-64a6e616#11/21\",\"1232\":\"v-64a6e616#11/22\",\"1233\":\"v-64a6e616#11/23\",\"1234\":\"v-64a6e616#11/24\",\"1235\":\"v-64a6e616#11/25\",\"1236\":\"v-64a6e616#11/26\",\"1237\":\"v-64a6e616#11/27\",\"1238\":\"v-64a6e616#11/28\",\"1239\":\"v-64a6e616#11/29\",\"1240\":\"v-64a6e616#11/30\",\"1241\":\"v-64a6e616#11/31\",\"1242\":\"v-64a6e616#11/32\",\"1243\":\"v-64a6e616#11/33\",\"1244\":\"v-64a6e616@0\",\"1245\":\"v-4823d946\",\"1246\":\"v-4823d946#1\",\"1247\":\"v-4823d946#1/0\",\"1248\":\"v-4823d946#1/1\",\"1249\":\"v-4823d946#1/2\",\"1250\":\"v-4823d946#1/3\",\"1251\":\"v-4823d946#1/4\",\"1252\":\"v-4823d946#1/5\",\"1253\":\"v-4823d946#1/6\",\"1254\":\"v-4823d946#1/7\",\"1255\":\"v-4823d946#1/8\",\"1256\":\"v-4823d946#1/9\",\"1257\":\"v-4823d946#1/10\",\"1258\":\"v-4823d946#1/11\",\"1259\":\"v-4823d946#1/12\",\"1260\":\"v-4823d946#1/13\",\"1261\":\"v-4823d946#1/14\",\"1262\":\"v-4823d946#1/15\",\"1263\":\"v-4823d946#1/16\",\"1264\":\"v-4823d946#1/17\",\"1265\":\"v-4823d946#1/18\",\"1266\":\"v-4823d946#1/19\",\"1267\":\"v-4823d946#1/20\",\"1268\":\"v-4823d946#1/21\",\"1269\":\"v-4823d946#1/22\",\"1270\":\"v-4823d946#1/23\",\"1271\":\"v-4823d946#1/24\",\"1272\":\"v-4823d946#1/25\",\"1273\":\"v-4823d946#1/26\",\"1274\":\"v-4823d946#1/27\",\"1275\":\"v-4823d946#1/28\",\"1276\":\"v-4823d946#1/29\",\"1277\":\"v-4823d946#1/30\",\"1278\":\"v-4823d946#1/31\",\"1279\":\"v-4823d946#1/32\",\"1280\":\"v-4823d946#1/33\",\"1281\":\"v-4823d946#1/34\",\"1282\":\"v-4823d946#1/35\",\"1283\":\"v-4823d946#1/36\",\"1284\":\"v-4823d946#2\",\"1285\":\"v-4823d946#2/0\",\"1286\":\"v-4823d946#2/1\",\"1287\":\"v-4823d946#2/2\",\"1288\":\"v-4823d946#2/3\",\"1289\":\"v-4823d946#2/4\",\"1290\":\"v-4823d946#2/5\",\"1291\":\"v-4823d946#2/6\",\"1292\":\"v-4823d946#2/7\",\"1293\":\"v-4823d946#3\",\"1294\":\"v-4823d946#3/0\",\"1295\":\"v-4823d946#3/1\",\"1296\":\"v-4823d946#3/2\",\"1297\":\"v-4823d946#3/3\",\"1298\":\"v-4823d946#3/4\",\"1299\":\"v-4823d946#3/5\",\"1300\":\"v-4823d946#4\",\"1301\":\"v-4823d946#4/0\",\"1302\":\"v-4823d946#4/1\",\"1303\":\"v-4823d946#4/2\",\"1304\":\"v-4823d946#4/3\",\"1305\":\"v-4823d946#4/4\",\"1306\":\"v-4823d946#5\",\"1307\":\"v-4823d946#5/0\",\"1308\":\"v-4823d946#5/1\",\"1309\":\"v-4823d946#5/2\",\"1310\":\"v-4823d946#5/3\",\"1311\":\"v-4823d946#5/4\",\"1312\":\"v-4823d946#5/5\",\"1313\":\"v-4823d946#5/6\",\"1314\":\"v-4823d946#5/7\",\"1315\":\"v-4823d946#5/8\",\"1316\":\"v-4823d946#5/9\",\"1317\":\"v-4823d946#5/10\",\"1318\":\"v-4823d946#5/11\",\"1319\":\"v-4823d946#6\",\"1320\":\"v-4823d946#6/0\",\"1321\":\"v-4823d946#6/1\",\"1322\":\"v-4823d946#7\",\"1323\":\"v-4823d946#7/0\",\"1324\":\"v-4823d946#7/1\",\"1325\":\"v-4823d946#7/2\",\"1326\":\"v-4823d946#7/3\",\"1327\":\"v-4823d946#7/4\",\"1328\":\"v-4823d946#7/5\",\"1329\":\"v-4823d946#7/6\",\"1330\":\"v-4823d946#7/7\",\"1331\":\"v-4823d946#7/8\",\"1332\":\"v-4823d946#7/9\",\"1333\":\"v-4823d946#7/10\",\"1334\":\"v-4823d946#7/11\",\"1335\":\"v-4823d946#8\",\"1336\":\"v-4823d946#8/0\",\"1337\":\"v-4823d946#8/1\",\"1338\":\"v-4823d946#8/2\",\"1339\":\"v-4823d946#8/3\",\"1340\":\"v-4823d946#8/4\",\"1341\":\"v-4823d946#8/5\",\"1342\":\"v-4823d946#8/6\",\"1343\":\"v-4823d946#8/7\",\"1344\":\"v-4823d946#8/8\",\"1345\":\"v-4823d946#9\",\"1346\":\"v-4823d946#9/0\",\"1347\":\"v-4823d946#9/1\",\"1348\":\"v-4823d946#9/2\",\"1349\":\"v-4823d946#9/3\",\"1350\":\"v-4823d946#9/4\",\"1351\":\"v-4823d946#9/5\",\"1352\":\"v-4823d946#9/6\",\"1353\":\"v-4823d946#9/7\",\"1354\":\"v-4823d946#9/8\",\"1355\":\"v-4823d946#9/9\",\"1356\":\"v-4823d946#10\",\"1357\":\"v-4823d946#10/0\",\"1358\":\"v-4823d946#10/1\",\"1359\":\"v-4823d946#11\",\"1360\":\"v-4823d946#11/0\",\"1361\":\"v-4823d946#11/1\",\"1362\":\"v-4823d946#11/2\",\"1363\":\"v-4823d946#12\",\"1364\":\"v-4823d946#12/0\",\"1365\":\"v-4823d946#12/1\",\"1366\":\"v-4823d946#12/2\",\"1367\":\"v-4823d946#12/3\",\"1368\":\"v-4823d946#12/4\",\"1369\":\"v-4823d946#12/5\",\"1370\":\"v-4823d946#12/6\",\"1371\":\"v-4823d946#12/7\",\"1372\":\"v-4823d946#12/8\",\"1373\":\"v-4823d946#12/9\",\"1374\":\"v-4823d946#12/10\",\"1375\":\"v-4823d946#13\",\"1376\":\"v-4823d946#13/0\",\"1377\":\"v-4823d946#13/1\",\"1378\":\"v-4823d946#13/2\",\"1379\":\"v-4823d946#13/3\",\"1380\":\"v-4823d946#13/4\",\"1381\":\"v-4823d946#13/5\",\"1382\":\"v-4823d946#13/6\",\"1383\":\"v-4823d946#13/7\",\"1384\":\"v-4823d946#13/8\",\"1385\":\"v-4823d946#13/9\",\"1386\":\"v-4823d946#13/10\",\"1387\":\"v-4823d946#13/11\",\"1388\":\"v-4823d946#13/12\",\"1389\":\"v-4823d946#13/13\",\"1390\":\"v-4823d946#13/14\",\"1391\":\"v-4823d946#13/15\",\"1392\":\"v-4823d946#13/16\",\"1393\":\"v-4823d946#13/17\",\"1394\":\"v-4823d946#13/18\",\"1395\":\"v-4823d946#13/19\",\"1396\":\"v-4823d946#13/20\",\"1397\":\"v-4823d946#13/21\",\"1398\":\"v-4823d946#13/22\",\"1399\":\"v-4823d946#13/23\",\"1400\":\"v-4823d946#13/24\",\"1401\":\"v-4823d946#13/25\",\"1402\":\"v-4823d946#14\",\"1403\":\"v-4823d946#14/0\",\"1404\":\"v-4823d946#14/1\",\"1405\":\"v-4823d946#14/2\",\"1406\":\"v-4823d946#14/3\",\"1407\":\"v-4823d946#14/4\",\"1408\":\"v-4823d946#14/5\",\"1409\":\"v-4823d946#15\",\"1410\":\"v-4823d946#15/0\",\"1411\":\"v-4823d946#15/1\",\"1412\":\"v-4823d946#15/2\",\"1413\":\"v-4823d946#15/3\",\"1414\":\"v-4823d946#16\",\"1415\":\"v-4823d946#16/0\",\"1416\":\"v-4823d946#16/1\",\"1417\":\"v-4823d946#16/2\",\"1418\":\"v-4823d946#16/3\",\"1419\":\"v-4823d946#17\",\"1420\":\"v-4823d946#18\",\"1421\":\"v-4823d946#18/0\",\"1422\":\"v-4823d946#19\",\"1423\":\"v-4823d946#19/0\",\"1424\":\"v-4823d946#20\",\"1425\":\"v-4823d946#20/0\",\"1426\":\"v-4823d946#20/1\",\"1427\":\"v-4823d946#20/2\",\"1428\":\"v-4823d946#20/3\",\"1429\":\"v-4823d946#20/4\",\"1430\":\"v-4823d946#20/5\",\"1431\":\"v-4823d946#20/6\",\"1432\":\"v-4823d946#20/7\",\"1433\":\"v-4823d946#20/8\",\"1434\":\"v-4823d946#20/9\",\"1435\":\"v-4823d946#20/10\",\"1436\":\"v-4823d946#20/11\",\"1437\":\"v-4823d946#20/12\",\"1438\":\"v-4823d946#20/13\",\"1439\":\"v-4823d946#20/14\",\"1440\":\"v-4823d946#20/15\",\"1441\":\"v-4823d946#20/16\",\"1442\":\"v-4823d946#20/17\",\"1443\":\"v-4823d946#20/18\",\"1444\":\"v-4823d946#21\",\"1445\":\"v-4823d946#21/0\",\"1446\":\"v-4823d946#21/1\",\"1447\":\"v-4823d946#21/2\",\"1448\":\"v-4823d946#21/3\",\"1449\":\"v-4823d946#21/4\",\"1450\":\"v-4823d946#21/5\",\"1451\":\"v-4823d946#21/6\",\"1452\":\"v-4823d946@0\",\"1453\":\"v-7dc75112\",\"1454\":\"v-7dc75112#0/0\",\"1455\":\"v-7dc75112#1\",\"1456\":\"v-7dc75112#1/0\",\"1457\":\"v-7dc75112#1/1\",\"1458\":\"v-7dc75112#1/2\",\"1459\":\"v-7dc75112#1/3\",\"1460\":\"v-7dc75112#1/4\",\"1461\":\"v-7dc75112#1/5\",\"1462\":\"v-7dc75112#1/6\",\"1463\":\"v-7dc75112#1/7\",\"1464\":\"v-7dc75112#1/8\",\"1465\":\"v-7dc75112#1/9\",\"1466\":\"v-7dc75112#1/10\",\"1467\":\"v-7dc75112#1/11\",\"1468\":\"v-7dc75112#1/12\",\"1469\":\"v-7dc75112#1/13\",\"1470\":\"v-7dc75112#1/14\",\"1471\":\"v-7dc75112#1/15\",\"1472\":\"v-7dc75112#1/16\",\"1473\":\"v-7dc75112#1/17\",\"1474\":\"v-7dc75112#1/18\",\"1475\":\"v-7dc75112#1/19\",\"1476\":\"v-7dc75112#1/20\",\"1477\":\"v-7dc75112#1/21\",\"1478\":\"v-7dc75112#1/22\",\"1479\":\"v-7dc75112#1/23\",\"1480\":\"v-7dc75112#1/24\",\"1481\":\"v-7dc75112#1/25\",\"1482\":\"v-7dc75112#1/26\",\"1483\":\"v-7dc75112#1/27\",\"1484\":\"v-7dc75112#1/28\",\"1485\":\"v-7dc75112#1/29\",\"1486\":\"v-7dc75112#1/30\",\"1487\":\"v-7dc75112#1/31\",\"1488\":\"v-7dc75112#2\",\"1489\":\"v-7dc75112#2/0\",\"1490\":\"v-7dc75112#2/1\",\"1491\":\"v-7dc75112#2/2\",\"1492\":\"v-7dc75112#2/3\",\"1493\":\"v-7dc75112#2/4\",\"1494\":\"v-7dc75112#3\",\"1495\":\"v-7dc75112#3/0\",\"1496\":\"v-7dc75112#3/1\",\"1497\":\"v-7dc75112#3/2\",\"1498\":\"v-7dc75112#3/3\",\"1499\":\"v-7dc75112#3/4\",\"1500\":\"v-7dc75112#3/5\",\"1501\":\"v-7dc75112#3/6\",\"1502\":\"v-7dc75112#3/7\",\"1503\":\"v-7dc75112#3/8\",\"1504\":\"v-7dc75112#3/9\",\"1505\":\"v-7dc75112#3/10\",\"1506\":\"v-7dc75112#3/11\",\"1507\":\"v-7dc75112#3/12\",\"1508\":\"v-7dc75112#3/13\",\"1509\":\"v-7dc75112#3/14\",\"1510\":\"v-7dc75112#3/15\",\"1511\":\"v-7dc75112#3/16\",\"1512\":\"v-7dc75112#3/17\",\"1513\":\"v-7dc75112#3/18\",\"1514\":\"v-7dc75112#3/19\",\"1515\":\"v-7dc75112#3/20\",\"1516\":\"v-7dc75112#3/21\",\"1517\":\"v-7dc75112#3/22\",\"1518\":\"v-7dc75112#3/23\",\"1519\":\"v-7dc75112#3/24\",\"1520\":\"v-7dc75112#3/25\",\"1521\":\"v-7dc75112#3/26\",\"1522\":\"v-7dc75112#4\",\"1523\":\"v-7dc75112#4/0\",\"1524\":\"v-7dc75112#5\",\"1525\":\"v-7dc75112#5/0\",\"1526\":\"v-7dc75112#5/1\",\"1527\":\"v-7dc75112#5/2\",\"1528\":\"v-7dc75112#5/3\",\"1529\":\"v-7dc75112#5/4\",\"1530\":\"v-7dc75112#5/5\",\"1531\":\"v-7dc75112#5/6\",\"1532\":\"v-7dc75112#5/7\",\"1533\":\"v-7dc75112#5/8\",\"1534\":\"v-7dc75112#5/9\",\"1535\":\"v-7dc75112#6\",\"1536\":\"v-7dc75112#6/0\",\"1537\":\"v-7dc75112#6/1\",\"1538\":\"v-7dc75112#6/2\",\"1539\":\"v-7dc75112#6/3\",\"1540\":\"v-7dc75112#6/4\",\"1541\":\"v-7dc75112#6/5\",\"1542\":\"v-7dc75112#6/6\",\"1543\":\"v-7dc75112#6/7\",\"1544\":\"v-7dc75112#6/8\",\"1545\":\"v-7dc75112#6/9\",\"1546\":\"v-7dc75112#6/10\",\"1547\":\"v-7dc75112#6/11\",\"1548\":\"v-7dc75112#6/12\",\"1549\":\"v-7dc75112#6/13\",\"1550\":\"v-7dc75112#6/14\",\"1551\":\"v-7dc75112#6/15\",\"1552\":\"v-7dc75112#6/16\",\"1553\":\"v-7dc75112#6/17\",\"1554\":\"v-7dc75112#6/18\",\"1555\":\"v-7dc75112#6/19\",\"1556\":\"v-7dc75112#6/20\",\"1557\":\"v-7dc75112#7\",\"1558\":\"v-7dc75112#7/0\",\"1559\":\"v-7dc75112#7/1\",\"1560\":\"v-7dc75112#7/2\",\"1561\":\"v-7dc75112#7/3\",\"1562\":\"v-7dc75112#7/4\",\"1563\":\"v-7dc75112#7/5\",\"1564\":\"v-7dc75112#7/6\",\"1565\":\"v-7dc75112#7/7\",\"1566\":\"v-7dc75112#7/8\",\"1567\":\"v-7dc75112#7/9\",\"1568\":\"v-7dc75112#7/10\",\"1569\":\"v-7dc75112#7/11\",\"1570\":\"v-7dc75112#7/12\",\"1571\":\"v-7dc75112#7/13\",\"1572\":\"v-7dc75112#7/14\",\"1573\":\"v-7dc75112#8\",\"1574\":\"v-7dc75112#8/0\",\"1575\":\"v-7dc75112#8/1\",\"1576\":\"v-7dc75112#8/2\",\"1577\":\"v-7dc75112#8/3\",\"1578\":\"v-7dc75112#8/4\",\"1579\":\"v-7dc75112#8/5\",\"1580\":\"v-7dc75112#8/6\",\"1581\":\"v-7dc75112#8/7\",\"1582\":\"v-7dc75112@0\",\"1583\":\"v-b4cc1da6\",\"1584\":\"v-b4cc1da6#1\",\"1585\":\"v-b4cc1da6#1/0\",\"1586\":\"v-b4cc1da6#1/1\",\"1587\":\"v-b4cc1da6#1/2\",\"1588\":\"v-b4cc1da6#1/3\",\"1589\":\"v-b4cc1da6#1/4\",\"1590\":\"v-b4cc1da6#1/5\",\"1591\":\"v-b4cc1da6#1/6\",\"1592\":\"v-b4cc1da6#1/7\",\"1593\":\"v-b4cc1da6#1/8\",\"1594\":\"v-b4cc1da6#1/9\",\"1595\":\"v-b4cc1da6#1/10\",\"1596\":\"v-b4cc1da6#1/11\",\"1597\":\"v-b4cc1da6#1/12\",\"1598\":\"v-b4cc1da6#1/13\",\"1599\":\"v-b4cc1da6#2\",\"1600\":\"v-b4cc1da6#2/0\",\"1601\":\"v-b4cc1da6#2/1\",\"1602\":\"v-b4cc1da6#2/2\",\"1603\":\"v-b4cc1da6#2/3\",\"1604\":\"v-b4cc1da6#2/4\",\"1605\":\"v-b4cc1da6#2/5\",\"1606\":\"v-b4cc1da6#2/6\",\"1607\":\"v-b4cc1da6#2/7\",\"1608\":\"v-b4cc1da6#2/8\",\"1609\":\"v-b4cc1da6#2/9\",\"1610\":\"v-b4cc1da6#2/10\",\"1611\":\"v-b4cc1da6#2/11\",\"1612\":\"v-b4cc1da6#2/12\",\"1613\":\"v-b4cc1da6#2/13\",\"1614\":\"v-b4cc1da6#2/14\",\"1615\":\"v-b4cc1da6#2/15\",\"1616\":\"v-b4cc1da6#2/16\",\"1617\":\"v-b4cc1da6#2/17\",\"1618\":\"v-b4cc1da6#2/18\",\"1619\":\"v-b4cc1da6#2/19\",\"1620\":\"v-b4cc1da6#2/20\",\"1621\":\"v-b4cc1da6#3\",\"1622\":\"v-b4cc1da6#3/0\",\"1623\":\"v-b4cc1da6#3/1\",\"1624\":\"v-b4cc1da6#3/2\",\"1625\":\"v-b4cc1da6#3/3\",\"1626\":\"v-b4cc1da6@0\",\"1627\":\"v-5d0aa364\",\"1628\":\"v-5d0aa364#1\",\"1629\":\"v-5d0aa364#1/0\",\"1630\":\"v-5d0aa364#1/1\",\"1631\":\"v-5d0aa364#1/2\",\"1632\":\"v-5d0aa364#1/3\",\"1633\":\"v-5d0aa364#1/4\",\"1634\":\"v-5d0aa364#1/5\",\"1635\":\"v-5d0aa364#1/6\",\"1636\":\"v-5d0aa364#1/7\",\"1637\":\"v-5d0aa364#1/8\",\"1638\":\"v-5d0aa364#1/9\",\"1639\":\"v-5d0aa364#1/10\",\"1640\":\"v-5d0aa364#1/11\",\"1641\":\"v-5d0aa364#1/12\",\"1642\":\"v-5d0aa364#1/13\",\"1643\":\"v-5d0aa364#1/14\",\"1644\":\"v-5d0aa364#1/15\",\"1645\":\"v-5d0aa364#1/16\",\"1646\":\"v-5d0aa364#1/17\",\"1647\":\"v-5d0aa364#1/18\",\"1648\":\"v-5d0aa364#2\",\"1649\":\"v-5d0aa364#2/0\",\"1650\":\"v-5d0aa364#2/1\",\"1651\":\"v-5d0aa364#2/2\",\"1652\":\"v-5d0aa364#2/3\",\"1653\":\"v-5d0aa364#2/4\",\"1654\":\"v-5d0aa364#2/5\",\"1655\":\"v-5d0aa364#2/6\",\"1656\":\"v-5d0aa364#2/7\",\"1657\":\"v-5d0aa364#2/8\",\"1658\":\"v-5d0aa364#2/9\",\"1659\":\"v-5d0aa364#2/10\",\"1660\":\"v-5d0aa364#2/11\",\"1661\":\"v-5d0aa364#2/12\",\"1662\":\"v-5d0aa364#2/13\",\"1663\":\"v-5d0aa364#2/14\",\"1664\":\"v-5d0aa364#2/15\",\"1665\":\"v-5d0aa364#2/16\",\"1666\":\"v-5d0aa364#2/17\",\"1667\":\"v-5d0aa364#2/18\",\"1668\":\"v-5d0aa364#2/19\",\"1669\":\"v-5d0aa364#2/20\",\"1670\":\"v-5d0aa364#2/21\",\"1671\":\"v-5d0aa364#2/22\",\"1672\":\"v-5d0aa364#2/23\",\"1673\":\"v-5d0aa364#2/24\",\"1674\":\"v-5d0aa364#2/25\",\"1675\":\"v-5d0aa364#2/26\",\"1676\":\"v-5d0aa364#2/27\",\"1677\":\"v-5d0aa364#2/28\",\"1678\":\"v-5d0aa364#2/29\",\"1679\":\"v-5d0aa364#2/30\",\"1680\":\"v-5d0aa364#2/31\",\"1681\":\"v-5d0aa364#2/32\",\"1682\":\"v-5d0aa364#3\",\"1683\":\"v-5d0aa364#3/0\",\"1684\":\"v-5d0aa364#3/1\",\"1685\":\"v-5d0aa364#3/2\",\"1686\":\"v-5d0aa364#3/3\",\"1687\":\"v-5d0aa364#3/4\",\"1688\":\"v-5d0aa364#3/5\",\"1689\":\"v-5d0aa364#3/6\",\"1690\":\"v-5d0aa364#3/7\",\"1691\":\"v-5d0aa364#3/8\",\"1692\":\"v-5d0aa364#3/9\",\"1693\":\"v-5d0aa364#3/10\",\"1694\":\"v-5d0aa364#3/11\",\"1695\":\"v-5d0aa364#3/12\",\"1696\":\"v-5d0aa364#3/13\",\"1697\":\"v-5d0aa364#3/14\",\"1698\":\"v-5d0aa364#3/15\",\"1699\":\"v-5d0aa364#3/16\",\"1700\":\"v-5d0aa364#3/17\",\"1701\":\"v-5d0aa364#3/18\",\"1702\":\"v-5d0aa364#3/19\",\"1703\":\"v-5d0aa364#3/20\",\"1704\":\"v-5d0aa364#3/21\",\"1705\":\"v-5d0aa364#3/22\",\"1706\":\"v-5d0aa364#3/23\",\"1707\":\"v-5d0aa364#3/24\",\"1708\":\"v-5d0aa364#3/25\",\"1709\":\"v-5d0aa364#3/26\",\"1710\":\"v-5d0aa364#4\",\"1711\":\"v-5d0aa364#4/0\",\"1712\":\"v-5d0aa364#4/1\",\"1713\":\"v-5d0aa364#4/2\",\"1714\":\"v-5d0aa364#4/3\",\"1715\":\"v-5d0aa364#4/4\",\"1716\":\"v-5d0aa364#4/5\",\"1717\":\"v-5d0aa364#4/6\",\"1718\":\"v-5d0aa364#4/7\",\"1719\":\"v-5d0aa364#4/8\",\"1720\":\"v-5d0aa364#4/9\",\"1721\":\"v-5d0aa364#4/10\",\"1722\":\"v-5d0aa364#4/11\",\"1723\":\"v-5d0aa364#4/12\",\"1724\":\"v-5d0aa364#4/13\",\"1725\":\"v-5d0aa364#4/14\",\"1726\":\"v-5d0aa364#4/15\",\"1727\":\"v-5d0aa364#5\",\"1728\":\"v-5d0aa364#5/0\",\"1729\":\"v-5d0aa364#5/1\",\"1730\":\"v-5d0aa364#6\",\"1731\":\"v-5d0aa364#6/0\",\"1732\":\"v-5d0aa364@0\",\"1733\":\"v-4eabeab4\",\"1734\":\"v-4eabeab4#0/0\",\"1735\":\"v-4eabeab4#1\",\"1736\":\"v-4eabeab4#2\",\"1737\":\"v-4eabeab4#2/0\",\"1738\":\"v-4eabeab4#2/1\",\"1739\":\"v-4eabeab4#2/2\",\"1740\":\"v-4eabeab4#3\",\"1741\":\"v-4eabeab4#3/0\",\"1742\":\"v-4eabeab4#3/1\",\"1743\":\"v-4eabeab4#3/2\",\"1744\":\"v-4eabeab4#3/3\",\"1745\":\"v-4eabeab4#3/4\",\"1746\":\"v-4eabeab4#3/5\",\"1747\":\"v-4eabeab4#4\",\"1748\":\"v-4eabeab4#4/0\",\"1749\":\"v-4eabeab4#4/1\",\"1750\":\"v-4eabeab4#4/2\",\"1751\":\"v-4eabeab4#4/3\",\"1752\":\"v-4eabeab4#4/4\",\"1753\":\"v-4eabeab4#4/5\",\"1754\":\"v-4eabeab4#4/6\",\"1755\":\"v-4eabeab4#4/7\",\"1756\":\"v-4eabeab4#5\",\"1757\":\"v-4eabeab4#5/0\",\"1758\":\"v-4eabeab4#5/1\",\"1759\":\"v-4eabeab4#5/2\",\"1760\":\"v-4eabeab4#5/3\",\"1761\":\"v-4eabeab4#5/4\",\"1762\":\"v-4eabeab4#5/5\",\"1763\":\"v-4eabeab4#5/6\",\"1764\":\"v-4eabeab4#5/7\",\"1765\":\"v-4eabeab4#5/8\",\"1766\":\"v-4eabeab4#5/9\",\"1767\":\"v-4eabeab4#5/10\",\"1768\":\"v-4eabeab4#5/11\",\"1769\":\"v-4eabeab4#5/12\",\"1770\":\"v-4eabeab4#5/13\",\"1771\":\"v-4eabeab4#5/14\",\"1772\":\"v-4eabeab4#5/15\",\"1773\":\"v-4eabeab4#5/16\",\"1774\":\"v-4eabeab4#5/17\",\"1775\":\"v-4eabeab4#5/18\",\"1776\":\"v-4eabeab4#5/19\",\"1777\":\"v-4eabeab4#5/20\",\"1778\":\"v-4eabeab4#5/21\",\"1779\":\"v-4eabeab4#5/22\",\"1780\":\"v-4eabeab4#6\",\"1781\":\"v-4eabeab4#6/0\",\"1782\":\"v-4eabeab4#6/1\",\"1783\":\"v-4eabeab4#6/2\",\"1784\":\"v-4eabeab4#6/3\",\"1785\":\"v-4eabeab4@0\",\"1786\":\"v-2ae7b79e\",\"1787\":\"v-2ae7b79e#1\",\"1788\":\"v-2ae7b79e#1/0\",\"1789\":\"v-2ae7b79e#1/1\",\"1790\":\"v-2ae7b79e#1/2\",\"1791\":\"v-2ae7b79e#1/3\",\"1792\":\"v-2ae7b79e#1/4\",\"1793\":\"v-2ae7b79e#1/5\",\"1794\":\"v-2ae7b79e#1/6\",\"1795\":\"v-2ae7b79e#1/7\",\"1796\":\"v-2ae7b79e#1/8\",\"1797\":\"v-2ae7b79e#2\",\"1798\":\"v-2ae7b79e#3\",\"1799\":\"v-2ae7b79e#3/0\",\"1800\":\"v-2ae7b79e#3/1\",\"1801\":\"v-2ae7b79e#3/2\",\"1802\":\"v-2ae7b79e#3/3\",\"1803\":\"v-2ae7b79e#3/4\",\"1804\":\"v-2ae7b79e#3/5\",\"1805\":\"v-2ae7b79e#3/6\",\"1806\":\"v-2ae7b79e#3/7\",\"1807\":\"v-2ae7b79e#3/8\",\"1808\":\"v-2ae7b79e#3/9\",\"1809\":\"v-2ae7b79e#3/10\",\"1810\":\"v-2ae7b79e#4\",\"1811\":\"v-2ae7b79e#4/0\",\"1812\":\"v-2ae7b79e#4/1\",\"1813\":\"v-2ae7b79e#4/2\",\"1814\":\"v-2ae7b79e#4/3\",\"1815\":\"v-2ae7b79e#4/4\",\"1816\":\"v-2ae7b79e#4/5\",\"1817\":\"v-2ae7b79e#4/6\",\"1818\":\"v-2ae7b79e#4/7\",\"1819\":\"v-2ae7b79e#4/8\",\"1820\":\"v-2ae7b79e#4/9\",\"1821\":\"v-2ae7b79e#5\",\"1822\":\"v-2ae7b79e#5/0\",\"1823\":\"v-2ae7b79e#5/1\",\"1824\":\"v-2ae7b79e#5/2\",\"1825\":\"v-2ae7b79e#5/3\",\"1826\":\"v-2ae7b79e#5/4\",\"1827\":\"v-2ae7b79e#5/5\",\"1828\":\"v-2ae7b79e#5/6\",\"1829\":\"v-2ae7b79e#5/7\",\"1830\":\"v-2ae7b79e#5/8\",\"1831\":\"v-2ae7b79e#5/9\",\"1832\":\"v-2ae7b79e#6\",\"1833\":\"v-2ae7b79e#6/0\",\"1834\":\"v-2ae7b79e#6/1\",\"1835\":\"v-2ae7b79e#7\",\"1836\":\"v-2ae7b79e#7/2\",\"1837\":\"v-2ae7b79e#7/3\",\"1838\":\"v-2ae7b79e#7/4\",\"1839\":\"v-2ae7b79e#7/5\",\"1840\":\"v-2ae7b79e#7/6\",\"1841\":\"v-2ae7b79e#7/7\",\"1842\":\"v-2ae7b79e#7/8\",\"1843\":\"v-2ae7b79e#7/9\",\"1844\":\"v-2ae7b79e#8\",\"1845\":\"v-2ae7b79e#8/0\",\"1846\":\"v-2ae7b79e#8/1\",\"1847\":\"v-2ae7b79e#8/2\",\"1848\":\"v-2ae7b79e#8/3\",\"1849\":\"v-2ae7b79e#8/4\",\"1850\":\"v-2ae7b79e#8/5\",\"1851\":\"v-2ae7b79e#8/6\",\"1852\":\"v-2ae7b79e#8/7\",\"1853\":\"v-2ae7b79e#8/8\",\"1854\":\"v-2ae7b79e#8/9\",\"1855\":\"v-2ae7b79e#8/10\",\"1856\":\"v-2ae7b79e#8/11\",\"1857\":\"v-2ae7b79e#8/12\",\"1858\":\"v-2ae7b79e#8/13\",\"1859\":\"v-2ae7b79e#8/14\",\"1860\":\"v-2ae7b79e#8/15\",\"1861\":\"v-2ae7b79e#8/16\",\"1862\":\"v-2ae7b79e#8/17\",\"1863\":\"v-2ae7b79e#9\",\"1864\":\"v-2ae7b79e#9/0\",\"1865\":\"v-2ae7b79e#9/1\",\"1866\":\"v-2ae7b79e#9/2\",\"1867\":\"v-2ae7b79e#9/3\",\"1868\":\"v-2ae7b79e#9/4\",\"1869\":\"v-2ae7b79e#9/5\",\"1870\":\"v-2ae7b79e#9/6\",\"1871\":\"v-2ae7b79e#9/7\",\"1872\":\"v-2ae7b79e#9/8\",\"1873\":\"v-2ae7b79e#9/9\",\"1874\":\"v-2ae7b79e#9/10\",\"1875\":\"v-2ae7b79e#10\",\"1876\":\"v-2ae7b79e#10/0\",\"1877\":\"v-2ae7b79e#11\",\"1878\":\"v-2ae7b79e#11/0\",\"1879\":\"v-2ae7b79e#12\",\"1880\":\"v-2ae7b79e#12/1\",\"1881\":\"v-2ae7b79e#12/2\",\"1882\":\"v-2ae7b79e#12/3\",\"1883\":\"v-2ae7b79e#12/4\",\"1884\":\"v-2ae7b79e@0\",\"1885\":\"v-5252f300\",\"1886\":\"v-5252f300#0/0\",\"1887\":\"v-5252f300#0/1\",\"1888\":\"v-5252f300#1\",\"1889\":\"v-5252f300#1/0\",\"1890\":\"v-5252f300#1/1\",\"1891\":\"v-5252f300#1/2\",\"1892\":\"v-5252f300#1/3\",\"1893\":\"v-5252f300#1/4\",\"1894\":\"v-5252f300#1/5\",\"1895\":\"v-5252f300#1/6\",\"1896\":\"v-5252f300#1/7\",\"1897\":\"v-5252f300#1/8\",\"1898\":\"v-5252f300#2\",\"1899\":\"v-5252f300#2/0\",\"1900\":\"v-5252f300#2/1\",\"1901\":\"v-5252f300#2/2\",\"1902\":\"v-5252f300#2/3\",\"1903\":\"v-5252f300#2/4\",\"1904\":\"v-5252f300#2/5\",\"1905\":\"v-5252f300#2/6\",\"1906\":\"v-5252f300#2/7\",\"1907\":\"v-5252f300#2/8\",\"1908\":\"v-5252f300#2/9\",\"1909\":\"v-5252f300#2/10\",\"1910\":\"v-5252f300#2/11\",\"1911\":\"v-5252f300#3\",\"1912\":\"v-5252f300#3/0\",\"1913\":\"v-5252f300#3/1\",\"1914\":\"v-5252f300#3/2\",\"1915\":\"v-5252f300#3/3\",\"1916\":\"v-5252f300#3/4\",\"1917\":\"v-5252f300#3/5\",\"1918\":\"v-5252f300#3/6\",\"1919\":\"v-5252f300@0\",\"1920\":\"v-1ec23ae1\",\"1921\":\"v-1ec23ae1#0/0\",\"1922\":\"v-1ec23ae1#0/1\",\"1923\":\"v-1ec23ae1#0/2\",\"1924\":\"v-1ec23ae1#0/3\",\"1925\":\"v-1ec23ae1#0/4\",\"1926\":\"v-1ec23ae1#1\",\"1927\":\"v-1ec23ae1#1/0\",\"1928\":\"v-1ec23ae1#1/1\",\"1929\":\"v-1ec23ae1#1/2\",\"1930\":\"v-1ec23ae1#1/3\",\"1931\":\"v-1ec23ae1#2\",\"1932\":\"v-1ec23ae1#2/0\",\"1933\":\"v-1ec23ae1#2/1\",\"1934\":\"v-1ec23ae1#3\",\"1935\":\"v-1ec23ae1#3/0\",\"1936\":\"v-1ec23ae1#3/1\",\"1937\":\"v-1ec23ae1#3/2\",\"1938\":\"v-1ec23ae1#3/3\",\"1939\":\"v-1ec23ae1#3/4\",\"1940\":\"v-1ec23ae1#3/5\",\"1941\":\"v-1ec23ae1#3/6\",\"1942\":\"v-1ec23ae1#4\",\"1943\":\"v-1ec23ae1#4/0\",\"1944\":\"v-1ec23ae1#4/1\",\"1945\":\"v-1ec23ae1#4/2\",\"1946\":\"v-1ec23ae1#4/3\",\"1947\":\"v-1ec23ae1#4/4\",\"1948\":\"v-1ec23ae1#4/5\",\"1949\":\"v-1ec23ae1#4/6\",\"1950\":\"v-1ec23ae1#4/7\",\"1951\":\"v-1ec23ae1#4/8\",\"1952\":\"v-1ec23ae1#4/9\",\"1953\":\"v-1ec23ae1#4/10\",\"1954\":\"v-1ec23ae1#4/11\",\"1955\":\"v-1ec23ae1#4/12\",\"1956\":\"v-1ec23ae1#4/13\",\"1957\":\"v-1ec23ae1#4/14\",\"1958\":\"v-1ec23ae1#4/15\",\"1959\":\"v-1ec23ae1#4/16\",\"1960\":\"v-1ec23ae1#4/17\",\"1961\":\"v-1ec23ae1#4/18\",\"1962\":\"v-1ec23ae1#4/19\",\"1963\":\"v-1ec23ae1#5\",\"1964\":\"v-1ec23ae1#5/0\",\"1965\":\"v-1ec23ae1#5/1\",\"1966\":\"v-1ec23ae1#5/2\",\"1967\":\"v-1ec23ae1#5/3\",\"1968\":\"v-1ec23ae1#5/4\",\"1969\":\"v-1ec23ae1#5/5\",\"1970\":\"v-1ec23ae1#5/6\",\"1971\":\"v-1ec23ae1#5/7\",\"1972\":\"v-1ec23ae1#5/8\",\"1973\":\"v-1ec23ae1#5/9\",\"1974\":\"v-1ec23ae1#5/10\",\"1975\":\"v-1ec23ae1#5/11\",\"1976\":\"v-1ec23ae1#5/12\",\"1977\":\"v-1ec23ae1#5/13\",\"1978\":\"v-1ec23ae1#5/14\",\"1979\":\"v-1ec23ae1#5/15\",\"1980\":\"v-1ec23ae1#5/16\",\"1981\":\"v-1ec23ae1#5/17\",\"1982\":\"v-1ec23ae1#5/18\",\"1983\":\"v-1ec23ae1#5/19\",\"1984\":\"v-1ec23ae1#5/20\",\"1985\":\"v-1ec23ae1#5/21\",\"1986\":\"v-1ec23ae1#5/22\",\"1987\":\"v-1ec23ae1@0\",\"1988\":\"v-bf9ab6dc\",\"1989\":\"v-bf9ab6dc#0/0\",\"1990\":\"v-bf9ab6dc#0/1\",\"1991\":\"v-bf9ab6dc#1\",\"1992\":\"v-bf9ab6dc#1/0\",\"1993\":\"v-bf9ab6dc#1/1\",\"1994\":\"v-bf9ab6dc#1/2\",\"1995\":\"v-bf9ab6dc#1/3\",\"1996\":\"v-bf9ab6dc#1/4\",\"1997\":\"v-bf9ab6dc#1/5\",\"1998\":\"v-bf9ab6dc#1/6\",\"1999\":\"v-bf9ab6dc#1/7\",\"2000\":\"v-bf9ab6dc#1/8\",\"2001\":\"v-bf9ab6dc#1/9\",\"2002\":\"v-bf9ab6dc#1/10\",\"2003\":\"v-bf9ab6dc#1/11\",\"2004\":\"v-bf9ab6dc#1/12\",\"2005\":\"v-bf9ab6dc#1/13\",\"2006\":\"v-bf9ab6dc#2\",\"2007\":\"v-bf9ab6dc#2/0\",\"2008\":\"v-bf9ab6dc#2/1\",\"2009\":\"v-bf9ab6dc#2/2\",\"2010\":\"v-bf9ab6dc#2/3\",\"2011\":\"v-bf9ab6dc#2/4\",\"2012\":\"v-bf9ab6dc#2/5\",\"2013\":\"v-bf9ab6dc#2/6\",\"2014\":\"v-bf9ab6dc#2/7\",\"2015\":\"v-bf9ab6dc#2/8\",\"2016\":\"v-bf9ab6dc#3\",\"2017\":\"v-bf9ab6dc#3/0\",\"2018\":\"v-bf9ab6dc#3/1\",\"2019\":\"v-bf9ab6dc#3/2\",\"2020\":\"v-bf9ab6dc#3/3\",\"2021\":\"v-bf9ab6dc#3/4\",\"2022\":\"v-bf9ab6dc#3/5\",\"2023\":\"v-bf9ab6dc#3/6\",\"2024\":\"v-bf9ab6dc#3/7\",\"2025\":\"v-bf9ab6dc#3/8\",\"2026\":\"v-bf9ab6dc#4\",\"2027\":\"v-bf9ab6dc#4/0\",\"2028\":\"v-bf9ab6dc#4/1\",\"2029\":\"v-bf9ab6dc#4/2\",\"2030\":\"v-bf9ab6dc#4/3\",\"2031\":\"v-bf9ab6dc#4/4\",\"2032\":\"v-bf9ab6dc#4/5\",\"2033\":\"v-bf9ab6dc#4/6\",\"2034\":\"v-bf9ab6dc@0\",\"2035\":\"v-4c035054\",\"2036\":\"v-4c035054#0/0\",\"2037\":\"v-4c035054#0/1\",\"2038\":\"v-4c035054#0/2\",\"2039\":\"v-4c035054#1\",\"2040\":\"v-4c035054#1/0\",\"2041\":\"v-4c035054#1/1\",\"2042\":\"v-4c035054#1/2\",\"2043\":\"v-4c035054#1/3\",\"2044\":\"v-4c035054#1/4\",\"2045\":\"v-4c035054#1/5\",\"2046\":\"v-4c035054#2\",\"2047\":\"v-4c035054#2/0\",\"2048\":\"v-4c035054#2/1\",\"2049\":\"v-4c035054#2/2\",\"2050\":\"v-4c035054#2/3\",\"2051\":\"v-4c035054#2/4\",\"2052\":\"v-4c035054#2/5\",\"2053\":\"v-4c035054#2/6\",\"2054\":\"v-4c035054#2/7\",\"2055\":\"v-4c035054#2/8\",\"2056\":\"v-4c035054#2/9\",\"2057\":\"v-4c035054#3\",\"2058\":\"v-4c035054#3/0\",\"2059\":\"v-4c035054#3/1\",\"2060\":\"v-4c035054#3/2\",\"2061\":\"v-4c035054#3/3\",\"2062\":\"v-4c035054#3/4\",\"2063\":\"v-4c035054#3/5\",\"2064\":\"v-4c035054#3/6\",\"2065\":\"v-4c035054#3/7\",\"2066\":\"v-4c035054#3/8\",\"2067\":\"v-4c035054#3/9\",\"2068\":\"v-4c035054#3/10\",\"2069\":\"v-4c035054#3/11\",\"2070\":\"v-4c035054#3/12\",\"2071\":\"v-4c035054#3/13\",\"2072\":\"v-4c035054#3/14\",\"2073\":\"v-4c035054#3/15\",\"2074\":\"v-4c035054#4\",\"2075\":\"v-4c035054#4/0\",\"2076\":\"v-4c035054#4/1\",\"2077\":\"v-4c035054#4/2\",\"2078\":\"v-4c035054#4/3\",\"2079\":\"v-4c035054#4/4\",\"2080\":\"v-4c035054#4/5\",\"2081\":\"v-4c035054#4/6\",\"2082\":\"v-4c035054#4/7\",\"2083\":\"v-4c035054#4/8\",\"2084\":\"v-4c035054#4/9\",\"2085\":\"v-4c035054#5\",\"2086\":\"v-4c035054#5/0\",\"2087\":\"v-4c035054#5/1\",\"2088\":\"v-4c035054#5/2\",\"2089\":\"v-4c035054#6\",\"2090\":\"v-4c035054#6/0\",\"2091\":\"v-4c035054#6/1\",\"2092\":\"v-4c035054#6/2\",\"2093\":\"v-4c035054@0\",\"2094\":\"v-5ce20e34\",\"2095\":\"v-5ce20e34#0/0\",\"2096\":\"v-5ce20e34#1\",\"2097\":\"v-5ce20e34#1/0\",\"2098\":\"v-5ce20e34#1/1\",\"2099\":\"v-5ce20e34#1/2\",\"2100\":\"v-5ce20e34#1/3\",\"2101\":\"v-5ce20e34#1/4\",\"2102\":\"v-5ce20e34#1/5\",\"2103\":\"v-5ce20e34#1/6\",\"2104\":\"v-5ce20e34#1/7\",\"2105\":\"v-5ce20e34#1/8\",\"2106\":\"v-5ce20e34#2\",\"2107\":\"v-5ce20e34#3\",\"2108\":\"v-5ce20e34#3/0\",\"2109\":\"v-5ce20e34#3/1\",\"2110\":\"v-5ce20e34#3/2\",\"2111\":\"v-5ce20e34#3/3\",\"2112\":\"v-5ce20e34#3/4\",\"2113\":\"v-5ce20e34#3/5\",\"2114\":\"v-5ce20e34#3/6\",\"2115\":\"v-5ce20e34#3/7\",\"2116\":\"v-5ce20e34#3/8\",\"2117\":\"v-5ce20e34#4\",\"2118\":\"v-5ce20e34#4/0\",\"2119\":\"v-5ce20e34#4/1\",\"2120\":\"v-5ce20e34#4/2\",\"2121\":\"v-5ce20e34#4/3\",\"2122\":\"v-5ce20e34#5\",\"2123\":\"v-5ce20e34#5/0\",\"2124\":\"v-5ce20e34#5/1\",\"2125\":\"v-5ce20e34#5/2\",\"2126\":\"v-5ce20e34#5/3\",\"2127\":\"v-5ce20e34#5/4\",\"2128\":\"v-5ce20e34#5/5\",\"2129\":\"v-5ce20e34#5/6\",\"2130\":\"v-5ce20e34#5/7\",\"2131\":\"v-5ce20e34#5/8\",\"2132\":\"v-5ce20e34#5/9\",\"2133\":\"v-5ce20e34#5/10\",\"2134\":\"v-5ce20e34#5/11\",\"2135\":\"v-5ce20e34#5/12\",\"2136\":\"v-5ce20e34#5/13\",\"2137\":\"v-5ce20e34#5/14\",\"2138\":\"v-5ce20e34#5/15\",\"2139\":\"v-5ce20e34#5/16\",\"2140\":\"v-5ce20e34#5/17\",\"2141\":\"v-5ce20e34#5/18\",\"2142\":\"v-5ce20e34#5/19\",\"2143\":\"v-5ce20e34#5/20\",\"2144\":\"v-5ce20e34#5/21\",\"2145\":\"v-5ce20e34#5/22\",\"2146\":\"v-5ce20e34#5/23\",\"2147\":\"v-5ce20e34#5/24\",\"2148\":\"v-5ce20e34#5/25\",\"2149\":\"v-5ce20e34#5/26\",\"2150\":\"v-5ce20e34#5/27\",\"2151\":\"v-5ce20e34#5/28\",\"2152\":\"v-5ce20e34@0\",\"2153\":\"v-56ff9282\",\"2154\":\"v-56ff9282#0/0\",\"2155\":\"v-56ff9282#1\",\"2156\":\"v-56ff9282#1/0\",\"2157\":\"v-56ff9282#1/1\",\"2158\":\"v-56ff9282#1/2\",\"2159\":\"v-56ff9282#1/3\",\"2160\":\"v-56ff9282#1/4\",\"2161\":\"v-56ff9282#1/5\",\"2162\":\"v-56ff9282#1/6\",\"2163\":\"v-56ff9282#1/7\",\"2164\":\"v-56ff9282#1/8\",\"2165\":\"v-56ff9282#2\",\"2166\":\"v-56ff9282#2/0\",\"2167\":\"v-56ff9282#2/1\",\"2168\":\"v-56ff9282#2/2\",\"2169\":\"v-56ff9282#2/3\",\"2170\":\"v-56ff9282#2/4\",\"2171\":\"v-56ff9282#3\",\"2172\":\"v-56ff9282#3/0\",\"2173\":\"v-56ff9282#3/1\",\"2174\":\"v-56ff9282#3/2\",\"2175\":\"v-56ff9282#3/3\",\"2176\":\"v-56ff9282#3/4\",\"2177\":\"v-56ff9282#4\",\"2178\":\"v-56ff9282#4/0\",\"2179\":\"v-56ff9282#4/1\",\"2180\":\"v-56ff9282#4/2\",\"2181\":\"v-56ff9282#4/3\",\"2182\":\"v-56ff9282#4/4\",\"2183\":\"v-56ff9282#4/5\",\"2184\":\"v-56ff9282#4/6\",\"2185\":\"v-56ff9282#5\",\"2186\":\"v-56ff9282#5/7\",\"2187\":\"v-56ff9282#5/8\",\"2188\":\"v-56ff9282#5/9\",\"2189\":\"v-56ff9282#5/10\",\"2190\":\"v-56ff9282#5/11\",\"2191\":\"v-56ff9282#5/12\",\"2192\":\"v-56ff9282#5/13\",\"2193\":\"v-56ff9282#5/14\",\"2194\":\"v-56ff9282#5/15\",\"2195\":\"v-56ff9282#5/16\",\"2196\":\"v-56ff9282#5/17\",\"2197\":\"v-56ff9282#5/18\",\"2198\":\"v-56ff9282@0\",\"2199\":\"v-5bab8a04\",\"2200\":\"v-5bab8a04#0/0\",\"2201\":\"v-5bab8a04#1\",\"2202\":\"v-5bab8a04#1/0\",\"2203\":\"v-5bab8a04#1/1\",\"2204\":\"v-5bab8a04#2\",\"2205\":\"v-5bab8a04#2/0\",\"2206\":\"v-5bab8a04#2/1\",\"2207\":\"v-5bab8a04#2/2\",\"2208\":\"v-5bab8a04#2/3\",\"2209\":\"v-5bab8a04#2/4\",\"2210\":\"v-5bab8a04#2/5\",\"2211\":\"v-5bab8a04#2/6\",\"2212\":\"v-5bab8a04#2/7\",\"2213\":\"v-5bab8a04#2/8\",\"2214\":\"v-5bab8a04#2/9\",\"2215\":\"v-5bab8a04#2/10\",\"2216\":\"v-5bab8a04#2/11\",\"2217\":\"v-5bab8a04#2/12\",\"2218\":\"v-5bab8a04#2/13\",\"2219\":\"v-5bab8a04#2/14\",\"2220\":\"v-5bab8a04#2/15\",\"2221\":\"v-5bab8a04#2/16\",\"2222\":\"v-5bab8a04#2/17\",\"2223\":\"v-5bab8a04#2/18\",\"2224\":\"v-5bab8a04#2/19\",\"2225\":\"v-5bab8a04#2/20\",\"2226\":\"v-5bab8a04#2/21\",\"2227\":\"v-5bab8a04#3\",\"2228\":\"v-5bab8a04#3/0\",\"2229\":\"v-5bab8a04#3/1\",\"2230\":\"v-5bab8a04#3/2\",\"2231\":\"v-5bab8a04#3/3\",\"2232\":\"v-5bab8a04#3/4\",\"2233\":\"v-5bab8a04#3/5\",\"2234\":\"v-5bab8a04#3/6\",\"2235\":\"v-5bab8a04#3/7\",\"2236\":\"v-5bab8a04#3/8\",\"2237\":\"v-5bab8a04#3/9\",\"2238\":\"v-5bab8a04#3/10\",\"2239\":\"v-5bab8a04#3/11\",\"2240\":\"v-5bab8a04#3/12\",\"2241\":\"v-5bab8a04#3/13\",\"2242\":\"v-5bab8a04#3/14\",\"2243\":\"v-5bab8a04#3/15\",\"2244\":\"v-5bab8a04#3/16\",\"2245\":\"v-5bab8a04#3/17\",\"2246\":\"v-5bab8a04#3/18\",\"2247\":\"v-5bab8a04#3/19\",\"2248\":\"v-5bab8a04#3/20\",\"2249\":\"v-5bab8a04#3/21\",\"2250\":\"v-5bab8a04#3/22\",\"2251\":\"v-5bab8a04#3/23\",\"2252\":\"v-5bab8a04#3/24\",\"2253\":\"v-5bab8a04#3/25\",\"2254\":\"v-5bab8a04#3/26\",\"2255\":\"v-5bab8a04#3/27\",\"2256\":\"v-5bab8a04#3/28\",\"2257\":\"v-5bab8a04#3/29\",\"2258\":\"v-5bab8a04#3/30\",\"2259\":\"v-5bab8a04#3/31\",\"2260\":\"v-5bab8a04#3/32\",\"2261\":\"v-5bab8a04#3/33\",\"2262\":\"v-5bab8a04@0\",\"2263\":\"v-ea63c058\",\"2264\":\"v-ea63c058#0/0\",\"2265\":\"v-ea63c058#0/1\",\"2266\":\"v-ea63c058#1\",\"2267\":\"v-ea63c058#1/0\",\"2268\":\"v-ea63c058#1/1\",\"2269\":\"v-ea63c058#1/2\",\"2270\":\"v-ea63c058#1/3\",\"2271\":\"v-ea63c058#1/4\",\"2272\":\"v-ea63c058#1/5\",\"2273\":\"v-ea63c058#1/6\",\"2274\":\"v-ea63c058#1/7\",\"2275\":\"v-ea63c058#1/8\",\"2276\":\"v-ea63c058#1/9\",\"2277\":\"v-ea63c058#1/10\",\"2278\":\"v-ea63c058#1/11\",\"2279\":\"v-ea63c058#1/12\",\"2280\":\"v-ea63c058#1/13\",\"2281\":\"v-ea63c058#1/14\",\"2282\":\"v-ea63c058#1/15\",\"2283\":\"v-ea63c058#1/16\",\"2284\":\"v-ea63c058#1/17\",\"2285\":\"v-ea63c058#1/18\",\"2286\":\"v-ea63c058#1/19\",\"2287\":\"v-ea63c058#1/20\",\"2288\":\"v-ea63c058#1/21\",\"2289\":\"v-ea63c058#1/22\",\"2290\":\"v-ea63c058#1/23\",\"2291\":\"v-ea63c058#1/24\",\"2292\":\"v-ea63c058#2\",\"2293\":\"v-ea63c058#2/0\",\"2294\":\"v-ea63c058#2/1\",\"2295\":\"v-ea63c058#2/2\",\"2296\":\"v-ea63c058#2/3\",\"2297\":\"v-ea63c058#2/4\",\"2298\":\"v-ea63c058#2/5\",\"2299\":\"v-ea63c058#2/6\",\"2300\":\"v-ea63c058#2/7\",\"2301\":\"v-ea63c058#2/8\",\"2302\":\"v-ea63c058#2/9\",\"2303\":\"v-ea63c058#2/10\",\"2304\":\"v-ea63c058#2/11\",\"2305\":\"v-ea63c058#2/12\",\"2306\":\"v-ea63c058#3\",\"2307\":\"v-ea63c058#3/0\",\"2308\":\"v-ea63c058#3/1\",\"2309\":\"v-ea63c058#3/2\",\"2310\":\"v-ea63c058#3/3\",\"2311\":\"v-ea63c058#3/4\",\"2312\":\"v-ea63c058#3/5\",\"2313\":\"v-ea63c058#3/6\",\"2314\":\"v-ea63c058#3/7\",\"2315\":\"v-ea63c058#3/8\",\"2316\":\"v-ea63c058#3/9\",\"2317\":\"v-ea63c058#3/10\",\"2318\":\"v-ea63c058#3/11\",\"2319\":\"v-ea63c058#3/12\",\"2320\":\"v-ea63c058#3/13\",\"2321\":\"v-ea63c058#3/14\",\"2322\":\"v-ea63c058#3/15\",\"2323\":\"v-ea63c058#3/16\",\"2324\":\"v-ea63c058#3/17\",\"2325\":\"v-ea63c058#3/18\",\"2326\":\"v-ea63c058#4\",\"2327\":\"v-ea63c058#4/0\",\"2328\":\"v-ea63c058@0\",\"2329\":\"v-0d05542a\",\"2330\":\"v-0d05542a#0/0\",\"2331\":\"v-0d05542a#1\",\"2332\":\"v-0d05542a#1/0\",\"2333\":\"v-0d05542a#1/1\",\"2334\":\"v-0d05542a#1/2\",\"2335\":\"v-0d05542a#1/3\",\"2336\":\"v-0d05542a#1/4\",\"2337\":\"v-0d05542a#1/5\",\"2338\":\"v-0d05542a#1/6\",\"2339\":\"v-0d05542a#1/7\",\"2340\":\"v-0d05542a#1/8\",\"2341\":\"v-0d05542a#1/9\",\"2342\":\"v-0d05542a#1/10\",\"2343\":\"v-0d05542a#1/11\",\"2344\":\"v-0d05542a#1/12\",\"2345\":\"v-0d05542a#1/13\",\"2346\":\"v-0d05542a#1/14\",\"2347\":\"v-0d05542a#1/15\",\"2348\":\"v-0d05542a#2\",\"2349\":\"v-0d05542a#2/0\",\"2350\":\"v-0d05542a#2/1\",\"2351\":\"v-0d05542a#3\",\"2352\":\"v-0d05542a#3/2\",\"2353\":\"v-0d05542a#3/3\",\"2354\":\"v-0d05542a#3/4\",\"2355\":\"v-0d05542a#3/5\",\"2356\":\"v-0d05542a#3/6\",\"2357\":\"v-0d05542a#3/7\",\"2358\":\"v-0d05542a#3/8\",\"2359\":\"v-0d05542a#3/9\",\"2360\":\"v-0d05542a#3/10\",\"2361\":\"v-0d05542a#3/11\",\"2362\":\"v-0d05542a#3/12\",\"2363\":\"v-0d05542a#3/13\",\"2364\":\"v-0d05542a#3/14\",\"2365\":\"v-0d05542a#3/15\",\"2366\":\"v-0d05542a#3/16\",\"2367\":\"v-0d05542a#3/17\",\"2368\":\"v-0d05542a#4\",\"2369\":\"v-0d05542a#4/0\",\"2370\":\"v-0d05542a#4/1\",\"2371\":\"v-0d05542a#4/2\",\"2372\":\"v-0d05542a#4/3\",\"2373\":\"v-0d05542a#4/4\",\"2374\":\"v-0d05542a#4/5\",\"2375\":\"v-0d05542a#4/6\",\"2376\":\"v-0d05542a#4/7\",\"2377\":\"v-0d05542a#5\",\"2378\":\"v-0d05542a#5/0\",\"2379\":\"v-0d05542a#5/1\",\"2380\":\"v-0d05542a#5/2\",\"2381\":\"v-0d05542a#6\",\"2382\":\"v-0d05542a#6/0\",\"2383\":\"v-0d05542a#6/1\",\"2384\":\"v-0d05542a#6/2\",\"2385\":\"v-0d05542a#6/3\",\"2386\":\"v-0d05542a#6/4\",\"2387\":\"v-0d05542a#6/5\",\"2388\":\"v-0d05542a#6/6\",\"2389\":\"v-0d05542a#6/7\",\"2390\":\"v-0d05542a#6/8\",\"2391\":\"v-0d05542a#7\",\"2392\":\"v-0d05542a#7/0\",\"2393\":\"v-0d05542a#7/1\",\"2394\":\"v-0d05542a#7/2\",\"2395\":\"v-0d05542a#7/3\",\"2396\":\"v-0d05542a#7/4\",\"2397\":\"v-0d05542a#8\",\"2398\":\"v-0d05542a#8/0\",\"2399\":\"v-0d05542a#8/1\",\"2400\":\"v-0d05542a#8/2\",\"2401\":\"v-0d05542a#8/3\",\"2402\":\"v-0d05542a#8/4\",\"2403\":\"v-0d05542a#8/5\",\"2404\":\"v-0d05542a#8/6\",\"2405\":\"v-0d05542a#8/7\",\"2406\":\"v-0d05542a#8/8\",\"2407\":\"v-0d05542a#8/9\",\"2408\":\"v-0d05542a#8/10\",\"2409\":\"v-0d05542a#8/11\",\"2410\":\"v-0d05542a#8/12\",\"2411\":\"v-0d05542a#8/13\",\"2412\":\"v-0d05542a#8/14\",\"2413\":\"v-0d05542a#8/15\",\"2414\":\"v-0d05542a#8/16\",\"2415\":\"v-0d05542a#8/17\",\"2416\":\"v-0d05542a#8/18\",\"2417\":\"v-0d05542a#8/19\",\"2418\":\"v-0d05542a#8/20\",\"2419\":\"v-0d05542a#8/21\",\"2420\":\"v-0d05542a#8/22\",\"2421\":\"v-0d05542a#8/23\",\"2422\":\"v-0d05542a#8/24\",\"2423\":\"v-0d05542a#9\",\"2424\":\"v-0d05542a#9/0\",\"2425\":\"v-0d05542a#9/1\",\"2426\":\"v-0d05542a#9/2\",\"2427\":\"v-0d05542a#9/3\",\"2428\":\"v-0d05542a#9/4\",\"2429\":\"v-0d05542a#9/5\",\"2430\":\"v-0d05542a#9/6\",\"2431\":\"v-0d05542a#9/7\",\"2432\":\"v-0d05542a#9/8\",\"2433\":\"v-0d05542a#9/9\",\"2434\":\"v-0d05542a#9/10\",\"2435\":\"v-0d05542a#9/11\",\"2436\":\"v-0d05542a#9/12\",\"2437\":\"v-0d05542a#9/13\",\"2438\":\"v-0d05542a#9/14\",\"2439\":\"v-0d05542a#9/15\",\"2440\":\"v-0d05542a#9/16\",\"2441\":\"v-0d05542a#9/17\",\"2442\":\"v-0d05542a#9/18\",\"2443\":\"v-0d05542a#9/19\",\"2444\":\"v-0d05542a#9/20\",\"2445\":\"v-0d05542a#9/21\",\"2446\":\"v-0d05542a#9/22\",\"2447\":\"v-0d05542a#9/23\",\"2448\":\"v-0d05542a#9/24\",\"2449\":\"v-0d05542a#9/25\",\"2450\":\"v-0d05542a#9/26\",\"2451\":\"v-0d05542a#9/27\",\"2452\":\"v-0d05542a#9/28\",\"2453\":\"v-0d05542a#9/29\",\"2454\":\"v-0d05542a#9/30\",\"2455\":\"v-0d05542a#9/31\",\"2456\":\"v-0d05542a#10\",\"2457\":\"v-0d05542a#10/0\",\"2458\":\"v-0d05542a#10/1\",\"2459\":\"v-0d05542a#10/2\",\"2460\":\"v-0d05542a#10/3\",\"2461\":\"v-0d05542a#10/4\",\"2462\":\"v-0d05542a@0\",\"2463\":\"v-5e11f1c2\",\"2464\":\"v-5e11f1c2#0/0\",\"2465\":\"v-5e11f1c2#0/1\",\"2466\":\"v-5e11f1c2#0/2\",\"2467\":\"v-5e11f1c2#1\",\"2468\":\"v-5e11f1c2#1/0\",\"2469\":\"v-5e11f1c2#1/1\",\"2470\":\"v-5e11f1c2#1/2\",\"2471\":\"v-5e11f1c2#1/3\",\"2472\":\"v-5e11f1c2#1/4\",\"2473\":\"v-5e11f1c2#1/5\",\"2474\":\"v-5e11f1c2#1/6\",\"2475\":\"v-5e11f1c2#1/7\",\"2476\":\"v-5e11f1c2#1/8\",\"2477\":\"v-5e11f1c2#1/9\",\"2478\":\"v-5e11f1c2#1/10\",\"2479\":\"v-5e11f1c2#1/11\",\"2480\":\"v-5e11f1c2#1/12\",\"2481\":\"v-5e11f1c2#1/13\",\"2482\":\"v-5e11f1c2#2\",\"2483\":\"v-5e11f1c2#2/0\",\"2484\":\"v-5e11f1c2#2/1\",\"2485\":\"v-5e11f1c2#2/2\",\"2486\":\"v-5e11f1c2#2/3\",\"2487\":\"v-5e11f1c2#2/4\",\"2488\":\"v-5e11f1c2#2/5\",\"2489\":\"v-5e11f1c2#2/6\",\"2490\":\"v-5e11f1c2#2/7\",\"2491\":\"v-5e11f1c2#2/8\",\"2492\":\"v-5e11f1c2#2/9\",\"2493\":\"v-5e11f1c2#2/10\",\"2494\":\"v-5e11f1c2#2/11\",\"2495\":\"v-5e11f1c2#2/12\",\"2496\":\"v-5e11f1c2#2/13\",\"2497\":\"v-5e11f1c2#2/14\",\"2498\":\"v-5e11f1c2#2/15\",\"2499\":\"v-5e11f1c2#2/16\",\"2500\":\"v-5e11f1c2#2/17\",\"2501\":\"v-5e11f1c2#2/18\",\"2502\":\"v-5e11f1c2#2/19\",\"2503\":\"v-5e11f1c2#2/20\",\"2504\":\"v-5e11f1c2#2/21\",\"2505\":\"v-5e11f1c2#2/22\",\"2506\":\"v-5e11f1c2#2/23\",\"2507\":\"v-5e11f1c2#3\",\"2508\":\"v-5e11f1c2#3/0\",\"2509\":\"v-5e11f1c2#3/1\",\"2510\":\"v-5e11f1c2#3/2\",\"2511\":\"v-5e11f1c2#3/3\",\"2512\":\"v-5e11f1c2#3/4\",\"2513\":\"v-5e11f1c2#3/5\",\"2514\":\"v-5e11f1c2#3/6\",\"2515\":\"v-5e11f1c2#3/7\",\"2516\":\"v-5e11f1c2#3/8\",\"2517\":\"v-5e11f1c2#3/9\",\"2518\":\"v-5e11f1c2#3/10\",\"2519\":\"v-5e11f1c2#3/11\",\"2520\":\"v-5e11f1c2#3/12\",\"2521\":\"v-5e11f1c2#3/13\",\"2522\":\"v-5e11f1c2#3/14\",\"2523\":\"v-5e11f1c2#3/15\",\"2524\":\"v-5e11f1c2#3/16\",\"2525\":\"v-5e11f1c2#3/17\",\"2526\":\"v-5e11f1c2#3/18\",\"2527\":\"v-5e11f1c2#3/19\",\"2528\":\"v-5e11f1c2#3/20\",\"2529\":\"v-5e11f1c2#3/21\",\"2530\":\"v-5e11f1c2#3/22\",\"2531\":\"v-5e11f1c2#3/23\",\"2532\":\"v-5e11f1c2#3/24\",\"2533\":\"v-5e11f1c2#3/25\",\"2534\":\"v-5e11f1c2#3/26\",\"2535\":\"v-5e11f1c2#3/27\",\"2536\":\"v-5e11f1c2#3/28\",\"2537\":\"v-5e11f1c2#3/29\",\"2538\":\"v-5e11f1c2#3/30\",\"2539\":\"v-5e11f1c2#3/31\",\"2540\":\"v-5e11f1c2#3/32\",\"2541\":\"v-5e11f1c2#3/33\",\"2542\":\"v-5e11f1c2#3/34\",\"2543\":\"v-5e11f1c2#3/35\",\"2544\":\"v-5e11f1c2#3/36\",\"2545\":\"v-5e11f1c2#3/37\",\"2546\":\"v-5e11f1c2#3/38\",\"2547\":\"v-5e11f1c2#3/39\",\"2548\":\"v-5e11f1c2#3/40\",\"2549\":\"v-5e11f1c2#3/41\",\"2550\":\"v-5e11f1c2#3/42\",\"2551\":\"v-5e11f1c2#3/43\",\"2552\":\"v-5e11f1c2#3/44\",\"2553\":\"v-5e11f1c2#4\",\"2554\":\"v-5e11f1c2#4/0\",\"2555\":\"v-5e11f1c2#4/1\",\"2556\":\"v-5e11f1c2#4/2\",\"2557\":\"v-5e11f1c2#4/3\",\"2558\":\"v-5e11f1c2#4/4\",\"2559\":\"v-5e11f1c2#4/5\",\"2560\":\"v-5e11f1c2#4/6\",\"2561\":\"v-5e11f1c2#4/7\",\"2562\":\"v-5e11f1c2#4/8\",\"2563\":\"v-5e11f1c2#4/9\",\"2564\":\"v-5e11f1c2#4/10\",\"2565\":\"v-5e11f1c2#4/11\",\"2566\":\"v-5e11f1c2#5\",\"2567\":\"v-5e11f1c2#5/0\",\"2568\":\"v-5e11f1c2#5/1\",\"2569\":\"v-5e11f1c2#5/2\",\"2570\":\"v-5e11f1c2#5/3\",\"2571\":\"v-5e11f1c2#5/4\",\"2572\":\"v-5e11f1c2#5/5\",\"2573\":\"v-5e11f1c2#5/6\",\"2574\":\"v-5e11f1c2#5/7\",\"2575\":\"v-5e11f1c2#5/8\",\"2576\":\"v-5e11f1c2#5/9\",\"2577\":\"v-5e11f1c2#5/10\",\"2578\":\"v-5e11f1c2#5/11\",\"2579\":\"v-5e11f1c2#5/12\",\"2580\":\"v-5e11f1c2#6\",\"2581\":\"v-5e11f1c2#6/0\",\"2582\":\"v-5e11f1c2#6/1\",\"2583\":\"v-5e11f1c2#6/2\",\"2584\":\"v-5e11f1c2#6/3\",\"2585\":\"v-5e11f1c2#6/4\",\"2586\":\"v-5e11f1c2#6/5\",\"2587\":\"v-5e11f1c2#6/6\",\"2588\":\"v-5e11f1c2#6/7\",\"2589\":\"v-5e11f1c2#6/8\",\"2590\":\"v-5e11f1c2@0\",\"2591\":\"v-1e33c6dc\",\"2592\":\"v-1e33c6dc#1\",\"2593\":\"v-1e33c6dc#1/0\",\"2594\":\"v-1e33c6dc#1/1\",\"2595\":\"v-1e33c6dc#1/2\",\"2596\":\"v-1e33c6dc#2\",\"2597\":\"v-1e33c6dc#2/0\",\"2598\":\"v-1e33c6dc#2/1\",\"2599\":\"v-1e33c6dc#2/2\",\"2600\":\"v-1e33c6dc#2/3\",\"2601\":\"v-1e33c6dc#2/4\",\"2602\":\"v-1e33c6dc#3\",\"2603\":\"v-1e33c6dc#4\",\"2604\":\"v-1e33c6dc#4/0\",\"2605\":\"v-1e33c6dc#4/1\",\"2606\":\"v-1e33c6dc#4/2\",\"2607\":\"v-1e33c6dc#5\",\"2608\":\"v-1e33c6dc#5/0\",\"2609\":\"v-1e33c6dc#5/1\",\"2610\":\"v-1e33c6dc#5/2\",\"2611\":\"v-1e33c6dc#6\",\"2612\":\"v-1e33c6dc#6/0\",\"2613\":\"v-1e33c6dc#6/1\",\"2614\":\"v-1e33c6dc#6/2\",\"2615\":\"v-1e33c6dc#6/3\",\"2616\":\"v-1e33c6dc#6/4\",\"2617\":\"v-1e33c6dc#6/5\",\"2618\":\"v-1e33c6dc#6/6\",\"2619\":\"v-1e33c6dc#7\",\"2620\":\"v-1e33c6dc#7/0\",\"2621\":\"v-1e33c6dc#7/1\",\"2622\":\"v-1e33c6dc#7/2\",\"2623\":\"v-1e33c6dc#7/3\",\"2624\":\"v-1e33c6dc#7/4\",\"2625\":\"v-1e33c6dc#7/5\",\"2626\":\"v-1e33c6dc#7/6\",\"2627\":\"v-1e33c6dc#7/7\",\"2628\":\"v-1e33c6dc#7/8\",\"2629\":\"v-1e33c6dc#7/9\",\"2630\":\"v-1e33c6dc#7/10\",\"2631\":\"v-1e33c6dc#7/11\",\"2632\":\"v-1e33c6dc#7/12\",\"2633\":\"v-1e33c6dc#7/13\",\"2634\":\"v-1e33c6dc#7/14\",\"2635\":\"v-1e33c6dc#7/15\",\"2636\":\"v-1e33c6dc#7/16\",\"2637\":\"v-1e33c6dc#8\",\"2638\":\"v-1e33c6dc#8/0\",\"2639\":\"v-1e33c6dc#8/1\",\"2640\":\"v-1e33c6dc#8/2\",\"2641\":\"v-1e33c6dc#8/3\",\"2642\":\"v-1e33c6dc#8/4\",\"2643\":\"v-1e33c6dc#8/5\",\"2644\":\"v-1e33c6dc#8/6\",\"2645\":\"v-1e33c6dc#8/7\",\"2646\":\"v-1e33c6dc#9\",\"2647\":\"v-1e33c6dc#9/0\",\"2648\":\"v-1e33c6dc#9/1\",\"2649\":\"v-1e33c6dc#9/2\",\"2650\":\"v-1e33c6dc#9/3\",\"2651\":\"v-1e33c6dc#9/4\",\"2652\":\"v-1e33c6dc#9/5\",\"2653\":\"v-1e33c6dc#9/6\",\"2654\":\"v-1e33c6dc#9/7\",\"2655\":\"v-1e33c6dc#9/8\",\"2656\":\"v-1e33c6dc#9/9\",\"2657\":\"v-1e33c6dc#10\",\"2658\":\"v-1e33c6dc#10/0\",\"2659\":\"v-1e33c6dc#10/1\",\"2660\":\"v-1e33c6dc#10/2\",\"2661\":\"v-1e33c6dc#10/3\",\"2662\":\"v-1e33c6dc#10/4\",\"2663\":\"v-1e33c6dc#10/5\",\"2664\":\"v-1e33c6dc#10/6\",\"2665\":\"v-1e33c6dc#10/7\",\"2666\":\"v-1e33c6dc#10/8\",\"2667\":\"v-1e33c6dc#11\",\"2668\":\"v-1e33c6dc#11/0\",\"2669\":\"v-1e33c6dc#11/1\",\"2670\":\"v-1e33c6dc#11/2\",\"2671\":\"v-1e33c6dc#11/3\",\"2672\":\"v-1e33c6dc#11/4\",\"2673\":\"v-1e33c6dc#11/5\",\"2674\":\"v-1e33c6dc#11/6\",\"2675\":\"v-1e33c6dc#11/7\",\"2676\":\"v-1e33c6dc#11/8\",\"2677\":\"v-1e33c6dc#11/9\",\"2678\":\"v-1e33c6dc#12\",\"2679\":\"v-1e33c6dc#12/0\",\"2680\":\"v-1e33c6dc#12/1\",\"2681\":\"v-1e33c6dc#12/2\",\"2682\":\"v-1e33c6dc#12/3\",\"2683\":\"v-1e33c6dc#13\",\"2684\":\"v-1e33c6dc#13/0\",\"2685\":\"v-1e33c6dc#13/1\",\"2686\":\"v-1e33c6dc#13/2\",\"2687\":\"v-1e33c6dc#13/3\",\"2688\":\"v-1e33c6dc#13/4\",\"2689\":\"v-1e33c6dc#13/5\",\"2690\":\"v-1e33c6dc#13/6\",\"2691\":\"v-1e33c6dc#13/7\",\"2692\":\"v-1e33c6dc#13/8\",\"2693\":\"v-1e33c6dc#14\",\"2694\":\"v-1e33c6dc#14/0\",\"2695\":\"v-1e33c6dc#14/1\",\"2696\":\"v-1e33c6dc#14/2\",\"2697\":\"v-1e33c6dc#14/3\",\"2698\":\"v-1e33c6dc#14/4\",\"2699\":\"v-1e33c6dc#14/5\",\"2700\":\"v-1e33c6dc#14/6\",\"2701\":\"v-1e33c6dc#14/7\",\"2702\":\"v-1e33c6dc#14/8\",\"2703\":\"v-1e33c6dc#15\",\"2704\":\"v-1e33c6dc#15/0\",\"2705\":\"v-1e33c6dc#15/1\",\"2706\":\"v-1e33c6dc#15/2\",\"2707\":\"v-1e33c6dc#15/3\",\"2708\":\"v-1e33c6dc#16\",\"2709\":\"v-1e33c6dc#16/0\",\"2710\":\"v-1e33c6dc#17\",\"2711\":\"v-1e33c6dc#17/0\",\"2712\":\"v-1e33c6dc#17/1\",\"2713\":\"v-1e33c6dc#17/2\",\"2714\":\"v-1e33c6dc#17/3\",\"2715\":\"v-1e33c6dc#17/4\",\"2716\":\"v-1e33c6dc#17/5\",\"2717\":\"v-1e33c6dc#18\",\"2718\":\"v-1e33c6dc#18/0\",\"2719\":\"v-1e33c6dc#18/1\",\"2720\":\"v-1e33c6dc#19\",\"2721\":\"v-1e33c6dc#19/0\",\"2722\":\"v-1e33c6dc#19/1\",\"2723\":\"v-1e33c6dc#19/2\",\"2724\":\"v-1e33c6dc#19/3\",\"2725\":\"v-1e33c6dc#19/4\",\"2726\":\"v-1e33c6dc#19/5\",\"2727\":\"v-1e33c6dc@0\",\"2728\":\"v-a3f5c9ee\",\"2729\":\"v-a3f5c9ee#0/0\",\"2730\":\"v-a3f5c9ee#0/1\",\"2731\":\"v-a3f5c9ee#0/2\",\"2732\":\"v-a3f5c9ee#0/3\",\"2733\":\"v-a3f5c9ee#0/4\",\"2734\":\"v-a3f5c9ee#1\",\"2735\":\"v-a3f5c9ee#1/0\",\"2736\":\"v-a3f5c9ee#1/1\",\"2737\":\"v-a3f5c9ee#1/2\",\"2738\":\"v-a3f5c9ee#1/3\",\"2739\":\"v-a3f5c9ee#2\",\"2740\":\"v-a3f5c9ee#2/0\",\"2741\":\"v-a3f5c9ee#2/1\",\"2742\":\"v-a3f5c9ee#2/2\",\"2743\":\"v-a3f5c9ee#2/3\",\"2744\":\"v-a3f5c9ee#2/4\",\"2745\":\"v-a3f5c9ee#2/5\",\"2746\":\"v-a3f5c9ee#2/6\",\"2747\":\"v-a3f5c9ee#2/7\",\"2748\":\"v-a3f5c9ee#2/8\",\"2749\":\"v-a3f5c9ee#3\",\"2750\":\"v-a3f5c9ee#3/9\",\"2751\":\"v-a3f5c9ee#3/10\",\"2752\":\"v-a3f5c9ee#3/11\",\"2753\":\"v-a3f5c9ee#3/12\",\"2754\":\"v-a3f5c9ee#3/13\",\"2755\":\"v-a3f5c9ee#3/14\",\"2756\":\"v-a3f5c9ee#3/15\",\"2757\":\"v-a3f5c9ee#3/16\",\"2758\":\"v-a3f5c9ee#3/17\",\"2759\":\"v-a3f5c9ee#3/18\",\"2760\":\"v-a3f5c9ee#3/19\",\"2761\":\"v-a3f5c9ee#3/20\",\"2762\":\"v-a3f5c9ee#3/21\",\"2763\":\"v-a3f5c9ee#3/22\",\"2764\":\"v-a3f5c9ee#3/23\",\"2765\":\"v-a3f5c9ee#3/24\",\"2766\":\"v-a3f5c9ee#3/25\",\"2767\":\"v-a3f5c9ee#3/26\",\"2768\":\"v-a3f5c9ee#3/27\",\"2769\":\"v-a3f5c9ee#3/28\",\"2770\":\"v-a3f5c9ee#3/29\",\"2771\":\"v-a3f5c9ee#3/30\",\"2772\":\"v-a3f5c9ee#3/31\",\"2773\":\"v-a3f5c9ee#3/32\",\"2774\":\"v-a3f5c9ee#3/33\",\"2775\":\"v-a3f5c9ee#4\",\"2776\":\"v-a3f5c9ee#4/0\",\"2777\":\"v-a3f5c9ee#4/1\",\"2778\":\"v-a3f5c9ee#4/2\",\"2779\":\"v-a3f5c9ee#4/3\",\"2780\":\"v-a3f5c9ee#4/4\",\"2781\":\"v-a3f5c9ee#4/5\",\"2782\":\"v-a3f5c9ee#4/6\",\"2783\":\"v-a3f5c9ee#4/7\",\"2784\":\"v-a3f5c9ee#4/8\",\"2785\":\"v-a3f5c9ee#4/9\",\"2786\":\"v-a3f5c9ee#4/10\",\"2787\":\"v-a3f5c9ee#4/11\",\"2788\":\"v-a3f5c9ee#4/12\",\"2789\":\"v-a3f5c9ee#4/13\",\"2790\":\"v-a3f5c9ee#4/14\",\"2791\":\"v-a3f5c9ee#4/15\",\"2792\":\"v-a3f5c9ee#4/16\",\"2793\":\"v-a3f5c9ee#4/17\",\"2794\":\"v-a3f5c9ee#4/18\",\"2795\":\"v-a3f5c9ee#4/19\",\"2796\":\"v-a3f5c9ee#5\",\"2797\":\"v-a3f5c9ee#5/20\",\"2798\":\"v-a3f5c9ee#5/21\",\"2799\":\"v-a3f5c9ee#5/22\",\"2800\":\"v-a3f5c9ee#5/23\",\"2801\":\"v-a3f5c9ee#5/24\",\"2802\":\"v-a3f5c9ee#5/25\",\"2803\":\"v-a3f5c9ee#5/26\",\"2804\":\"v-a3f5c9ee#5/27\",\"2805\":\"v-a3f5c9ee#5/28\",\"2806\":\"v-a3f5c9ee#6\",\"2807\":\"v-a3f5c9ee#6/0\",\"2808\":\"v-a3f5c9ee#6/1\",\"2809\":\"v-a3f5c9ee#6/2\",\"2810\":\"v-a3f5c9ee#7\",\"2811\":\"v-a3f5c9ee#7/0\",\"2812\":\"v-a3f5c9ee#7/1\",\"2813\":\"v-a3f5c9ee@0\",\"2814\":\"v-72388794\",\"2815\":\"v-72388794#0/0\",\"2816\":\"v-72388794#0/1\",\"2817\":\"v-72388794#0/2\",\"2818\":\"v-72388794#0/3\",\"2819\":\"v-72388794#0/4\",\"2820\":\"v-72388794#0/5\",\"2821\":\"v-72388794#1\",\"2822\":\"v-72388794#1/0\",\"2823\":\"v-72388794#1/1\",\"2824\":\"v-72388794#1/2\",\"2825\":\"v-72388794#1/3\",\"2826\":\"v-72388794#1/4\",\"2827\":\"v-72388794#1/5\",\"2828\":\"v-72388794#1/6\",\"2829\":\"v-72388794#1/7\",\"2830\":\"v-72388794#1/8\",\"2831\":\"v-72388794#1/9\",\"2832\":\"v-72388794#1/10\",\"2833\":\"v-72388794#1/11\",\"2834\":\"v-72388794#1/12\",\"2835\":\"v-72388794#1/13\",\"2836\":\"v-72388794#1/14\",\"2837\":\"v-72388794#1/15\",\"2838\":\"v-72388794#1/16\",\"2839\":\"v-72388794#1/17\",\"2840\":\"v-72388794#1/18\",\"2841\":\"v-72388794#1/19\",\"2842\":\"v-72388794#1/20\",\"2843\":\"v-72388794#1/21\",\"2844\":\"v-72388794#1/22\",\"2845\":\"v-72388794#1/23\",\"2846\":\"v-72388794#1/24\",\"2847\":\"v-72388794#1/25\",\"2848\":\"v-72388794#1/26\",\"2849\":\"v-72388794#1/27\",\"2850\":\"v-72388794#1/28\",\"2851\":\"v-72388794#1/29\",\"2852\":\"v-72388794#1/30\",\"2853\":\"v-72388794#1/31\",\"2854\":\"v-72388794#2\",\"2855\":\"v-72388794#2/0\",\"2856\":\"v-72388794#2/1\",\"2857\":\"v-72388794#2/2\",\"2858\":\"v-72388794#2/3\",\"2859\":\"v-72388794#2/4\",\"2860\":\"v-72388794#3\",\"2861\":\"v-72388794#3/0\",\"2862\":\"v-72388794#3/1\",\"2863\":\"v-72388794#4\",\"2864\":\"v-72388794#4/2\",\"2865\":\"v-72388794#4/3\",\"2866\":\"v-72388794#4/4\",\"2867\":\"v-72388794#5\",\"2868\":\"v-72388794#5/0\",\"2869\":\"v-72388794#5/1\",\"2870\":\"v-72388794#5/2\",\"2871\":\"v-72388794#6\",\"2872\":\"v-72388794#6/0\",\"2873\":\"v-72388794#7\",\"2874\":\"v-72388794#7/1\",\"2875\":\"v-72388794#8\",\"2876\":\"v-72388794#9\",\"2877\":\"v-72388794#9/0\",\"2878\":\"v-72388794@0\",\"2879\":\"v-5365bac0\",\"2880\":\"v-5365bac0#0/0\",\"2881\":\"v-5365bac0#1\",\"2882\":\"v-5365bac0#1/0\",\"2883\":\"v-5365bac0#2\",\"2884\":\"v-5365bac0#2/1\",\"2885\":\"v-5365bac0#2/2\",\"2886\":\"v-5365bac0#2/3\",\"2887\":\"v-5365bac0#2/4\",\"2888\":\"v-5365bac0#2/5\",\"2889\":\"v-5365bac0#2/6\",\"2890\":\"v-5365bac0#3\",\"2891\":\"v-5365bac0#3/0\",\"2892\":\"v-5365bac0#4\",\"2893\":\"v-5365bac0#4/1\",\"2894\":\"v-5365bac0#5\",\"2895\":\"v-5365bac0#5/2\",\"2896\":\"v-5365bac0@0\",\"2897\":\"v-e7db450c\",\"2898\":\"v-e7db450c#0/0\",\"2899\":\"v-e7db450c#1\",\"2900\":\"v-e7db450c#1/0\",\"2901\":\"v-e7db450c#1/1\",\"2902\":\"v-e7db450c#1/2\",\"2903\":\"v-e7db450c#2\",\"2904\":\"v-e7db450c#2/0\",\"2905\":\"v-e7db450c#2/1\",\"2906\":\"v-e7db450c#2/2\",\"2907\":\"v-e7db450c#2/3\",\"2908\":\"v-e7db450c#2/4\",\"2909\":\"v-e7db450c#2/5\",\"2910\":\"v-e7db450c#2/6\",\"2911\":\"v-e7db450c#3\",\"2912\":\"v-e7db450c#3/0\",\"2913\":\"v-e7db450c#3/1\",\"2914\":\"v-e7db450c#3/2\",\"2915\":\"v-e7db450c#3/3\",\"2916\":\"v-e7db450c#3/4\",\"2917\":\"v-e7db450c#3/5\",\"2918\":\"v-e7db450c#3/6\",\"2919\":\"v-e7db450c#3/7\",\"2920\":\"v-e7db450c#3/8\",\"2921\":\"v-e7db450c#3/9\",\"2922\":\"v-e7db450c#3/10\",\"2923\":\"v-e7db450c#3/11\",\"2924\":\"v-e7db450c#3/12\",\"2925\":\"v-e7db450c#3/13\",\"2926\":\"v-e7db450c#4\",\"2927\":\"v-e7db450c#4/0\",\"2928\":\"v-e7db450c#4/1\",\"2929\":\"v-e7db450c#4/2\",\"2930\":\"v-e7db450c#4/3\",\"2931\":\"v-e7db450c#4/4\",\"2932\":\"v-e7db450c#4/5\",\"2933\":\"v-e7db450c#4/6\",\"2934\":\"v-e7db450c#4/7\",\"2935\":\"v-e7db450c#4/8\",\"2936\":\"v-e7db450c#4/9\",\"2937\":\"v-e7db450c#4/10\",\"2938\":\"v-e7db450c#4/11\",\"2939\":\"v-e7db450c#4/12\",\"2940\":\"v-e7db450c#4/13\",\"2941\":\"v-e7db450c#4/14\",\"2942\":\"v-e7db450c#4/15\",\"2943\":\"v-e7db450c#4/16\",\"2944\":\"v-e7db450c#4/17\",\"2945\":\"v-e7db450c#4/18\",\"2946\":\"v-e7db450c#4/19\",\"2947\":\"v-e7db450c#5\",\"2948\":\"v-e7db450c#5/0\",\"2949\":\"v-e7db450c#5/1\",\"2950\":\"v-e7db450c#5/2\",\"2951\":\"v-e7db450c#5/3\",\"2952\":\"v-e7db450c#5/4\",\"2953\":\"v-e7db450c#5/5\",\"2954\":\"v-e7db450c#5/6\",\"2955\":\"v-e7db450c#5/7\",\"2956\":\"v-e7db450c#5/8\",\"2957\":\"v-e7db450c#5/9\",\"2958\":\"v-e7db450c#5/10\",\"2959\":\"v-e7db450c#6\",\"2960\":\"v-e7db450c#6/11\",\"2961\":\"v-e7db450c#6/12\",\"2962\":\"v-e7db450c#7\",\"2963\":\"v-e7db450c#7/0\",\"2964\":\"v-e7db450c@0\",\"2965\":\"v-43326464\",\"2966\":\"v-43326464#1\",\"2967\":\"v-43326464#1/0\",\"2968\":\"v-43326464#1/1\",\"2969\":\"v-43326464#1/2\",\"2970\":\"v-43326464#1/3\",\"2971\":\"v-43326464#1/4\",\"2972\":\"v-43326464#1/5\",\"2973\":\"v-43326464#1/6\",\"2974\":\"v-43326464#1/7\",\"2975\":\"v-43326464#1/8\",\"2976\":\"v-43326464#1/9\",\"2977\":\"v-43326464#1/10\",\"2978\":\"v-43326464#1/11\",\"2979\":\"v-43326464#1/12\",\"2980\":\"v-43326464#1/13\",\"2981\":\"v-43326464#1/14\",\"2982\":\"v-43326464#1/15\",\"2983\":\"v-43326464#1/16\",\"2984\":\"v-43326464#1/17\",\"2985\":\"v-43326464#1/18\",\"2986\":\"v-43326464#1/19\",\"2987\":\"v-43326464#1/20\",\"2988\":\"v-43326464#1/21\",\"2989\":\"v-43326464#1/22\",\"2990\":\"v-43326464#1/23\",\"2991\":\"v-43326464#1/24\",\"2992\":\"v-43326464#1/25\",\"2993\":\"v-43326464#1/26\",\"2994\":\"v-43326464#1/27\",\"2995\":\"v-43326464#1/28\",\"2996\":\"v-43326464#1/29\",\"2997\":\"v-43326464#1/30\",\"2998\":\"v-43326464#1/31\",\"2999\":\"v-43326464#1/32\",\"3000\":\"v-43326464#1/33\",\"3001\":\"v-43326464#1/34\",\"3002\":\"v-43326464#1/35\",\"3003\":\"v-43326464#1/36\",\"3004\":\"v-43326464#1/37\",\"3005\":\"v-43326464#1/38\",\"3006\":\"v-43326464#1/39\",\"3007\":\"v-43326464#1/40\",\"3008\":\"v-43326464#1/41\",\"3009\":\"v-43326464#1/42\",\"3010\":\"v-43326464#1/43\",\"3011\":\"v-43326464#1/44\",\"3012\":\"v-43326464#1/45\",\"3013\":\"v-43326464#2\",\"3014\":\"v-43326464#2/0\",\"3015\":\"v-43326464#2/1\",\"3016\":\"v-43326464#2/2\",\"3017\":\"v-43326464#2/3\",\"3018\":\"v-43326464#2/4\",\"3019\":\"v-43326464#2/5\",\"3020\":\"v-43326464#2/6\",\"3021\":\"v-43326464#2/7\",\"3022\":\"v-43326464#2/8\",\"3023\":\"v-43326464#2/9\",\"3024\":\"v-43326464#3\",\"3025\":\"v-43326464#3/10\",\"3026\":\"v-43326464#3/11\",\"3027\":\"v-43326464#3/12\",\"3028\":\"v-43326464#3/13\",\"3029\":\"v-43326464#4\",\"3030\":\"v-43326464#4/14\",\"3031\":\"v-43326464#4/15\",\"3032\":\"v-43326464#4/16\",\"3033\":\"v-43326464#4/17\",\"3034\":\"v-43326464#4/18\",\"3035\":\"v-43326464#4/19\",\"3036\":\"v-43326464#4/20\",\"3037\":\"v-43326464#4/21\",\"3038\":\"v-43326464#4/22\",\"3039\":\"v-43326464#4/23\",\"3040\":\"v-43326464#4/24\",\"3041\":\"v-43326464#4/25\",\"3042\":\"v-43326464#4/26\",\"3043\":\"v-43326464#4/27\",\"3044\":\"v-43326464#5\",\"3045\":\"v-43326464#6\",\"3046\":\"v-43326464#6/28\",\"3047\":\"v-43326464#6/29\",\"3048\":\"v-43326464#6/30\",\"3049\":\"v-43326464#7\",\"3050\":\"v-43326464#7/31\",\"3051\":\"v-43326464#7/32\",\"3052\":\"v-43326464#7/33\",\"3053\":\"v-43326464#7/34\",\"3054\":\"v-43326464#7/35\",\"3055\":\"v-43326464#8\",\"3056\":\"v-43326464#8/36\",\"3057\":\"v-43326464#8/37\",\"3058\":\"v-43326464#8/38\",\"3059\":\"v-43326464#9\",\"3060\":\"v-43326464#9/39\",\"3061\":\"v-43326464#9/40\",\"3062\":\"v-43326464#9/41\",\"3063\":\"v-43326464#9/42\",\"3064\":\"v-43326464#9/43\",\"3065\":\"v-43326464#9/44\",\"3066\":\"v-43326464#10\",\"3067\":\"v-43326464#10/45\",\"3068\":\"v-43326464#10/46\",\"3069\":\"v-43326464#10/47\",\"3070\":\"v-43326464#11\",\"3071\":\"v-43326464#12\",\"3072\":\"v-43326464#12/48\",\"3073\":\"v-43326464#12/49\",\"3074\":\"v-43326464#12/50\",\"3075\":\"v-43326464#12/51\",\"3076\":\"v-43326464#12/52\",\"3077\":\"v-43326464#12/53\",\"3078\":\"v-43326464#12/54\",\"3079\":\"v-43326464#12/55\",\"3080\":\"v-43326464#12/56\",\"3081\":\"v-43326464#12/57\",\"3082\":\"v-43326464#12/58\",\"3083\":\"v-43326464#12/59\",\"3084\":\"v-43326464#12/60\",\"3085\":\"v-43326464#12/61\",\"3086\":\"v-43326464#12/62\",\"3087\":\"v-43326464#12/63\",\"3088\":\"v-43326464#12/64\",\"3089\":\"v-43326464#12/65\",\"3090\":\"v-43326464#12/66\",\"3091\":\"v-43326464#12/67\",\"3092\":\"v-43326464#12/68\",\"3093\":\"v-43326464#12/69\",\"3094\":\"v-43326464#13\",\"3095\":\"v-43326464#13/70\",\"3096\":\"v-43326464#13/71\",\"3097\":\"v-43326464#14\",\"3098\":\"v-43326464#14/72\",\"3099\":\"v-43326464#14/73\",\"3100\":\"v-43326464#14/74\",\"3101\":\"v-43326464#14/75\",\"3102\":\"v-43326464#15\",\"3103\":\"v-43326464#15/0\",\"3104\":\"v-43326464#15/1\",\"3105\":\"v-43326464#15/2\",\"3106\":\"v-43326464#15/3\",\"3107\":\"v-43326464#15/4\",\"3108\":\"v-43326464#15/5\",\"3109\":\"v-43326464#15/6\",\"3110\":\"v-43326464#15/7\",\"3111\":\"v-43326464#15/8\",\"3112\":\"v-43326464#15/9\",\"3113\":\"v-43326464#15/10\",\"3114\":\"v-43326464#15/11\",\"3115\":\"v-43326464#15/12\",\"3116\":\"v-43326464#15/13\",\"3117\":\"v-43326464#15/14\",\"3118\":\"v-43326464#15/15\",\"3119\":\"v-43326464#15/16\",\"3120\":\"v-43326464#15/17\",\"3121\":\"v-43326464#15/18\",\"3122\":\"v-43326464#15/19\",\"3123\":\"v-43326464#15/20\",\"3124\":\"v-43326464#15/21\",\"3125\":\"v-43326464#16\",\"3126\":\"v-43326464#16/22\",\"3127\":\"v-43326464#16/23\",\"3128\":\"v-43326464#16/24\",\"3129\":\"v-43326464#16/25\",\"3130\":\"v-43326464#16/26\",\"3131\":\"v-43326464#16/27\",\"3132\":\"v-43326464#16/28\",\"3133\":\"v-43326464#16/29\",\"3134\":\"v-43326464#16/30\",\"3135\":\"v-43326464#16/31\",\"3136\":\"v-43326464#16/32\",\"3137\":\"v-43326464#16/33\",\"3138\":\"v-43326464#16/34\",\"3139\":\"v-43326464#16/35\",\"3140\":\"v-43326464#16/36\",\"3141\":\"v-43326464#16/37\",\"3142\":\"v-43326464#16/38\",\"3143\":\"v-43326464#16/39\",\"3144\":\"v-43326464#16/40\",\"3145\":\"v-43326464#16/41\",\"3146\":\"v-43326464#16/42\",\"3147\":\"v-43326464#16/43\",\"3148\":\"v-43326464#16/44\",\"3149\":\"v-43326464#16/45\",\"3150\":\"v-43326464#16/46\",\"3151\":\"v-43326464#16/47\",\"3152\":\"v-43326464#16/48\",\"3153\":\"v-43326464#16/49\",\"3154\":\"v-43326464#16/50\",\"3155\":\"v-43326464#16/51\",\"3156\":\"v-43326464#16/52\",\"3157\":\"v-43326464#16/53\",\"3158\":\"v-43326464#16/54\",\"3159\":\"v-43326464#16/55\",\"3160\":\"v-43326464#16/56\",\"3161\":\"v-43326464#16/57\",\"3162\":\"v-43326464#16/58\",\"3163\":\"v-43326464#16/59\",\"3164\":\"v-43326464#16/60\",\"3165\":\"v-43326464#16/61\",\"3166\":\"v-43326464#16/62\",\"3167\":\"v-43326464#16/63\",\"3168\":\"v-43326464#16/64\",\"3169\":\"v-43326464#16/65\",\"3170\":\"v-43326464#16/66\",\"3171\":\"v-43326464#16/67\",\"3172\":\"v-43326464#16/68\",\"3173\":\"v-43326464#16/69\",\"3174\":\"v-43326464#16/70\",\"3175\":\"v-43326464#16/71\",\"3176\":\"v-43326464#16/72\",\"3177\":\"v-43326464#16/73\",\"3178\":\"v-43326464#17\",\"3179\":\"v-43326464#17/74\",\"3180\":\"v-43326464#17/75\",\"3181\":\"v-43326464#17/76\",\"3182\":\"v-43326464#17/77\",\"3183\":\"v-43326464#17/78\",\"3184\":\"v-43326464#17/79\",\"3185\":\"v-43326464#17/80\",\"3186\":\"v-43326464#17/81\",\"3187\":\"v-43326464#17/82\",\"3188\":\"v-43326464#17/83\",\"3189\":\"v-43326464#17/84\",\"3190\":\"v-43326464#17/85\",\"3191\":\"v-43326464#17/86\",\"3192\":\"v-43326464#17/87\",\"3193\":\"v-43326464#17/88\",\"3194\":\"v-43326464#17/89\",\"3195\":\"v-43326464#17/90\",\"3196\":\"v-43326464#17/91\",\"3197\":\"v-43326464#17/92\",\"3198\":\"v-43326464#17/93\",\"3199\":\"v-43326464#17/94\",\"3200\":\"v-43326464#17/95\",\"3201\":\"v-43326464#17/96\",\"3202\":\"v-43326464#17/97\",\"3203\":\"v-43326464#17/98\",\"3204\":\"v-43326464#17/99\",\"3205\":\"v-43326464#17/100\",\"3206\":\"v-43326464@0\",\"3207\":\"v-663d49b4\",\"3208\":\"v-663d49b4#0/0\",\"3209\":\"v-663d49b4#0/1\",\"3210\":\"v-663d49b4#0/2\",\"3211\":\"v-663d49b4#0/3\",\"3212\":\"v-663d49b4#0/4\",\"3213\":\"v-663d49b4#0/5\",\"3214\":\"v-663d49b4#0/6\",\"3215\":\"v-663d49b4#0/7\",\"3216\":\"v-663d49b4#0/8\",\"3217\":\"v-663d49b4#0/9\",\"3218\":\"v-663d49b4#0/10\",\"3219\":\"v-663d49b4#0/11\",\"3220\":\"v-663d49b4#0/12\",\"3221\":\"v-663d49b4#0/13\",\"3222\":\"v-663d49b4#0/14\",\"3223\":\"v-663d49b4#0/15\",\"3224\":\"v-663d49b4#0/16\",\"3225\":\"v-663d49b4#0/17\",\"3226\":\"v-663d49b4#0/18\",\"3227\":\"v-663d49b4#0/19\",\"3228\":\"v-663d49b4#0/20\",\"3229\":\"v-663d49b4#0/21\",\"3230\":\"v-663d49b4#0/22\",\"3231\":\"v-663d49b4#0/23\",\"3232\":\"v-663d49b4#0/24\",\"3233\":\"v-663d49b4#0/25\",\"3234\":\"v-663d49b4#0/26\",\"3235\":\"v-663d49b4#0/27\",\"3236\":\"v-663d49b4#0/28\",\"3237\":\"v-663d49b4#0/29\",\"3238\":\"v-663d49b4#0/30\",\"3239\":\"v-663d49b4#0/31\",\"3240\":\"v-663d49b4#0/32\",\"3241\":\"v-663d49b4#0/33\",\"3242\":\"v-663d49b4#0/34\",\"3243\":\"v-663d49b4#0/35\",\"3244\":\"v-663d49b4#0/36\",\"3245\":\"v-663d49b4#0/37\",\"3246\":\"v-663d49b4#0/38\",\"3247\":\"v-663d49b4#0/39\",\"3248\":\"v-663d49b4#0/40\",\"3249\":\"v-663d49b4#0/41\",\"3250\":\"v-663d49b4#0/42\",\"3251\":\"v-663d49b4#0/43\",\"3252\":\"v-663d49b4#0/44\",\"3253\":\"v-663d49b4#0/45\",\"3254\":\"v-663d49b4#0/46\",\"3255\":\"v-663d49b4#0/47\",\"3256\":\"v-663d49b4#0/48\",\"3257\":\"v-663d49b4#0/49\",\"3258\":\"v-663d49b4@0\",\"3259\":\"v-6c463f6f\",\"3260\":\"v-6c463f6f#1\",\"3261\":\"v-6c463f6f#1/0\",\"3262\":\"v-6c463f6f#1/1\",\"3263\":\"v-6c463f6f#1/2\",\"3264\":\"v-6c463f6f#1/3\",\"3265\":\"v-6c463f6f#1/4\",\"3266\":\"v-6c463f6f#1/5\",\"3267\":\"v-6c463f6f#1/6\",\"3268\":\"v-6c463f6f#1/7\",\"3269\":\"v-6c463f6f#1/8\",\"3270\":\"v-6c463f6f#2\",\"3271\":\"v-6c463f6f#2/0\",\"3272\":\"v-6c463f6f#2/1\",\"3273\":\"v-6c463f6f#2/2\",\"3274\":\"v-6c463f6f#2/3\",\"3275\":\"v-6c463f6f#2/4\",\"3276\":\"v-6c463f6f#2/5\",\"3277\":\"v-6c463f6f#2/6\",\"3278\":\"v-6c463f6f#2/7\",\"3279\":\"v-6c463f6f#2/8\",\"3280\":\"v-6c463f6f#2/9\",\"3281\":\"v-6c463f6f#2/10\",\"3282\":\"v-6c463f6f#2/11\",\"3283\":\"v-6c463f6f#2/12\",\"3284\":\"v-6c463f6f#3\",\"3285\":\"v-6c463f6f#3/0\",\"3286\":\"v-6c463f6f#3/1\",\"3287\":\"v-6c463f6f#3/2\",\"3288\":\"v-6c463f6f#3/3\",\"3289\":\"v-6c463f6f#3/4\",\"3290\":\"v-6c463f6f#3/5\",\"3291\":\"v-6c463f6f#3/6\",\"3292\":\"v-6c463f6f#3/7\",\"3293\":\"v-6c463f6f#3/8\",\"3294\":\"v-6c463f6f#3/9\",\"3295\":\"v-6c463f6f#3/10\",\"3296\":\"v-6c463f6f#3/11\",\"3297\":\"v-6c463f6f#3/12\",\"3298\":\"v-6c463f6f#3/13\",\"3299\":\"v-6c463f6f#3/14\",\"3300\":\"v-6c463f6f#3/15\",\"3301\":\"v-6c463f6f#3/16\",\"3302\":\"v-6c463f6f#3/17\",\"3303\":\"v-6c463f6f#3/18\",\"3304\":\"v-6c463f6f#3/19\",\"3305\":\"v-6c463f6f#3/20\",\"3306\":\"v-6c463f6f#3/21\",\"3307\":\"v-6c463f6f#3/22\",\"3308\":\"v-6c463f6f#3/23\",\"3309\":\"v-6c463f6f#3/24\",\"3310\":\"v-6c463f6f#3/25\",\"3311\":\"v-6c463f6f#3/26\",\"3312\":\"v-6c463f6f#3/27\",\"3313\":\"v-6c463f6f#3/28\",\"3314\":\"v-6c463f6f#3/29\",\"3315\":\"v-6c463f6f#4\",\"3316\":\"v-6c463f6f#4/0\",\"3317\":\"v-6c463f6f#4/1\",\"3318\":\"v-6c463f6f#4/2\",\"3319\":\"v-6c463f6f#4/3\",\"3320\":\"v-6c463f6f#4/4\",\"3321\":\"v-6c463f6f#4/5\",\"3322\":\"v-6c463f6f#4/6\",\"3323\":\"v-6c463f6f#4/7\",\"3324\":\"v-6c463f6f#4/8\",\"3325\":\"v-6c463f6f#4/9\",\"3326\":\"v-6c463f6f#4/10\",\"3327\":\"v-6c463f6f#4/11\",\"3328\":\"v-6c463f6f#4/12\",\"3329\":\"v-6c463f6f#4/13\",\"3330\":\"v-6c463f6f#5\",\"3331\":\"v-6c463f6f#5/0\",\"3332\":\"v-6c463f6f#5/1\",\"3333\":\"v-6c463f6f#5/2\",\"3334\":\"v-6c463f6f#5/3\",\"3335\":\"v-6c463f6f#5/4\",\"3336\":\"v-6c463f6f#5/5\",\"3337\":\"v-6c463f6f#5/6\",\"3338\":\"v-6c463f6f#5/7\",\"3339\":\"v-6c463f6f#5/8\",\"3340\":\"v-6c463f6f#5/9\",\"3341\":\"v-6c463f6f#5/10\",\"3342\":\"v-6c463f6f#5/11\",\"3343\":\"v-6c463f6f#6\",\"3344\":\"v-6c463f6f#6/12\",\"3345\":\"v-6c463f6f#6/13\",\"3346\":\"v-6c463f6f#6/14\",\"3347\":\"v-6c463f6f#6/15\",\"3348\":\"v-92d5e906\",\"3349\":\"v-92d5e906#1\",\"3350\":\"v-92d5e906#2\",\"3351\":\"v-92d5e906#2/0\",\"3352\":\"v-92d5e906#2/1\",\"3353\":\"v-92d5e906#2/2\",\"3354\":\"v-92d5e906#2/3\",\"3355\":\"v-92d5e906#3\",\"3356\":\"v-92d5e906#3/0\",\"3357\":\"v-92d5e906#3/1\",\"3358\":\"v-92d5e906#3/2\",\"3359\":\"v-92d5e906#3/3\",\"3360\":\"v-92d5e906#3/4\",\"3361\":\"v-92d5e906#3/5\",\"3362\":\"v-92d5e906#3/6\",\"3363\":\"v-92d5e906#3/7\",\"3364\":\"v-92d5e906#3/8\",\"3365\":\"v-92d5e906#3/9\",\"3366\":\"v-92d5e906#3/10\",\"3367\":\"v-92d5e906#3/11\",\"3368\":\"v-92d5e906#3/12\",\"3369\":\"v-92d5e906#3/13\",\"3370\":\"v-92d5e906#3/14\",\"3371\":\"v-3f4e2366\",\"3372\":\"v-3f4e2366#1\",\"3373\":\"v-3f4e2366#1/0\",\"3374\":\"v-3f4e2366#1/1\",\"3375\":\"v-3f4e2366#1/2\",\"3376\":\"v-3f4e2366#2\",\"3377\":\"v-3f4e2366#2/0\",\"3378\":\"v-3f4e2366#2/1\",\"3379\":\"v-3f4e2366#2/2\",\"3380\":\"v-3f4e2366#2/3\",\"3381\":\"v-3f4e2366#2/4\",\"3382\":\"v-3f4e2366#2/5\",\"3383\":\"v-3f4e2366#2/6\",\"3384\":\"v-3f4e2366#2/7\",\"3385\":\"v-3f4e2366#2/8\",\"3386\":\"v-3f4e2366#2/9\",\"3387\":\"v-3f4e2366#2/10\",\"3388\":\"v-3f4e2366#2/11\",\"3389\":\"v-3f4e2366#2/12\",\"3390\":\"v-3f4e2366#3\",\"3391\":\"v-3f4e2366#3/0\",\"3392\":\"v-3f4e2366#3/1\",\"3393\":\"v-3f4e2366#3/2\",\"3394\":\"v-3f4e2366#3/3\",\"3395\":\"v-3f4e2366#3/4\",\"3396\":\"v-3f4e2366#3/5\",\"3397\":\"v-3f4e2366#3/6\",\"3398\":\"v-3f4e2366#3/7\",\"3399\":\"v-3f4e2366#3/8\",\"3400\":\"v-3f4e2366@0\",\"3401\":\"v-1c512bc6\",\"3402\":\"v-1c512bc6#1\",\"3403\":\"v-1c512bc6#1/0\",\"3404\":\"v-1c512bc6#1/1\",\"3405\":\"v-1c512bc6#2\",\"3406\":\"v-1c512bc6#3\",\"3407\":\"v-1c512bc6#3/0\",\"3408\":\"v-1c512bc6#3/1\",\"3409\":\"v-1c512bc6#4\",\"3410\":\"v-1c512bc6#4/0\",\"3411\":\"v-1c512bc6#4/1\",\"3412\":\"v-1c512bc6#4/2\",\"3413\":\"v-1c512bc6#4/3\",\"3414\":\"v-1c512bc6#4/4\",\"3415\":\"v-1c512bc6#4/5\",\"3416\":\"v-1c512bc6#5\",\"3417\":\"v-1c512bc6#5/0\",\"3418\":\"v-1c512bc6#5/1\",\"3419\":\"v-1c512bc6#5/2\",\"3420\":\"v-1c512bc6#5/3\",\"3421\":\"v-1c512bc6#6\",\"3422\":\"v-1c512bc6#6/0\",\"3423\":\"v-1c512bc6#6/1\",\"3424\":\"v-1c512bc6#7\",\"3425\":\"v-1c512bc6#7/2\",\"3426\":\"v-1c512bc6#7/3\",\"3427\":\"v-1c512bc6#7/4\",\"3428\":\"v-1c512bc6#7/5\",\"3429\":\"v-1c512bc6#7/6\",\"3430\":\"v-1c512bc6#7/7\",\"3431\":\"v-1c512bc6#7/8\",\"3432\":\"v-1c512bc6#8\",\"3433\":\"v-1c512bc6#8/0\",\"3434\":\"v-1c512bc6#8/1\",\"3435\":\"v-1c512bc6#8/2\",\"3436\":\"v-1c512bc6#8/3\",\"3437\":\"v-1c512bc6#8/4\",\"3438\":\"v-1c512bc6#8/5\",\"3439\":\"v-1c512bc6#8/6\",\"3440\":\"v-1c512bc6#8/7\",\"3441\":\"v-1c512bc6#8/8\",\"3442\":\"v-1c512bc6#8/9\",\"3443\":\"v-1c512bc6#8/10\",\"3444\":\"v-1c512bc6#8/11\",\"3445\":\"v-1c512bc6#8/12\",\"3446\":\"v-1c512bc6#8/13\",\"3447\":\"v-1c512bc6#8/14\",\"3448\":\"v-1c512bc6#8/15\",\"3449\":\"v-1c512bc6#8/16\",\"3450\":\"v-1c512bc6#9\",\"3451\":\"v-1c512bc6#9/17\",\"3452\":\"v-1c512bc6#9/18\",\"3453\":\"v-129932ed\",\"3454\":\"v-3ca32bee\",\"3455\":\"v-2d09fb6e\",\"3456\":\"v-3b97888e\",\"3457\":\"v-2d0a8026\",\"3458\":\"v-0ed74a07\",\"3459\":\"v-b1fe3b2e\",\"3460\":\"v-58f42cfe\",\"3461\":\"v-e2a54816\",\"3462\":\"v-7c53fcda\",\"3463\":\"v-c9bbfba2\",\"3464\":\"v-eec056ba\",\"3465\":\"v-564155e4\",\"3466\":\"v-1c1f42f9\",\"3467\":\"v-fa14c1f4\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[2],\"1\":[null,7],\"2\":[2],\"3\":[2],\"4\":[null,2],\"5\":[null,2],\"6\":[null,2],\"7\":[null,4],\"8\":[null,4],\"9\":[1],\"10\":[2],\"11\":[1],\"12\":[16],\"13\":[1],\"14\":[null,2],\"15\":[null,2],\"16\":[null,6],\"17\":[null,4],\"18\":[null,4],\"19\":[null,3],\"20\":[null,2],\"21\":[null,4],\"22\":[null,7],\"23\":[null,2],\"24\":[null,1],\"25\":[null,2],\"26\":[1],\"27\":[2],\"28\":[null,9],\"29\":[null,7],\"30\":[null,2],\"31\":[null,1],\"32\":[null,12],\"33\":[null,1],\"34\":[null,7],\"35\":[1],\"36\":[null,8],\"37\":[null,5],\"38\":[null,4],\"39\":[null,3],\"40\":[null,8],\"41\":[null,3],\"42\":[null,2],\"43\":[null,4],\"44\":[null,3],\"45\":[null,2],\"46\":[null,3],\"47\":[1],\"48\":[null,6],\"49\":[null,2],\"50\":[null,6],\"51\":[1],\"52\":[1],\"53\":[null,4],\"54\":[null,6],\"55\":[null,6],\"56\":[null,5],\"57\":[null,1],\"58\":[null,6],\"59\":[null,18],\"60\":[null,8],\"61\":[1],\"62\":[null,16],\"63\":[null,6],\"64\":[null,7],\"65\":[null,9],\"66\":[null,6],\"67\":[null,12],\"68\":[null,14],\"69\":[null,16],\"70\":[null,2],\"71\":[null,6],\"72\":[null,14],\"73\":[1],\"74\":[null,10],\"75\":[1],\"76\":[null,5],\"77\":[null,4],\"78\":[null,17],\"79\":[null,8],\"80\":[1],\"81\":[null,7],\"82\":[null,2],\"83\":[null,12],\"84\":[null,4],\"85\":[null,4],\"86\":[null,4],\"87\":[1],\"88\":[null,5],\"89\":[null,5],\"90\":[null,5],\"91\":[null,5],\"92\":[null,2],\"93\":[null,3],\"94\":[1],\"95\":[null,5],\"96\":[null,2],\"97\":[null,7],\"98\":[null,10],\"99\":[2],\"100\":[null,10],\"101\":[null,9],\"102\":[null,1],\"103\":[null,8],\"104\":[null,14],\"105\":[null,9],\"106\":[1],\"107\":[null,12],\"108\":[null,4],\"109\":[null,4],\"110\":[null,2],\"111\":[null,12],\"112\":[null,11],\"113\":[null,11],\"114\":[null,7],\"115\":[null,3],\"116\":[null,1],\"117\":[null,12],\"118\":[null,10],\"119\":[null,11],\"120\":[null,5],\"121\":[null,9],\"122\":[null,6],\"123\":[null,3],\"124\":[null,5],\"125\":[null,10],\"126\":[null,5],\"127\":[null,6],\"128\":[null,7],\"129\":[null,4],\"130\":[null,6],\"131\":[null,3],\"132\":[null,7],\"133\":[null,14],\"134\":[null,35],\"135\":[null,26],\"136\":[null,3],\"137\":[null,3],\"138\":[null,8],\"139\":[null,8],\"140\":[1],\"141\":[null,5],\"142\":[null,8],\"143\":[1],\"144\":[null,12],\"145\":[null,13],\"146\":[null,6],\"147\":[null,2],\"148\":[null,6],\"149\":[null,6],\"150\":[null,8],\"151\":[null,12],\"152\":[null,2],\"153\":[null,11],\"154\":[null,1],\"155\":[null,9],\"156\":[null,8],\"157\":[null,9],\"158\":[null,13],\"159\":[null,3],\"160\":[null,4],\"161\":[null,7],\"162\":[null,4],\"163\":[null,5],\"164\":[null,3],\"165\":[1],\"166\":[null,8],\"167\":[null,7],\"168\":[null,1],\"169\":[null,11],\"170\":[null,2],\"171\":[null,9],\"172\":[1],\"173\":[null,2],\"174\":[null,9],\"175\":[null,14],\"176\":[null,8],\"177\":[null,6],\"178\":[null,15],\"179\":[null,18],\"180\":[null,11],\"181\":[null,15],\"182\":[1],\"183\":[null,2],\"184\":[1],\"185\":[null,6],\"186\":[null,1],\"187\":[null,15],\"188\":[null,6],\"189\":[null,2],\"190\":[null,4],\"191\":[null,1],\"192\":[null,12],\"193\":[null,4],\"194\":[null,6],\"195\":[null,8],\"196\":[null,1],\"197\":[null,2],\"198\":[null,1],\"199\":[null,3],\"200\":[null,10],\"201\":[null,4],\"202\":[null,6],\"203\":[null,5],\"204\":[null,1],\"205\":[null,21],\"206\":[null,15],\"207\":[2],\"208\":[null,14],\"209\":[null,2],\"210\":[null,20],\"211\":[null,1],\"212\":[null,3],\"213\":[null,8],\"214\":[null,8],\"215\":[null,3],\"216\":[null,4],\"217\":[null,12],\"218\":[null,17],\"219\":[null,5],\"220\":[1],\"221\":[null,16],\"222\":[null,13],\"223\":[null,7],\"224\":[null,7],\"225\":[null,5],\"226\":[null,17],\"227\":[null,7],\"228\":[null,15],\"229\":[null,4],\"230\":[null,2],\"231\":[null,2],\"232\":[null,2],\"233\":[null,2],\"234\":[1],\"235\":[null,2],\"236\":[null,15],\"237\":[null,40],\"238\":[null,1],\"239\":[null,2],\"240\":[null,8],\"241\":[null,8],\"242\":[null,7],\"243\":[null,7],\"244\":[null,7],\"245\":[1],\"246\":[null,20],\"247\":[null,4],\"248\":[null,17],\"249\":[null,4],\"250\":[null,2],\"251\":[null,24],\"252\":[null,7],\"253\":[null,11],\"254\":[null,2],\"255\":[1],\"256\":[null,10],\"257\":[null,5],\"258\":[null,1],\"259\":[null,5],\"260\":[null,3],\"261\":[null,10],\"262\":[null,17],\"263\":[null,10],\"264\":[null,12],\"265\":[null,4],\"266\":[null,13],\"267\":[null,7],\"268\":[null,13],\"269\":[null,14],\"270\":[1],\"271\":[null,5],\"272\":[null,11],\"273\":[null,11],\"274\":[null,7],\"275\":[null,2],\"276\":[null,13],\"277\":[null,2],\"278\":[null,11],\"279\":[null,1],\"280\":[null,13],\"281\":[null,1],\"282\":[null,2],\"283\":[null,16],\"284\":[null,14],\"285\":[null,2],\"286\":[null,7],\"287\":[null,7],\"288\":[null,20],\"289\":[null,16],\"290\":[1],\"291\":[null,5],\"292\":[1],\"293\":[null,20],\"294\":[null,6],\"295\":[null,8],\"296\":[null,3],\"297\":[null,4],\"298\":[null,5],\"299\":[null,3],\"300\":[null,2],\"301\":[null,5],\"302\":[null,14],\"303\":[null,1],\"304\":[null,12],\"305\":[null,6],\"306\":[null,4],\"307\":[null,4],\"308\":[null,14],\"309\":[null,5],\"310\":[null,9],\"311\":[null,8],\"312\":[null,2],\"313\":[null,10],\"314\":[null,17],\"315\":[1],\"316\":[null,5],\"317\":[null,10],\"318\":[null,4],\"319\":[null,4],\"320\":[null,4],\"321\":[null,11],\"322\":[null,9],\"323\":[null,18],\"324\":[null,15],\"325\":[null,3],\"326\":[null,7],\"327\":[null,2],\"328\":[null,4],\"329\":[null,5],\"330\":[null,3],\"331\":[null,4],\"332\":[null,7],\"333\":[null,4],\"334\":[null,1],\"335\":[null,14],\"336\":[null,10],\"337\":[null,5],\"338\":[null,17],\"339\":[null,10],\"340\":[null,4],\"341\":[null,15],\"342\":[null,13],\"343\":[null,3],\"344\":[null,2],\"345\":[null,10],\"346\":[null,9],\"347\":[null,5],\"348\":[null,13],\"349\":[null,5],\"350\":[1],\"351\":[null,9],\"352\":[null,2],\"353\":[null,6],\"354\":[null,7],\"355\":[1],\"356\":[null,13],\"357\":[null,1],\"358\":[null,11],\"359\":[null,14],\"360\":[null,7],\"361\":[null,6],\"362\":[null,2],\"363\":[null,9],\"364\":[null,4],\"365\":[null,4],\"366\":[null,2],\"367\":[null,11],\"368\":[null,10],\"369\":[null,11],\"370\":[null,12],\"371\":[1],\"372\":[null,6],\"373\":[null,1],\"374\":[null,19],\"375\":[null,2],\"376\":[null,12],\"377\":[null,12],\"378\":[null,17],\"379\":[null,8],\"380\":[null,3],\"381\":[null,15],\"382\":[null,7],\"383\":[null,2],\"384\":[null,21],\"385\":[null,5],\"386\":[null,2],\"387\":[null,12],\"388\":[null,7],\"389\":[null,18],\"390\":[null,null,2],\"391\":[1],\"392\":[null,2],\"393\":[null,4],\"394\":[null,1],\"395\":[1],\"396\":[7],\"397\":[null,6],\"398\":[null,10],\"399\":[null,11],\"400\":[null,7],\"401\":[5],\"402\":[null,1],\"403\":[null,1],\"404\":[null,1],\"405\":[null,4],\"406\":[null,3],\"407\":[null,1],\"408\":[null,2],\"409\":[null,1],\"410\":[null,1],\"411\":[null,1],\"412\":[null,1],\"413\":[null,2],\"414\":[null,2],\"415\":[null,4],\"416\":[null,2],\"417\":[null,2],\"418\":[null,3],\"419\":[null,1],\"420\":[null,4],\"421\":[null,11],\"422\":[3],\"423\":[null,3],\"424\":[null,6],\"425\":[null,6],\"426\":[7],\"427\":[null,2],\"428\":[null,2],\"429\":[null,5],\"430\":[null,1],\"431\":[null,5],\"432\":[null,7],\"433\":[null,1],\"434\":[null,3],\"435\":[null,8],\"436\":[null,2],\"437\":[null,2],\"438\":[null,8],\"439\":[1],\"440\":[4],\"441\":[null,7],\"442\":[2],\"443\":[null,2],\"444\":[null,2],\"445\":[null,3],\"446\":[null,2],\"447\":[null,2],\"448\":[null,6],\"449\":[null,5],\"450\":[4],\"451\":[null,2],\"452\":[null,3],\"453\":[null,2],\"454\":[null,2],\"455\":[null,1],\"456\":[null,1],\"457\":[null,1],\"458\":[null,2],\"459\":[null,3],\"460\":[null,5],\"461\":[null,3],\"462\":[2],\"463\":[null,6],\"464\":[1],\"465\":[null,12],\"466\":[null,11],\"467\":[null,1],\"468\":[null,2],\"469\":[null,3],\"470\":[null,3],\"471\":[null,6],\"472\":[null,2],\"473\":[null,7],\"474\":[2],\"475\":[null,2],\"476\":[null,2],\"477\":[null,1],\"478\":[null,17],\"479\":[null,2],\"480\":[null,12],\"481\":[null,3],\"482\":[null,3],\"483\":[null,2],\"484\":[null,2],\"485\":[null,10],\"486\":[null,1],\"487\":[null,7],\"488\":[null,9],\"489\":[null,3],\"490\":[null,3],\"491\":[6],\"492\":[null,1],\"493\":[null,10],\"494\":[null,1],\"495\":[null,2],\"496\":[null,7],\"497\":[null,11],\"498\":[4],\"499\":[1],\"500\":[null,2],\"501\":[null,5],\"502\":[null,6],\"503\":[null,7],\"504\":[null,6],\"505\":[null,2],\"506\":[null,2],\"507\":[3],\"508\":[null,5],\"509\":[null,9],\"510\":[null,6],\"511\":[null,7],\"512\":[null,13],\"513\":[3],\"514\":[1],\"515\":[null,2],\"516\":[null,12],\"517\":[null,9],\"518\":[null,11],\"519\":[null,12],\"520\":[null,4],\"521\":[1],\"522\":[null,6],\"523\":[null,2],\"524\":[null,13],\"525\":[null,2],\"526\":[null,7],\"527\":[1],\"528\":[null,6],\"529\":[null,9],\"530\":[null,6],\"531\":[null,2],\"532\":[null,15],\"533\":[null,7],\"534\":[4],\"535\":[null,5],\"536\":[null,3],\"537\":[null,4],\"538\":[null,2],\"539\":[null,3],\"540\":[null,2],\"541\":[null,3],\"542\":[null,4],\"543\":[null,10],\"544\":[null,6],\"545\":[null,1],\"546\":[null,1],\"547\":[null,2],\"548\":[5],\"549\":[null,4],\"550\":[null,3],\"551\":[null,4],\"552\":[null,5],\"553\":[null,7],\"554\":[1],\"555\":[3],\"556\":[null,6],\"557\":[null,7],\"558\":[null,5],\"559\":[null,5],\"560\":[3],\"561\":[null,1],\"562\":[null,11],\"563\":[null,1],\"564\":[null,11],\"565\":[null,1],\"566\":[null,9],\"567\":[null,2],\"568\":[null,5],\"569\":[null,3],\"570\":[3],\"571\":[null,4],\"572\":[null,7],\"573\":[null,6],\"574\":[null,7],\"575\":[null,8],\"576\":[null,1],\"577\":[null,1],\"578\":[null,1],\"579\":[null,1],\"580\":[null,2],\"581\":[null,1],\"582\":[null,1],\"583\":[null,1],\"584\":[null,2],\"585\":[null,1],\"586\":[null,1],\"587\":[null,1],\"588\":[null,2],\"589\":[null,1],\"590\":[null,1],\"591\":[null,1],\"592\":[null,1],\"593\":[null,1],\"594\":[null,1],\"595\":[null,1],\"596\":[3],\"597\":[null,10],\"598\":[null,3],\"599\":[1],\"600\":[2],\"601\":[null,7],\"602\":[null,6],\"603\":[3],\"604\":[null,8],\"605\":[null,9],\"606\":[null,1],\"607\":[null,3],\"608\":[null,9],\"609\":[null,8],\"610\":[null,4],\"611\":[null,9],\"612\":[1],\"613\":[null,2],\"614\":[6],\"615\":[null,13],\"616\":[null,11],\"617\":[null,6],\"618\":[4],\"619\":[null,16],\"620\":[null,8],\"621\":[null,1],\"622\":[null,4],\"623\":[null,5],\"624\":[null,4],\"625\":[null,6],\"626\":[null,10],\"627\":[5],\"628\":[null,11],\"629\":[null,5],\"630\":[null,4],\"631\":[null,6],\"632\":[null,2],\"633\":[null,5],\"634\":[null,6],\"635\":[null,6],\"636\":[6],\"637\":[null,17],\"638\":[null,8],\"639\":[7],\"640\":[null,6],\"641\":[null,2],\"642\":[null,5],\"643\":[null,8],\"644\":[null,2],\"645\":[null,6],\"646\":[null,11],\"647\":[null,2],\"648\":[null,5],\"649\":[null,7],\"650\":[null,2],\"651\":[null,5],\"652\":[null,4],\"653\":[4],\"654\":[null,11],\"655\":[null,8],\"656\":[null,8],\"657\":[3],\"658\":[null,8],\"659\":[null,3],\"660\":[6],\"661\":[null,7],\"662\":[null,12],\"663\":[null,4],\"664\":[null,5],\"665\":[null,9],\"666\":[null,4],\"667\":[null,9],\"668\":[null,3],\"669\":[null,1],\"670\":[4],\"671\":[null,2],\"672\":[null,3],\"673\":[null,6],\"674\":[null,26],\"675\":[null,6],\"676\":[null,20],\"677\":[null,10],\"678\":[null,3],\"679\":[null,2],\"680\":[null,7],\"681\":[null,9],\"682\":[null,10],\"683\":[null,6],\"684\":[null,5],\"685\":[null,3],\"686\":[1],\"687\":[3],\"688\":[null,5],\"689\":[null,10],\"690\":[null,5],\"691\":[null,9],\"692\":[null,9],\"693\":[null,6],\"694\":[null,6],\"695\":[null,9],\"696\":[17],\"697\":[null,2],\"698\":[null,4],\"699\":[null,4],\"700\":[null,3],\"701\":[null,null,2],\"702\":[1],\"703\":[4],\"704\":[null,1],\"705\":[5],\"706\":[null,1],\"707\":[null,4],\"708\":[null,1],\"709\":[null,8],\"710\":[null,1],\"711\":[null,12],\"712\":[null,1],\"713\":[null,5],\"714\":[null,1],\"715\":[null,5],\"716\":[null,1],\"717\":[null,8],\"718\":[null,1],\"719\":[null,18],\"720\":[null,2],\"721\":[null,1],\"722\":[null,2],\"723\":[null,1],\"724\":[4],\"725\":[null,3],\"726\":[null,5],\"727\":[null,3],\"728\":[null,2],\"729\":[null,2],\"730\":[null,3],\"731\":[1],\"732\":[2],\"733\":[null,3],\"734\":[null,2],\"735\":[null,8],\"736\":[null,2],\"737\":[null,4],\"738\":[null,2],\"739\":[null,15],\"740\":[3],\"741\":[null,2],\"742\":[null,2],\"743\":[null,3],\"744\":[null,11],\"745\":[null,2],\"746\":[null,3],\"747\":[null,6],\"748\":[null,2],\"749\":[null,2],\"750\":[null,12],\"751\":[null,8],\"752\":[null,9],\"753\":[null,13],\"754\":[4],\"755\":[null,5],\"756\":[4],\"757\":[null,1],\"758\":[null,2],\"759\":[null,1],\"760\":[null,1],\"761\":[null,2],\"762\":[null,1],\"763\":[5],\"764\":[null,2],\"765\":[null,2],\"766\":[null,3],\"767\":[null,2],\"768\":[null,2],\"769\":[null,1],\"770\":[null,3],\"771\":[null,2],\"772\":[null,5],\"773\":[null,2],\"774\":[null,2],\"775\":[null,1],\"776\":[null,3],\"777\":[null,2],\"778\":[null,3],\"779\":[null,2],\"780\":[null,2],\"781\":[null,3],\"782\":[null,1],\"783\":[null,2],\"784\":[null,1],\"785\":[null,4],\"786\":[null,2],\"787\":[null,1],\"788\":[null,1],\"789\":[2],\"790\":[null,2],\"791\":[null,2],\"792\":[null,2],\"793\":[null,3],\"794\":[null,4],\"795\":[null,8],\"796\":[null,14],\"797\":[null,9],\"798\":[null,2],\"799\":[null,2],\"800\":[null,3],\"801\":[null,2],\"802\":[null,7],\"803\":[null,4],\"804\":[null,2],\"805\":[null,9],\"806\":[5],\"807\":[null,3],\"808\":[null,3],\"809\":[null,2],\"810\":[null,3],\"811\":[null,1],\"812\":[null,1],\"813\":[null,2],\"814\":[null,1],\"815\":[null,2],\"816\":[null,2],\"817\":[null,1],\"818\":[null,1],\"819\":[null,3],\"820\":[null,4],\"821\":[null,2],\"822\":[null,8],\"823\":[null,2],\"824\":[null,3],\"825\":[null,1],\"826\":[null,2],\"827\":[null,3],\"828\":[null,1],\"829\":[null,2],\"830\":[null,2],\"831\":[null,2],\"832\":[null,1],\"833\":[null,7],\"834\":[null,2],\"835\":[null,3],\"836\":[null,7],\"837\":[null,2],\"838\":[null,4],\"839\":[null,2],\"840\":[null,4],\"841\":[5],\"842\":[null,9],\"843\":[null,3],\"844\":[null,3],\"845\":[null,2],\"846\":[null,1],\"847\":[2],\"848\":[null,1],\"849\":[null,6],\"850\":[null,4],\"851\":[null,4],\"852\":[null,3],\"853\":[null,4],\"854\":[null,3],\"855\":[null,3],\"856\":[4],\"857\":[null,5],\"858\":[null,6],\"859\":[null,6],\"860\":[3],\"861\":[null,8],\"862\":[null,3],\"863\":[null,1],\"864\":[null,3],\"865\":[null,1],\"866\":[5],\"867\":[null,26],\"868\":[null,2],\"869\":[null,2],\"870\":[null,1],\"871\":[null,2],\"872\":[null,5],\"873\":[null,6],\"874\":[null,23],\"875\":[null,3],\"876\":[null,2],\"877\":[null,4],\"878\":[null,7],\"879\":[null,5],\"880\":[2],\"881\":[null,5],\"882\":[2],\"883\":[null,4],\"884\":[1],\"885\":[null,10],\"886\":[null,2],\"887\":[null,1],\"888\":[null,1],\"889\":[null,1],\"890\":[null,1],\"891\":[null,4],\"892\":[null,7],\"893\":[null,1],\"894\":[null,8],\"895\":[null,9],\"896\":[null,8],\"897\":[null,13],\"898\":[null,20],\"899\":[1],\"900\":[null,7],\"901\":[null,1],\"902\":[null,5],\"903\":[null,5],\"904\":[null,2],\"905\":[null,5],\"906\":[null,3],\"907\":[null,6],\"908\":[null,2],\"909\":[null,30],\"910\":[null,15],\"911\":[1],\"912\":[null,4],\"913\":[null,1],\"914\":[null,10],\"915\":[2],\"916\":[null,4],\"917\":[null,2],\"918\":[null,2],\"919\":[null,2],\"920\":[null,6],\"921\":[null,5],\"922\":[3],\"923\":[null,9],\"924\":[null,4],\"925\":[null,1],\"926\":[null,1],\"927\":[4],\"928\":[null,1],\"929\":[null,4],\"930\":[null,2],\"931\":[6],\"932\":[null,1],\"933\":[null,2],\"934\":[null,3],\"935\":[null,2],\"936\":[null,1],\"937\":[null,1],\"938\":[null,1],\"939\":[2],\"940\":[null,4],\"941\":[null,5],\"942\":[null,1],\"943\":[null,1],\"944\":[null,4],\"945\":[null,4],\"946\":[3],\"947\":[null,2],\"948\":[null,6],\"949\":[null,5],\"950\":[null,1],\"951\":[null,2],\"952\":[null,4],\"953\":[null,2],\"954\":[null,2],\"955\":[null,2],\"956\":[4],\"957\":[null,12],\"958\":[null,6],\"959\":[null,5],\"960\":[null,4],\"961\":[3],\"962\":[null,4],\"963\":[null,5],\"964\":[3],\"965\":[null,2],\"966\":[null,1],\"967\":[null,1],\"968\":[null,1],\"969\":[null,1],\"970\":[1],\"971\":[null,3],\"972\":[null,2],\"973\":[null,6],\"974\":[null,1],\"975\":[null,2],\"976\":[null,7],\"977\":[null,8],\"978\":[1],\"979\":[null,3],\"980\":[null,6],\"981\":[null,1],\"982\":[1],\"983\":[null,3],\"984\":[null,1],\"985\":[null,6],\"986\":[null,4],\"987\":[null,2],\"988\":[null,2],\"989\":[null,3],\"990\":[null,6],\"991\":[null,2],\"992\":[null,4],\"993\":[null,4],\"994\":[null,1],\"995\":[null,5],\"996\":[null,4],\"997\":[null,2],\"998\":[null,9],\"999\":[null,2],\"1000\":[null,7],\"1001\":[null,14],\"1002\":[null,4],\"1003\":[null,1],\"1004\":[1],\"1005\":[1],\"1006\":[null,8],\"1007\":[null,3],\"1008\":[null,2],\"1009\":[1],\"1010\":[null,1],\"1011\":[null,6],\"1012\":[null,6],\"1013\":[null,5],\"1014\":[null,5],\"1015\":[null,4],\"1016\":[null,1],\"1017\":[null,7],\"1018\":[null,4],\"1019\":[1],\"1020\":[null,1],\"1021\":[null,6],\"1022\":[null,3],\"1023\":[null,3],\"1024\":[null,6],\"1025\":[1],\"1026\":[null,8],\"1027\":[null,4],\"1028\":[null,2],\"1029\":[null,3],\"1030\":[null,2],\"1031\":[null,1],\"1032\":[null,3],\"1033\":[null,5],\"1034\":[null,19],\"1035\":[null,12],\"1036\":[null,7],\"1037\":[null,11],\"1038\":[null,11],\"1039\":[null,12],\"1040\":[null,13],\"1041\":[null,11],\"1042\":[null,16],\"1043\":[null,2],\"1044\":[null,13],\"1045\":[null,2],\"1046\":[null,6],\"1047\":[null,1],\"1048\":[null,8],\"1049\":[null,2],\"1050\":[null,9],\"1051\":[null,1],\"1052\":[null,7],\"1053\":[null,5],\"1054\":[null,8],\"1055\":[null,1],\"1056\":[null,7],\"1057\":[null,2],\"1058\":[null,6],\"1059\":[null,6],\"1060\":[null,2],\"1061\":[null,null,2],\"1062\":[1],\"1063\":[3],\"1064\":[null,6],\"1065\":[3],\"1066\":[null,2],\"1067\":[null,1],\"1068\":[null,3],\"1069\":[null,1],\"1070\":[null,1],\"1071\":[null,1],\"1072\":[null,2],\"1073\":[null,2],\"1074\":[null,3],\"1075\":[3],\"1076\":[null,4],\"1077\":[null,1],\"1078\":[null,1],\"1079\":[null,2],\"1080\":[null,1],\"1081\":[null,1],\"1082\":[null,2],\"1083\":[null,1],\"1084\":[null,1],\"1085\":[null,3],\"1086\":[null,1],\"1087\":[null,3],\"1088\":[null,4],\"1089\":[null,1],\"1090\":[null,2],\"1091\":[null,5],\"1092\":[null,1],\"1093\":[null,2],\"1094\":[null,7],\"1095\":[null,1],\"1096\":[null,2],\"1097\":[null,2],\"1098\":[null,1],\"1099\":[null,2],\"1100\":[null,6],\"1101\":[null,1],\"1102\":[null,2],\"1103\":[null,5],\"1104\":[null,1],\"1105\":[null,1],\"1106\":[null,4],\"1107\":[null,1],\"1108\":[null,2],\"1109\":[null,3],\"1110\":[null,1],\"1111\":[null,2],\"1112\":[null,6],\"1113\":[null,1],\"1114\":[null,2],\"1115\":[null,2],\"1116\":[null,1],\"1117\":[null,1],\"1118\":[null,1],\"1119\":[null,1],\"1120\":[null,2],\"1121\":[null,3],\"1122\":[null,1],\"1123\":[null,2],\"1124\":[null,2],\"1125\":[null,1],\"1126\":[null,1],\"1127\":[null,1],\"1128\":[null,1],\"1129\":[null,1],\"1130\":[null,2],\"1131\":[null,1],\"1132\":[null,2],\"1133\":[null,6],\"1134\":[null,1],\"1135\":[null,3],\"1136\":[null,1],\"1137\":[null,1],\"1138\":[null,3],\"1139\":[null,2],\"1140\":[null,1],\"1141\":[null,2],\"1142\":[null,2],\"1143\":[null,1],\"1144\":[null,2],\"1145\":[null,2],\"1146\":[null,1],\"1147\":[null,2],\"1148\":[null,4],\"1149\":[3],\"1150\":[null,1],\"1151\":[null,1],\"1152\":[null,1],\"1153\":[null,1],\"1154\":[null,1],\"1155\":[null,3],\"1156\":[null,2],\"1157\":[null,1],\"1158\":[null,3],\"1159\":[null,1],\"1160\":[null,1],\"1161\":[null,2],\"1162\":[null,2],\"1163\":[null,1],\"1164\":[null,4],\"1165\":[null,2],\"1166\":[null,1],\"1167\":[null,1],\"1168\":[2],\"1169\":[null,14],\"1170\":[null,3],\"1171\":[null,2],\"1172\":[null,8],\"1173\":[null,3],\"1174\":[null,6],\"1175\":[null,23],\"1176\":[null,29],\"1177\":[null,13],\"1178\":[3],\"1179\":[1],\"1180\":[null,1],\"1181\":[null,10],\"1182\":[null,1],\"1183\":[null,7],\"1184\":[null,1],\"1185\":[1],\"1186\":[null,1],\"1187\":[null,4],\"1188\":[null,2],\"1189\":[null,1],\"1190\":[null,14],\"1191\":[null,1],\"1192\":[null,2],\"1193\":[null,2],\"1194\":[null,1],\"1195\":[null,8],\"1196\":[null,8],\"1197\":[null,8],\"1198\":[null,2],\"1199\":[2],\"1200\":[null,10],\"1201\":[null,19],\"1202\":[null,22],\"1203\":[null,11],\"1204\":[null,12],\"1205\":[2],\"1206\":[null,3],\"1207\":[null,6],\"1208\":[null,3],\"1209\":[4],\"1210\":[null,2],\"1211\":[null,1],\"1212\":[null,1],\"1213\":[null,1],\"1214\":[null,2],\"1215\":[null,3],\"1216\":[null,1],\"1217\":[null,2],\"1218\":[null,2],\"1219\":[null,3],\"1220\":[null,3],\"1221\":[null,1],\"1222\":[null,1],\"1223\":[null,5],\"1224\":[null,4],\"1225\":[null,3],\"1226\":[null,1],\"1227\":[null,1],\"1228\":[null,1],\"1229\":[null,3],\"1230\":[null,2],\"1231\":[null,5],\"1232\":[null,5],\"1233\":[null,2],\"1234\":[null,5],\"1235\":[null,1],\"1236\":[null,8],\"1237\":[null,2],\"1238\":[null,5],\"1239\":[null,7],\"1240\":[null,1],\"1241\":[null,2],\"1242\":[null,2],\"1243\":[null,3],\"1244\":[null,null,2],\"1245\":[1],\"1246\":[3],\"1247\":[null,5],\"1248\":[null,6],\"1249\":[null,1],\"1250\":[null,17],\"1251\":[null,3],\"1252\":[null,2],\"1253\":[null,1],\"1254\":[null,2],\"1255\":[null,6],\"1256\":[null,5],\"1257\":[null,1],\"1258\":[null,2],\"1259\":[null,10],\"1260\":[null,5],\"1261\":[null,1],\"1262\":[null,4],\"1263\":[null,7],\"1264\":[null,2],\"1265\":[null,2],\"1266\":[null,3],\"1267\":[null,2],\"1268\":[null,1],\"1269\":[null,2],\"1270\":[null,2],\"1271\":[null,1],\"1272\":[null,5],\"1273\":[null,3],\"1274\":[null,3],\"1275\":[null,4],\"1276\":[null,2],\"1277\":[null,1],\"1278\":[null,2],\"1279\":[null,5],\"1280\":[null,3],\"1281\":[null,1],\"1282\":[null,2],\"1283\":[null,3],\"1284\":[1],\"1285\":[null,4],\"1286\":[null,8],\"1287\":[null,6],\"1288\":[null,10],\"1289\":[null,12],\"1290\":[null,9],\"1291\":[null,2],\"1292\":[null,11],\"1293\":[1],\"1294\":[null,7],\"1295\":[null,3],\"1296\":[null,3],\"1297\":[null,6],\"1298\":[null,9],\"1299\":[null,1],\"1300\":[1],\"1301\":[null,13],\"1302\":[null,2],\"1303\":[null,2],\"1304\":[null,7],\"1305\":[null,3],\"1306\":[1],\"1307\":[null,5],\"1308\":[null,8],\"1309\":[null,2],\"1310\":[null,9],\"1311\":[null,2],\"1312\":[null,2],\"1313\":[null,1],\"1314\":[null,1],\"1315\":[null,15],\"1316\":[null,17],\"1317\":[null,9],\"1318\":[null,12],\"1319\":[1],\"1320\":[null,2],\"1321\":[null,4],\"1322\":[1],\"1323\":[null,2],\"1324\":[null,7],\"1325\":[null,7],\"1326\":[null,3],\"1327\":[null,3],\"1328\":[null,3],\"1329\":[null,2],\"1330\":[null,6],\"1331\":[null,5],\"1332\":[null,3],\"1333\":[null,11],\"1334\":[null,8],\"1335\":[1],\"1336\":[null,2],\"1337\":[null,5],\"1338\":[null,3],\"1339\":[null,7],\"1340\":[null,1],\"1341\":[null,1],\"1342\":[null,4],\"1343\":[null,3],\"1344\":[null,6],\"1345\":[1],\"1346\":[null,7],\"1347\":[null,3],\"1348\":[null,6],\"1349\":[null,2],\"1350\":[null,6],\"1351\":[null,4],\"1352\":[null,4],\"1353\":[null,2],\"1354\":[null,3],\"1355\":[null,6],\"1356\":[1],\"1357\":[null,9],\"1358\":[null,5],\"1359\":[1],\"1360\":[null,7],\"1361\":[null,8],\"1362\":[null,7],\"1363\":[1],\"1364\":[null,3],\"1365\":[null,11],\"1366\":[null,2],\"1367\":[null,1],\"1368\":[null,3],\"1369\":[null,1],\"1370\":[null,3],\"1371\":[null,12],\"1372\":[null,2],\"1373\":[null,16],\"1374\":[null,3],\"1375\":[1],\"1376\":[null,3],\"1377\":[null,3],\"1378\":[null,8],\"1379\":[null,9],\"1380\":[null,11],\"1381\":[null,8],\"1382\":[null,3],\"1383\":[null,3],\"1384\":[null,2],\"1385\":[null,5],\"1386\":[null,5],\"1387\":[null,11],\"1388\":[null,5],\"1389\":[null,1],\"1390\":[null,5],\"1391\":[null,4],\"1392\":[null,1],\"1393\":[null,6],\"1394\":[null,4],\"1395\":[null,4],\"1396\":[null,3],\"1397\":[null,4],\"1398\":[null,3],\"1399\":[null,3],\"1400\":[null,7],\"1401\":[null,7],\"1402\":[1],\"1403\":[null,13],\"1404\":[null,10],\"1405\":[null,7],\"1406\":[null,14],\"1407\":[null,2],\"1408\":[null,15],\"1409\":[1],\"1410\":[null,11],\"1411\":[null,20],\"1412\":[null,8],\"1413\":[null,4],\"1414\":[1],\"1415\":[null,6],\"1416\":[null,2],\"1417\":[null,6],\"1418\":[null,3],\"1419\":[1],\"1420\":[1],\"1421\":[null,12],\"1422\":[1],\"1423\":[null,10],\"1424\":[1],\"1425\":[null,5],\"1426\":[null,2],\"1427\":[null,4],\"1428\":[null,5],\"1429\":[null,5],\"1430\":[null,2],\"1431\":[null,5],\"1432\":[null,2],\"1433\":[null,5],\"1434\":[null,3],\"1435\":[null,3],\"1436\":[null,10],\"1437\":[null,2],\"1438\":[null,3],\"1439\":[null,7],\"1440\":[null,3],\"1441\":[null,5],\"1442\":[null,4],\"1443\":[null,6],\"1444\":[2],\"1445\":[null,2],\"1446\":[null,2],\"1447\":[null,4],\"1448\":[null,2],\"1449\":[null,2],\"1450\":[null,5],\"1451\":[null,2],\"1452\":[null,null,2],\"1453\":[3],\"1454\":[null,6],\"1455\":[3],\"1456\":[null,2],\"1457\":[null,1],\"1458\":[null,2],\"1459\":[null,1],\"1460\":[null,1],\"1461\":[null,3],\"1462\":[null,2],\"1463\":[null,9],\"1464\":[null,16],\"1465\":[null,15],\"1466\":[null,1],\"1467\":[null,13],\"1468\":[null,2],\"1469\":[null,8],\"1470\":[null,11],\"1471\":[null,5],\"1472\":[null,14],\"1473\":[null,3],\"1474\":[null,3],\"1475\":[null,3],\"1476\":[null,3],\"1477\":[null,9],\"1478\":[null,8],\"1479\":[null,1],\"1480\":[null,5],\"1481\":[null,2],\"1482\":[null,5],\"1483\":[null,8],\"1484\":[null,1],\"1485\":[null,8],\"1486\":[null,1],\"1487\":[null,3],\"1488\":[2],\"1489\":[null,2],\"1490\":[null,9],\"1491\":[null,14],\"1492\":[null,2],\"1493\":[null,9],\"1494\":[1],\"1495\":[null,2],\"1496\":[null,14],\"1497\":[null,2],\"1498\":[null,12],\"1499\":[null,7],\"1500\":[null,5],\"1501\":[null,16],\"1502\":[null,7],\"1503\":[null,5],\"1504\":[null,3],\"1505\":[null,2],\"1506\":[null,6],\"1507\":[null,5],\"1508\":[null,2],\"1509\":[null,10],\"1510\":[null,16],\"1511\":[null,9],\"1512\":[null,9],\"1513\":[null,2],\"1514\":[null,5],\"1515\":[null,4],\"1516\":[null,4],\"1517\":[null,4],\"1518\":[null,2],\"1519\":[null,3],\"1520\":[null,3],\"1521\":[null,4],\"1522\":[2],\"1523\":[null,5],\"1524\":[1],\"1525\":[null,3],\"1526\":[null,5],\"1527\":[null,5],\"1528\":[null,6],\"1529\":[null,7],\"1530\":[null,13],\"1531\":[null,1],\"1532\":[null,4],\"1533\":[null,2],\"1534\":[null,18],\"1535\":[1],\"1536\":[null,6],\"1537\":[null,2],\"1538\":[null,7],\"1539\":[null,5],\"1540\":[null,5],\"1541\":[null,5],\"1542\":[null,5],\"1543\":[null,1],\"1544\":[null,2],\"1545\":[null,6],\"1546\":[null,7],\"1547\":[null,3],\"1548\":[null,5],\"1549\":[null,3],\"1550\":[null,5],\"1551\":[null,9],\"1552\":[null,5],\"1553\":[null,1],\"1554\":[null,2],\"1555\":[null,5],\"1556\":[null,8],\"1557\":[1],\"1558\":[null,3],\"1559\":[null,16],\"1560\":[null,10],\"1561\":[null,2],\"1562\":[null,7],\"1563\":[null,10],\"1564\":[null,5],\"1565\":[null,3],\"1566\":[null,5],\"1567\":[null,2],\"1568\":[null,12],\"1569\":[null,9],\"1570\":[null,7],\"1571\":[null,7],\"1572\":[null,5],\"1573\":[1],\"1574\":[null,4],\"1575\":[null,3],\"1576\":[null,4],\"1577\":[null,3],\"1578\":[null,3],\"1579\":[null,3],\"1580\":[null,3],\"1581\":[null,4],\"1582\":[null,null,2],\"1583\":[1],\"1584\":[1],\"1585\":[null,1],\"1586\":[null,3],\"1587\":[null,3],\"1588\":[null,1],\"1589\":[null,1],\"1590\":[null,1],\"1591\":[null,1],\"1592\":[null,1],\"1593\":[null,1],\"1594\":[null,1],\"1595\":[null,1],\"1596\":[null,1],\"1597\":[null,1],\"1598\":[null,5],\"1599\":[1],\"1600\":[null,1],\"1601\":[null,3],\"1602\":[null,1],\"1603\":[null,1],\"1604\":[null,1],\"1605\":[null,1],\"1606\":[null,1],\"1607\":[null,2],\"1608\":[null,2],\"1609\":[null,6],\"1610\":[null,1],\"1611\":[null,1],\"1612\":[null,1],\"1613\":[null,2],\"1614\":[null,1],\"1615\":[null,4],\"1616\":[null,3],\"1617\":[null,1],\"1618\":[null,1],\"1619\":[null,1],\"1620\":[null,1],\"1621\":[1],\"1622\":[null,1],\"1623\":[null,2],\"1624\":[null,2],\"1625\":[null,1],\"1626\":[null,null,2],\"1627\":[1],\"1628\":[1],\"1629\":[null,2],\"1630\":[null,4],\"1631\":[null,18],\"1632\":[null,2],\"1633\":[null,9],\"1634\":[null,8],\"1635\":[null,11],\"1636\":[null,2],\"1637\":[null,7],\"1638\":[null,9],\"1639\":[null,7],\"1640\":[null,19],\"1641\":[null,2],\"1642\":[null,6],\"1643\":[null,3],\"1644\":[null,12],\"1645\":[null,3],\"1646\":[null,6],\"1647\":[null,5],\"1648\":[1],\"1649\":[null,3],\"1650\":[null,3],\"1651\":[null,6],\"1652\":[null,1],\"1653\":[null,2],\"1654\":[null,2],\"1655\":[null,2],\"1656\":[null,24],\"1657\":[null,2],\"1658\":[null,1],\"1659\":[null,3],\"1660\":[null,1],\"1661\":[null,1],\"1662\":[null,2],\"1663\":[null,2],\"1664\":[null,2],\"1665\":[null,5],\"1666\":[null,2],\"1667\":[null,1],\"1668\":[null,1],\"1669\":[null,1],\"1670\":[null,24],\"1671\":[null,3],\"1672\":[null,2],\"1673\":[null,26],\"1674\":[null,4],\"1675\":[null,2],\"1676\":[null,2],\"1677\":[null,4],\"1678\":[null,2],\"1679\":[null,1],\"1680\":[null,21],\"1681\":[null,2],\"1682\":[1],\"1683\":[null,3],\"1684\":[null,2],\"1685\":[null,2],\"1686\":[null,4],\"1687\":[null,32],\"1688\":[null,2],\"1689\":[null,1],\"1690\":[null,2],\"1691\":[null,1],\"1692\":[null,1],\"1693\":[null,1],\"1694\":[null,4],\"1695\":[null,2],\"1696\":[null,1],\"1697\":[null,1],\"1698\":[null,1],\"1699\":[null,3],\"1700\":[null,3],\"1701\":[null,4],\"1702\":[null,33],\"1703\":[null,2],\"1704\":[null,4],\"1705\":[null,1],\"1706\":[null,3],\"1707\":[null,4],\"1708\":[null,5],\"1709\":[null,4],\"1710\":[1],\"1711\":[null,3],\"1712\":[null,2],\"1713\":[null,6],\"1714\":[null,5],\"1715\":[null,5],\"1716\":[null,2],\"1717\":[null,34],\"1718\":[null,2],\"1719\":[null,2],\"1720\":[null,3],\"1721\":[null,2],\"1722\":[null,3],\"1723\":[null,2],\"1724\":[null,2],\"1725\":[null,4],\"1726\":[null,2],\"1727\":[1],\"1728\":[null,4],\"1729\":[null,5],\"1730\":[1],\"1731\":[null,4],\"1732\":[null,null,2],\"1733\":[1],\"1734\":[null,2],\"1735\":[1],\"1736\":[2],\"1737\":[null,10],\"1738\":[null,8],\"1739\":[null,12],\"1740\":[1],\"1741\":[null,11],\"1742\":[null,11],\"1743\":[null,5],\"1744\":[null,5],\"1745\":[null,9],\"1746\":[null,4],\"1747\":[2],\"1748\":[null,10],\"1749\":[null,7],\"1750\":[null,3],\"1751\":[null,12],\"1752\":[null,14],\"1753\":[null,27],\"1754\":[null,1],\"1755\":[null,28],\"1756\":[3],\"1757\":[null,5],\"1758\":[null,1],\"1759\":[null,2],\"1760\":[null,11],\"1761\":[null,2],\"1762\":[null,2],\"1763\":[null,8],\"1764\":[null,3],\"1765\":[null,1],\"1766\":[null,8],\"1767\":[null,3],\"1768\":[null,2],\"1769\":[null,9],\"1770\":[null,17],\"1771\":[null,3],\"1772\":[null,29],\"1773\":[null,2],\"1774\":[null,20],\"1775\":[null,2],\"1776\":[null,1],\"1777\":[null,7],\"1778\":[null,9],\"1779\":[null,1],\"1780\":[1],\"1781\":[null,6],\"1782\":[null,2],\"1783\":[null,2],\"1784\":[null,1],\"1785\":[null,null,2],\"1786\":[1],\"1787\":[1],\"1788\":[null,3],\"1789\":[null,6],\"1790\":[null,4],\"1791\":[null,5],\"1792\":[null,3],\"1793\":[null,1],\"1794\":[null,3],\"1795\":[null,9],\"1796\":[null,8],\"1797\":[1],\"1798\":[1],\"1799\":[null,16],\"1800\":[null,1],\"1801\":[null,5],\"1802\":[null,7],\"1803\":[null,3],\"1804\":[null,7],\"1805\":[null,12],\"1806\":[null,2],\"1807\":[null,5],\"1808\":[null,5],\"1809\":[null,4],\"1810\":[1],\"1811\":[null,11],\"1812\":[null,2],\"1813\":[null,6],\"1814\":[null,6],\"1815\":[null,1],\"1816\":[null,4],\"1817\":[null,8],\"1818\":[null,6],\"1819\":[null,1],\"1820\":[null,6],\"1821\":[1],\"1822\":[null,3],\"1823\":[null,2],\"1824\":[null,2],\"1825\":[null,2],\"1826\":[null,6],\"1827\":[null,4],\"1828\":[null,2],\"1829\":[null,9],\"1830\":[null,12],\"1831\":[null,1],\"1832\":[1],\"1833\":[null,2],\"1834\":[null,31],\"1835\":[1],\"1836\":[null,11],\"1837\":[null,1],\"1838\":[null,16],\"1839\":[null,13],\"1840\":[null,1],\"1841\":[null,10],\"1842\":[null,1],\"1843\":[null,4],\"1844\":[1],\"1845\":[null,1],\"1846\":[null,4],\"1847\":[null,8],\"1848\":[null,7],\"1849\":[null,1],\"1850\":[null,16],\"1851\":[null,1],\"1852\":[null,7],\"1853\":[null,1],\"1854\":[null,5],\"1855\":[null,3],\"1856\":[null,3],\"1857\":[null,4],\"1858\":[null,3],\"1859\":[null,4],\"1860\":[null,1],\"1861\":[null,8],\"1862\":[null,1],\"1863\":[1],\"1864\":[null,2],\"1865\":[null,9],\"1866\":[null,41],\"1867\":[null,1],\"1868\":[null,8],\"1869\":[null,11],\"1870\":[null,1],\"1871\":[null,6],\"1872\":[null,1],\"1873\":[null,5],\"1874\":[null,3],\"1875\":[1],\"1876\":[null,10],\"1877\":[1],\"1878\":[null,19],\"1879\":[1],\"1880\":[null,3],\"1881\":[null,3],\"1882\":[null,8],\"1883\":[null,1],\"1884\":[null,null,2],\"1885\":[1],\"1886\":[null,3],\"1887\":[null,4],\"1888\":[3],\"1889\":[null,5],\"1890\":[null,9],\"1891\":[null,2],\"1892\":[null,16],\"1893\":[null,8],\"1894\":[null,10],\"1895\":[null,14],\"1896\":[null,3],\"1897\":[null,1],\"1898\":[1],\"1899\":[null,5],\"1900\":[null,32],\"1901\":[null,2],\"1902\":[null,8],\"1903\":[null,11],\"1904\":[null,8],\"1905\":[null,8],\"1906\":[null,15],\"1907\":[null,1],\"1908\":[null,4],\"1909\":[null,2],\"1910\":[null,6],\"1911\":[1],\"1912\":[null,16],\"1913\":[null,16],\"1914\":[null,1],\"1915\":[null,5],\"1916\":[null,27],\"1917\":[null,10],\"1918\":[null,5],\"1919\":[null,null,2],\"1920\":[1],\"1921\":[null,2],\"1922\":[null,1],\"1923\":[null,3],\"1924\":[null,3],\"1925\":[null,2],\"1926\":[1],\"1927\":[null,6],\"1928\":[null,3],\"1929\":[null,8],\"1930\":[null,2],\"1931\":[1],\"1932\":[null,17],\"1933\":[null,5],\"1934\":[1],\"1935\":[null,7],\"1936\":[null,2],\"1937\":[null,2],\"1938\":[null,2],\"1939\":[null,17],\"1940\":[null,8],\"1941\":[null,4],\"1942\":[1],\"1943\":[null,3],\"1944\":[null,2],\"1945\":[null,5],\"1946\":[null,1],\"1947\":[null,1],\"1948\":[null,3],\"1949\":[null,2],\"1950\":[null,6],\"1951\":[null,11],\"1952\":[null,2],\"1953\":[null,6],\"1954\":[null,5],\"1955\":[null,2],\"1956\":[null,5],\"1957\":[null,5],\"1958\":[null,2],\"1959\":[null,3],\"1960\":[null,4],\"1961\":[null,4],\"1962\":[null,2],\"1963\":[1],\"1964\":[null,1],\"1965\":[null,24],\"1966\":[null,3],\"1967\":[null,1],\"1968\":[null,5],\"1969\":[null,3],\"1970\":[null,8],\"1971\":[null,12],\"1972\":[null,12],\"1973\":[null,11],\"1974\":[null,3],\"1975\":[null,2],\"1976\":[null,11],\"1977\":[null,3],\"1978\":[null,2],\"1979\":[null,3],\"1980\":[null,3],\"1981\":[null,19],\"1982\":[null,2],\"1983\":[null,2],\"1984\":[null,13],\"1985\":[null,16],\"1986\":[null,2],\"1987\":[null,null,2],\"1988\":[1],\"1989\":[null,3],\"1990\":[null,4],\"1991\":[1],\"1992\":[null,11],\"1993\":[null,7],\"1994\":[null,4],\"1995\":[null,3],\"1996\":[null,3],\"1997\":[null,2],\"1998\":[null,14],\"1999\":[null,3],\"2000\":[null,3],\"2001\":[null,4],\"2002\":[null,2],\"2003\":[null,13],\"2004\":[null,7],\"2005\":[null,2],\"2006\":[1],\"2007\":[null,7],\"2008\":[null,42],\"2009\":[null,9],\"2010\":[null,11],\"2011\":[null,2],\"2012\":[null,12],\"2013\":[null,5],\"2014\":[null,40],\"2015\":[null,5],\"2016\":[1],\"2017\":[null,5],\"2018\":[null,35],\"2019\":[null,2],\"2020\":[null,14],\"2021\":[null,3],\"2022\":[null,2],\"2023\":[null,2],\"2024\":[null,7],\"2025\":[null,1],\"2026\":[2],\"2027\":[null,4],\"2028\":[null,3],\"2029\":[null,6],\"2030\":[null,9],\"2031\":[null,1],\"2032\":[null,8],\"2033\":[null,1],\"2034\":[null,null,2],\"2035\":[1],\"2036\":[null,3],\"2037\":[null,10],\"2038\":[null,7],\"2039\":[3],\"2040\":[null,13],\"2041\":[null,9],\"2042\":[null,1],\"2043\":[null,5],\"2044\":[null,9],\"2045\":[null,1],\"2046\":[3],\"2047\":[null,14],\"2048\":[null,7],\"2049\":[null,13],\"2050\":[null,6],\"2051\":[null,1],\"2052\":[null,19],\"2053\":[null,4],\"2054\":[null,6],\"2055\":[null,18],\"2056\":[null,1],\"2057\":[3],\"2058\":[null,14],\"2059\":[null,7],\"2060\":[null,9],\"2061\":[null,3],\"2062\":[null,12],\"2063\":[null,7],\"2064\":[null,3],\"2065\":[null,6],\"2066\":[null,12],\"2067\":[null,2],\"2068\":[null,13],\"2069\":[null,1],\"2070\":[null,5],\"2071\":[null,20],\"2072\":[null,9],\"2073\":[null,1],\"2074\":[2],\"2075\":[null,14],\"2076\":[null,7],\"2077\":[null,2],\"2078\":[null,12],\"2079\":[null,7],\"2080\":[null,3],\"2081\":[null,1],\"2082\":[null,21],\"2083\":[null,19],\"2084\":[null,1],\"2085\":[1],\"2086\":[null,2],\"2087\":[null,5],\"2088\":[null,17],\"2089\":[2],\"2090\":[null,18],\"2091\":[null,14],\"2092\":[null,2],\"2093\":[null,null,2],\"2094\":[1],\"2095\":[null,4],\"2096\":[1],\"2097\":[null,11],\"2098\":[null,9],\"2099\":[null,8],\"2100\":[null,4],\"2101\":[null,2],\"2102\":[null,2],\"2103\":[null,14],\"2104\":[null,10],\"2105\":[null,7],\"2106\":[1],\"2107\":[1],\"2108\":[null,1],\"2109\":[null,27],\"2110\":[null,2],\"2111\":[null,12],\"2112\":[null,7],\"2113\":[null,9],\"2114\":[null,8],\"2115\":[null,11],\"2116\":[null,5],\"2117\":[1],\"2118\":[null,12],\"2119\":[null,3],\"2120\":[null,9],\"2121\":[null,1],\"2122\":[1],\"2123\":[null,5],\"2124\":[null,3],\"2125\":[null,8],\"2126\":[null,2],\"2127\":[null,3],\"2128\":[null,1],\"2129\":[null,1],\"2130\":[null,1],\"2131\":[null,2],\"2132\":[null,12],\"2133\":[null,7],\"2134\":[null,1],\"2135\":[null,16],\"2136\":[null,7],\"2137\":[null,2],\"2138\":[null,14],\"2139\":[null,16],\"2140\":[null,4],\"2141\":[null,6],\"2142\":[null,2],\"2143\":[null,11],\"2144\":[null,3],\"2145\":[null,1],\"2146\":[null,1],\"2147\":[null,6],\"2148\":[null,1],\"2149\":[null,10],\"2150\":[null,1],\"2151\":[null,5],\"2152\":[null,null,2],\"2153\":[1],\"2154\":[null,4],\"2155\":[1],\"2156\":[null,7],\"2157\":[null,2],\"2158\":[null,23],\"2159\":[null,4],\"2160\":[null,7],\"2161\":[null,7],\"2162\":[null,5],\"2163\":[null,25],\"2164\":[null,15],\"2165\":[1],\"2166\":[null,23],\"2167\":[null,6],\"2168\":[null,16],\"2169\":[null,18],\"2170\":[null,10],\"2171\":[1],\"2172\":[null,20],\"2173\":[null,3],\"2174\":[null,14],\"2175\":[null,17],\"2176\":[null,11],\"2177\":[1],\"2178\":[null,19],\"2179\":[null,3],\"2180\":[null,14],\"2181\":[null,2],\"2182\":[null,14],\"2183\":[null,3],\"2184\":[null,9],\"2185\":[3],\"2186\":[null,13],\"2187\":[null,1],\"2188\":[null,19],\"2189\":[null,17],\"2190\":[null,6],\"2191\":[null,1],\"2192\":[null,1],\"2193\":[null,16],\"2194\":[null,1],\"2195\":[null,22],\"2196\":[null,13],\"2197\":[null,1],\"2198\":[null,null,2],\"2199\":[1],\"2200\":[null,3],\"2201\":[1],\"2202\":[null,6],\"2203\":[null,7],\"2204\":[1],\"2205\":[null,5],\"2206\":[null,74],\"2207\":[null,7],\"2208\":[null,22],\"2209\":[null,2],\"2210\":[null,10],\"2211\":[null,5],\"2212\":[null,17],\"2213\":[null,9],\"2214\":[null,8],\"2215\":[null,10],\"2216\":[null,13],\"2217\":[null,1],\"2218\":[null,3],\"2219\":[null,14],\"2220\":[null,15],\"2221\":[null,17],\"2222\":[null,17],\"2223\":[null,5],\"2224\":[null,30],\"2225\":[null,16],\"2226\":[null,6],\"2227\":[1],\"2228\":[null,4],\"2229\":[null,18],\"2230\":[null,2],\"2231\":[null,2],\"2232\":[null,15],\"2233\":[null,5],\"2234\":[null,16],\"2235\":[null,5],\"2236\":[null,14],\"2237\":[null,14],\"2238\":[null,1],\"2239\":[null,38],\"2240\":[null,8],\"2241\":[null,33],\"2242\":[null,5],\"2243\":[null,12],\"2244\":[null,17],\"2245\":[null,6],\"2246\":[null,8],\"2247\":[null,2],\"2248\":[null,6],\"2249\":[null,8],\"2250\":[null,7],\"2251\":[null,9],\"2252\":[null,2],\"2253\":[null,13],\"2254\":[null,9],\"2255\":[null,1],\"2256\":[null,4],\"2257\":[null,9],\"2258\":[null,6],\"2259\":[null,1],\"2260\":[null,50],\"2261\":[null,12],\"2262\":[null,null,2],\"2263\":[1],\"2264\":[null,7],\"2265\":[null,10],\"2266\":[1],\"2267\":[null,6],\"2268\":[null,7],\"2269\":[null,2],\"2270\":[null,8],\"2271\":[null,2],\"2272\":[null,18],\"2273\":[null,14],\"2274\":[null,5],\"2275\":[null,5],\"2276\":[null,6],\"2277\":[null,2],\"2278\":[null,7],\"2279\":[null,4],\"2280\":[null,5],\"2281\":[null,4],\"2282\":[null,8],\"2283\":[null,2],\"2284\":[null,1],\"2285\":[null,9],\"2286\":[null,6],\"2287\":[null,2],\"2288\":[null,6],\"2289\":[null,11],\"2290\":[null,2],\"2291\":[null,8],\"2292\":[1],\"2293\":[null,14],\"2294\":[null,12],\"2295\":[null,4],\"2296\":[null,21],\"2297\":[null,2],\"2298\":[null,15],\"2299\":[null,16],\"2300\":[null,12],\"2301\":[null,23],\"2302\":[null,2],\"2303\":[null,14],\"2304\":[null,8],\"2305\":[null,2],\"2306\":[1],\"2307\":[null,6],\"2308\":[null,2],\"2309\":[null,16],\"2310\":[null,12],\"2311\":[null,2],\"2312\":[null,14],\"2313\":[null,3],\"2314\":[null,2],\"2315\":[null,18],\"2316\":[null,2],\"2317\":[null,8],\"2318\":[null,2],\"2319\":[null,4],\"2320\":[null,16],\"2321\":[null,27],\"2322\":[null,2],\"2323\":[null,12],\"2324\":[null,18],\"2325\":[null,12],\"2326\":[1],\"2327\":[null,3],\"2328\":[null,null,2],\"2329\":[1],\"2330\":[null,3],\"2331\":[2],\"2332\":[null,23],\"2333\":[null,11],\"2334\":[null,4],\"2335\":[null,8],\"2336\":[null,6],\"2337\":[null,21],\"2338\":[null,1],\"2339\":[null,4],\"2340\":[null,6],\"2341\":[null,7],\"2342\":[null,13],\"2343\":[null,10],\"2344\":[null,1],\"2345\":[null,14],\"2346\":[null,10],\"2347\":[null,1],\"2348\":[2],\"2349\":[null,4],\"2350\":[null,36],\"2351\":[1],\"2352\":[null,16],\"2353\":[null,4],\"2354\":[null,11],\"2355\":[null,13],\"2356\":[null,21],\"2357\":[null,1],\"2358\":[null,6],\"2359\":[null,14],\"2360\":[null,1],\"2361\":[null,10],\"2362\":[null,45],\"2363\":[null,8],\"2364\":[null,11],\"2365\":[null,15],\"2366\":[null,20],\"2367\":[null,12],\"2368\":[3],\"2369\":[null,7],\"2370\":[null,17],\"2371\":[null,10],\"2372\":[null,17],\"2373\":[null,46],\"2374\":[null,9],\"2375\":[null,10],\"2376\":[null,21],\"2377\":[3],\"2378\":[null,16],\"2379\":[null,2],\"2380\":[null,23],\"2381\":[2],\"2382\":[null,8],\"2383\":[null,9],\"2384\":[null,8],\"2385\":[null,1],\"2386\":[null,25],\"2387\":[null,1],\"2388\":[null,22],\"2389\":[null,15],\"2390\":[null,6],\"2391\":[4],\"2392\":[null,13],\"2393\":[null,4],\"2394\":[null,12],\"2395\":[null,4],\"2396\":[null,13],\"2397\":[2],\"2398\":[null,5],\"2399\":[null,8],\"2400\":[null,16],\"2401\":[null,4],\"2402\":[null,35],\"2403\":[null,6],\"2404\":[null,1],\"2405\":[null,2],\"2406\":[null,2],\"2407\":[null,3],\"2408\":[null,5],\"2409\":[null,4],\"2410\":[null,1],\"2411\":[null,4],\"2412\":[null,2],\"2413\":[null,4],\"2414\":[null,5],\"2415\":[null,6],\"2416\":[null,12],\"2417\":[null,19],\"2418\":[null,16],\"2419\":[null,12],\"2420\":[null,38],\"2421\":[null,14],\"2422\":[null,16],\"2423\":[2],\"2424\":[null,2],\"2425\":[null,24],\"2426\":[null,7],\"2427\":[null,12],\"2428\":[null,1],\"2429\":[null,2],\"2430\":[null,2],\"2431\":[null,3],\"2432\":[null,3],\"2433\":[null,5],\"2434\":[null,4],\"2435\":[null,3],\"2436\":[null,1],\"2437\":[null,4],\"2438\":[null,2],\"2439\":[null,1],\"2440\":[null,4],\"2441\":[null,5],\"2442\":[null,6],\"2443\":[null,3],\"2444\":[null,2],\"2445\":[null,6],\"2446\":[null,5],\"2447\":[null,5],\"2448\":[null,5],\"2449\":[null,3],\"2450\":[null,3],\"2451\":[null,7],\"2452\":[null,9],\"2453\":[null,16],\"2454\":[null,36],\"2455\":[null,19],\"2456\":[2],\"2457\":[null,18],\"2458\":[null,8],\"2459\":[null,26],\"2460\":[null,7],\"2461\":[null,4],\"2462\":[null,null,2],\"2463\":[2],\"2464\":[null,2],\"2465\":[null,3],\"2466\":[null,5],\"2467\":[1],\"2468\":[null,3],\"2469\":[null,2],\"2470\":[null,4],\"2471\":[null,3],\"2472\":[null,3],\"2473\":[null,20],\"2474\":[null,1],\"2475\":[null,8],\"2476\":[null,2],\"2477\":[null,17],\"2478\":[null,15],\"2479\":[null,2],\"2480\":[null,48],\"2481\":[null,17],\"2482\":[3],\"2483\":[null,1],\"2484\":[null,7],\"2485\":[null,2],\"2486\":[null,3],\"2487\":[null,10],\"2488\":[null,2],\"2489\":[null,1],\"2490\":[null,8],\"2491\":[null,11],\"2492\":[null,12],\"2493\":[null,5],\"2494\":[null,9],\"2495\":[null,12],\"2496\":[null,12],\"2497\":[null,9],\"2498\":[null,2],\"2499\":[null,3],\"2500\":[null,5],\"2501\":[null,3],\"2502\":[null,3],\"2503\":[null,5],\"2504\":[null,4],\"2505\":[null,5],\"2506\":[null,20],\"2507\":[1],\"2508\":[null,7],\"2509\":[null,1],\"2510\":[null,1],\"2511\":[null,2],\"2512\":[null,3],\"2513\":[null,7],\"2514\":[null,11],\"2515\":[null,2],\"2516\":[null,2],\"2517\":[null,3],\"2518\":[null,1],\"2519\":[null,1],\"2520\":[null,1],\"2521\":[null,5],\"2522\":[null,1],\"2523\":[null,6],\"2524\":[null,24],\"2525\":[null,20],\"2526\":[null,19],\"2527\":[null,1],\"2528\":[null,24],\"2529\":[null,1],\"2530\":[null,1],\"2531\":[null,2],\"2532\":[null,15],\"2533\":[null,8],\"2534\":[null,5],\"2535\":[null,1],\"2536\":[null,8],\"2537\":[null,6],\"2538\":[null,12],\"2539\":[null,8],\"2540\":[null,9],\"2541\":[null,1],\"2542\":[null,8],\"2543\":[null,1],\"2544\":[null,12],\"2545\":[null,1],\"2546\":[null,8],\"2547\":[null,3],\"2548\":[null,3],\"2549\":[null,1],\"2550\":[null,5],\"2551\":[null,4],\"2552\":[null,4],\"2553\":[1],\"2554\":[null,8],\"2555\":[null,11],\"2556\":[null,3],\"2557\":[null,7],\"2558\":[null,7],\"2559\":[null,10],\"2560\":[null,5],\"2561\":[null,7],\"2562\":[null,10],\"2563\":[null,3],\"2564\":[null,16],\"2565\":[null,6],\"2566\":[4],\"2567\":[null,16],\"2568\":[null,11],\"2569\":[null,10],\"2570\":[null,5],\"2571\":[null,6],\"2572\":[null,2],\"2573\":[null,10],\"2574\":[null,23],\"2575\":[null,9],\"2576\":[null,8],\"2577\":[null,7],\"2578\":[null,12],\"2579\":[null,6],\"2580\":[2],\"2581\":[null,12],\"2582\":[null,2],\"2583\":[null,9],\"2584\":[null,11],\"2585\":[null,1],\"2586\":[null,3],\"2587\":[null,2],\"2588\":[null,6],\"2589\":[null,6],\"2590\":[null,null,2],\"2591\":[1],\"2592\":[4],\"2593\":[null,2],\"2594\":[null,3],\"2595\":[null,3],\"2596\":[1],\"2597\":[null,14],\"2598\":[null,5],\"2599\":[null,2],\"2600\":[null,4],\"2601\":[null,6],\"2602\":[1],\"2603\":[1],\"2604\":[null,7],\"2605\":[null,2],\"2606\":[null,15],\"2607\":[1],\"2608\":[null,6],\"2609\":[null,4],\"2610\":[null,3],\"2611\":[2],\"2612\":[null,2],\"2613\":[null,2],\"2614\":[null,8],\"2615\":[null,4],\"2616\":[null,2],\"2617\":[null,4],\"2618\":[null,5],\"2619\":[1],\"2620\":[null,3],\"2621\":[null,2],\"2622\":[null,1],\"2623\":[null,5],\"2624\":[null,5],\"2625\":[null,3],\"2626\":[null,4],\"2627\":[null,2],\"2628\":[null,10],\"2629\":[null,5],\"2630\":[null,7],\"2631\":[null,1],\"2632\":[null,2],\"2633\":[null,1],\"2634\":[null,5],\"2635\":[null,2],\"2636\":[null,2],\"2637\":[1],\"2638\":[null,5],\"2639\":[null,1],\"2640\":[null,2],\"2641\":[null,1],\"2642\":[null,2],\"2643\":[null,2],\"2644\":[null,2],\"2645\":[null,6],\"2646\":[1],\"2647\":[null,2],\"2648\":[null,5],\"2649\":[null,7],\"2650\":[null,9],\"2651\":[null,1],\"2652\":[null,2],\"2653\":[null,1],\"2654\":[null,3],\"2655\":[null,2],\"2656\":[null,3],\"2657\":[1],\"2658\":[null,2],\"2659\":[null,2],\"2660\":[null,5],\"2661\":[null,2],\"2662\":[null,3],\"2663\":[null,3],\"2664\":[null,2],\"2665\":[null,2],\"2666\":[null,7],\"2667\":[1],\"2668\":[null,8],\"2669\":[null,1],\"2670\":[null,2],\"2671\":[null,2],\"2672\":[null,2],\"2673\":[null,1],\"2674\":[null,1],\"2675\":[null,5],\"2676\":[null,9],\"2677\":[null,4],\"2678\":[1],\"2679\":[null,6],\"2680\":[null,4],\"2681\":[null,3],\"2682\":[null,7],\"2683\":[1],\"2684\":[null,3],\"2685\":[null,1],\"2686\":[null,2],\"2687\":[null,1],\"2688\":[null,7],\"2689\":[null,2],\"2690\":[null,3],\"2691\":[null,3],\"2692\":[null,4],\"2693\":[1],\"2694\":[null,5],\"2695\":[null,3],\"2696\":[null,2],\"2697\":[null,4],\"2698\":[null,9],\"2699\":[null,1],\"2700\":[null,1],\"2701\":[null,8],\"2702\":[null,1],\"2703\":[1],\"2704\":[null,10],\"2705\":[null,19],\"2706\":[null,1],\"2707\":[null,7],\"2708\":[1],\"2709\":[null,5],\"2710\":[1],\"2711\":[null,4],\"2712\":[null,5],\"2713\":[null,3],\"2714\":[null,4],\"2715\":[null,4],\"2716\":[null,8],\"2717\":[1],\"2718\":[null,4],\"2719\":[null,11],\"2720\":[2],\"2721\":[null,7],\"2722\":[null,7],\"2723\":[null,3],\"2724\":[null,1],\"2725\":[null,5],\"2726\":[null,6],\"2727\":[null,null,2],\"2728\":[1],\"2729\":[null,2],\"2730\":[null,4],\"2731\":[null,2],\"2732\":[null,3],\"2733\":[null,3],\"2734\":[1],\"2735\":[null,5],\"2736\":[null,10],\"2737\":[null,3],\"2738\":[null,2],\"2739\":[1],\"2740\":[null,6],\"2741\":[null,20],\"2742\":[null,2],\"2743\":[null,18],\"2744\":[null,7],\"2745\":[null,9],\"2746\":[null,9],\"2747\":[null,9],\"2748\":[null,57],\"2749\":[2],\"2750\":[null,5],\"2751\":[null,2],\"2752\":[null,4],\"2753\":[null,84],\"2754\":[null,6],\"2755\":[null,53],\"2756\":[null,7],\"2757\":[null,39],\"2758\":[null,5],\"2759\":[null,39],\"2760\":[null,2],\"2761\":[null,45],\"2762\":[null,10],\"2763\":[null,26],\"2764\":[null,4],\"2765\":[null,2],\"2766\":[null,2],\"2767\":[null,2],\"2768\":[null,3],\"2769\":[null,8],\"2770\":[null,3],\"2771\":[null,16],\"2772\":[null,17],\"2773\":[null,2],\"2774\":[null,2],\"2775\":[1],\"2776\":[null,6],\"2777\":[null,5],\"2778\":[null,36],\"2779\":[null,6],\"2780\":[null,15],\"2781\":[null,1],\"2782\":[null,4],\"2783\":[null,54],\"2784\":[null,5],\"2785\":[null,5],\"2786\":[null,16],\"2787\":[null,10],\"2788\":[null,4],\"2789\":[null,132],\"2790\":[null,16],\"2791\":[null,5],\"2792\":[null,9],\"2793\":[null,115],\"2794\":[null,7],\"2795\":[null,124],\"2796\":[1],\"2797\":[null,6],\"2798\":[null,3],\"2799\":[null,2],\"2800\":[null,4],\"2801\":[null,4],\"2802\":[null,4],\"2803\":[null,9],\"2804\":[null,4],\"2805\":[null,2],\"2806\":[1],\"2807\":[null,2],\"2808\":[null,1],\"2809\":[null,4],\"2810\":[1],\"2811\":[null,8],\"2812\":[null,3],\"2813\":[null,null,2],\"2814\":[1],\"2815\":[null,2],\"2816\":[null,4],\"2817\":[null,2],\"2818\":[null,2],\"2819\":[null,3],\"2820\":[null,1],\"2821\":[3],\"2822\":[null,10],\"2823\":[null,9],\"2824\":[null,9],\"2825\":[null,1],\"2826\":[null,4],\"2827\":[null,5],\"2828\":[null,6],\"2829\":[null,6],\"2830\":[null,4],\"2831\":[null,10],\"2832\":[null,3],\"2833\":[null,4],\"2834\":[null,4],\"2835\":[null,4],\"2836\":[null,1],\"2837\":[null,20],\"2838\":[null,22],\"2839\":[null,16],\"2840\":[null,13],\"2841\":[null,8],\"2842\":[null,5],\"2843\":[null,7],\"2844\":[null,2],\"2845\":[null,1],\"2846\":[null,6],\"2847\":[null,2],\"2848\":[null,7],\"2849\":[null,11],\"2850\":[null,7],\"2851\":[null,7],\"2852\":[null,2],\"2853\":[null,3],\"2854\":[2],\"2855\":[null,4],\"2856\":[null,9],\"2857\":[null,7],\"2858\":[null,6],\"2859\":[null,10],\"2860\":[1],\"2861\":[null,4],\"2862\":[null,61],\"2863\":[1],\"2864\":[null,62],\"2865\":[null,3],\"2866\":[null,2],\"2867\":[1],\"2868\":[null,127],\"2869\":[null,3],\"2870\":[null,2],\"2871\":[3],\"2872\":[null,63],\"2873\":[1],\"2874\":[null,2],\"2875\":[1],\"2876\":[1],\"2877\":[null,4],\"2878\":[null,null,2],\"2879\":[1],\"2880\":[null,3],\"2881\":[1],\"2882\":[null,40],\"2883\":[1],\"2884\":[null,10],\"2885\":[null,25],\"2886\":[null,3],\"2887\":[null,5],\"2888\":[null,7],\"2889\":[null,3],\"2890\":[1],\"2891\":[null,172],\"2892\":[1],\"2893\":[null,63],\"2894\":[1],\"2895\":[null,1],\"2896\":[null,null,2],\"2897\":[2],\"2898\":[null,4],\"2899\":[1],\"2900\":[null,11],\"2901\":[null,1],\"2902\":[null,4],\"2903\":[1],\"2904\":[null,14],\"2905\":[null,15],\"2906\":[null,12],\"2907\":[null,20],\"2908\":[null,15],\"2909\":[null,8],\"2910\":[null,7],\"2911\":[2],\"2912\":[null,2],\"2913\":[null,14],\"2914\":[null,20],\"2915\":[null,1],\"2916\":[null,10],\"2917\":[null,11],\"2918\":[null,9],\"2919\":[null,19],\"2920\":[null,11],\"2921\":[null,9],\"2922\":[null,10],\"2923\":[null,2],\"2924\":[null,8],\"2925\":[null,6],\"2926\":[1],\"2927\":[null,9],\"2928\":[null,17],\"2929\":[null,5],\"2930\":[null,17],\"2931\":[null,1],\"2932\":[null,16],\"2933\":[null,10],\"2934\":[null,20],\"2935\":[null,6],\"2936\":[null,2],\"2937\":[null,5],\"2938\":[null,5],\"2939\":[null,1],\"2940\":[null,16],\"2941\":[null,12],\"2942\":[null,14],\"2943\":[null,2],\"2944\":[null,11],\"2945\":[null,11],\"2946\":[null,8],\"2947\":[2],\"2948\":[null,7],\"2949\":[null,19],\"2950\":[null,3],\"2951\":[null,15],\"2952\":[null,15],\"2953\":[null,1],\"2954\":[null,8],\"2955\":[null,10],\"2956\":[null,4],\"2957\":[null,10],\"2958\":[null,5],\"2959\":[2],\"2960\":[null,9],\"2961\":[null,1],\"2962\":[1],\"2963\":[null,23],\"2964\":[null,null,2],\"2965\":[1],\"2966\":[2],\"2967\":[null,2],\"2968\":[null,3],\"2969\":[null,3],\"2970\":[null,3],\"2971\":[null,6],\"2972\":[null,5],\"2973\":[null,2],\"2974\":[null,2],\"2975\":[null,6],\"2976\":[null,3],\"2977\":[null,8],\"2978\":[null,3],\"2979\":[null,3],\"2980\":[null,2],\"2981\":[null,2],\"2982\":[null,3],\"2983\":[null,1],\"2984\":[null,1],\"2985\":[null,1],\"2986\":[null,2],\"2987\":[null,1],\"2988\":[null,1],\"2989\":[null,2],\"2990\":[null,2],\"2991\":[null,1],\"2992\":[null,4],\"2993\":[null,2],\"2994\":[null,2],\"2995\":[null,1],\"2996\":[null,2],\"2997\":[null,1],\"2998\":[null,1],\"2999\":[null,2],\"3000\":[null,1],\"3001\":[null,1],\"3002\":[null,4],\"3003\":[null,2],\"3004\":[null,2],\"3005\":[null,2],\"3006\":[null,1],\"3007\":[null,2],\"3008\":[null,1],\"3009\":[null,1],\"3010\":[null,1],\"3011\":[null,3],\"3012\":[null,1],\"3013\":[2],\"3014\":[null,2],\"3015\":[null,18],\"3016\":[null,3],\"3017\":[null,15],\"3018\":[null,2],\"3019\":[null,9],\"3020\":[null,14],\"3021\":[null,10],\"3022\":[null,2],\"3023\":[null,22],\"3024\":[2],\"3025\":[null,10],\"3026\":[null,19],\"3027\":[null,4],\"3028\":[null,22],\"3029\":[2],\"3030\":[null,7],\"3031\":[null,2],\"3032\":[null,6],\"3033\":[null,2],\"3034\":[null,6],\"3035\":[null,2],\"3036\":[null,9],\"3037\":[null,2],\"3038\":[null,8],\"3039\":[null,5],\"3040\":[null,2],\"3041\":[null,13],\"3042\":[null,2],\"3043\":[null,7],\"3044\":[2],\"3045\":[3],\"3046\":[null,4],\"3047\":[null,2],\"3048\":[null,82],\"3049\":[3],\"3050\":[null,7],\"3051\":[null,2],\"3052\":[null,27],\"3053\":[null,43],\"3054\":[null,39],\"3055\":[3],\"3056\":[null,3],\"3057\":[null,2],\"3058\":[null,35],\"3059\":[3],\"3060\":[null,6],\"3061\":[null,2],\"3062\":[null,29],\"3063\":[null,20],\"3064\":[null,5],\"3065\":[null,20],\"3066\":[2],\"3067\":[null,6],\"3068\":[null,2],\"3069\":[null,56],\"3070\":[2],\"3071\":[3],\"3072\":[null,5],\"3073\":[null,15],\"3074\":[null,2],\"3075\":[null,32],\"3076\":[null,7],\"3077\":[null,2],\"3078\":[null,23],\"3079\":[null,2],\"3080\":[null,12],\"3081\":[null,7],\"3082\":[null,2],\"3083\":[null,13],\"3084\":[null,37],\"3085\":[null,3],\"3086\":[null,8],\"3087\":[null,38],\"3088\":[null,2],\"3089\":[null,3],\"3090\":[null,39],\"3091\":[null,2],\"3092\":[null,9],\"3093\":[null,48],\"3094\":[3],\"3095\":[null,16],\"3096\":[null,59],\"3097\":[3],\"3098\":[null,11],\"3099\":[null,39],\"3100\":[null,5],\"3101\":[null,12],\"3102\":[2],\"3103\":[null,7],\"3104\":[null,41],\"3105\":[null,6],\"3106\":[null,3],\"3107\":[null,1],\"3108\":[null,3],\"3109\":[null,9],\"3110\":[null,7],\"3111\":[null,11],\"3112\":[null,8],\"3113\":[null,41],\"3114\":[null,4],\"3115\":[null,5],\"3116\":[null,22],\"3117\":[null,4],\"3118\":[null,3],\"3119\":[null,21],\"3120\":[null,4],\"3121\":[null,2],\"3122\":[null,5],\"3123\":[null,2],\"3124\":[null,24],\"3125\":[2],\"3126\":[null,7],\"3127\":[null,2],\"3128\":[null,2],\"3129\":[null,12],\"3130\":[null,2],\"3131\":[null,5],\"3132\":[null,3],\"3133\":[null,2],\"3134\":[null,2],\"3135\":[null,2],\"3136\":[null,2],\"3137\":[null,2],\"3138\":[null,2],\"3139\":[null,1],\"3140\":[null,3],\"3141\":[null,1],\"3142\":[null,4],\"3143\":[null,1],\"3144\":[null,2],\"3145\":[null,1],\"3146\":[null,3],\"3147\":[null,1],\"3148\":[null,3],\"3149\":[null,1],\"3150\":[null,4],\"3151\":[null,1],\"3152\":[null,5],\"3153\":[null,1],\"3154\":[null,3],\"3155\":[null,1],\"3156\":[null,4],\"3157\":[null,1],\"3158\":[null,7],\"3159\":[null,1],\"3160\":[null,8],\"3161\":[null,1],\"3162\":[null,7],\"3163\":[null,1],\"3164\":[null,8],\"3165\":[null,1],\"3166\":[null,8],\"3167\":[null,1],\"3168\":[null,8],\"3169\":[null,1],\"3170\":[null,7],\"3171\":[null,1],\"3172\":[null,6],\"3173\":[null,8],\"3174\":[null,2],\"3175\":[null,55],\"3176\":[null,63],\"3177\":[null,35],\"3178\":[2],\"3179\":[null,2],\"3180\":[null,1],\"3181\":[null,1],\"3182\":[null,4],\"3183\":[null,1],\"3184\":[null,5],\"3185\":[null,3],\"3186\":[null,5],\"3187\":[null,3],\"3188\":[null,6],\"3189\":[null,2],\"3190\":[null,7],\"3191\":[null,2],\"3192\":[null,5],\"3193\":[null,3],\"3194\":[null,5],\"3195\":[null,2],\"3196\":[null,5],\"3197\":[null,2],\"3198\":[null,2],\"3199\":[null,1],\"3200\":[null,3],\"3201\":[null,1],\"3202\":[null,3],\"3203\":[null,1],\"3204\":[null,2],\"3205\":[null,48],\"3206\":[null,null,2],\"3207\":[1],\"3208\":[null,2],\"3209\":[null,4],\"3210\":[null,8],\"3211\":[null,9],\"3212\":[null,9],\"3213\":[null,9],\"3214\":[null,6],\"3215\":[null,5],\"3216\":[null,6],\"3217\":[null,7],\"3218\":[null,4],\"3219\":[null,1],\"3220\":[null,1],\"3221\":[null,1],\"3222\":[null,1],\"3223\":[null,2],\"3224\":[null,2],\"3225\":[null,2],\"3226\":[null,5],\"3227\":[null,2],\"3228\":[null,1],\"3229\":[null,6],\"3230\":[null,3],\"3231\":[null,2],\"3232\":[null,2],\"3233\":[null,10],\"3234\":[null,3],\"3235\":[null,2],\"3236\":[null,1],\"3237\":[null,2],\"3238\":[null,43],\"3239\":[null,2],\"3240\":[null,14],\"3241\":[null,2],\"3242\":[null,3],\"3243\":[null,2],\"3244\":[null,4],\"3245\":[null,3],\"3246\":[null,15],\"3247\":[null,5],\"3248\":[null,16],\"3249\":[null,8],\"3250\":[null,26],\"3251\":[null,2],\"3252\":[null,4],\"3253\":[null,10],\"3254\":[null,3],\"3255\":[null,10],\"3256\":[null,32],\"3257\":[null,11],\"3258\":[null,null,2],\"3259\":[2],\"3260\":[1],\"3261\":[null,12],\"3262\":[null,4],\"3263\":[null,3],\"3264\":[null,4],\"3265\":[null,6],\"3266\":[null,3],\"3267\":[null,1],\"3268\":[null,5],\"3269\":[null,11],\"3270\":[1],\"3271\":[null,8],\"3272\":[null,5],\"3273\":[null,9],\"3274\":[null,5],\"3275\":[null,8],\"3276\":[null,5],\"3277\":[null,5],\"3278\":[null,5],\"3279\":[null,4],\"3280\":[null,4],\"3281\":[null,5],\"3282\":[null,4],\"3283\":[null,10],\"3284\":[1],\"3285\":[null,4],\"3286\":[null,39],\"3287\":[null,46],\"3288\":[null,3],\"3289\":[null,5],\"3290\":[null,3],\"3291\":[null,4],\"3292\":[null,3],\"3293\":[null,4],\"3294\":[null,8],\"3295\":[null,36],\"3296\":[null,2],\"3297\":[null,31],\"3298\":[null,2],\"3299\":[null,1],\"3300\":[null,6],\"3301\":[null,9],\"3302\":[null,3],\"3303\":[null,7],\"3304\":[null,1],\"3305\":[null,3],\"3306\":[null,14],\"3307\":[null,6],\"3308\":[null,4],\"3309\":[null,29],\"3310\":[null,2],\"3311\":[null,48],\"3312\":[null,5],\"3313\":[null,9],\"3314\":[null,2],\"3315\":[1],\"3316\":[null,6],\"3317\":[null,5],\"3318\":[null,6],\"3319\":[null,4],\"3320\":[null,5],\"3321\":[null,29],\"3322\":[null,1],\"3323\":[null,7],\"3324\":[null,1],\"3325\":[null,53],\"3326\":[null,1],\"3327\":[null,43],\"3328\":[null,1],\"3329\":[null,2],\"3330\":[1],\"3331\":[null,8],\"3332\":[null,1],\"3333\":[null,5],\"3334\":[null,1],\"3335\":[null,5],\"3336\":[null,1],\"3337\":[null,5],\"3338\":[null,2],\"3339\":[null,2],\"3340\":[null,25],\"3341\":[null,64],\"3342\":[null,87],\"3343\":[1],\"3344\":[null,6],\"3345\":[null,2],\"3346\":[null,26],\"3347\":[null,8],\"3348\":[1],\"3349\":[1],\"3350\":[1],\"3351\":[null,2],\"3352\":[null,8],\"3353\":[null,2],\"3354\":[null,9],\"3355\":[1],\"3356\":[null,2],\"3357\":[null,3],\"3358\":[null,3],\"3359\":[null,6],\"3360\":[null,2],\"3361\":[null,2],\"3362\":[null,3],\"3363\":[null,2],\"3364\":[null,3],\"3365\":[null,19],\"3366\":[null,2],\"3367\":[null,3],\"3368\":[null,14],\"3369\":[null,3],\"3370\":[null,2],\"3371\":[1],\"3372\":[1],\"3373\":[null,6],\"3374\":[null,4],\"3375\":[null,5],\"3376\":[1],\"3377\":[null,1],\"3378\":[null,2],\"3379\":[null,3],\"3380\":[null,18],\"3381\":[null,1],\"3382\":[null,2],\"3383\":[null,5],\"3384\":[null,4],\"3385\":[null,2],\"3386\":[null,1],\"3387\":[null,4],\"3388\":[null,742],\"3389\":[null,7],\"3390\":[1],\"3391\":[null,2],\"3392\":[null,1],\"3393\":[null,2],\"3394\":[null,40],\"3395\":[null,3],\"3396\":[null,1],\"3397\":[null,27],\"3398\":[null,7],\"3399\":[null,2],\"3400\":[null,null,1],\"3401\":[2],\"3402\":[1],\"3403\":[null,17],\"3404\":[null,1],\"3405\":[1],\"3406\":[2],\"3407\":[null,4],\"3408\":[null,10],\"3409\":[2],\"3410\":[null,7],\"3411\":[null,5],\"3412\":[null,5],\"3413\":[null,10],\"3414\":[null,3],\"3415\":[null,4],\"3416\":[2],\"3417\":[null,5],\"3418\":[null,4],\"3419\":[null,21],\"3420\":[null,2],\"3421\":[2],\"3422\":[null,7],\"3423\":[null,14],\"3424\":[1],\"3425\":[null,7],\"3426\":[null,7],\"3427\":[null,2],\"3428\":[null,126],\"3429\":[null,5],\"3430\":[null,19],\"3431\":[null,13],\"3432\":[1],\"3433\":[null,4],\"3434\":[null,2],\"3435\":[null,2],\"3436\":[null,3],\"3437\":[null,11],\"3438\":[null,10],\"3439\":[null,3],\"3440\":[null,4],\"3441\":[null,9],\"3442\":[null,2],\"3443\":[null,9],\"3444\":[null,3],\"3445\":[null,1],\"3446\":[null,3],\"3447\":[null,23],\"3448\":[null,3],\"3449\":[null,16],\"3450\":[1],\"3451\":[null,13],\"3452\":[null,7],\"3453\":[1],\"3454\":[2],\"3455\":[2],\"3456\":[1],\"3457\":[1],\"3458\":[1],\"3459\":[1],\"3460\":[1],\"3461\":[1],\"3462\":[1],\"3463\":[1],\"3464\":[1],\"3465\":[1],\"3466\":[1],\"3467\":[1]},\"averageFieldLength\":[2.3125623565272275,6.964043780153371,0.03258514428869815],\"storedFields\":{\"0\":{\"h\":\"Intro Page\"},\"1\":{\"t\":\"Place your introduction and profile here.\"},\"2\":{\"h\":\"计划-OKR\"},\"3\":{\"h\":\"2023-06\",\"a\":\"_2023-06\"},\"4\":{\"t\":\" 完成英语六级考试\"},\"5\":{\"t\":\" 阅读大型网站技术架构\"},\"6\":{\"t\":\" 产出一篇读后感\"},\"7\":{\"t\":\" 计划完成一个《知识商城》项目\"},\"8\":{\"t\":\" 为该计划做准备，后续会列出一系列的 OKR\"},\"9\":{\"h\":\"知识商城\",\"a\":\"知识商城\"},\"10\":{\"h\":\"Slide page\"},\"11\":{\"h\":\"大型网站技术架构\"},\"12\":{\"h\":\"Voxel-wise prediction of recurrent high grade glioma via proximity estimation coupled multi-dimensional SVM 复现\"},\"13\":{\"h\":\"复现过程\",\"a\":\"复现过程\"},\"14\":{\"t\":\"我根据对背景进行处理，留下了绿色区域与蓝色区域\"},\"15\":{\"t\":\"剔除了绿色区域较小的样本 \"},\"16\":{\"t\":\"剔除规则是：绿色区域/蓝色区域 > 20%\"},\"17\":{\"t\":\"根据 target 将每个像素五个模态的值与目标组成一行数据 \"},\"18\":{\"t\":\"蓝色区域：0；绿色区域：1\"},\"19\":{\"t\":\"写入.txt 文件里面\"},\"20\":{\"t\":\"对数据进行清洗 \"},\"21\":{\"t\":\"清洗数据：删除五个模态值中包含 0 的数据\"},\"22\":{\"t\":\"根据 kernel=\\\"rbf\\\", gamma=2, C=100, 去进行训练。\"},\"23\":{\"t\":\"结果如下：\"},\"24\":{\"t\":\"e0b2d28a35e1546ee0b9508fd961b59\"},\"25\":{\"t\":\"结果比较不理想。\"},\"26\":{\"h\":\"学习\",\"a\":\"学习\"},\"27\":{\"h\":\"sklearnex 加速\",\"a\":\"sklearnex-加速\"},\"28\":{\"t\":\"参考网址：https://www.cnblogs.com/feffery/p/16387854.html\"},\"29\":{\"t\":\"scikit-learn作为经典的机器学习框架，但其运算速度比较慢。借助 sklearnex 可以对运算速度有一定的提高。\"},\"30\":{\"t\":\"步骤：\"},\"31\":{\"t\":\"安装相关库\"},\"32\":{\"t\":\"pip install scikit-learn scikit-learn-intelex -i https://pypi.douban.com/simple/ \"},\"33\":{\"t\":\"相关代码\"},\"34\":{\"t\":\"from sklearnex import patch_sklearn, unpatch_sklearn patch_sklearn() \"},\"35\":{\"h\":\"处理数据\",\"a\":\"处理数据\"},\"36\":{\"t\":\"该篇论文的复现核心就是对五个模态数据进行标记，蓝色区域标记成 0 ，绿色区域标记成 1，送入SVM 模型进行训练。\"},\"37\":{\"t\":\"target 图片（实际上是01值二维矩阵）如下：\"},\"38\":{\"t\":\"CA_Recur_warpped_MNI80\"},\"39\":{\"t\":\"如何处理数据会极大影响训练后的结果。他的处理方式如下：\"},\"40\":{\"t\":\"对 target 二维矩阵，获取 max_x、max_y、min_x、min_y\"},\"41\":{\"t\":\"以这两个坐标所构成的矩阵的区域，去获取相对应区域 target数据\"},\"42\":{\"t\":\"以这两个坐标所构成的矩阵的区域，去获取相对应区域五个模态组成的矩阵数据\"},\"43\":{\"t\":\"为了后续计算方便，将该区域设置最大的范围 [100,100]\"},\"44\":{\"t\":\"结果相对于上面一种较好，结果如下：\"},\"45\":{\"t\":\"image-20230610144845761\"},\"46\":{\"t\":\"注：max_iter=20000\"},\"47\":{\"h\":\"问题\",\"a\":\"问题\"},\"48\":{\"t\":\"如果不设置 max_iter 那么就会一直训练（至少是3个小时以上了）\"},\"49\":{\"t\":\"有段代码没理解他的含义。\"},\"50\":{\"t\":\"multi_modal_data[:, :, :, multi_index] = (multi_modal_data[:, :, :, multi_index] * data) \"},\"51\":{\"h\":\"八股文基础篇\"},\"52\":{\"h\":\"基础架构\",\"a\":\"基础架构\"},\"53\":{\"t\":\"当你准备学习源码部分时候，不能陷入一个细节中，需要先看到全貌。\"},\"54\":{\"t\":\"把 Mysql 进行拆解一下，当执行一条语句时候，到底会经历哪些过程？\"},\"55\":{\"t\":\"select * from T where ID=10； \"},\"56\":{\"t\":\"Mysql 架构示意图，来此 geekTime。\"},\"57\":{\"t\":\"img\"},\"58\":{\"t\":\"从上图可以看出，Mysql 可以分为两层：Server 层和存储引擎层。\"},\"59\":{\"t\":\"Server 层包括连接器、查询缓存、分析器、优化器、执行器等，涵盖 MySQL 的大多数核心服务功能，以及所有的内置函数（如日期、时间、数学和加密函数等），所有跨存储引擎的功能都在这一层实现，比如存储过程、触发器、视图等。\"},\"60\":{\"t\":\"存储引擎层负责数据的存储和读取，以插件形式，支持 InnoDB、MyISAM、Memory 等多个存储引擎。\"},\"61\":{\"h\":\"连接器\",\"a\":\"连接器\"},\"62\":{\"t\":\"当你作为客户端，打算来使用 Mysql 时候，首先第一件事就是连接，连接器负责与客户端连接，获取权限，维持和管理连接。当你使用 navicat 连接某个服务器数据库，都会输入地址，用户名，密码，其实执行的连接命令如下：\"},\"63\":{\"t\":\"mysql -h$ip -P$port -u$user -p \"},\"64\":{\"t\":\"客户端与服务端的 Mysql 通过 TCP 连接后，连接器根据用用户名和密码就会开始验证你的身份。\"},\"65\":{\"t\":\"如果用户名或密码不对，你就会收到一个\\\"Access denied for user\\\"的错误，然后客户端程序结束执行。\"},\"66\":{\"t\":\"如果用户名密码认证通过，连接器会到权限表里面查出你拥有的权限。之后，这个连接里面的权限判断逻辑，都将依赖于此时读到的权限。\"},\"67\":{\"t\":\"当客户端连接完成后，没有后续操作，太长时间没有动静，连接器就会自动将它断开，这个时间由参数 wait_timeout 控制，默认时间是 8 小时。\"},\"68\":{\"t\":\"当此时连接已经断开了，你客户端再次发送请求，就会收到错误提醒： Lost connection to MySQL server during query。，这个时候你要使用，就需要重连，然后再次发送请求。\"},\"69\":{\"t\":\"在使用过程中，为了尽量减少连接的过程，尽量使用长连接，但是这里有一个问题存在：使用长连接，有些临时内存存储的资源就会不断地变多，长期下去，就会内存占用太大，被系统强行杀掉（OOM），从现象看就是 MySQL 异常重启了。但是这些资源只能在连接断开时候释放，那么应怎么解决呢？\"},\"70\":{\"t\":\"考虑两种方案：\"},\"71\":{\"t\":\"定期断开长连接。使用一段时间，或者程序里面判断执行过一个占用内存的大查询后，断开连接，之后要查询再重连。\"},\"72\":{\"t\":\"如果你用的是 MySQL 5.7 或更新版本，可以在每次执行一个比较大的操作后，通过执行 mysql_reset_connection 来重新初始化连接资源。这个过程不需要重连和重新做权限验证，但是会将连接恢复到刚刚创建完时的状态。\"},\"73\":{\"h\":\"查询缓存\",\"a\":\"查询缓存\"},\"74\":{\"t\":\"MySQL 8.0 版本直接将查询缓存的整块功能删掉了，也就是说 8.0 开始彻底没有这个功能了。虽然之前版本存在但是使用频率很小，而且弊大于利，所以就不多介绍这一部分了。\"},\"75\":{\"h\":\"分析器\",\"a\":\"分析器\"},\"76\":{\"t\":\"Mysql 需要对 SQL 语句进行解析。过程如下\"},\"77\":{\"t\":\"分析器先会作词法分析。将你输入地语句拆分成多个字符串，识别字符串地具体含义。\"},\"78\":{\"t\":\"接着做语法分析，语法分析器会根据语法规则，判断你输入地 SQL 语句是否满足 Mysql 语法。如果你的语句不对，就会收到错误提醒：You have an error in your SQL syntax。\"},\"79\":{\"t\":\"如果你处理 bug 多了，就会发现一般提示错误地位置都是在 use near 后面地内容。\"},\"80\":{\"h\":\"优化器\",\"a\":\"优化器\"},\"81\":{\"t\":\"优化器是在表里面有多个索引的时候，决定使用哪个索引；或者在一个语句有多表关联（join）的时候，决定各个表的连接顺序。\"},\"82\":{\"t\":\"例如以下语句：\"},\"83\":{\"t\":\"select * from t1 join t2 using(ID) where t1.c=10 and t2.d=20; \"},\"84\":{\"t\":\"既可以先从表t1里面取出c=10的记录的ID值，再根据ID值关联到表t2，再判断t2里面d的值是否等于20。\"},\"85\":{\"t\":\"也可以先从表t2里面取出d=20的记录的ID值，再根据ID值关联到t1，再判断t1里面c的值是否等于10。\"},\"86\":{\"t\":\"这两种执行方法的逻辑结果是一样的，但是执行的效率会有不同，而优化器的作用就是决定选择使用哪一个方案。\"},\"87\":{\"h\":\"执行器\",\"a\":\"执行器\"},\"88\":{\"t\":\"开始执行前，会首先判断当前用户是否有权限去做这件事情，如果没有，就会返回没有权限地错误。\"},\"89\":{\"t\":\"打开表的时候，执行器就会根据表的引擎定义，去使用这个引擎提供的接口。执行流程如下：\"},\"90\":{\"t\":\"调用InnoDB引擎接口取这个表的第一行，判断ID值是不是10，如果不是则跳过，如果是则将这行存在结果集中；\"},\"91\":{\"t\":\"调用引擎接口取“下一行”，重复相同的判断逻辑，直到取到这个表的最后一行。\"},\"92\":{\"t\":\"执行器将上述遍历过程中所有满足条件的行组成的记录集作为结果集返回给客户端。\"},\"93\":{\"t\":\"至此，这个语句就执行完成了。\"},\"94\":{\"h\":\"日志系统\",\"a\":\"日志系统\"},\"95\":{\"t\":\"有一个说法：MySQL 可以恢复到半个月内任意一秒的状态。太神奇了！！\"},\"96\":{\"t\":\"我们从一个表的更新语句开始：\"},\"97\":{\"t\":\"update T set c=c+1 where ID=2; \"},\"98\":{\"t\":\"基本上执行流程与上面的查询语句一致，但是不一样的是，更新流程还涉及到两个重要的日志模块：redo log（重做日志）和 binlog（归档日志）。\"},\"99\":{\"h\":\"redo log\",\"a\":\"redo-log\"},\"100\":{\"t\":\"当我们想要恢复到之前的一个状态，如果每次的更新操作都要写进磁盘，然后通过磁盘找到记录，然后再更新，这一个过程的 IO 成本和查询成本就比较高。一般采用的方式都是先写日志，然后再写进磁盘。\"},\"101\":{\"t\":\"具体的过程：当一条记录需要更新时候，引擎会先把记录写在日志中，并更新内存，引擎会再适当时候（空闲状态/日志空间满了）将操作记录更新到磁盘中。\"},\"102\":{\"t\":\"img\"},\"103\":{\"t\":\"write pos 是当前记录的位置，check point 是当前要擦除的位置，不断往后推移与循环。\"},\"104\":{\"t\":\"write pos和check point 之间的空白区域，是可以用来记录新的操作记录的，如果当前 write pos 追上了 check point 那么代表当前日志已满，不能再记录了，需要停下来，擦除一些记录。\"},\"105\":{\"t\":\"有了 redo log，InnoDB就可以保证即使数据库发生异常重启，之前提交的记录都不会丢失，这个能力称为**crash-safe**。\"},\"106\":{\"h\":\"binlog\",\"a\":\"binlog\"},\"107\":{\"t\":\"Mysql 是由两部分组成，redo log 其实是 InnoDB 引擎特有的日志。binlog 负责 serve 层。\"},\"108\":{\"t\":\"binlog 会记录所有的逻辑操作，采用追加写的方式。\"},\"109\":{\"t\":\"咦！🤷‍♀️为什么会有两个日志，一个日志不够吗？\"},\"110\":{\"t\":\"这两种日志有以下三点不同。\"},\"111\":{\"t\":\"redo log 是 InnoDB 引擎特有的；binlog 是 MySQL 的 Server 层实现的，所有引擎都可以使用。\"},\"112\":{\"t\":\"redo log 是物理日志，记录的是“在某个数据页上做了什么修改”；binlog 是逻辑日志，记录的是这个语句的原始逻辑，比如“给ID=2这一行的c字段加1 ”。\"},\"113\":{\"t\":\"redo log 是循环写的，空间固定会用完；binlog 是可以追加写入的。“追加写”是指 binlog 文件写到一定大小后会切换到下一个，并不会覆盖以前的日志。\"},\"114\":{\"t\":\"mysql 同时需求归档（记录所有的操作记录）和重做（回到之前的状态）的功能。\"},\"115\":{\"t\":\"我们接下来看看，这两个日志在更新语句的流程中会怎样进行提交呢？\"},\"116\":{\"t\":\"img\"},\"117\":{\"t\":\"执行器先找引擎取 ID=2 这一行。ID是主键，引擎直接用树搜索找到这一行。如果 ID=2 这一行所在的数据页本来就在内存中，就直接返回给执行器；否则，需要先从磁盘读入内存，然后再返回。\"},\"118\":{\"t\":\"执行器拿到引擎给的行数据，把这个值加上 1，比如原来是 N，现在就是 N+1，得到新的一行数据，再调用引擎接口写入这行新数据。\"},\"119\":{\"t\":\"引擎将这行新数据更新到内存中，同时将这个更新操作记录到 redo log 里面，此时 redo log 处于 prepare状态。然后告知执行器执行完成了，随时可以提交事务。\"},\"120\":{\"t\":\"执行器生成这个操作的 binlog，并把 binlog 写入磁盘。\"},\"121\":{\"t\":\"执行器调用引擎的提交事务接口，引擎把刚刚写入的 redo log 改成提交（commit）状态，更新完成。\"},\"122\":{\"t\":\"为什么redo log 没有先提交，而是采用事务方式，两个日志一起提交呢？\"},\"123\":{\"t\":\"答案：为了让两份日志之间逻辑一致。\"},\"124\":{\"t\":\"为什么这样子做可以做到逻辑一致呢？我们要回到之前的问题，MySQL 怎么做到恢复到半个月内任意一秒的状态？\"},\"125\":{\"t\":\"谈到恢复文件过程：备份系统中会保存最近半个月的所有 binlog，同时系统会定期做整库备份。这里的“定期”取决于系统的重要性，可以是一天一备，也可以是一周一备。\"},\"126\":{\"t\":\"当需要恢复到指定的某一秒时，比如某天下午两点发现中午十二点有一次误删表，需要找回数据，那你可以这么做：\"},\"127\":{\"t\":\"首先，找到最近的一次全量备份，如果你运气好，可能就是昨天晚上的一个备份，从这个备份恢复到临时库；\"},\"128\":{\"t\":\"然后，从备份的时间点开始，将备份的 binlog 依次取出来，重放到中午误删表之前的那个时刻。\"},\"129\":{\"t\":\"你的临时库就跟误删之前的线上库一样了，然后你可以把表数据从临时库取出来，按需要恢复到线上库去。\"},\"130\":{\"t\":\"好像不能解释第一个问题，但是这里提醒了，逻辑一致的重要性。如果逻辑性不一致，那么你恢复的数据库就会产生偏差。\"},\"131\":{\"t\":\"为什么日志需要事务方式提交？通过反证法来证明：\"},\"132\":{\"t\":\"如果 redo log 和 binlog 提交存在顺序会发生什么情况呢？\"},\"133\":{\"t\":\"假设当前 ID=2 的行，字段 c 的值是 0，再假设执行 update 语句过程中在写完第一个日志后，第二个日志还没有写完期间发生了 crash，会出现什么情况呢？\"},\"134\":{\"t\":\"先写redo log后写binlog。假设在 redo log 写完，binlog 还没有写完的时候，MySQL 进程异常重启。由于我们前面说过的，redo log 写完之后，系统即使崩溃，仍然能够把数据恢复回来，所以恢复后这一行c的值是1。 但是由于 binlog 没写完就 crash了，这时候 binlog 里面就没有记录这个语句。因此，之后备份日志的时候，存起来的 binlog 里面就没有这条语句。 然后你会发现，如果需要用这个 binlog 来恢复临时库的话，由于这个语句的 binlog 丢失，这个临时库就会少了这一次更新，恢复出来的这一行 c 的值就是0，与原库的值不同。\"},\"135\":{\"t\":\"先写binlog后写redo log。如果在 binlog 写完之后 crash，由于 redo log 还没写，崩溃恢复以后这个事务无效，所以这一行 c 的值是 0。但是 binlog 里面已经记录了“把c从0改成1”这个日志。所以，在之后用 binlog 来恢复的时候就多了一个事务出来，恢复出来的这一行 c 的值就是 1，与原库的值不同。\"},\"136\":{\"t\":\"如果不通过事务方式提交，数据库源库的状态就有可能与用日志恢复的出现不一样的。\"},\"137\":{\"t\":\"有人会杠一下：这个发生的概率是不是低了点？\"},\"138\":{\"t\":\"数据库存储数据的，首先不允许发生错误（例如银行的数据库，发生了错误，你的钱少了你会干吗？），其次不一定备份的使用场景在恢复数据库，可以出现数据库扩容情况。\"},\"139\":{\"t\":\"简单说，redo log 和 binlog 都可以用于表示事务的提交状态，而两阶段提交就是让这两个状态保持逻辑上的一致。\"},\"140\":{\"h\":\"事务\",\"a\":\"事务\"},\"141\":{\"t\":\"事务，其实不陌生，最经典的例子：银行转账。\"},\"142\":{\"t\":\"简单来说，事务是要保证当前一串的操作，要么全部成功，要么全部失败，在 Mysql 中事务支持在引擎层完成。\"},\"143\":{\"h\":\"隔离性与隔离级别\",\"a\":\"隔离性与隔离级别\"},\"144\":{\"t\":\"事务有四个特性：ACID（Atomicity、Consistency、Isolation、Durability，即原子性、一致性、隔离性、持久性），我们来讨论一下其中的隔离性。\"},\"145\":{\"t\":\"当数据库多个事务同时执行时候，就有可能出现脏读（dirty read）、不可重复读（non-repeatable read）、幻读（phantom read）的问题，为了解决这些问题，就有了隔离级别的概念。\"},\"146\":{\"t\":\"首先需要知道，隔离越严实，效率就会越低。很多时候，需要找到两者的平衡点。\"},\"147\":{\"t\":\"SQL标准的事务隔离级别包括：\"},\"148\":{\"t\":\"读未提交（read uncommitted）是指一个事务还没提交时，它做的变更就能被别的事务看到。\"},\"149\":{\"t\":\"读提交（read committed）是指一个事务提交之后，它做的变更才会被其他事务看到。\"},\"150\":{\"t\":\"可重复读（repeatable read）是指一个事务执行过程中看到的数据，总是跟这个事务在启动时看到的数据是一致的。当然在可重复读隔离级别下，未提交变更对其他事务也是不可见的。\"},\"151\":{\"t\":\"串行化（serializable ）是指“写”会加“写锁”，“读”会加“读锁”。当出现读写锁冲突的时候，后访问的事务必须等前一个事务执行完成，才能继续执行。\"},\"152\":{\"t\":\"举个例子来说明这四个事务隔离级别：\"},\"153\":{\"t\":\"create table T(c int) engine=InnoDB; insert into T(c) values(1); \"},\"154\":{\"t\":\"img\"},\"155\":{\"t\":\"若隔离级别是“读未提交”， 则V1的值就是2。这时候事务B虽然还没有提交，但是结果已经被A看到了。因此，V2、V3也都是2。\"},\"156\":{\"t\":\"若隔离级别是“读提交”，则V1是1，V2的值是2。事务B的更新在提交后才能被A看到。所以， V3的值也是2。\"},\"157\":{\"t\":\"若隔离级别是“可重复读”，则V1、V2是1，V3是2。之所以V2还是1，遵循的就是这个要求：事务在执行期间看到的数据前后必须是一致的。\"},\"158\":{\"t\":\"若隔离级别是“串行化”，则在事务B执行“将1改成2”的时候，会被锁住。直到事务A提交后，事务B才可以继续执行。所以从A的角度看， V1、V2值是1，V3的值是2。\"},\"159\":{\"t\":\"不同的隔离级别下，数据库行为采取的读取数据方式都是不同的：\"},\"160\":{\"t\":\"若隔离级别是“读未提交”，直接返回记录上的最新值。\"},\"161\":{\"t\":\"若隔离级别是“读提交”，会在每个 sql 语句开始执行的时候进行创建视图，读取视图中的数据。\"},\"162\":{\"t\":\"若隔离级别是“可重复读”，则是在事务启动的时候创建视图，那么在这个过程中数据都是此视图提供\"},\"163\":{\"t\":\"若隔离级别是“串行化”，通过加锁方式进行访问数据，避免并行访问。\"},\"164\":{\"t\":\"每种隔离级别都是有自己的使用场景，根据自己业务情况去使用。\"},\"165\":{\"h\":\"事务隔离实现\",\"a\":\"事务隔离实现\"},\"166\":{\"t\":\"在 MySQL 中，实际上每条记录在更新的时候都会同时记录一条回滚操作。记录上的最新值，通过回滚操作，都可以得到前一个状态的值。\"},\"167\":{\"t\":\"假设一个值从 1 被按顺序改成了2、3、4，在回滚日志里面就会有类似下面的记录。\"},\"168\":{\"t\":\"img\"},\"169\":{\"t\":\"当前值是 4，但是在查询这条记录的时候，不同时刻启动的事务会有不同的 read-view。回滚日志，系统会判断，当没有事务回需要这些回滚日志时候，就会被删除。\"},\"170\":{\"t\":\"为什么建议你尽量不要使用长事务？\"},\"171\":{\"t\":\"长事务意味着系统里面会存在很老的事务视图。由于这些事务随时可能访问数据库里面的任何数据，所以这个事务提交之前，数据库里面它可能用到的回滚记录都必须保留，这就会导致大量占用存储空间。除了对回滚段的影响，长事务还占用锁资源，也可能拖垮整个库。\"},\"172\":{\"h\":\"事务启动方式\",\"a\":\"事务启动方式\"},\"173\":{\"t\":\"MySQL的事务启动方式有以下几种：\"},\"174\":{\"t\":\"显式启动事务语句， begin 或 start transaction。配套的提交语句是 commit，回滚语句是rollback。\"},\"175\":{\"t\":\"set autocommit=0，这个命令会将这个线程的自动提交关掉。意味着如果你只执行一个 select 语句，这个事务就启动了，而且并不会自动提交。这个事务持续存在直到你主动执行 commit 或 rollback 语句，或者断开连接。\"},\"176\":{\"t\":\"有些客户端连接框架会默认连接成功后先执行一个 set autocommit=0 的命令。这就导致接下来的查询都在事务中，如果是长连接，就导致了意外的长事务。\"},\"177\":{\"t\":\"因此，我会建议你总是使用 set autocommit=1, 通过显式语句的方式来启动事务。\"},\"178\":{\"t\":\"但是有的开发同学会纠结“多一次交互”的问题。对于一个需要频繁使用事务的业务，第二种方式每个事务在开始时都不需要主动执行一次 “begin”，减少了语句的交互次数。如果你也有这个顾虑，我建议你使用 commit work and chain 语法。\"},\"179\":{\"t\":\"在 auto commit为1 的情况下，用 begin 显式启动的事务，如果执行 commit 则提交事务。如果执行 commit work and chain，则是提交事务并自动启动下一个事务，这样也省去了再次执行 begin 语句的开销。同时带来的好处是从程序开发的角度明确地知道每个语句是否处于事务中。\"},\"180\":{\"t\":\"你可以在 information_schema 库的 innodb_trx这个表中查询长事务，比如下面这个语句，用于查找持续时间超过 60s 的事务。\"},\"181\":{\"t\":\"select * from information_schema.innodb_trx where TIME_TO_SEC(timediff(now(),trx_started))>60 \"},\"182\":{\"h\":\"索引\",\"a\":\"索引\"},\"183\":{\"t\":\"索引的出现其实就是为了提高数据查询的效率。\"},\"184\":{\"h\":\"索引的常见模型\",\"a\":\"索引的常见模型\"},\"185\":{\"t\":\"有三种常见也比较简单的数据结构，可以实现索引的：哈希表，有序数组，和搜索树。\"},\"186\":{\"t\":\"哈希表\"},\"187\":{\"t\":\"哈希表是一种以键-值（key-value）存储数据的结构，我们只要输入待查找的键即 key，就可以找到其对应的值即 Value。哈希的思路很简单，把值放在数组里，用一个哈希函数把 key 换算成一个确定的位置，然后把 value 放在数组的这个位置。\"},\"188\":{\"t\":\"当出现多个 key 值经过哈希函数换算，出现同一个值的情况，处理这种情况的方法是拉链法。\"},\"189\":{\"t\":\"举个例子🌰：\"},\"190\":{\"t\":\"你现在维护着一个身份证信息和姓名的表，需要根据身份证号查找对应的名字，这时对应的哈希索引的示意图如下所示：\"},\"191\":{\"t\":\"img\"},\"192\":{\"t\":\"当你想要查询 name2 时候，首先将 ID_card_n2 通过哈希算法算出 N，然后通过链表一次遍历，最后找到对应值。\"},\"193\":{\"t\":\"好处：增加新的User时速度会很快，只需要往后追加。\"},\"194\":{\"t\":\"缺点：因为不是有序的，所以哈希索引做区间查询的速度是很慢的。当你做区间查询，你就需要将区间内的所有用户都要扫描一遍。\"},\"195\":{\"t\":\"所以，哈希表这种结构适用于只有等值查询的场景，比如 Memcached 及其他一些 NoSQL 引擎。\"},\"196\":{\"t\":\"有序数组\"},\"197\":{\"t\":\"举个例子🌰：\"},\"198\":{\"t\":\"img\"},\"199\":{\"t\":\"这里我们假设身份证号没有重复，这个数组就是按照身份证号递增的顺序保存的。\"},\"200\":{\"t\":\"等值查询：利用二分法查询 ID_card_n2 对应的名字，时间复杂度为 O(logN)。\"},\"201\":{\"t\":\"区间查询：两次二分法分别查询左边界与右边界，就可以获得区间内的所有用户。\"},\"202\":{\"t\":\"有序数组在等值查询和范围查询场景中的性能就都非常优秀。但是当你需要更新数据时候，就会显得很麻烦，往中间插入一条记录就得挪动后面所有的记录位置，成本太高了。\"},\"203\":{\"t\":\"所以，有序数组索引只适用于静态存储引擎，比如你要保存的是2017年某个城市的所有人口信息，这类不会再修改的数据。\"},\"204\":{\"t\":\"二叉搜索树\"},\"205\":{\"t\":\"二叉搜索树的特点是：父节点左子树所有结点的值小于父节点的值，右子树所有结点的值大于父节点的值。这样如果你要查 ID_card_n2 的话，按照图中的搜索顺序就是按照 UserA -> UserC -> UserF -> User2 这个路径得到。这个时间复杂度是 O(log(N))。同时更新数据的时间复杂度是 O(log(N))。\"},\"206\":{\"t\":\"好像与上面两个比起来，二叉搜索树的查询与更新效率都是优秀的。实际上大多数的数据库存储却并不会使用二叉树，因为索引不止存在内存中，还要写在磁盘中。为了让一个查询尽量少的读磁盘，不使用二叉树，而是使用 N 叉树，这里，N叉”树中的 N 取决于数据块的大小。\"},\"207\":{\"h\":\"InnoDB 的索引模型\",\"a\":\"innodb-的索引模型\"},\"208\":{\"t\":\"在 InnoDB 中，表都是根据主键顺序以索引的形式存放的，这种存储方式的表称为索引组织表。InnoDB 使用了B+ 树索引模型，所以数据都是存储在 B+ 树中的。每一个索引在 InnoDB 里面对应一棵 B+ 树。\"},\"209\":{\"t\":\"举个🌰：\"},\"210\":{\"t\":\"我们有一个主键列为 ID 的表，表中有字段 k，并且在 k 上有索引。(ID,k) 值分别为 (100,1)、(200,2)、(300,3)、(500,5)和(600,6)。\"},\"211\":{\"t\":\"img\"},\"212\":{\"t\":\"根据叶子节点的内容，索引的类型分为主键索引和非主键索引。\"},\"213\":{\"t\":\"主键索引的叶子节点存的是整行数据。在 InnoDB 里，主键索引也被称为聚簇索引（clustered index）\"},\"214\":{\"t\":\"非主键索引的叶子节点内容是主键的值。在 InnoDB 里，非主键索引也被称为二级索引（secondary index）。\"},\"215\":{\"t\":\"我们来讨论一个问题：基于主键索引和普通索引的查询有什么区别？\"},\"216\":{\"t\":\"假设我们都要查询 ID=500 的行的数据：\"},\"217\":{\"t\":\"主键查询方式：select * from T where ID=500，则只需要搜索 ID 这棵 B+ 树。\"},\"218\":{\"t\":\"普通索引查询方式：select * from T where k=5，需要先搜索 k 索引树，得到 ID 的值为 500，再到 ID 索引树搜索一次。这个过程称为回表。\"},\"219\":{\"t\":\"所以通过上述情况，基于非主键索引的查询需要多扫描一棵索引树。因此，我们在应用中应该尽量使用主键查询。\"},\"220\":{\"h\":\"索引维护\",\"a\":\"索引维护\"},\"221\":{\"t\":\"B+ 树为了维护索引有序性，在插入新值时候需要做必要的维护。以上面这个图为例，如果插入新的行 ID 值为700，则只需要在 R5 的记录后面插入一个新记录。如果新插入的ID值为 400，就相对麻烦了，需要逻辑上挪动后面的数据，空出位置。\"},\"222\":{\"t\":\"而更糟的情况是，如果 R5 所在的数据页已经满了，根据 B+ 树的算法，这时候需要申请一个新的数据页，然后挪动部分数据过去。这个过程称为页分裂。在这种情况下，性能自然会受影响。\"},\"223\":{\"t\":\"除了性能外，页分裂操作还影响数据页的利用率。原本放在一个页的数据，现在分到两个页中，整体空间利用率降低大约 50%。\"},\"224\":{\"t\":\"当然有分裂就有合并。当相邻两个页由于删除了数据，利用率很低之后，会将数据页做合并。合并的过程，可以认为是分裂过程的逆过程。\"},\"225\":{\"t\":\"我们讨论一个问题：为什么每次建表里面需要有一个自增主键。哪些场景下使用自增主键呢，哪些常见不使用呢？\"},\"226\":{\"t\":\"自增主键是指自增列上定义的主键，在建表语句中一般是这么定义的： NOT NULL PRIMARY KEY AUTO_INCREMENT，插入新记录的时候可以不指定 ID 的值，系统会获取当前 ID 最大值加 1 作为下一条记录的 ID 值。\"},\"227\":{\"t\":\"从性能方面讲：自增主键插入数据，都是追加操作，不会挪动其他记录，也不会触发叶子节点的分裂，性能上会高出一些。\"},\"228\":{\"t\":\"从存储空间来看：假设你的表中确实有一个唯一字段，比如字符串类型的身份证号，虽然身份证可以作为主键使用，但是如果用身份证号做主键，那么每个二级索引的叶子节点占用约 20 个字节，而如果用整型做主键，则只要 4 个字节，如果是长整型（bigint）则是8个字节。\"},\"229\":{\"t\":\"所以，从性能和存储空间方面考量，自增主键往往是更合理的选择。\"},\"230\":{\"t\":\"场景需求：\"},\"231\":{\"t\":\"只有一个索引；\"},\"232\":{\"t\":\"该索引必须是唯一索引。\"},\"233\":{\"t\":\"在此场景下使用自增主键是合理的。\"},\"234\":{\"h\":\"索引的使用\",\"a\":\"索引的使用\"},\"235\":{\"t\":\"有这样一个问题：\"},\"236\":{\"t\":\"在下面这个表 T 中，如果我执行 select * from T where k between 3 and 5，需要执行几次树的搜索操作，会扫描多少行？\"},\"237\":{\"t\":\"mysql> create table T ( ID int primary key, k int NOT NULL DEFAULT 0, s varchar(16) NOT NULL DEFAULT '', index k(k)) engine=InnoDB; insert into T values(100,1, 'aa'),(200,2,'bb'),(300,3,'cc'),(500,5,'ee'),(600,6,'ff'),(700,7,'gg'); \"},\"238\":{\"t\":\"img\"},\"239\":{\"t\":\"具体流程：\"},\"240\":{\"t\":\"首先在 k 索引树找到 K=3 的记录，取得 id=300 的记录。\"},\"241\":{\"t\":\"然后再去 id 索引树 找到 id=300 的对应的 R3.\"},\"242\":{\"t\":\"重复以上操作，找到 k=5 对应的 R4 的记录。\"},\"243\":{\"t\":\"在 k 索引树取下一个值 k=6，不满足条件，循环结束。\"},\"244\":{\"t\":\"**回到主键索引树搜索的过程，称之为回表。**在上诉的查询过程中，经历了两次回表，为了优化性能，有没有方法避免回表过程呢？\"},\"245\":{\"h\":\"覆盖索引\",\"a\":\"覆盖索引\"},\"246\":{\"t\":\"如何避免回表？，最直接想法，不产生回表，select ID from T where k between 3 and 5 查询 id 的值似乎不会产生回表过程。索引树 k 其实他已经覆盖了我们的查询需求，把这称之为覆盖索引。\"},\"247\":{\"t\":\"由于覆盖索引可以减少树的搜索次数，显著提升查询性能，所以使用覆盖索引是一个常用的性能优化手段。\"},\"248\":{\"t\":\"有一个注意点：在引擎内部使用覆盖索引在索引 K 中 其实读了 3 个数据：300~600，但是对于 MySQL 的 Server层来说，只是拿到了两条数据，所以 MySQL 认为扫描的行数是 2。\"},\"249\":{\"t\":\"接下来根据覆盖索引讨论一个问题：在一个市民信息表上，是否有必要将身份证号和名字建立联合索引？\"},\"250\":{\"t\":\"市民表定义：\"},\"251\":{\"t\":\"CREATE TABLE `tuser` ( `id` int(11) NOT NULL, `id_card` varchar(32) DEFAULT NULL, `name` varchar(32) DEFAULT NULL, `age` int(11) DEFAULT NULL, `ismale` tinyint(1) DEFAULT NULL, PRIMARY KEY (`id`), KEY `id_card` (`id_card`), KEY `name_age` (`name`,`age`) ) ENGINE=InnoDB \"},\"252\":{\"t\":\"我们知道身份证号是市民的唯一标识，可以根据身份证号查询到他的相关信息，他作为主键建立索引就好了，什么情况下我需要建立一个（身份证与姓名）联合索引呢？\"},\"253\":{\"t\":\"如果现在有一个高频请求，要根据市民的身份证号查询他的姓名，这个联合索引就有意义了。它可以在这个高频请求上用到覆盖索引，不再需要回表查整行记录，减少语句的执行时间。，建立了索引，你也需要维护，是否需要建立冗余的联合索引支持覆盖索引，就需要多权衡一下了。\"},\"254\":{\"t\":\"覆盖索引的目的仅仅是不回表。\"},\"255\":{\"h\":\"最左前缀原则\",\"a\":\"最左前缀原则\"},\"256\":{\"t\":\"每次查询都要建立一个覆盖索引？这就会导致出现过大的维护代价，但是我只是根据身份证号去查询家庭地址字段，出现概率不高，总不能全表查询吧，查询的代价也比较大，可以建立一个覆盖索引很浪费啊。怎么做呢？看看下面这个解决方案。\"},\"257\":{\"t\":\"B+树这种索引结构，可以利用索引的“最左前缀”，来定位记录。\"},\"258\":{\"t\":\"img\"},\"259\":{\"t\":\"以 (name,age) 联合索引举例：\"},\"260\":{\"t\":\"我们可以发现，索引项是按照索引定义里面出现的字段顺序排序的。\"},\"261\":{\"t\":\"有一个需求：查询所有名字为 张三 的人信息，这样就可以快速定位到 ID-4，然后往后继续遍历，得到结果。\"},\"262\":{\"t\":\"有一个需求：查询的是所有名字第一个字是“张”的人，你的 SQL 语句的条件是\\\"where name like ‘张 %’\\\"。，你依旧可以用上这个索引，找到第一个满足条件的记录是 ID-3 ，往后遍历，得到结果。\"},\"263\":{\"t\":\"不只是索引的全部定义，只要满足最左前缀，就可以利用索引来加速检索。这个最左前缀可以是联合索引的最左 N 个字段，也可以是字符串索引的最左 M 个字符。\"},\"264\":{\"t\":\"在上诉的前提下：如果查询条件是 where name like ‘%张 %‘，其实就没有用到索引。同时当你建立了(name,age) ，其实相当于你也建立了 name 的普通索引。\"},\"265\":{\"t\":\"还有一个问题：在建立联合索引时候，应该如何安排索引内字段顺序？\"},\"266\":{\"t\":\"评估标准是索引的复用能力。联合索引(A, B)意味着不需要建立A的索引了，因为这个联合索引意味着建立了(A,B)和(A)这两种索引，因此第一原则是，如果通过调整顺序，可以少维护一个索引，那么这个顺序往往就是需要优先考虑采用的。\"},\"267\":{\"t\":\"现在就可以将前面两个问题做一个综合，建立（身份证号，姓名）联合索引可以解决根据身份证号查询姓名高频请求，以及解决根据身份证号查询地址的需求。\"},\"268\":{\"t\":\"如果现在有联合查询（a，b），又有基于 a,b 的各自查询，根据最左前缀原则，是无法使用 (a,b) 这个联合索引，如果你又建立一个 b 的普通索引，需要同时维护 (a,b)、(b) 这两个索引。\"},\"269\":{\"t\":\"这里需要考虑的原则就是空间问题，你建立越多的索引，就需要更多的存储空间。如果你需要维护两个索引，最好根据存储空间，确定两者的索引顺序，比如上面这个市民表的情况，选择 name 字段放在左边，再建立一个 age 字段普通索引。\"},\"270\":{\"h\":\"索引下推\",\"a\":\"索引下推\"},\"271\":{\"t\":\"说到一个问题：最左前缀可以用于在索引中定位记录。如果不符合最左前缀的部分，又会怎么样呢？\"},\"272\":{\"t\":\"以市民表的联合索引（name, age）为例。如果现在有一个需求：检索出表中“名字第一个字是张，而且年龄是 10 岁的所有男孩”。\"},\"273\":{\"t\":\"select * from tuser where name like '张%' and age=10 and ismale=1; \"},\"274\":{\"t\":\"根据前缀索引规则，所以这个语句在搜索索引树的时候，只能用 “张”，找到第一个满足条件的记录 ID3。\"},\"275\":{\"t\":\"💡:\"},\"276\":{\"t\":\"mysql 会一直向右匹配直到遇到范围查询（>、<、between、like）就停止匹配。范围列可以用到索引，但是范围列后面的列无法用到索引。即，索引最多用于一个范围列，因此如果查询条件中有两个范围列则无法全用到索引。\"},\"277\":{\"t\":\"继续判断其他条件是否满足。\"},\"278\":{\"t\":\"在 MySQL 5.6 之前，只能从 ID3 开始一个个回表。到主键索引上找出数据行，再对比字段值。\"},\"279\":{\"t\":\"img\"},\"280\":{\"t\":\"而 MySQL 5.6 引入的索引下推优化（index condition pushdown)， 可以在索引遍历过程中，对索引中包含的字段先做判断，直接过滤掉不满足条件的记录，减少回表次数。\"},\"281\":{\"t\":\"img\"},\"282\":{\"t\":\"这两个过程的区别是：\"},\"283\":{\"t\":\"MySQL 5.6 之前不会去看索引中 age 的值，就会将按顺序把“name 第一个字是’张’”的记录一条条取出来回表，匹配条件，回表 4 次。\"},\"284\":{\"t\":\"MySQL 5.6 之后，会先判断索引中内部的值，对于 age!=10 的记录，就会直接判断并跳过，满足 age=10 的则会回表取数据进行再一次的判断。\"},\"285\":{\"t\":\"总结：\"},\"286\":{\"t\":\"覆盖索引：如果查询条件使用的是普通索引（或是联合索引的最左原则字段），查询结果是联合索引的字段或是主键，不用回表操作，直接返回结果，减少IO磁盘读写读取正行数据\"},\"287\":{\"t\":\"最左前缀：联合索引的最左 N 个字段，也可以是字符串索引的最左 M 个字符\"},\"288\":{\"t\":\"联合索引：根据创建联合索引的顺序，以最左原则进行where检索，比如（age，name）以age=1 或 age= 1 and name=‘张三’可以使用索引，单以name=‘张三’ 不会使用索引，考虑到存储空间的问题，还请根据业务需求，将查找频繁的数据进行靠左创建索引。\"},\"289\":{\"t\":\"索引下推：like 'hello%’and age >10 检索，MySQL5.6版本之前，会对匹配的数据进行回表查询。5.6版本后，会先过滤掉age<10的数据，再进行回表查询，减少回表率，提升检索速度\"},\"290\":{\"h\":\"全局锁和表锁\",\"a\":\"全局锁和表锁\"},\"291\":{\"t\":\"根据加锁的范围，MySQL 里面的锁大致分为全局锁，表级锁和行锁三类。\"},\"292\":{\"h\":\"全局锁\",\"a\":\"全局锁\"},\"293\":{\"t\":\"全局锁就是对整个数据库实例加锁。MySQL 提供了一个加全局读锁的方法，命令是 Flush tables with read lock (FTWRL)。当你需要让整个库处于只读状态的时候，可以使用这个命令，之后其他线程的以下语句会被阻塞：数据更新语句（数据的增删改）、数据定义语句（包括建表、修改表结构等）和更新类事务的提交语句。\"},\"294\":{\"t\":\"**全局锁的经典使用场景是，做全库逻辑备份。**也就是把每个表都查询处理，做出文本，进行备份处理。\"},\"295\":{\"t\":\"以前有一种做法，是通过 FTWRL 来确保不会有其他线程对数据库做更新，然后对整个库完成备份需求。注意，在备份过程中整个库完全处于只读状态。\"},\"296\":{\"t\":\"但是让整库都只读，听上去就很危险：\"},\"297\":{\"t\":\"如果你在主库上备份，那么在备份期间都不能执行更新，业务基本上就得停了；\"},\"298\":{\"t\":\"如果你在从库上备份，那么备份期间从库不能执行主库同步过来的 binlog，会导致主从延迟。\"},\"299\":{\"t\":\"备份为什么需要加锁？不加锁会有什么情况出现呢？\"},\"300\":{\"t\":\"🌰：\"},\"301\":{\"t\":\"假设你现在要维护“极客时间”的购买系统，关注的是用户账户余额表和用户课程表。\"},\"302\":{\"t\":\"现在发起一个逻辑备份。假设备份期间，有一个用户，他购买了一门课程，业务逻辑里就要扣掉他的余额，然后往已购课程里面加上一门课。如果时间顺序上是先备份账户余额表 (u_account)，然后用户购买，然后备份用户课程表 (u_course)，会怎么样呢？\"},\"303\":{\"t\":\"img\"},\"304\":{\"t\":\"备份结果是：用户 A 的余额没有发生变化，但是课表多了一门课！如果后面用这个备份恢复数据，对于用户 A 来说就赚了。如果先备份用户课程表再备份用户余额表，对于用户 A 来说出现的结果就是课程没有发生变化，但是余额却扣了。\"},\"305\":{\"t\":\"不加锁的话，备份系统备份的**得到的库不是一个逻辑时间点（因为不同表之间的执行顺序不同进而备份的时间不同），**这个视图是逻辑不一致的。\"},\"306\":{\"t\":\"说到视图，如果视图是一致的，那么是不是也可以完成备份数据的功能？\"},\"307\":{\"t\":\"之前说过，在可重复读隔离级别下开启事务，可以获得事务过程中一致的视图。\"},\"308\":{\"t\":\"官方自带的逻辑备份工具是 mysqldump。当 mysqldump 使用参数–single-transaction 的时候，导数据之前就会启动一个事务，来确保拿到一致性视图。而由于 MVCC 的支持，这个过程中数据是可以正常更新的。\"},\"309\":{\"t\":\"有了这个功能，那为什么还需要 FTWRL 呢？\"},\"310\":{\"t\":\"答：确实能够完成，但是有些引擎不支持这个事务，例如 MyISAM。所以更加大众化的选择就是 FTWRL 命令来做全库备份。\"},\"311\":{\"t\":\"通过使用 set global readonly=true 的方式，应该也可以使全库处于只读状态，那为什么不使用呢？\"},\"312\":{\"t\":\"原因：\"},\"313\":{\"t\":\"在有些系统中，readonly 的值会被用来做其他逻辑，比如用来判断一个库是主库还是备库。因此，修改 global 变量的方式影响面更大，我不建议你使用。\"},\"314\":{\"t\":\"在异常处理机制上有差异。如果执行 FTWRL 命令之后由于客户端发生异常断开，那么 MySQL 会自动释放这个全局锁，整个库回到可以正常更新的状态。而将整个库设置为 readonly 之后，如果客户端发生异常，则数据库就会一直保持 readonly 状态，这样会导致整个库长时间处于不可写状态，风险较高。\"},\"315\":{\"h\":\"表级锁\",\"a\":\"表级锁\"},\"316\":{\"t\":\"MySQL 里面表级别的锁有两种：一种是表锁，一种是元数据锁。\"},\"317\":{\"t\":\"表锁的语法是 lock tables … read/write ,可以用 unlock tables 主动释放锁，也可以在客户端断开的时候自动释放。\"},\"318\":{\"t\":\"对表加读锁后，自己也不能对其进行修改；自己和其他线程只能读取该表。\"},\"319\":{\"t\":\"当对某个表执加上写锁后，该线程可以对这个表进行读写，其他线程对该表的读和写都受到阻塞；\"},\"320\":{\"t\":\"总结：写锁是独占的，读锁是共享的。\"},\"321\":{\"t\":\"在还没有出现更细粒度的锁的时候，表锁是最常用的处理并发的方式。而对于 InnoDB 这种支持行锁的引擎，一般不使用 lock tables 命令来控制并发，毕竟锁住整个表的影响面还是太大。\"},\"322\":{\"t\":\"元数据锁是 MDL（metadata lock)。MDL 不需要显式使用，在访问一个表的时候会被自动加上。MDL 的作用是，保证读写的正确性。\"},\"323\":{\"t\":\"元数据锁是 server 层的锁，表级锁，主要用于隔离 DML（Data Manipulation Language，数据操纵语言，如select）和 DDL（Data Definition Language，数据定义语言，如改表头新增一列）操作之间的干扰。\"},\"324\":{\"t\":\"每执行一条 DML、DDL 语句时都会申请 MDL 锁，DML 操作需要 MDL 读锁，DDL 操作需要 MDL 写锁（MDL加锁过程是系统自动控制，无法直接干预，读读共享，读写互斥，写写互斥）\"},\"325\":{\"t\":\"读锁之间不互斥，因此你可以有多个线程同时对一张表增删改查。\"},\"326\":{\"t\":\"**读写锁之间、写锁之间是互斥的，用来保证变更表结构操作的安全性。**因此，如果有两个线程要同时给一个表加字段，其中一个要等另一个执行完才能开始执行。\"},\"327\":{\"t\":\"🌰：\"},\"328\":{\"t\":\"有人掉到这个坑里：给一个小表加个字段，导致整个库挂了。\"},\"329\":{\"t\":\"给一个表加字段，或者修改字段，或者加索引，需要扫描全表的数据。\"},\"330\":{\"t\":\"索引要根据表中的每一行的记录值来创建，所以需要全表扫描；\"},\"331\":{\"t\":\"加字段或修改字段，也要修改每一行记录中的对应列的数据，所以也要全表扫描）\"},\"332\":{\"t\":\"在对大表操作的时候，你肯定会特别小心，以免对线上服务造成影响。而实际上，即使是小表，操作不慎也会出问题。\"},\"333\":{\"t\":\"假设表 t 是一个小表。\"},\"334\":{\"t\":\"img\"},\"335\":{\"t\":\"session A 先启动，这时候会对表 t 加一个 MDL 读锁。由于 session B 需要的也是 MDL 读锁，读锁是可以共享的，因此可以正常执行。\"},\"336\":{\"t\":\"之后 session C 需要 MDL 写锁，所以会被 blocked，在这里被阻塞了。\"},\"337\":{\"t\":\"为什么 session D 也被锁住了呢？\"},\"338\":{\"t\":\"如果只有 session C 自己被阻塞还没什么关系，但是之后所有要在表 t 上新申请 MDL 读锁的请求也会被 session C 阻塞，读写锁是互斥的，那么换句话说，后面所有的增删改查的操作都会申请 MDL ，但是在 session C 后面都会被锁住。导致整个表不可读写了。\"},\"339\":{\"t\":\"接下来，如果**某个表上的查询语句频繁，**而且客户端有重试机制，也就是说超时后会再起一个新 session 再请求的话，这个库的连接池爆满，从而导致整个库不能使用了。\"},\"340\":{\"t\":\"基于上面的分析，我们来讨论一个问题，如何安全地给小表加字段？\"},\"341\":{\"t\":\"**解决长事务，**事务不提交，就会一直占着 MDL 锁。具有严重威胁并发性，也会导致回滚段不能回收长时间被占用空间。如果你要做 DDL 变更的表刚好有长事务在执行，要考虑先暂停 DDL，或者 kill 掉这个长事务。\"},\"342\":{\"t\":\"alter table 语句里面**设定等待时间，**如果在这个指定的等待时间里面能够拿到 MDL 写锁最好，拿不到也不要阻塞后面的业务语句，先放弃。之后开发人员或者 DBA 再通过重试命令重复这个过程。\"},\"343\":{\"t\":\"对于出现锁的解决方法：一般都是防止死锁或者利用超时时间来解决长时间卡顿。\"},\"344\":{\"t\":\"总结：\"},\"345\":{\"t\":\"全局锁主要用在逻辑备份过程中。对于全部是 InnoDB 引擎的库，我建议你选择使用–single-transaction 参数，对应用会更友好。\"},\"346\":{\"t\":\"表锁一般是**在数据库引擎不支持行锁的时候才会被用到的。**如果你发现你的应用程序里有 lock tables 这样的语句，你需要追查一下，比较可能的情况是：\"},\"347\":{\"t\":\"要么是你的系统现在还在用 MyISAM 这类不支持事务的引擎，那要安排升级换引擎；\"},\"348\":{\"t\":\"要么是你的引擎升级了，但是代码还没升级。我见过这样的情况，最后业务开发就是把 lock tables 和 unlock tables 改成 begin 和 commit，问题就解决了。\"},\"349\":{\"t\":\"MDL 会直到事务提交才释放，在做表结构变更的时候，你一定要小心不要导致锁住线上查询和更新。\"},\"350\":{\"h\":\"行锁\",\"a\":\"行锁\"},\"351\":{\"t\":\"行锁就是针对数据表中行记录的锁。并不是所有引擎都支持行锁，比如 MyISAM 引擎就不支持行锁。不支持行锁意味着并发控制只能使用表锁。InnoDB 是支持行锁的。\"},\"352\":{\"t\":\"对于行锁来说：\"},\"353\":{\"t\":\"锁粒度越大，开销越小，锁冲突的概率越小，安全性也就越高，但业务并发度以及性能越差；\"},\"354\":{\"t\":\"反之锁粒度越小，开销也就越大，锁冲突的概率越大（易导致死锁），安全性也就越低，但业务并发度以及性能越好。\"},\"355\":{\"h\":\"两阶段锁\",\"a\":\"两阶段锁\"},\"356\":{\"t\":\"🌰：在下面的操作序列中，事务 B 的 update 语句执行时会是什么现象呢？假设字段 id 是表 t 的主键。\"},\"357\":{\"t\":\"img\"},\"358\":{\"t\":\"对于这个问题，需要考虑到事务 A 的情况，在执行 update 语句后，未提交，会持有哪些锁，同时什么时候释放。\"},\"359\":{\"t\":\"问题的答案是：实际上事务 B 的 update 语句会被阻塞，直到事务 A 执行 commit 之后，事务 B 才能继续执行。\"},\"360\":{\"t\":\"对于两阶段锁，锁的添加与释放分到两个阶段进行，之间不允许交叉加锁和释放锁。 也就是在事务开始执行后为涉及到的行按照需要加锁，但执行完不会马上释放，而是在事务结束时再统一释放他们。\"},\"361\":{\"t\":\"两阶段锁协议，可以帮助，当你的事务出现了锁多个行，需要把最有可能发生锁冲突，最可能影响并发度的锁尽量往后放。\"},\"362\":{\"t\":\"🌰：\"},\"363\":{\"t\":\"假设你负责实现一个电影票在线交易业务，顾客 A 要在影院 B 购买电影票。我们简化一点，这个业务需要涉及到以下操作：\"},\"364\":{\"t\":\"从顾客 A 账户余额中扣除电影票价；\"},\"365\":{\"t\":\"给影院 B 的账户余额增加这张电影票价；\"},\"366\":{\"t\":\"记录一条交易日志。\"},\"367\":{\"t\":\"要完成这次交易，需要 update 两条记录，并 insert 一条记录。当然，为了保证交易的原子性，我们要把这三个操作放在一个事务中。\"},\"368\":{\"t\":\"首先，我们要明白**：事务在执行的时候，并不是一次性把所有行锁都持有，而是执行到哪一行就拿哪一行的锁。等到最后 commit 的时候，一起释放**。\"},\"369\":{\"t\":\"同时有另外一个顾客 C 要在影院 B 买票，那么这两个事务冲突的部分就是语句 2 了。因为它们要更新同一个影院账户的余额，需要修改同一行数据。\"},\"370\":{\"t\":\"根据上诉的条件，知道把冲突的语句 2 安排到最后，那么影院账户余额这一行的锁时间就最少，对于顾客 B,C 发生冲突的可能变小，最大程度减少了事务的锁的等待，提高了并发度。\"},\"371\":{\"h\":\"死锁和死锁检测\",\"a\":\"死锁和死锁检测\"},\"372\":{\"t\":\"**当并发系统中不同线程出现循环资源依赖，涉及的线程都在等待别的线程释放资源时，就会导致这几个线程都进入无限等待的状态，**称为死锁。简单来讲：\"},\"373\":{\"t\":\"img\"},\"374\":{\"t\":\"这个时候，事务 A 在等待事务 B 释放 id=2 的行锁，而对于事务 B 则在等待事务 A 释放 id=1 的行锁。因为锁都要等到 commit 才会释放，务 A 和事务 B 在互相等待对方的资源释放，就是进入了死锁状态。\"},\"375\":{\"t\":\"解决死锁的有两种策略：\"},\"376\":{\"t\":\"直接进入等待，直到超时。这个超时时间可以通过参数 innodb_lock_wait_timeout 来设置。show variables like \\\"%innodb_lock_wait_timeout%\\\";\"},\"377\":{\"t\":\"发起死锁检测，发现死锁后，主动回滚死锁链条中的某一个事务，让其他事务得以继续执行。将参数 innodb_deadlock_detect 设置为 on，表示开启这个逻辑。\"},\"378\":{\"t\":\"在 InnoDB 中，innodb_lock_wait_timeout 的默认值是 50s，意味着如果采用第一个策略，当出现死锁以后，**第一个被锁住的线程要过 50s 才会超时退出，然后其他线程才有可能继续执行。**对于在线服务来说，这个等待时间往往是无法接受的。\"},\"379\":{\"t\":\"如果时间设置的很小，例如 1s，可是这么短的时间，如果不是锁呢，只是简单锁等待，那么就会出现很多误伤。\"},\"380\":{\"t\":\"综合看，第一种策略有很多的弊端。\"},\"381\":{\"t\":\"正常情况下我们还是要采用第二种策略，即：主动死锁检测，而且 innodb_deadlock_detect 的默认值本身就是 on。主动死锁检测在发生死锁的时候，是能够快速发现并进行处理的，但是它也是有额外负担（CPU占用）的。\"},\"382\":{\"t\":\"死锁检测：每当一个事务被锁的时候，就要看看它所依赖的线程有没有被别人锁住，如此循环，最后判断是否出现了循环等待，也就是死锁。\"},\"383\":{\"t\":\"如果是我们上面说到的所有事务都要更新同一行的场景呢？\"},\"384\":{\"t\":\"**每个新来的被堵住的线程，都要判断会不会由于自己的加入导致了死锁，这是一个时间复杂度是 O(n) 的操作。**假设有 1000 个并发线程要同时更新同一行，那么死锁检测操作就是 100 万这个量级的。虽然最终检测的结果是没有死锁，但是这期间要消耗大量的 CPU 资源。因此，你就会看到 CPU 利用率很高，但是每秒却执行不了几个事务。\"},\"385\":{\"t\":\"问题最后要归结到，死锁检测会耗费大量的 CPU 资源。\"},\"386\":{\"t\":\"解决的策略有以下几种：\"},\"387\":{\"t\":\"视而不见。我觉得业务不会出现，就不开启死锁检测。但是这种操作本身带有一定的风险，因为业务设计的时候一般不会把死锁当做一个严重错误，毕竟出现死锁了，就回滚，然后通过业务重试一般就没问题了，这是业务无损的。而关掉死锁检测意味着可能会出现大量的超时，这是业务有损的。\"},\"388\":{\"t\":\"控制并发。只允许同时处理并发5个程序，也可以进一步解决，这个并发控制要做在数据库服务端。如果你有中间件，可以考虑在中间件实现；\"},\"389\":{\"t\":\"拆行处理。将一行改成逻辑上的多行来减少锁冲突。还是以影院账户为例，可以考虑放在多条记录上，比如 10 个记录，影院的账户总额等于这 10 个记录的值的总和。这样每次要给影院账户加金额的时候，随机选其中一条记录来加。这样每次冲突概率变成原来的 1/10，可以减少锁等待个数，也就减少了死锁检测的 CPU 消耗。\"},\"390\":{\"c\":[\"计算机基础\",\"数据库\"]},\"391\":{\"h\":\"八股文进阶篇\"},\"392\":{\"t\":\"参考以及推荐文章：\"},\"393\":{\"t\":\"B树、B+树索引算法原理（上）\"},\"394\":{\"t\":\"javaGuide\"},\"395\":{\"h\":\"基础\",\"a\":\"基础\"},\"396\":{\"h\":\"1.什么是数据库, 数据库管理系统, 数据库系统, 数据库管理员?简写分别是什么？\",\"a\":\"_1-什么是数据库-数据库管理系统-数据库系统-数据库管理员-简写分别是什么\"},\"397\":{\"t\":\"数据库 : 数据库(DataBase 简称 DB)就是信息的集合或者说数据库是由数据库管理系统管理的数据的集合。\"},\"398\":{\"t\":\"数据库管理系统 : 数据库管理系统(Database Management System 简称 DBMS)是一种操纵和管理数据库的大型软件，通常用于建立、使用和维护数据库。\"},\"399\":{\"t\":\"数据库系统 : 数据库系统(Data Base System，简称 DBS)通常由软件、数据库和数据管理员(DBA)组成。\"},\"400\":{\"t\":\"数据库管理员 : 数据库管理员(Database Administrator, 简称 DBA)负责全面管理和控制数据库系统。\"},\"401\":{\"h\":\"2.主键，外键有什么区别?为什么不是很推荐使用外键？\",\"a\":\"_2-主键-外键有什么区别-为什么不是很推荐使用外键\"},\"402\":{\"t\":\"主键\"},\"403\":{\"t\":\"外键\"},\"404\":{\"t\":\"定义\"},\"405\":{\"t\":\"用于唯一标识一个元组，不能有重复，不允许为空。\"},\"406\":{\"t\":\"表的外键是另一表的主键, 外键可以有重复的, 可以是空值\"},\"407\":{\"t\":\"作用\"},\"408\":{\"t\":\"保证数据完整性，提供元组的位置信息\"},\"409\":{\"t\":\"用来和其他表建立联系用的\"},\"410\":{\"t\":\"个数\"},\"411\":{\"t\":\"一个表只能有一个\"},\"412\":{\"t\":\"一个表可以有多个外键\"},\"413\":{\"t\":\"外键的优点：\"},\"414\":{\"t\":\"由数据库自身最大限度保证数据一致性，完整性\"},\"415\":{\"t\":\"在一定程度上，说明了业务逻辑，设计更加全面。增加ER图可读性\"},\"416\":{\"t\":\"联级操作方便。\"},\"417\":{\"t\":\"缺点：\"},\"418\":{\"t\":\"增加了复杂性，会平添开发难度，导致表更多等问题\"},\"419\":{\"t\":\"维护工作复杂\"},\"420\":{\"t\":\"降低耦合度，影响性能，对分库分表会造成影响。\"},\"421\":{\"t\":\"既然有外键，那么肯定有他存在的开发环境，当回答这种问题，不能一味的否定，现在项目越来越复杂，外键弊大于利，但是如果你的项目轻量，不分库分表，对性能没有要求，其实可以使用外键去简化一些过程的。\"},\"422\":{\"h\":\"3.数据库三范式分别是什么？\",\"a\":\"_3-数据库三范式分别是什么\"},\"423\":{\"t\":\"1NF：属性不可再分。\"},\"424\":{\"t\":\"2NF：1NF 的基础之上，消除了非主属性对于码的部分函数依赖，换句话说非主属性对码完全函数依赖。\"},\"425\":{\"t\":\"3NF：3NF 在 2NF 的基础之上，消除了非主属性对于码的传递函数依赖 。\"},\"426\":{\"h\":\"4.Mysql引擎支持哪些引擎？讲讲常用 MyISAM 和 InnoDB 的区别\",\"a\":\"_4-mysql引擎支持哪些引擎-讲讲常用-myisam-和-innodb-的区别\"},\"427\":{\"t\":\"image-20220304212100214\"},\"428\":{\"t\":\"支持的引擎如上。\"},\"429\":{\"t\":\"MyISAM 和 InnoDB 的区别从以下几个方面说明：\"},\"430\":{\"t\":\"是否支持行级锁\"},\"431\":{\"t\":\"MyISAM：不提供行级锁，当处理并发时候，利用表锁。\"},\"432\":{\"t\":\"InnoDB：支持行级锁，权限细粒度更低，并发上比 MyISAM 更好。\"},\"433\":{\"t\":\"是否支持事务和外键\"},\"434\":{\"t\":\"MyISAM：不支持事务。不支持外键\"},\"435\":{\"t\":\"InnoDB：支持事务和外键，具有提交(commit)和回滚(rollback)事务的能力。\"},\"436\":{\"t\":\"是否支持数据库异常崩溃后的安全恢复。\"},\"437\":{\"t\":\"MyISAM：不支持\"},\"438\":{\"t\":\"InnoDB：支持，利用 redo log(重做日志) 将数据库状态恢复到你想要任意时刻。\"},\"439\":{\"h\":\"索引\",\"a\":\"索引\"},\"440\":{\"h\":\"1.什么是索引？常用结构是什么？\",\"a\":\"_1-什么是索引-常用结构是什么\"},\"441\":{\"t\":\"索引是一种用于快速查询和检索数据的数据结构。常见的索引结构有: B 树， B+树和 Hash。\"},\"442\":{\"h\":\"2.索引的优缺点\",\"a\":\"_2-索引的优缺点\"},\"443\":{\"t\":\"优点：\"},\"444\":{\"t\":\"大大加快数据的检索速度，这是主要原因\"},\"445\":{\"t\":\"使用分组和排序语句，性能会有显著的提高。\"},\"446\":{\"t\":\"唯一性索引，保证数据库中每一行数据的唯一性\"},\"447\":{\"t\":\"缺点：\"},\"448\":{\"t\":\"创建索引和维护索引需要时间，随着数据量变大，时间需要的更多。当表中数据发生更新时候，索引也需要动态维护。\"},\"449\":{\"t\":\"创建索引占据空间，每一个索引还要占一定的物理空间，如果要建立聚簇索引，那么需要的空间就会更大。\"},\"450\":{\"h\":\"3.使用索引一定会提高查询速度？索引有哪些使用场景？\",\"a\":\"_3-使用索引一定会提高查询速度-索引有哪些使用场景\"},\"451\":{\"t\":\"不一定！\"},\"452\":{\"t\":\"场景很多，举常用的例子。\"},\"453\":{\"t\":\"推荐使用索引场景：\"},\"454\":{\"t\":\"主键长度小，建立唯一索引\"},\"455\":{\"t\":\"频繁用作查询条件的字段建立索引\"},\"456\":{\"t\":\"需要排序或分组的字段建立索引\"},\"457\":{\"t\":\"多个字段需要被查询建立复合索引\"},\"458\":{\"t\":\"不推荐建立索引场景：\"},\"459\":{\"t\":\"表的记录少，这时候全表扫描和索引查询时间差不多的。\"},\"460\":{\"t\":\"增删改操作多，查询少的表不建议建立索引，当你进行增删改时候，需要时间去维护索引。\"},\"461\":{\"t\":\"数据重复且分布平均的表字段，此时建立索引没有太大的实际效果。\"},\"462\":{\"h\":\"4.索引的底层数据结构聊一聊\",\"a\":\"_4-索引的底层数据结构聊一聊\"},\"463\":{\"t\":\"索引常见的数据结构：B 树， B+树和 Hash。\"},\"464\":{\"h\":\"Hash\",\"a\":\"hash\"},\"465\":{\"t\":\"hash 索引基于哈希表实现，哈希表是 (k,v) 键对的集合，可以通过键值 (k) 快速取到对应的值 (v)。MySQL中，只有Memory存储引擎显示支持hash索引，是Memory表的默认索引类型。\"},\"466\":{\"t\":\"实现原理：对于每一行数据，存储引擎会对索引列根据哈希函数计算一个哈希值，哈希索引将所有的哈希值存储在索引中，同时保存指向每个数据行的指针。哈希函数会存在哈希冲突，解决方法：链地址法（如果有多个列的哈希值相同，索引会以链表方式存放多个记录指针）\"},\"467\":{\"t\":\"img\"},\"468\":{\"t\":\"使用限制：\"},\"469\":{\"t\":\"哈希索引数据不是按照索引值顺序存储，不能用于排序。\"},\"470\":{\"t\":\"哈希索引不支持部分索引查找，必须使用所有的索引列来查找。\"},\"471\":{\"t\":\"哈希索引只支持等值查询（=,IN(),<,=,<），不支持范围查询。\"},\"472\":{\"t\":\"哈希冲突会影响查询速度。\"},\"473\":{\"t\":\"**总结：**哈希索引限制多，只适用于一定的场合（等值查询）。而一旦适合哈希索引，它带来的性能提升将非常显著。\"},\"474\":{\"h\":\"B树&B+树\",\"a\":\"b树-b-树\"},\"475\":{\"t\":\"推荐阅读：\"},\"476\":{\"t\":\"B树/B+树\"},\"477\":{\"t\":\"B树算法原理\"},\"478\":{\"t\":\"在一堆数据中查询一个数据时候，常用的数据结构二叉查找树（binary search tree，简称BST）、哈希桶等。以BST 为例，常见的实现有 AVT、红黑树等，由于这类型的树是平衡的，每次比较操作都会去掉当前数据量一半的数据，因此查找的时间复杂度为O(logn)。\"},\"479\":{\"t\":\"bst-example\"},\"480\":{\"t\":\"其实B树性能很不错，但是由于每个节点只能存储一个数据，可能导致树的高度会变高，每次查询的次数最坏情况会等于索引树的高度，逻辑上挨着的节点数据会离得很远（例如上面的34，35），这些问题好像不是很严重，毕竟B树是多路平衡树，可是设置合适的阶，其实这是分情况的。\"},\"481\":{\"t\":\"在内存中操作数据，问题不大。\"},\"482\":{\"t\":\"在磁盘中操作数据，会有一些不同点：\"},\"483\":{\"t\":\"读写磁盘数据很慢。\"},\"484\":{\"t\":\"读写磁盘的最小单位是数据页。\"},\"485\":{\"t\":\"为了减少读写磁盘IO的次数，能够充分利用局部性原理，磁盘预读，需要把瘦高的B树结构变成矮胖的B+树。这种数据结构特点：每个节点能容纳更多的数据，这样就能降低树的高度，同时让逻辑上相邻的数据都能尽量的存储在物理上也相邻的硬盘空间上，减少磁盘读写。\"},\"486\":{\"t\":\"img\"},\"487\":{\"t\":\"当你使用主键索引时候，B+树非叶子节点存主键的值，叶子节点存整行数据。非主键索引，B+树非叶子节点存储非主键字段，叶子节点存储对应的主键值。\"},\"488\":{\"t\":\"在这里，一个节点越“胖”，意味着扇出（fanout）越大，同时高度越低，这两个性质决定了：\"},\"489\":{\"t\":\"高扇出：邻近键值的数据局部性更好。\"},\"490\":{\"t\":\"低高度：遍历期间的寻道次数更少。\"},\"491\":{\"h\":\"5.为什么选择 B+ 作为Mysql的索引，红黑树等平均树不行吗？\",\"a\":\"_5-为什么选择-b-作为mysql的索引-红黑树等平均树不行吗\"},\"492\":{\"t\":\"更少的查找次数\"},\"493\":{\"t\":\"平衡树查找时间复杂度最坏的情况是等于树高 h。 B+ 树的出度大，高度低，矮胖矮胖的，红黑树出度为2，树高会比较大，时间复杂度就会高。\"},\"494\":{\"t\":\"利用磁盘的预读特性与局部性原理\"},\"495\":{\"t\":\"局部性原理是指无论程序指令还是数据都趋于聚集在一个较小的连续区域中。\"},\"496\":{\"t\":\"为了尽量减少I/O操作，计算机系统一般采取预读的方式，预读的长度一般为页（page）的整倍数。\"},\"497\":{\"t\":\"数据库系统将索引的一个节点的大小设置为页的大小，使得每一次 I/O 都能完全载入节点并且利用预读属性，相邻节点也能被预先载入，根据局部性原理，减少了 I/O 操作，比其他平衡树更加合适。\"},\"498\":{\"h\":\"6.聊一聊索引类型，你是怎么理解的？\",\"a\":\"_6-聊一聊索引类型-你是怎么理解的\"},\"499\":{\"h\":\"主键索引\",\"a\":\"主键索引\"},\"500\":{\"t\":\"主键索引又被称作聚簇索引。\"},\"501\":{\"t\":\"对于 InnoDB ，rowid 是每个引擎用来唯一标识数据行的信息。\"},\"502\":{\"t\":\"对于有主键的 InnoDB 来说 rowid就是主键 ID。\"},\"503\":{\"t\":\"如果没有创建主键，系统会生成长度为 6 字节 rowid 来作为主键。\"},\"504\":{\"t\":\"对于 MEMORY 引擎的 rowid 是数组下标。\"},\"505\":{\"t\":\"每张表都会有主键索引。\"},\"506\":{\"t\":\"主键索引的叶子节点存储的是整行的数据。\"},\"507\":{\"h\":\"二级索引(辅助索引)\",\"a\":\"二级索引-辅助索引\"},\"508\":{\"t\":\"唯一索引，普通索引，前缀索引等都是属于二级索引，二级索引的叶子节点存储的数据是主键。\"},\"509\":{\"t\":\"唯一索引：唯一索引也是一种约束。唯一索引的属性列不能出现重复的数据，但是允许数据为 NULL，一张表允许创建多个唯一索引。 建立唯一索引的目的大部分时候都是为了该属性列的数据的唯一性，而不是为了查询效率。\"},\"510\":{\"t\":\"普通索引：普通索引的唯一作用就是为了快速查询数据，一张表允许创建多个普通索引，并允许数据重复和 NULL。\"},\"511\":{\"t\":\"前缀索引：前缀索引只适用于字符串类型的数据。前缀索引是对文本的前几个字符创建索引，相比普通索引建立的数据更小， 因为只取前几个字符，会影响覆盖索引的使用。\"},\"512\":{\"t\":\"全文索引 ：全文索引主要是为了检索大文本数据中的关键字的信息，是目前搜索引擎数据库使用的一种技术。Mysql5.6 之前只有 MYISAM 引擎支持全文索引，5.6 之后 InnoDB 也支持了全文索引。\"},\"513\":{\"h\":\"7.你知道哪些索引的原则？\",\"a\":\"_7-你知道哪些索引的原则\"},\"514\":{\"h\":\"覆盖索引\",\"a\":\"覆盖索引\"},\"515\":{\"t\":\"🌰：\"},\"516\":{\"t\":\"#k是字段也是普通索引 T是表 select * from T where k between 3 and 5 \"},\"517\":{\"t\":\"在这个查询语句工程中，k 索引树下查询 k=3 对应的 ID 值然后回到主键索引树中搜索所有的数据，这个过程我们称之为回表。\"},\"518\":{\"t\":\"select ID from T where k between 3 and 5 \"},\"519\":{\"t\":\"我们需要查询的 ID 值在 k 索引树中的结果，可以直接返回查询结果，不用回表，这个过程我们称之为覆盖索引。在这个查询里面，对于索引树 k 已经覆盖了我们的查询需求。\"},\"520\":{\"t\":\"由于覆盖索引可以减少树的搜索次数，显著提升查询性能，所以使用覆盖索引是一个常用的性能优化手段。\"},\"521\":{\"h\":\"最左前缀原则\",\"a\":\"最左前缀原则\"},\"522\":{\"t\":\"B+ 树这种索引结构，可以利用索引的“最左前缀”，来定位记录。\"},\"523\":{\"t\":\"🌰：\"},\"524\":{\"t\":\"#现在有一个存储了id，姓名和年龄的表,姓名是索引。 select * from t where name like ‘张 %’ # 姓名，年龄是联合索引 select * from t where name like ‘张 %’ \"},\"525\":{\"t\":\"上面两个查询语句都可以使用索引。\"},\"526\":{\"t\":\"最左前缀可以是联合索引的最左 N 个字段，也可以是字符串索引的最左 M 个字符。\"},\"527\":{\"h\":\"索引下推\",\"a\":\"索引下推\"},\"528\":{\"t\":\"索引下推：可以在索引遍历过程中，对索引中包含的字段先做判断，直接过滤掉不满足条件的记录，减少回表次数。\"},\"529\":{\"t\":\"mysql 会一直向右匹配索引，直到遇到范围查询（>、<、between、like）就停止匹配。\"},\"530\":{\"t\":\"范围列可以用到索引，但是范围列后面的列无法用到索引。即：索引最多用于一个范围列，因此如果查询条件中有两个范围列则无法全用到索引。\"},\"531\":{\"t\":\"🌰：\"},\"532\":{\"t\":\"#现在有一个存储了id，姓名和年龄和性别的表,# 姓名，年龄是联合索引 select * from tuser where name like '张%' and age=10 and ismale=1; \"},\"533\":{\"t\":\"索引树会先查询姓张的数据，由于是 like 后面就不能用索引，通过索引下推然后再内部进行对age的判断，最后回表查询进行比较。\"},\"534\":{\"h\":\"8.对一个字段，你会唯一索引还是普通索引？\",\"a\":\"_8-对一个字段-你会唯一索引还是普通索引\"},\"535\":{\"t\":\"业务要求优先：如果数据库的数据需要保证数据的唯一性，做约束，那么优先选择唯一索引。\"},\"536\":{\"t\":\"如果业务没有要求，分场景去选择： \"},\"537\":{\"t\":\"写多读少的场景（账单，日志）推荐选择普通索引\"},\"538\":{\"t\":\"写多读多的场景不推荐选择普通索引。\"},\"539\":{\"t\":\"解释（主要解释第二条）：\"},\"540\":{\"t\":\"唯一索引和普通索引在查询上面性能上是差不多的。\"},\"541\":{\"t\":\"在更新方面，两者有一定的差别：\"},\"542\":{\"t\":\"唯一索引：需要每次更新时候将磁盘中的数据读入内存，在进行更新操作。\"},\"543\":{\"t\":\"普通索引：当需要更新的数据在内存中就直接更新，如果不在，更新记录写入 change buffer，后面在进行 merge，减少了将数据从磁盘读入内存的操作。\"},\"544\":{\"t\":\"change buffer 发起 merge 的条件：\"},\"545\":{\"t\":\"再次访问记录的数据页\"},\"546\":{\"t\":\"定期merge\"},\"547\":{\"t\":\"数据正常关闭时候。\"},\"548\":{\"h\":\"9.哪些情况下，字段上有索引树，但是Mysql却没有使用？\",\"a\":\"_9-哪些情况下-字段上有索引树-但是mysql却没有使用\"},\"549\":{\"t\":\"只要对索引字段使用函数操作，可能会破坏索引值的有序性，因此优化器就决定放弃走树搜索功能。\"},\"550\":{\"t\":\"举以下例子（都是用了函数操作）：\"},\"551\":{\"t\":\"对索引字段，使用常见的内置函数：mounth().\"},\"552\":{\"t\":\"对索引字段，隐式类型转换：字符串和数字比较，会将字符串转换成数字。\"},\"553\":{\"t\":\"对索引字段，隐式字符编码转换：utf8 向 utf8mb4 转换。\"},\"554\":{\"h\":\"事务\",\"a\":\"事务\"},\"555\":{\"h\":\"1. 事务有哪些特性？\",\"a\":\"_1-事务有哪些特性\"},\"556\":{\"t\":\"原子性： 事务是最小的执行单位，不允许分割。事务的原子性确保动作要么全部完成，要么完全不起作用；\"},\"557\":{\"t\":\"一致性： 执行事务前后，数据保持一致，例如转账业务中，无论事务是否成功，转账者和收款人的总额应该是不变的；\"},\"558\":{\"t\":\"隔离性： 并发访问数据库时，一个用户的事务不被其他事务所干扰，各并发事务之间数据库是独立的；\"},\"559\":{\"t\":\"持久性： 一个事务被提交之后。它对数据库中数据的改变是持久的，即使数据库发生故障也不应该对其有任何影响。\"},\"560\":{\"h\":\"2.并发事务会带来哪些问题？\",\"a\":\"_2-并发事务会带来哪些问题\"},\"561\":{\"t\":\"脏读\"},\"562\":{\"t\":\"当一个事务 A 正在访问数据 D，并对其进行了修改，在事务提交之前有另一个事务 B 访问了并使用了修改后的数据 D，读到的数是脏数据，后续的操作都是无效的。\"},\"563\":{\"t\":\"不可重复读\"},\"564\":{\"t\":\"事务 A 访问了数据 B，这时候，事务 C 也访问了数据 B 并对其进行更新操作之后，事务 A 再次访问数据 B，发现前后读取的数据不一致。\"},\"565\":{\"t\":\"幻读\"},\"566\":{\"t\":\"事务 A 访问表里面一些数据，这时候，事务 B 往这个表里面插入了几条数据之后，事务 A 再次访问表里数据，发现多了一些原本不存在或者少了一些数据。\"},\"567\":{\"t\":\"注：\"},\"568\":{\"t\":\"不可重复度和幻读，都是一个事务中对数据进行了多次的读取，前后数据不一致，但是着重点不一样。\"},\"569\":{\"t\":\"不可重复读的重点是数据的更新，幻读的重点是数据的新增和删除。\"},\"570\":{\"h\":\"3.并发带来的问题怎么解决？\",\"a\":\"_3-并发带来的问题怎么解决\"},\"571\":{\"t\":\"可以通过 SQL 标准定义的隔离级别来解决：\"},\"572\":{\"t\":\"READ-UNCOMMITTED(读取未提交)： 最低的隔离级别，允许读取尚未提交的数据变更。无法解决问题。\"},\"573\":{\"t\":\"READ-COMMITTED(读取已提交)：允许读取已经事务提交的数据。可以解决脏读。\"},\"574\":{\"t\":\"REPEATABLE-READ(可重复读)：在事务开始到结束这一段过程，读取数据保持一致。可以阻止脏读和不可重复读。\"},\"575\":{\"t\":\"SERIALIZABLE(可串行化)： 最高的隔离级别，完全服从ACID的隔离级别。所有的事务依次逐个执行，这样事务之间就完全不可能产生干扰。都可以解决。\"},\"576\":{\"t\":\"隔离级别\"},\"577\":{\"t\":\"脏读\"},\"578\":{\"t\":\"不可重复读\"},\"579\":{\"t\":\"幻影读\"},\"580\":{\"t\":\"READ-UNCOMMITTED\"},\"581\":{\"t\":\"√\"},\"582\":{\"t\":\"√\"},\"583\":{\"t\":\"√\"},\"584\":{\"t\":\"READ-COMMITTED\"},\"585\":{\"t\":\"×\"},\"586\":{\"t\":\"√\"},\"587\":{\"t\":\"√\"},\"588\":{\"t\":\"REPEATABLE-READ\"},\"589\":{\"t\":\"×\"},\"590\":{\"t\":\"×\"},\"591\":{\"t\":\"√\"},\"592\":{\"t\":\"SERIALIZABLE\"},\"593\":{\"t\":\"×\"},\"594\":{\"t\":\"×\"},\"595\":{\"t\":\"×\"},\"596\":{\"h\":\"4.在可重复读级别是怎么解决幻读？\",\"a\":\"_4-在可重复读级别是怎么解决幻读\"},\"597\":{\"t\":\"间隙锁和行锁合称 next-key lock，next-key lock帮助解决幻读问题。但是注意：间隙锁的引入，可能会导致同样的语句锁住的范围更大，会影响到并发度的。\"},\"598\":{\"t\":\"注：间隙锁只有在可重复读隔离级别才会生效。\"},\"599\":{\"h\":\"锁\",\"a\":\"锁\"},\"600\":{\"h\":\"1.什么是乐观锁和悲观锁\",\"a\":\"_1-什么是乐观锁和悲观锁\"},\"601\":{\"t\":\"乐观锁：操作数据时不会上锁，但是更新时会判断在此期间有没有别的事务更新这个数据，若被更新过，则失败重试；适用于读多写少的场景。\"},\"602\":{\"t\":\"悲观锁：认为数据随时会被修改，因此每次读取数据之前都会上锁，防止其它事务读取或修改数据；应用于数据更新比较频繁的场景；\"},\"603\":{\"h\":\"2.常见的封锁类型有哪些？\",\"a\":\"_2-常见的封锁类型有哪些\"},\"604\":{\"t\":\"排他锁（Exclusive Lock）/ X锁：事务对数据加上X锁时，只允许此事务读取和修改此数据，并且其它事务不能对该数据加任何锁；\"},\"605\":{\"t\":\"共享锁（Shared Lock）/ S锁：加了S锁后，该事务只能对数据进行读取而不能修改，并且其它事务只能加S锁，不能加X锁。\"},\"606\":{\"t\":\"意向锁\"},\"607\":{\"t\":\"（Intention Locks）：\"},\"608\":{\"t\":\"一个事务在获得某个数据行对象的 S 锁之前，必须先获得整个表的 IS 锁（意向共享锁）或更强的锁；\"},\"609\":{\"t\":\"一个事务在获得某个数据行对象的 X 锁之前，必须先获得整个表的 IX 锁（意向排他锁）；\"},\"610\":{\"t\":\"IS/IX 锁之间都是兼容的；\"},\"611\":{\"t\":\"好处：如果一个事务想要对整个表加X锁，就需要先检测是否有其它事务对该表或者该表中的某一行加了锁，这种检测非常耗时。有了意向锁之后，只需要检测整个表是否存在IX/IS/X/S锁就行了\"},\"612\":{\"h\":\"日志\",\"a\":\"日志\"},\"613\":{\"t\":\"我们今天聊一聊关于日志方面的。\"},\"614\":{\"h\":\"1.redo log是什么？在Mysql起着什么作用，记录了啥？\",\"a\":\"_1-redo-log是什么-在mysql起着什么作用-记录了啥\"},\"615\":{\"t\":\"redo log （重做日志）是 InnoDB 引擎独有的，可以保证即使数据库发生异常重启，之前提交的记录都不会丢失，保证了数据持久性与完整性，这个能力成为 crash-safe。\"},\"616\":{\"t\":\"当有数据需要更新时候，会将磁盘需要更新数据的数据页加载进入内存中，在内存中进行更新数据，接下来就会把 ”在某个数据页上做了什么修改“ 这一条记录到 redo log，根据策略选择合适的时机，将记录写入磁盘中。\"},\"617\":{\"t\":\"小贴士：每条 redo 记录由“表空间号+数据页号+偏移量+修改数据长度+具体修改的数据”组成\"},\"618\":{\"h\":\"2.redo log日志是怎样工作的？\",\"a\":\"_2-redo-log日志是怎样工作的\"},\"619\":{\"t\":\"InnoDB 的 redo log 是固定大小的，你可以选择进行配置。比如比如可以配置为一组 4 个文件，每个文件的大小是 1GB，那么 redo log 可以记录 4G 的内容。\"},\"620\":{\"t\":\"redo log 从头开始写，写到结尾，又回到开头循环写，如同一个圆，如下图：\"},\"621\":{\"t\":\"img\"},\"622\":{\"t\":\"redo log 有两个比较重要的属性：\"},\"623\":{\"t\":\"write pos 是当前记录的位置，一边写一边后移。\"},\"624\":{\"t\":\"checkpoint 是当前要擦除的位置，也是向后推移。\"},\"625\":{\"t\":\"write pos 和 checkpoint 之间的区域是可以用来记录新的操作。\"},\"626\":{\"t\":\"如果 write pos 追上 checkpoint，表示日志满了，那么不能写入新的更新记录了，需要停下来写入一些数据进入磁盘中，checkpoint 需要向后面移动。\"},\"627\":{\"h\":\"4.redo log每次都是什么时候将记录写入磁盘，总不能每次都写满了再去写入把？\",\"a\":\"_4-redo-log每次都是什么时候将记录写入磁盘-总不能每次都写满了再去写入把\"},\"628\":{\"t\":\"与 redo log 刷盘相关的参数是 innodb_flush_log_at_trx_commit，具有三种值：\"},\"629\":{\"t\":\"0：日志缓存区将每隔一秒写到日志文件中，并且将日志文件的数据刷新到磁盘上。该模式下在事务提交时不会主动触发写入磁盘的操作。\"},\"630\":{\"t\":\"1：每次事务提交时MySQL都会把日志缓存区的数据写入日志文件中，并且刷新到磁盘中，该模式为系统默认\"},\"631\":{\"t\":\"2：每次事务提交时MySQL都会把日志缓存区的数据写入日志文件中，但是并不会同时刷新到磁盘上。该模式下，MySQL会每秒执行一次刷新磁盘操作。\"},\"632\":{\"t\":\"分别说明每个模式的优缺点：\"},\"633\":{\"t\":\"当设置为0，该模式速度最快，但不太安全，mysqld进程的崩溃会导致上一秒钟所有事务数据的丢失；\"},\"634\":{\"t\":\"当设置为1，该模式是最安全的，但也是最慢的一种方式。在mysqld服务崩溃或者服务器主机宕机的情况下，日志缓存区只有可能丢失最多一个语句或者一个事务；\"},\"635\":{\"t\":\"当设置为2，该模式速度较快，较取值为0情况下更安全，只有在操作系统崩溃或者系统断电的情况下，上一秒钟所有事务数据才可能丢失；\"},\"636\":{\"h\":\"5.binlog 又是什么，他在Mysql起着什么作用，记录了啥？\",\"a\":\"_5-binlog-又是什么-他在mysql起着什么作用-记录了啥\"},\"637\":{\"t\":\"binlog （归档日志）是在 Server 层的，主要做的是 Mysql 功能层面的事情，记录内容是语句的原始逻辑，比如“给 ID=2 这一行的 c 字段加 1 ”。\"},\"638\":{\"t\":\"不管你用什么存储引擎，只要发生了表数据更新，都会产生 binlog 日志。binlog会记录所有涉及更新数据的逻辑操作，并且是顺序写。\"},\"639\":{\"h\":\"6.既然谈到了 binlog 你能说一说redo log和binlog 之间的一些异同点？\",\"a\":\"_6-既然谈到了-binlog-你能说一说redo-log和binlog-之间的一些异同点\"},\"640\":{\"t\":\"redo log 和 binlog 主要有三点不同：\"},\"641\":{\"t\":\"层面上来说： \"},\"642\":{\"t\":\"redo log 是 InnoDB引擎特有的；\"},\"643\":{\"t\":\"binlog 是 MySQL 的 Server 层实现的，所有引擎都会产生。\"},\"644\":{\"t\":\"日志记录的数据来说： \"},\"645\":{\"t\":\"redo log 是物理日志，记录的是“在某个数据页上做了什么修改”；\"},\"646\":{\"t\":\"binlog 是逻辑日志，记录的是这个语句的原始逻辑，比如“给 ID=2 这一行的 c 字段加 1 ”。\"},\"647\":{\"t\":\"从写日志的方式来说： \"},\"648\":{\"t\":\"redo log 是循环写的，空间固定会用完；\"},\"649\":{\"t\":\"binlog 是可以追加写入的。“追加写”是指 binlog 文件写到一定大小后会切换到下一个，并不会覆盖以前的日志。\"},\"650\":{\"t\":\"从能力来讲 \"},\"651\":{\"t\":\"redo log（重做日志）让InnoDB存储引擎拥有了崩溃恢复能力。\"},\"652\":{\"t\":\"binlog（归档日志）保证了MySQL集群架构的数据一致性。\"},\"653\":{\"h\":\"7.binlog 又是什么时候将记录写入磁盘呢？\",\"a\":\"_7-binlog-又是什么时候将记录写入磁盘呢\"},\"654\":{\"t\":\"与 binlog 刷盘的时机与参数 sync_binlog 相关。允许值：0～4,294,967,295。\"},\"655\":{\"t\":\"0：当事务提交时候，会把日志写入文件系统的 page cache，但是不会立即将数据写入磁盘中，而是系统自行判断什么时候写。\"},\"656\":{\"t\":\"n：累计到 n 个事务时候，将文件系统的 page cache 的数据写入磁盘中。\"},\"657\":{\"h\":\"8.说到这了，这两个配置参数怎么样配置会更好\",\"a\":\"_8-说到这了-这两个配置参数怎么样配置会更好\"},\"658\":{\"t\":\"参考文章：innodb_flush_log_at_trx_commit和sync_binlog参数详解\"},\"659\":{\"t\":\"推荐：参数都设置为1。\"},\"660\":{\"h\":\"9.请完整详细一条更新语句，执行器和 InnoDB 引擎的运行过程？\",\"a\":\"_9-请完整详细一条更新语句-执行器和-innodb-引擎的运行过程\"},\"661\":{\"t\":\"update T set c=c+1 where ID=2; \"},\"662\":{\"t\":\"执行器操作引擎 ID=2 行数据，由于 ID 是主键，通过索引树可以直接找到。如果在内存中，直接返回执行器，如果内存没有，数据页从磁盘读入内存中。\"},\"663\":{\"t\":\"执行器拿到数据后，进行更新数据，再次调用引擎接口写入这行数据。\"},\"664\":{\"t\":\"引擎在将数据更新入内存中，同时将更新操作记录写入 redo log。\"},\"665\":{\"t\":\"此时 redo log 处于 prepare 状态，然后告知执行器执行完成，可以提交事务。\"},\"666\":{\"t\":\"执行器生成操作的 binlog 并写入磁盘。\"},\"667\":{\"t\":\"执行器调用引擎的提交事务接口，引擎把刚刚写入的 redo log 改成提交（commit）状态，更新完成。\"},\"668\":{\"t\":\"（注重：关于内存的流程）\"},\"669\":{\"t\":\"img\"},\"670\":{\"h\":\"10.为什么redo log在更新语句过程中会有两种状态呢？\",\"a\":\"_10-为什么redo-log在更新语句过程中会有两种状态呢\"},\"671\":{\"t\":\"第一种解答：\"},\"672\":{\"t\":\"先用反证法去进行证明（例子依旧是上面的更新语句）：\"},\"673\":{\"t\":\"先写 redo log 后写 binlog。\"},\"674\":{\"t\":\"现在举例一个场景：redo log 写完了，binlog 还没有开始，这个时候如果 Mysql 进程异常重启。系统崩溃了，也能够把数据恢复起来，此时 c=1（c 的初值为 0）。但是 binlog 由于没有写入这一条记录，两个日志的状态逻辑上不一致。如果你后面用 binlog 去恢复数据，由于语句的丢失，恢复的数据为 c=0，与原库值不一致。\"},\"675\":{\"t\":\"先写 binlog 后写 redo log。\"},\"676\":{\"t\":\"举例：binlog 写完了，redo log 还没有写完，这个时候系统崩溃了，后面恢复的数据由于 redo log 没有写，导致 c=0，但是此时 binlog 已经记录了这一条操作了，两个日志的状态逻辑上不一致。后面用 binlog 恢复数据时候，恢复数据 c=1 与原库值不一致。\"},\"677\":{\"t\":\"将 redo log 的写入拆成了两个步骤：prepare 和 commit，称之为\\\"两阶段提交\\\"。\"},\"678\":{\"t\":\"如果没有两阶段的提交，就会导致两个日志状态逻辑上不一致。\"},\"679\":{\"t\":\"第二种解答：\"},\"680\":{\"t\":\"redo log 进行两阶段提交：当数据发生了崩溃的时候，恢复数据会对 redo log 进行一次判断：\"},\"681\":{\"t\":\"如果 redo log 已经是 commit 状态，代表这个过程没有发生意外，日志记录都已经写入了。\"},\"682\":{\"t\":\"如果 redo log 处于 prepare 状态，需要通过 binlog 来判断此记录是否有效 \"},\"683\":{\"t\":\"如果 binlog 没有记录，那么此记录无效，无效就会回滚事务。\"},\"684\":{\"t\":\"如果 binlog 记录成功了，那么此记录有效。\"},\"685\":{\"t\":\"两阶段的提交，保证了两个日志状态逻辑上是一致的。\"},\"686\":{\"h\":\"综合\",\"a\":\"综合\"},\"687\":{\"h\":\"1.mysql有哪些部分组成？\",\"a\":\"_1-mysql有哪些部分组成\"},\"688\":{\"t\":\"MySQL 主要分为 Server 层和存储引擎层：\"},\"689\":{\"t\":\"Server 层：涵盖了 MySQL 的大多数核心服务功能以及所有的内置函数，所有跨存储引擎工程都在这一层实现，比如存储过程，触发器，视图等。\"},\"690\":{\"t\":\"连接器：负责跟客户端建立连接、获取权限、维持和管理连接。\"},\"691\":{\"t\":\"查询缓存： 执行查询语句的时候，会先查询缓存（MySQL 8.0 版本后移除，因为这个功能不太实用）。\"},\"692\":{\"t\":\"分析器：进行词法分析：分析 SQL 语句有哪些部分，进行语法分析：分析 SQL 语句是否满足 SQL 语法。\"},\"693\":{\"t\":\"优化器： 按照 MySQL 认为最优的方案去执行，例如怎么去选择索引。\"},\"694\":{\"t\":\"执行器：执行前会判断用户是否有执行查询的权限，根据表的引擎定义，去使用引擎提供的接口，返回结果。\"},\"695\":{\"t\":\"存储引擎层：负责数据的存储和提取，架构模式是插件式，支持 InnoDB，MyISAM，Memory 等多个引擎存储。\"},\"696\":{\"h\":\"2.当收到You have an error in your SQL syntax 和 Unknown column ‘k’ in ‘where clause’，分别会在哪一个部分报错？\",\"a\":\"_2-当收到you-have-an-error-in-your-sql-syntax-和-unknown-column-k-in-where-clause-分别会在哪一个部分报错\"},\"697\":{\"t\":\"分析器会做两件事情：\"},\"698\":{\"t\":\"解析阶段：会处理和解析语法，生成对应的解析树。\"},\"699\":{\"t\":\"预处理阶段：进一步检测树的合法，比如数据表和数据列是否存在等。\"},\"700\":{\"t\":\"第一个报错会出现在分析器的解析阶段，第二个报错会出现在分析器的预处理阶段。\"},\"701\":{\"c\":[\"计算机基础\",\"数据库\"]},\"702\":{\"h\":\"TCP篇\"},\"703\":{\"h\":\"OSI 与 TCP/IP篇\",\"a\":\"osi-与-tcp-ip篇\"},\"704\":{\"t\":\"img\"},\"705\":{\"h\":\"1.OSI模型或者TCP/IP模型各层的功能,都有哪些协议?\",\"a\":\"_1-osi模型或者tcp-ip模型各层的功能-都有哪些协议\"},\"706\":{\"t\":\"物理层\"},\"707\":{\"t\":\"实现相邻计算机节点之间比特流的透明传送，尽可能屏蔽掉具体传输介质和物理设备的差异（比特流）\"},\"708\":{\"t\":\"数据链路层\"},\"709\":{\"t\":\"建立逻辑连接、进行硬件地址寻址、差错校验等功能。将比特组合成字节进而组合成帧，用MAC地址访问介质，错误发现就直接丢弃。(帧)\"},\"710\":{\"t\":\"网络层\"},\"711\":{\"t\":\"选择合适的网间路由和交换结点， 确保数据及时传送。协议有：ICMP IGMP IP（IPV4 IPV6） ARP RARP（分组或者包）\"},\"712\":{\"t\":\"传输层\"},\"713\":{\"t\":\"负责向两台主机进程之间的通信提供通用的数据传输服务。协议有：TCP UDP，\"},\"714\":{\"t\":\"会话层\"},\"715\":{\"t\":\"建立、管理、终止会话。对应主机进程，指本地主机与远程主机正在进行的会话\"},\"716\":{\"t\":\"表现层\"},\"717\":{\"t\":\"数据的表示、安全、压缩。格式有，JPEG、ASCll、DECOIC、加密格式等\"},\"718\":{\"t\":\"应用层\"},\"719\":{\"t\":\"通过应用进程间的交互来完成特定网络应用，协议有：HTTP FTP TFTP（文件传输） SMTP（电子邮件传输） SNMP（网络管理） DNS（域名系统） TELNET（远程登录） HTTPS DHCP（动态主机配置）\"},\"720\":{\"t\":\"至于tcp/ip模型你选择OSI模型对应的层去说即可\"},\"721\":{\"t\":\"五层体系结构\"},\"722\":{\"t\":\"七层模型传输数据过程：\"},\"723\":{\"t\":\"img\"},\"724\":{\"h\":\"2.为什么要分层，分层有什么意义？\",\"a\":\"_2-为什么要分层-分层有什么意义\"},\"725\":{\"t\":\"各层之间是独立的。某一层可以使用其下一层提供的服务而不需要知道服务是如何实现的。\"},\"726\":{\"t\":\"灵活性好。当某一层发生变化时，只要其接口关系不变，则这层以上或以下的各层均不受影响。\"},\"727\":{\"t\":\"结构上可分割开。各层可以采用最合适的技术来实现 。\"},\"728\":{\"t\":\"易于实现和维护。\"},\"729\":{\"t\":\"能促进标准化工作。\"},\"730\":{\"t\":\"与分层体系结构的思想相似的日常生活有邮政系统，物流系统。\"},\"731\":{\"h\":\"TCP篇\",\"a\":\"tcp篇\"},\"732\":{\"h\":\"1.什么是TCP\",\"a\":\"_1-什么是tcp\"},\"733\":{\"t\":\"TCP是面向连接的，可靠的，基于字节流的传输层通信协议\"},\"734\":{\"t\":\"面向连接的：\"},\"735\":{\"t\":\"⼀定是**「⼀对⼀」**才能连接，不能像 UDP 协议可以⼀个主机同时向多个主机发送消息，也就是⼀对多是无法做到的；\"},\"736\":{\"t\":\"可靠的：\"},\"737\":{\"t\":\"无论的网络链路中出现了怎样的链路变化，TCP 都可以保证⼀个报⽂⼀定能够到达接收端；\"},\"738\":{\"t\":\"基于字节流：\"},\"739\":{\"t\":\"消息是**「没有边界」的，所以无论我们消息有多大都可以进行传输。并且消息是「有序的」**，当 **「前⼀个」消息没有收到的时候，即使它先收到了后面的字节，那么也不能扔给应用层去处理，同时对「重复」**的报⽂会自动丢弃。\"},\"740\":{\"h\":\"2.TCP的头格式是什么？\",\"a\":\"_2-tcp的头格式是什么\"},\"741\":{\"t\":\"​ TCP头部格式\"},\"742\":{\"t\":\"image-20210911140927364\"},\"743\":{\"t\":\"序列号（seq）：\"},\"744\":{\"t\":\"在建立连接时由计算机⽣成的随机数作为其初始值，通过 SYN 包传给接收端主机，每发送⼀次数据，就 「累加」⼀次该「数据字节数」的大小。\"},\"745\":{\"t\":\"用来解决网络包乱序问题。\"},\"746\":{\"t\":\"确认应答号（ack）：\"},\"747\":{\"t\":\"指下⼀次「期望」收到的数据的序列号，发送端收到这个确认应答以后可以认为在这个序号以前的数 据都已经被正常接收。\"},\"748\":{\"t\":\"用来解决不丢包的问题。\"},\"749\":{\"t\":\"控制位：\"},\"750\":{\"t\":\"ACK：该位为 1 时，「确认应答」的字段变为有效，TCP 规定除了最初建⽴连接时的 SYN 包之外该位必 须设置为 1 。\"},\"751\":{\"t\":\"RST：该位为 1 时，表示 TCP 连接中出现异常必须强制断开连接。\"},\"752\":{\"t\":\"SYN：该位为 1 时，表示希望建⽴连接，并在其「序列号」的字段进⾏序列号初始值的设定。\"},\"753\":{\"t\":\"FIN：该位为 1 时，表示今后不会再有数据发送，希望断开连接。当通信结束希望断开连接时，通信双⽅的主机之间就可以相互交换 FIN 位为 1 的 TCP 段。\"},\"754\":{\"h\":\"3.为什么需要TCP协议，他工作在哪一层？\",\"a\":\"_3-为什么需要tcp协议-他工作在哪一层\"},\"755\":{\"t\":\"网络层是不可靠的，他不能保证网络包的按序交付，也不能保证网络包中的数据完整性！所以就有传输层的TCP协议负责网络数据包的可靠性！\"},\"756\":{\"h\":\"4.tcp是面向连接的，那么怎么确认是唯一的连接？\",\"a\":\"_4-tcp是面向连接的-那么怎么确认是唯一的连接\"},\"757\":{\"t\":\"源地址\"},\"758\":{\"t\":\"目的地址 \"},\"759\":{\"t\":\"通过ip协议发送报文给对方主机\"},\"760\":{\"t\":\"源端口\"},\"761\":{\"t\":\"目的端口 \"},\"762\":{\"t\":\"告诉TCP协议应该把报文发送给哪一个进程\"},\"763\":{\"h\":\"5.传输层有TCP与UDP协议，他们之间区别是什么，分别应用的场景是哪儿？\",\"a\":\"_5-传输层有tcp与udp协议-他们之间区别是什么-分别应用的场景是哪儿\"},\"764\":{\"t\":\"TCP与UDP区别：\"},\"765\":{\"t\":\"连接 \"},\"766\":{\"t\":\"TCP是面向连接的，传输数据首先要建立连接，\"},\"767\":{\"t\":\"UDP不需要建立连接，即刻传输数据\"},\"768\":{\"t\":\"服务对象 \"},\"769\":{\"t\":\"TCP协议是一对一传输\"},\"770\":{\"t\":\"UDP是可以一对一，一对多，多对多的交互通信\"},\"771\":{\"t\":\"可靠性 \"},\"772\":{\"t\":\"TCP是可靠交付数据的，数据无差错，不丢失，不重复，按需到达\"},\"773\":{\"t\":\"UDP尽最大努力交付，不能保证可靠性\"},\"774\":{\"t\":\"首部开销 \"},\"775\":{\"t\":\"TCP首部长度较长一般是20字节\"},\"776\":{\"t\":\"UDP首部只有8个字节，固定不变，开销小\"},\"777\":{\"t\":\"传输方式 \"},\"778\":{\"t\":\"TCP 是流式传输，没有边界\"},\"779\":{\"t\":\"UDP是一个一个包传输的，有边界\"},\"780\":{\"t\":\"TCP与UDP应用的场景：\"},\"781\":{\"t\":\"TCP是面向连接的，具有可靠性的，经常用于\"},\"782\":{\"t\":\"FTP文件传输\"},\"783\":{\"t\":\"HTTP/HTTPS\"},\"784\":{\"t\":\"SMTP邮件传输\"},\"785\":{\"t\":\"UDP是不需要连接，尽最大努力交付的，经常用于：\"},\"786\":{\"t\":\"视频，音频等多媒体通信\"},\"787\":{\"t\":\"游戏网络通信\"},\"788\":{\"t\":\"广播通信\"},\"789\":{\"h\":\"6.简述TCP三次握手的过程\",\"a\":\"_6-简述tcp三次握手的过程\"},\"790\":{\"t\":\"TCP 通过三次握手来建立连接\"},\"791\":{\"t\":\"image.png\"},\"792\":{\"t\":\"三次握手过程如下：\"},\"793\":{\"t\":\"一开始，客户端和服务端都处于CLOSED。\"},\"794\":{\"t\":\"先是服务端主动监听某个端口，处于LISTEN ,开始接受第一个报文。\"},\"795\":{\"t\":\"客户端随机初始化序列号（client_isn），同时控制位中的SYN置为1。第一个报文发送到服务端，表示向服务端发起连接请求，之后客户端处于SYN-SENT状态\"},\"796\":{\"t\":\"服务端收到报文后，服务端随机初始化序列号（server_isn）,确认应答号（ack）填入client_isn+1 接着SYN和ACK 都置为1，发送报文到客户端，该报文不包含应用层数据，之后服务端处于SYN-RCVD状态\"},\"797\":{\"t\":\"客户端收到报文后，还要向服务端回应一个应答报文，ACK置为1 ，确认应答号（ack）填入server_isn+1 ，序列号可以填入应用层的数据，之后客户端处于ESTABLISHEN状态\"},\"798\":{\"t\":\"服务器收到客户端的应答报文后，也进入ESTABLISHED状态\"},\"799\":{\"t\":\"温馨提示：\"},\"800\":{\"t\":\"第三次握手是可以携带数据的，前面两次的序列号都随机生成，不可以携带数据\"},\"801\":{\"t\":\"那么为什么前两次不能携带数据？\"},\"802\":{\"t\":\"减少服务器被攻击的风险。如果前两次能够携带数据，一旦有人想要攻击服务器，就可以在第一次握手中的SYN的报文放入大量数据，服务器势必会消耗更多的时间和内存空间去处理这些数据，就增加了服务器被攻击的风险。\"},\"803\":{\"t\":\"第三次握手，客户端已经处于ESTABLISHED状态，可以接受服务器的报文，相对安全\"},\"804\":{\"t\":\"参考博客：\"},\"805\":{\"t\":\"https://blog.csdn.net/King___Ding/article/details/114873086\"},\"806\":{\"h\":\"7.为什么是三次握手，不是两次，或者四次呢？\",\"a\":\"_7-为什么是三次握手-不是两次-或者四次呢\"},\"807\":{\"t\":\"比较常回答的是“因为三次握手才能保证双方具有接收和发送的能⼒。”\"},\"808\":{\"t\":\"但是这回答比较片面，，没有说到点子上，面试官不愿听\"},\"809\":{\"t\":\"接下来以三个方面分析三次握手的原因：\"},\"810\":{\"t\":\"三次握手才可以阻止重复历史连接的初始化（主要原因）\"},\"811\":{\"t\":\"三次握手才可以同步双方的初始序列号\"},\"812\":{\"t\":\"三次握手才可以避免资源浪费\"},\"813\":{\"t\":\"原因一：避免历史连接\"},\"814\":{\"t\":\"img\"},\"815\":{\"t\":\"三次握手的首要原因是为防止旧的重复连接引起连接初始化混乱的问题。\"},\"816\":{\"t\":\"三次握手避免历史连接过程如下：\"},\"817\":{\"t\":\"一个旧的SYN报文会比新的SYN报文先到服务端\"},\"818\":{\"t\":\"服务端返回一个SYN+ACK报文到客户端\"},\"819\":{\"t\":\"客户端通过自身的上下文,判断此连接是否是一个历史连接？ \"},\"820\":{\"t\":\"如果是，客户端返回一个RET报文，终止此次连接，等待正确的SYN+ACK报文\"},\"821\":{\"t\":\"如果不是，则建立连接\"},\"822\":{\"t\":\"如果是两次握手连接，没有足够的上下文去判断当前连接是否是历史连接，三次握手则可以在客户端（发送方）准备发送第三次 报⽂时，客户端因有足够的上下文来判断当前连接是否是历史连接：\"},\"823\":{\"t\":\"原因二：同步双方初始序列号\"},\"824\":{\"t\":\"序列号是可靠传输的一个关键因素，他的作用如下：\"},\"825\":{\"t\":\"接收方可以去除重复数据\"},\"826\":{\"t\":\"接送方可以根据数据包的序列号，按序接受\"},\"827\":{\"t\":\"可以标识发送出去的数据包，判断哪些数据包是已经被对方接收到的。\"},\"828\":{\"t\":\"img\"},\"829\":{\"t\":\"四次握手也可以同步初始序列号，但是第二步与第三步可以优化成一步\"},\"830\":{\"t\":\"两次握手只能保证一方那个的初始序列号被对方成功接受，不能保证双方的初始序列号都能确认接受\"},\"831\":{\"t\":\"原因三：避免资源浪费\"},\"832\":{\"t\":\"img\"},\"833\":{\"t\":\"如果是两次握手连接，在网络情况复杂的情况下，客户端的SYN 阻塞了，重复发送多次SYN报文，那么服务器在收到请求后就会建立多个冗余无效的连接，造成不必要的资源浪费\"},\"834\":{\"t\":\"小结：\"},\"835\":{\"t\":\"TCP建立连接，通过三次握手的原因：\"},\"836\":{\"t\":\"能防止历史连接的建立，能减少双方不必要的资源开销，能帮助双方同步初始化序 列号。序列号能够保证数据包不重复、不丢弃和按序传输。\"},\"837\":{\"t\":\"不使用两次握手的原因：\"},\"838\":{\"t\":\"无法防止历史连接的建立，会造成双方资源的浪费，也无法可靠的同步双方序列号；\"},\"839\":{\"t\":\"不使用四次握手的原因：\"},\"840\":{\"t\":\"三次握手是理论上最少次数可靠连接建立，不需要使用更多的通信次数，节约资源。\"},\"841\":{\"h\":\"8.刚才你提到前两次握手时随机生成的序列号，为什么要随机生成，为什么客户端和服务端初始序列号是不同的？\",\"a\":\"_8-刚才你提到前两次握手时随机生成的序列号-为什么要随机生成-为什么客户端和服务端初始序列号是不同的\"},\"842\":{\"t\":\"如果⼀个已经失效的连接被重新建立起来了，但是该旧连接的历史报文可能还残留在网络中（还没有到达接收方），如果序列号相同，那么就无法分辨 出该报文是不是历史报文，如果历史报文被新的连接接收了，则会产生数据错乱。\"},\"843\":{\"t\":\"所以，每次建立连接前重新初始化⼀个序列号主要是为了通信双方能够根据序号将不属于本连接的报文段丢弃。\"},\"844\":{\"t\":\"另一方面时为了安全性，防止黑客伪造相同序列号TCP报文被对方接收。\"},\"845\":{\"t\":\"参考图：\"},\"846\":{\"t\":\"这里写图片描述\"},\"847\":{\"h\":\"9.简述TCP的四次挥手的过程\",\"a\":\"_9-简述tcp的四次挥手的过程\"},\"848\":{\"t\":\"img\"},\"849\":{\"t\":\"客户端打算关闭连接，此时会发送一个FIN置为1的TCP报文，即FIN报文，之后客户端进入FIN_WAIT_1状态\"},\"850\":{\"t\":\"服务端收到此报文后，会回复一个ACK确认应答报文，之后服务端进入CLOSED_WAIT状态\"},\"851\":{\"t\":\"客户端收到服务端发过来的ACK应答报文，之后进入FIN_WAITE_2状态\"},\"852\":{\"t\":\"等待服务端处理完数据后，也向客户端发送FIN报文之后服务端进入LAST_ACK状态\"},\"853\":{\"t\":\"客户端收到服务端的FIN报文后，向服务端发送ACK确认应答报文，之后进入TIME_WAIT状态\"},\"854\":{\"t\":\"服务端收到客户端发送的ACK确认应答报文后，就直接进入CLOSE状态，至此服务端已经完成连接关闭\"},\"855\":{\"t\":\"客户端经过2MSL一段时间后，自动进入CLOSED状态，客户端完成连接关闭\"},\"856\":{\"h\":\"10.为什么挥手需要四次，不能三次吗？\",\"a\":\"_10-为什么挥手需要四次-不能三次吗\"},\"857\":{\"t\":\"关闭连接时，客户端会发送一个FIN报文，仅仅表示客户端不再发送数据，但是可以接受数据。\"},\"858\":{\"t\":\"服务端接受后，返回一个ACK确认应答报文，可能服务端还有数据需要处理和发送，等待服务端不再发送数据时候，才发送FIN报文，表示同意关闭连接\"},\"859\":{\"t\":\"有上面过程可知，服务端需要将未处理完的数据，进行处理以及发送。所以服务端的FIN和ACK报文分开发送，而不是一起发送.\"},\"860\":{\"h\":\"11.为什么需要TIME_WAIT状态\",\"a\":\"_11-为什么需要time-wait状态\"},\"861\":{\"t\":\"根据第三版《UNIX网络编程 卷1》2.7节，TIME_WAIT状态的主要目的有两个：\"},\"862\":{\"t\":\"优雅的关闭TCP连接，也就是尽量保证被动关闭的一端收到它自己发出去的FIN报文的ACK确认报文；\"},\"863\":{\"t\":\"img\"},\"864\":{\"t\":\"处理延迟的重复报文，这主要是为了避免前后两个使用相同四元组的连接中的前一个连接的报文干扰后一个连接。\"},\"865\":{\"t\":\"img\"},\"866\":{\"h\":\"12.为什么TIME_WAITE需要2MSL，不是更多呢?\",\"a\":\"_12-为什么time-waite需要2msl-不是更多呢\"},\"867\":{\"t\":\"MSL 是报文最大生存时间，如果超过这个时间，报文就会被丢弃。是任何报文在网络上存在的最长时间，超过这个时间报文将被丢弃。因为 TCP 报文基于是 IP 协议的，而 IP 头中有一个 TTL 字段，是 IP 数据报可以经过的最大路由数，每经过一个处理他的路由器此值就减 1，当此值为 0 则数据报将被丢弃，同时发送 ICMP 报文通知源主机。\"},\"868\":{\"t\":\"MSL与TTL的区别：\"},\"869\":{\"t\":\"MSL 的单位是时间\"},\"870\":{\"t\":\"TTL是经过路由跳数\"},\"871\":{\"t\":\"所以MSL应该要大于等于TTL消耗为0的时间，以确保报文已被自然消亡\"},\"872\":{\"t\":\"当客户端发送最后一个ACK报文，服务端处于LAST_ACK状态，在收到最后一个ACK之前它会一直重传FIN报文直至超时。那么客户端发送到服务端的ACK报文有两种结局\"},\"873\":{\"t\":\"ACK在网络中丢失，我觉得情况不需要考虑，因为tcp是可靠连接，因为除非多次重传失败，否则AB两端的状态不会发生变化直至最后一个ACK不再丢失。\"},\"874\":{\"t\":\"ACK报文被B接收到。我们假设A发送了ACK报文后过了一段时间t之后B才收到该ACK，则有 0 < t <= MSL。因为A并不知道它发送出去的ACK要多久对方才能收到，所以A至少要维持MSL时长的TIME_WAIT状态才能保证它的ACK从网络中消失。同时处于LAST_ACK状态的B因为收到了ACK，所以它直接就进入了CLOSED状态，而不会向网络发送任何报文。所以晃眼一看，A只需要等待1个MSL就够了，但仔细想一下其实1个MSL是不行的，因为在B收到ACK前的一刹那，B可能因为没收到ACK而重传了一个FIN报文，这个FIN报文要从网络中消失最多还需要一个MSL时长，所以A还需要多等一个MSL。\"},\"875\":{\"t\":\"综上所诉TIME_WAIT等待2倍的MSL比较合理解释：\"},\"876\":{\"t\":\"第一个MSL是为了等自己发出去的最后一个ACK报文从网络消失，第二个MSL是对了等服务端收到ACK之前的一刹那可能重传的FIN报文从网络消失\"},\"877\":{\"t\":\"虽然说维持TIME_WAIT状态一段时间有2个目的，但这段时间具体应该多长主要是为了达成上述第二个目的而设计的。\"},\"878\":{\"t\":\"为什么不是 4 或者 8 MSL 的时长呢？\"},\"879\":{\"t\":\"你可以想象一个丢包率达到百分之一的糟糕网络，连续两次丢包的概率只有万分之一，这个概率实在是太小了，忽略它比解决它更具性价比。\"},\"880\":{\"h\":\"13.TCP如何保证可靠传输\",\"a\":\"_13-tcp如何保证可靠传输\"},\"881\":{\"t\":\"是通过序列号、确认应答、重发控制、连接管理以及窗⼝控制等机制实现可靠性传输的。\"},\"882\":{\"h\":\"14.简单讲讲TCP常见的重传机制\",\"a\":\"_14-简单讲讲tcp常见的重传机制\"},\"883\":{\"t\":\"TCP 实现可靠传输的方式之一，是通过序列号与确认应答。\"},\"884\":{\"h\":\"超时重传\",\"a\":\"超时重传\"},\"885\":{\"t\":\"重传机制的其中一个方式，就是在发送数据时，设定一个定时器，当超过指定的时间后，没有收到对方的 ACK 确认应答报文，就会重发该数据，也就是我们常说的超时重传。\"},\"886\":{\"t\":\"发生超时重传的情况如下：\"},\"887\":{\"t\":\"数据包丢失\"},\"888\":{\"t\":\"确认应答ACK丢失\"},\"889\":{\"t\":\"超时时间设置为多少\"},\"890\":{\"t\":\"RTT\"},\"891\":{\"t\":\"RTT 就是数据从网络一端传送到另一端所需的时间，也就是包的往返时间。\"},\"892\":{\"t\":\"超时重传时间是以 RTO （Retransmission Timeout 超时重传时间）表示。\"},\"893\":{\"t\":\"超时时间较长与较短\"},\"894\":{\"t\":\"当超时时间 RTO 较大时，重发就慢，丢了老半天才重发，没有效率，性能差；\"},\"895\":{\"t\":\"当超时时间 RTO 较小时，会导致可能并没有丢就重发，于是重发的就快，会增加网络拥塞，导致更多的超时，更多的超时导致更多的重发。\"},\"896\":{\"t\":\"根据上述的两种情况，我们可以得知，超时重传时间 RTO 的值应该略大于报文往返 RTT 的值。\"},\"897\":{\"t\":\"实际上「报文往返 RTT 的值」是经常变化的，因为我们的网络也是时常变化的。也就因为「报文往返 RTT 的值」 是经常波动变化的，所以「超时重传时间 RTO 的值」应该是一个动态变化的值。\"},\"898\":{\"t\":\"因为是以时间为驱动，会存在一个问题：**当 seq=3 的确认报文没有接收到，客户端会死等 3 的确认报文，直到超时，那么是再次发送报文 seq=3，还是把 seq=3，4，5都发送呢？**其实这两种方式都不好，因为你会去等 timeout 时间，timeout 是变化的，就可能会逐渐变长。\"},\"899\":{\"h\":\"快速重传\",\"a\":\"快速重传\"},\"900\":{\"t\":\"快速重传，他与超时重传不同，他不是以时间为驱动，而是以数据（确认应答）驱动重传。\"},\"901\":{\"t\":\"快速重传机制\"},\"902\":{\"t\":\"发送方发出1，2，3，4，5份数据\"},\"903\":{\"t\":\"第一份 seq1 先送到了，ack 返回2\"},\"904\":{\"t\":\"seq2 没有送到接受方\"},\"905\":{\"t\":\"seq3，seq4，seq5 都送到了，但是ack都返回2\"},\"906\":{\"t\":\"发送端接受到了三个ack=2，知道seq2对方没有收到，就重传seq2\"},\"907\":{\"t\":\"最后，接收方收到seq2 ，又因为seq3，seq4，seq5收到了，返回ack=6\"},\"908\":{\"t\":\"其实快速重传有一个问题：\"},\"909\":{\"t\":\"当我收到了三个返回 ack 的报文，就面临一个问题，我是传一个还是后面的全部重传。对于发送方来说，**不知道这三个 ack 对应的哪些报文啊？**可能在上图中我知道是 seq=3，4，5，但是如果我需要传 20 个报文呢，可能接收方收到的 seq=1,seq=6,seq=10,seq=20 这些报文，接收方还是会收到三次的第 2 次数据对应的ACK 报文。发送方收到之后，就发送一个 seq=3 的报文，接下来两边就不会再发送数据了，陷入了等待。\"},\"910\":{\"t\":\"因为对于发送方来说，seq=3 报文，我发送了 啊。对于接收方来说，我确实没有接收到 3 但是 20 个包已经发送完了啊，接收方对于第三次数据怎么去发送三个 ACK 包呢！\"},\"911\":{\"h\":\"SACK\",\"a\":\"sack\"},\"912\":{\"t\":\"为了解决这个问题，出现SACK机制（选择性确认）\"},\"913\":{\"t\":\"选择性确认\"},\"914\":{\"t\":\"当发送方接受到有三次同样的ACK报文，它可以根据SACK缓冲区的记录，告诉你我收到了哪些，发现 200-299 丢失，那么他就可以选择 seq2 进行重发\"},\"915\":{\"h\":\"D-SACK\",\"a\":\"d-sack\"},\"916\":{\"t\":\"D-SACK是对SACK进行一个扩展，主要使用SACK告诉发送方有哪些数据被重复接受了！\"},\"917\":{\"t\":\"发送方能够知道是发出去的包丢了还是接收方发送的ACK丢了 \"},\"918\":{\"t\":\"SACK若告知这个包已被发送过，那么说明是接收方发送的ACK丢了\"},\"919\":{\"t\":\"发送方可以知道发出去的数据包是否被网络延迟了 \"},\"920\":{\"t\":\"发送方在延迟之后会重发数据包，之前的数据包若一段时间后到达了接收方，接收方返回的应答报文中能看到该数据包已经被接收了，是个重复的报文，说明被网络延迟了，而重发的数据包已被收到\"},\"921\":{\"t\":\"为什么要知道这些数据？理由：知道这些东西可以很好得帮助TCP了解网络情况，从而可以更好的做网络上的流控。\"},\"922\":{\"h\":\"15.为什么引入滑动窗口？\",\"a\":\"_15-为什么引入滑动窗口\"},\"923\":{\"t\":\"我们都知道，TCP必需要解决的可靠传输以及包乱序（reordering）的问题，所以，TCP必需要知道网络实际的数据处理带宽或是数据处理速度，这样才不会引起网络拥塞，导致丢包。\"},\"924\":{\"t\":\"引入滑动窗口来做网络的流控，尽可能地保证网络流畅，不会发生拥塞。\"},\"925\":{\"t\":\"滑动窗口的工作流程\"},\"926\":{\"t\":\"img\"},\"927\":{\"h\":\"16.既然说到了窗口，那么大小是怎么决定的？\",\"a\":\"_16-既然说到了窗口-那么大小是怎么决定的\"},\"928\":{\"t\":\"在TCP头部格式中有一个窗口大小的字段\"},\"929\":{\"t\":\"这个字段是接收端告诉发送端自己还有多少缓冲区可以接收数据。于是发送端就可以根据这个接收端的处理能力来发送数据，而不会导致接收端处理不过来。\"},\"930\":{\"t\":\"所以窗口大小由接收方决定。\"},\"931\":{\"h\":\"17.流量控制，当接收方的窗口为0时，他有一个潜在的死锁现象，你知道吗？简单描述下\",\"a\":\"_17-流量控制-当接收方的窗口为0时-他有一个潜在的死锁现象-你知道吗-简单描述下\"},\"932\":{\"t\":\"可能存在的死锁现象\"},\"933\":{\"t\":\"当接收方的窗口为0时候，会发送一个报文告知发送方此时的窗口为0\"},\"934\":{\"t\":\"当接收方处理完数据后，此时窗口不为0 ，会发送一个窗口非0的报文\"},\"935\":{\"t\":\"如果这个报文在网络中丢失，那么就会出现死锁的情况\"},\"936\":{\"t\":\"接收方在等待发送方发送数据\"},\"937\":{\"t\":\"发送方在等待接收方告知他的窗口不为0\"},\"938\":{\"t\":\"窗口关闭潜在的危险\"},\"939\":{\"h\":\"18.死锁现象怎么解决\",\"a\":\"_18-死锁现象怎么解决\"},\"940\":{\"t\":\"当发送方接受到了一个窗口为0 的通知后，会启动持续计时器。\"},\"941\":{\"t\":\"当持续计时器超时时候，发送方会发送一个窗口探测的报文，接收方收到这个报文后，会返回当前的窗口大小。\"},\"942\":{\"t\":\"窗口探测\"},\"943\":{\"t\":\"窗口探测\"},\"944\":{\"t\":\"如果接收窗口仍然为 0，那么发送方就会重新启动持续计时器；\"},\"945\":{\"t\":\"如果接收窗口不是 0，那么死锁的局面就可以被打破了。\"},\"946\":{\"h\":\"19.你了解糊涂窗口综合症吗？\",\"a\":\"_19-你了解糊涂窗口综合症吗\"},\"947\":{\"t\":\"症状是：\"},\"948\":{\"t\":\"当接收方窗口内的数据，来不及处理，缓存在窗口中，那么会导致发送方的窗口越来越小，甚至发生发送方发送的报文数据只有几个字节的情况。\"},\"949\":{\"t\":\"糊涂在哪：如果接收方腾出几个字节并告诉发送方现在有几个字节的窗口，而发送方会义无反顾地发送这几个字节，这就是糊涂窗口综合症。\"},\"950\":{\"t\":\"糊涂窗口综合症\"},\"951\":{\"t\":\"从图上可以看出解决方法有两种：\"},\"952\":{\"t\":\"接收方不告知小窗口（窗口大小，很小达几个字节） \"},\"953\":{\"t\":\"当窗口长度小到一定程度，就发送窗口为0的报文\"},\"954\":{\"t\":\"发送方不发送数据少的报文 \"},\"955\":{\"t\":\"等待接收方告知的报文窗口大小达到一定的字节就发送数据，不然就一直囤积数据\"},\"956\":{\"h\":\"20.有了流量控制，为什么TCP可靠性还需要拥塞控制？\",\"a\":\"_20-有了流量控制-为什么tcp可靠性还需要拥塞控制\"},\"957\":{\"t\":\"流量控制是对发送方和接收方两者的发送数据量的一个束缚，但是大量的计算机都是在一个网络环境里面，如果对发送到环境内的报文不进行约束，那么网络就会出现堵塞，极易导致发送的数据包出现丢失，时延等问题，如果TCP再发生重传，网络负担就会更重，于是会导致更多的丢包，更长的时延，恶性循环下去。\"},\"958\":{\"t\":\"于是，就有了拥塞控制，控制的目的就是避免「发送方」的数据填满整个网络。\"},\"959\":{\"t\":\"为了限制发送方发送到网络中的数据量，定义了一个叫做「拥塞窗口」的概念。\"},\"960\":{\"t\":\"如果报文发生了丢失，时延，那么就代表网络处于拥塞的状态。\"},\"961\":{\"h\":\"21.拥塞窗口与发送窗口有什么关系？\",\"a\":\"_21-拥塞窗口与发送窗口有什么关系\"},\"962\":{\"t\":\"发送方发送的报文，不能仅仅考虑到对面接收方的窗口大小，还要考虑到网络环境的情况。\"},\"963\":{\"t\":\"为了报文减少丢失，时延，更可靠的到达接收方，发送窗口的值取得是拥塞窗口和接收窗口中的最小值。\"},\"964\":{\"h\":\"22.拥塞控制的原理是什么？\",\"a\":\"_22-拥塞控制的原理是什么\"},\"965\":{\"t\":\"拥塞控制主要是四个算法：\"},\"966\":{\"t\":\"慢启动\"},\"967\":{\"t\":\"拥塞避免\"},\"968\":{\"t\":\"快重传\"},\"969\":{\"t\":\"快恢复\"},\"970\":{\"h\":\"慢启动\",\"a\":\"慢启动\"},\"971\":{\"t\":\"慢启动的规则是当发送方收到一个ACK，拥塞窗口以指数级别的上升。\"},\"972\":{\"t\":\"可能你觉得这是慢启动吗？\"},\"973\":{\"t\":\"是的，慢启动是一点点的去提高发送包的数量，刚开始很慢的启动，先开始发送的数量是1，逐渐慢慢提高到慢启动门限。\"},\"974\":{\"t\":\"慢启动算法\"},\"975\":{\"t\":\"慢启动的发送包的数量不是一直提高，有一个叫慢启动门限的状态变量\"},\"976\":{\"t\":\"当 cwnd < ssthresh 时，使用慢启动算法。\"},\"977\":{\"t\":\"当 cwnd >= ssthresh 时，就会使用「拥塞避免算法」。\"},\"978\":{\"h\":\"拥塞避免\",\"a\":\"拥塞避免\"},\"979\":{\"t\":\"当拥塞窗口超过慢启动门限时候，就会启动拥塞避免。\"},\"980\":{\"t\":\"拥塞避免的规则是每当收到一个ACK时候，拥塞窗口+1，直到出现丢包或者超时的情况，避免增长过快导致网络拥塞，慢慢的增加调整到网络的最佳值。\"},\"981\":{\"t\":\"拥塞避免\"},\"982\":{\"h\":\"快重传和快恢复\",\"a\":\"快重传和快恢复\"},\"983\":{\"t\":\"当发生拥塞情况，TCP就会启动快重传和快恢复机制。\"},\"984\":{\"t\":\"当发生了超时重传情况\"},\"985\":{\"t\":\"ssthresh （慢启动门限）设为 cwnd/2，\"},\"986\":{\"t\":\"cwnd （拥塞窗口）重置为 1\"},\"987\":{\"t\":\"然后重新开始慢启动。\"},\"988\":{\"t\":\"拥塞发送 —— 超时重传\"},\"989\":{\"t\":\"这种方式比较激烈，丢了包就一切重来，十分不利于网络的稳定传递\"},\"990\":{\"t\":\"现在的TCP控制算法就是当收到三个重复确认ACK时，TCP开启快速重传 Fast Retransmit 算法，而不用等到RTO超时再进行重传\"},\"991\":{\"t\":\"cwnd 大小缩小为当前的一半\"},\"992\":{\"t\":\"ssthresh 设置为缩小后的 cwnd 大小\"},\"993\":{\"t\":\"然后进入快速恢复算法 Fast Recovery。\"},\"994\":{\"t\":\"当发送方收到3个重复的ACK的情况\"},\"995\":{\"t\":\"cwnd = cwnd/2 ，也就是设置为原来的一半;\"},\"996\":{\"t\":\"ssthresh = cwnd;\"},\"997\":{\"t\":\"进入快恢复算法 \"},\"998\":{\"t\":\"拥塞窗口 cwnd = ssthresh + 3 （ 3 的意思是确认有 3 个数据包被收到了）；\"},\"999\":{\"t\":\"重传丢失的数据包；\"},\"1000\":{\"t\":\"如果再收到重复的 ACK，那么 cwnd 增加 1；\"},\"1001\":{\"t\":\"如果收到新数据的 ACK 后，把 cwnd 设置为第一步中的 ssthresh 的值，原因是该 ACK 确认了新的数据，说明从 duplicated ACK 时的数据都已收到，\"},\"1002\":{\"t\":\"该恢复过程已经结束，可以回到恢复之前的状态了，也即再次进入拥塞避免状态；\"},\"1003\":{\"t\":\"快速重传和快速恢复\"},\"1004\":{\"h\":\"补充知识\",\"a\":\"补充知识\"},\"1005\":{\"h\":\"介绍UDP\",\"a\":\"介绍udp\"},\"1006\":{\"t\":\"UDP 不提供复杂的控制机制，利⽤ IP 提供⾯向**「⽆连接」**的通信服务。\"},\"1007\":{\"t\":\"UDP 的头部格式如下：\"},\"1008\":{\"t\":\"image-20210911144021592\"},\"1009\":{\"h\":\"发送方的滑动窗口是怎么样的过程\",\"a\":\"发送方的滑动窗口是怎么样的过程\"},\"1010\":{\"t\":\"img\"},\"1011\":{\"t\":\"#1 是已发送并收到 ACK确认的数据：1~31 字节\"},\"1012\":{\"t\":\"#2 是已发送但未收到 ACK确认的数据：32~45 字节\"},\"1013\":{\"t\":\"#3 是未发送但总大小在接收方处理范围内（接收方还有空间）：46~51字节\"},\"1014\":{\"t\":\"#4 是未发送但总大小超过接收方处理范围（接收方没有空间）：52字节以后\"},\"1015\":{\"t\":\"当发送方把数据全部发送出去，那么可用窗口大小为0，如果没有收到ack确认报文，则无法发送数据\"},\"1016\":{\"t\":\"可用窗口耗尽\"},\"1017\":{\"t\":\"当收到了部分数据的ack报文时候，如果发送窗口大小没有发生变化，那么滑动窗口往右移动一定字节。接下来会有一部分数据变成可发送的窗口，如果发送变化，那么移动就会更多点。\"},\"1018\":{\"t\":\"32 ~ 36 字节已确认\"},\"1019\":{\"h\":\"接收方的滑动窗口\",\"a\":\"接收方的滑动窗口\"},\"1020\":{\"t\":\"接收窗口\"},\"1021\":{\"t\":\"#1 + #2 是已成功接收并确认的数据（等待应用进程读取）；\"},\"1022\":{\"t\":\"#3 是未收到数据但可以接收的数据；\"},\"1023\":{\"t\":\"#4 未收到数据并不可以接收的数据；\"},\"1024\":{\"t\":\"如果发送方发送了，大量的数据，那么接受窗口为0，等待处理完成后，会逐渐恢复接受窗口的大小。\"},\"1025\":{\"h\":\"流量控制过程\",\"a\":\"流量控制过程\"},\"1026\":{\"t\":\"TCP 提供一种机制可以让「发送方」根据「接收方」的实际接收能力控制发送的数据量，这就是所谓的流量控制。\"},\"1027\":{\"t\":\"下面举个栗子，为了简单起见，假设以下场景：\"},\"1028\":{\"t\":\"客户端是接收方，服务端是发送方\"},\"1029\":{\"t\":\"假设接收窗口和发送窗口相同，都为 200\"},\"1030\":{\"t\":\"假设两个设备在整个传输过程中都保持相同的窗口大小，不受外界影响\"},\"1031\":{\"t\":\"流量控制\"},\"1032\":{\"t\":\"根据上图的流量控制，说明下每个过程：\"},\"1033\":{\"t\":\"客户端向服务端发送请求数据报文。这里要说明下，本次例子是把服务端作为发送方，所以没有画出服务端的接收窗口。\"},\"1034\":{\"t\":\"服务端收到请求报文后，发送确认报文和 80 字节的数据，于是可用窗口 Usable 减少为 120 字节，同时 SND.NXT 指针也向右偏移 80 字节后，指向 321，这意味着下次发送数据的时候，序列号是 321。\"},\"1035\":{\"t\":\"客户端收到 80 字节数据后，于是接收窗口往右移动 80 字节，RCV.NXT 也就指向 321，这意味着客户端期望的下一个报文的序列号是 321，接着发送确认报文给服务端。\"},\"1036\":{\"t\":\"服务端再次发送了 120 字节数据，于是可用窗口耗尽为 0，服务端无法再继续发送数据。\"},\"1037\":{\"t\":\"客户端收到 120 字节的数据后，于是接收窗口往右移动 120 字节，RCV.NXT 也就指向 441，接着发送确认报文给服务端。\"},\"1038\":{\"t\":\"服务端收到对 80 字节数据的确认报文后，SND.UNA 指针往右偏移后指向 321，于是可用窗口 Usable 增大到 80。\"},\"1039\":{\"t\":\"服务端收到对 120 字节数据的确认报文后，SND.UNA 指针往右偏移后指向 441，于是可用窗口 Usable 增大到 200。\"},\"1040\":{\"t\":\"服务端可以继续发送了，于是发送了 160 字节的数据后，SND.NXT 指向 601，于是可用窗口 Usable 减少到 40。\"},\"1041\":{\"t\":\"客户端收到 160 字节后，接收窗口往右移动了 160 字节，RCV.NXT 也就是指向了 601，接着发送确认报文给服务端。\"},\"1042\":{\"t\":\"服务端收到对 160 字节数据的确认报文后，发送窗口往右移动了 160 字节，于是 SND.UNA 指针偏移了 160 后指向 601，可用窗口 Usable 也就增大至了 200。\"},\"1043\":{\"t\":\"参考博客：\"},\"1044\":{\"t\":\"https://snailclimb.gitee.io/javaguide/#/docs/cs-basics/network/计算机网络?id=_11-应用层\"},\"1045\":{\"t\":\"七层模型：\"},\"1046\":{\"t\":\"https://www.jianshu.com/p/9b9438dff7a2\"},\"1047\":{\"t\":\"TCP连接三次握手四次挥手\"},\"1048\":{\"t\":\"https://blog.csdn.net/csdnnews/article/details/105424412\"},\"1049\":{\"t\":\"TCP连接–初始化序列号\"},\"1050\":{\"t\":\"https://blog.csdn.net/qq_35733751/article/details/80552037\"},\"1051\":{\"t\":\"TCP连接四次挥手\"},\"1052\":{\"t\":\"https://cloud.tencent.com/developer/article/1450264\"},\"1053\":{\"t\":\"TCP重传机制、滑动窗口、流量控制、拥塞控制。\"},\"1054\":{\"t\":\"https://www.cnblogs.com/xiaolincoding/p/12732052.html\"},\"1055\":{\"t\":\"TCP拥塞控制\"},\"1056\":{\"t\":\"https://cloud.tencent.com/developer/article/1401283\"},\"1057\":{\"t\":\"整体参考文章：\"},\"1058\":{\"t\":\"https://coolshell.cn/articles/11564.html\"},\"1059\":{\"t\":\"https://coolshell.cn/articles/11609.html\"},\"1060\":{\"t\":\"修改时间：\"},\"1061\":{\"c\":[\"计算机基础\",\"计算机网络\"]},\"1062\":{\"h\":\"HTTP篇\"},\"1063\":{\"h\":\"1.HTTP是什么？\",\"a\":\"_1-http是什么\"},\"1064\":{\"t\":\"HTTP 是超文本传输协议，也就是HyperText Transfer Protocol。\"},\"1065\":{\"h\":\"2.超文本传输协议怎么理解？\",\"a\":\"_2-超文本传输协议怎么理解\"},\"1066\":{\"t\":\"超文本传输协议可以分为三个部分：\"},\"1067\":{\"t\":\"超文本\"},\"1068\":{\"t\":\"文字，图片，视频等的混合体\"},\"1069\":{\"t\":\"传输\"},\"1070\":{\"t\":\"可以两点之间进行全双工传输数据\"},\"1071\":{\"t\":\"协议\"},\"1072\":{\"t\":\"确立了一种计算机之间交流通信的规范，以及各种控制以及错误处理方式\"},\"1073\":{\"t\":\"总结的讲：\"},\"1074\":{\"t\":\"HTTP是一种在计算机世界里专门在两点之间传输文字，图片，视频等超文本数据的约定和规范\"},\"1075\":{\"h\":\"3.HTTP的状态码有哪些？\",\"a\":\"_3-http的状态码有哪些\"},\"1076\":{\"t\":\" 五大类 HTTP 状态码 \"},\"1077\":{\"t\":\"200\"},\"1078\":{\"t\":\"OK\"},\"1079\":{\"t\":\"请求成功。一般用于GET与POST请求\"},\"1080\":{\"t\":\"201\"},\"1081\":{\"t\":\"Created\"},\"1082\":{\"t\":\"已创建。成功请求并创建了新的资源\"},\"1083\":{\"t\":\"202\"},\"1084\":{\"t\":\"Accepted\"},\"1085\":{\"t\":\"已接受。已经接受请求，但未处理完成\"},\"1086\":{\"t\":\"203\"},\"1087\":{\"t\":\"Non-Authoritative Information\"},\"1088\":{\"t\":\"非授权信息。请求成功。但返回的meta信息不在原始的服务器，而是一个副本\"},\"1089\":{\"t\":\"204\"},\"1090\":{\"t\":\"No Content\"},\"1091\":{\"t\":\"无内容。服务器成功处理，但未返回内容。在未更新网页的情况下，可确保浏览器继续显示当前文档\"},\"1092\":{\"t\":\"205\"},\"1093\":{\"t\":\"Reset Content\"},\"1094\":{\"t\":\"重置内容。服务器处理成功，用户终端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域\"},\"1095\":{\"t\":\"206\"},\"1096\":{\"t\":\"Partial Content\"},\"1097\":{\"t\":\"部分内容。服务器成功处理了部分GET请求\"},\"1098\":{\"t\":\"300\"},\"1099\":{\"t\":\"Multiple Choices\"},\"1100\":{\"t\":\"多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如：浏览器）选择\"},\"1101\":{\"t\":\"301\"},\"1102\":{\"t\":\"Moved Permanently\"},\"1103\":{\"t\":\"永久移动。请求的资源已被永久的移动到新URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替\"},\"1104\":{\"t\":\"302\"},\"1105\":{\"t\":\"Found\"},\"1106\":{\"t\":\"临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI\"},\"1107\":{\"t\":\"303\"},\"1108\":{\"t\":\"See Other\"},\"1109\":{\"t\":\"查看其它地址。与301类似。使用GET和POST请求查看\"},\"1110\":{\"t\":\"304\"},\"1111\":{\"t\":\"Not Modified\"},\"1112\":{\"t\":\"未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源\"},\"1113\":{\"t\":\"305\"},\"1114\":{\"t\":\"Use Proxy\"},\"1115\":{\"t\":\"使用代理。所请求的资源必须通过代理访问\"},\"1116\":{\"t\":\"306\"},\"1117\":{\"t\":\"Unused\"},\"1118\":{\"t\":\"已经被废弃的HTTP状态码\"},\"1119\":{\"t\":\"307\"},\"1120\":{\"t\":\"Temporary Redirect\"},\"1121\":{\"t\":\"临时重定向。与302类似。使用GET请求重定向\"},\"1122\":{\"t\":\"400\"},\"1123\":{\"t\":\"Bad Request\"},\"1124\":{\"t\":\"客户端请求的语法错误，服务器无法理解\"},\"1125\":{\"t\":\"401\"},\"1126\":{\"t\":\"Unauthorized\"},\"1127\":{\"t\":\"请求要求用户的身份认证\"},\"1128\":{\"t\":\"403\"},\"1129\":{\"t\":\"Forbidden\"},\"1130\":{\"t\":\"服务器理解请求客户端的请求，但是拒绝执行此请求\"},\"1131\":{\"t\":\"404\"},\"1132\":{\"t\":\"Not Found\"},\"1133\":{\"t\":\"服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置\\\"您所请求的资源无法找到\\\"的个性页面\"},\"1134\":{\"t\":\"405\"},\"1135\":{\"t\":\"Method Not Allowed\"},\"1136\":{\"t\":\"客户端请求中的方法被禁止\"},\"1137\":{\"t\":\"500\"},\"1138\":{\"t\":\"Internal Server Error\"},\"1139\":{\"t\":\"服务器内部错误，无法完成请求\"},\"1140\":{\"t\":\"501\"},\"1141\":{\"t\":\"Not Implemented\"},\"1142\":{\"t\":\"服务器不支持请求的功能，无法完成请求\"},\"1143\":{\"t\":\"502\"},\"1144\":{\"t\":\"Bad Gateway\"},\"1145\":{\"t\":\"作为网关或者代理工作的服务器尝试执行请求时，从远程服务器接收到了一个无效的响应\"},\"1146\":{\"t\":\"503\"},\"1147\":{\"t\":\"Service Unavailable\"},\"1148\":{\"t\":\"由于超载或系统维护，服务器暂时的无法处理客户端的请求。延时的长度可包含在服务器的Retry-After头信息中\"},\"1149\":{\"h\":\"4.HTTP常见的字段有哪些？\",\"a\":\"_4-http常见的字段有哪些\"},\"1150\":{\"t\":\"常见字段\"},\"1151\":{\"t\":\"描述\"},\"1152\":{\"t\":\"常见值\"},\"1153\":{\"t\":\"Host\"},\"1154\":{\"t\":\"指定服务器的域名\"},\"1155\":{\"t\":\"www.baidu.com\"},\"1156\":{\"t\":\"Content-Length\"},\"1157\":{\"t\":\"表明本次回应数据长度\"},\"1158\":{\"t\":\"1000（字节）\"},\"1159\":{\"t\":\"Connection\"},\"1160\":{\"t\":\"常用于客户端要求服务器使用TCP持久连接\"},\"1161\":{\"t\":\"Keep-Alive\"},\"1162\":{\"t\":\"Content-Type\"},\"1163\":{\"t\":\"用于服务器回应本次数据的格式\"},\"1164\":{\"t\":\"text/html; charset=utf-8\"},\"1165\":{\"t\":\"Content-Encoding\"},\"1166\":{\"t\":\"表明服务器返回的数据用的数据压缩的格式\"},\"1167\":{\"t\":\"gzip\"},\"1168\":{\"h\":\"5.GET与POST的区别\",\"a\":\"_5-get与post的区别\"},\"1169\":{\"t\":\"推荐博客：https://www.cnblogs.com/logsharing/p/8448446.html GET 和 POST 是什么？\"},\"1170\":{\"t\":\"HTTP 协议中的两种发送请求的方法。\"},\"1171\":{\"t\":\"GET：请求从服务器获取资源\"},\"1172\":{\"t\":\"POST：它向 URI 指定的资源提交数据，数据就放在报文的 body 里。\"},\"1173\":{\"t\":\"HTTP 是什么？\"},\"1174\":{\"t\":\"HTTP 是基于 TCP/IP 的关于数据如何在万维网中如何通信的协议。\"},\"1175\":{\"t\":\"HTTP 的底层是 TCP/IP。所以 GET 和 POST 的底层也是 TCP/IP，也就是说，GET/POST 都是 TCP 链接。GET 和 POST 能做的事情是一样一样的。你要给 GET 加上 request body，给 POST 带上 url 参数，技术上是完全行的通的。\"},\"1176\":{\"t\":\"之所以会有区别是因为（大多数）浏览器通常都会限制 url 长度在 2K 个字节，而（大多数）服务器最多处理 64K 大小的 url。超过的部分，恕不处理。如果你用 GET 服务，在 request body 偷偷藏了数据，不同服务器的处理方式也是不同的，有些服务器会帮你卸货，读出数据，有些服务器直接忽略，所以，虽然 GET 可以带 request body，也不能保证一定能被接收到哦。\"},\"1177\":{\"t\":\"GET 和 POST 本质上就是 TCP 链接，并无差别。但是由于 HTTP 的规定和浏览器/服务器的限制，导致他们在应用过程中体现出一些不同。\"},\"1178\":{\"h\":\"6.HTTP的优缺点是哪些？\",\"a\":\"_6-http的优缺点是哪些\"},\"1179\":{\"h\":\"优点\",\"a\":\"优点\"},\"1180\":{\"t\":\"简单\"},\"1181\":{\"t\":\"HTTP 基本的报文格式就是 header + body，头部信息也是 key-value 简单文本的形式，\"},\"1182\":{\"t\":\"灵活易于扩展\"},\"1183\":{\"t\":\"HTTP协议里的各类请求方法、URI/URL、状态码、头字段等每个组成要求都没有被固定死，都允许开发人员自定义和扩充。\"},\"1184\":{\"t\":\"应用广泛\"},\"1185\":{\"h\":\"缺点\",\"a\":\"缺点\"},\"1186\":{\"t\":\"无状态双刃剑\"},\"1187\":{\"t\":\"服务器不会记忆HTTP状态，减轻了服务器的负担，但是操作有关联性就会很麻烦。\"},\"1188\":{\"t\":\"解决方式：\"},\"1189\":{\"t\":\"cookie与session模式\"},\"1190\":{\"t\":\"推荐博客：https://www.yuque.com/docs/share/18784a15-4626-4690-a147-db3a6094489a?# 《用户认证》\"},\"1191\":{\"t\":\"明文传输\"},\"1192\":{\"t\":\"虽然方便阅读报文信息，但是极易被窃取\"},\"1193\":{\"t\":\"解决方式：HTTPS技术进行加密\"},\"1194\":{\"t\":\"不安全\"},\"1195\":{\"t\":\"（窃听风险）通信使用明文（不加密），内容可能会被窃听。比如，账号信息容易泄漏，那你号没了。\"},\"1196\":{\"t\":\"（篡改风险）不验证通信方的身份，因此有可能遭遇伪装。比如，访问假的淘宝、拼多多，那你钱没了。\"},\"1197\":{\"t\":\"（冒充风险）无法证明报文的完整性，所以有可能已遭篡改。比如，网页上植入垃圾广告，视觉污染，眼没了。\"},\"1198\":{\"t\":\"解决方式：HTTPS技术\"},\"1199\":{\"h\":\"7.HTTP与HTTPS有哪些区别\",\"a\":\"_7-http与https有哪些区别\"},\"1200\":{\"t\":\"加密性：HTTP 明文传输，数据都是未加密的，安全性较差，HTTPS（SSL+HTTP） 数据传输过程是加密的，安全性较好。\"},\"1201\":{\"t\":\"是否使用证书： 使用 HTTPS 协议需要到 CA（Certificate Authority，数字证书认证机构） 申请证书，一般免费证书较少，因而需要一定费用。证书颁发机构如：Symantec、Comodo、GoDaddy 和 GlobalSign 等。\"},\"1202\":{\"t\":\"响应速度：HTTP 页面响应速度比 HTTPS 快，主要是因为 HTTP 使用 TCP 三次握手建立连接，客户端和服务器需要交换 3 个包，而 HTTPS 除了 TCP 的三个包，还要加上 ssl 握手需要的 9 个包，所以一共是 12 个包。\"},\"1203\":{\"t\":\"连接方式：http 和 https 使用的是完全不同的连接方式，用的端口也不一样，前者是 80，后者是 443。\"},\"1204\":{\"t\":\"协议：HTTPS 其实就是建构在 SSL/TLS 之上的 HTTP 协议，所以，要比较 HTTPS 比 HTTP 要更耗费服务器资源。\"},\"1205\":{\"h\":\"8.HTTPS是如何解决HTTP的不安全风险\",\"a\":\"_8-https是如何解决http的不安全风险\"},\"1206\":{\"t\":\"混合加密的方式实现信息的机密性，解决了窃听的风险。\"},\"1207\":{\"t\":\"摘要算法的方式来实现完整性，它能够为数据生成独一无二的「指纹」，指纹用于校验数据的完整性，解决了篡改的风险。\"},\"1208\":{\"t\":\"将服务器公钥放入到数字证书中，解决了冒充的风险。\"},\"1209\":{\"h\":\"9.HTTPS是如何建立起来的，其中交互了什么？\",\"a\":\"_9-https是如何建立起来的-其中交互了什么\"},\"1210\":{\"t\":\"SSL/TLS协议基本流程\"},\"1211\":{\"t\":\"客户端向服务器索要并验证服务器的公钥\"},\"1212\":{\"t\":\"双方协商产生会话密钥\"},\"1213\":{\"t\":\"双方采用会话密钥进行加密通信\"},\"1214\":{\"t\":\"HTTPS 连接建立过程\"},\"1215\":{\"t\":\"SSL/TLS协议建立的详细流程：\"},\"1216\":{\"t\":\"ClientHello\"},\"1217\":{\"t\":\"首先客户端向服务器发起加密通信请求–ClinetHello请求\"},\"1218\":{\"t\":\"主要发送以下信息：\"},\"1219\":{\"t\":\"客户端支持的SSL/TLS协议版本号。\"},\"1220\":{\"t\":\"客户端生产的随机数Clinet Random 后面用于会话密钥\"},\"1221\":{\"t\":\"客户端支持的密码套件列表\"},\"1222\":{\"t\":\"ServerHello\"},\"1223\":{\"t\":\"服务器收到客户端请求后，先发送确定响应报文，然后接着发送ServerHello ,内容如下：\"},\"1224\":{\"t\":\"确认SSL/TLS协议版本，如果浏览器不支持，则关闭通信\"},\"1225\":{\"t\":\"服务器生产的随机数Server Random 后面用于生产会话密钥\"},\"1226\":{\"t\":\"确认密码套件列表\"},\"1227\":{\"t\":\"服务器的数字证书\"},\"1228\":{\"t\":\"客户端验证\"},\"1229\":{\"t\":\"客户端收到服务器发送的报文后，执行的步骤如下：\"},\"1230\":{\"t\":\"通过浏览器或操作系统的CA密钥，确认服务器发送的数字证书真实性\"},\"1231\":{\"t\":\"如果没有问题，客户端会取出数字证书中的公钥，然后用它加密报文，报文信息如下 \"},\"1232\":{\"t\":\"一个随机数（pre-master key）\"},\"1233\":{\"t\":\"加密通信算法改变通知，表示随后的信息都将用会话密钥加密通信\"},\"1234\":{\"t\":\"客户端握手结束通知，表示客户端的握手阶段已经结束。这一项同时把之前所有内容的发生的数据做个摘要，用来供服务端校验。\"},\"1235\":{\"t\":\"服务器的回应\"},\"1236\":{\"t\":\"客户端收到了客户端的第三个随机数pre-master key 之后，通过协商的加密算法，计算本次的会话密钥。然后发送最后的信息：\"},\"1237\":{\"t\":\"加密通信算法改变通知，后续的信息都将用会话密钥加密通信\"},\"1238\":{\"t\":\"服务器握手结束通知，表示服务器的握手阶段已经结束。这一项同时把之前所有内容的发生的数据做个摘要，用来供客户端校验。\"},\"1239\":{\"t\":\"整个 SSL/TLS 的握手阶段全部结束。接下来，客户端与服务器进入加密通信。\"},\"1240\":{\"t\":\"会话密钥有三个随机数以及加密算法而合成\"},\"1241\":{\"t\":\"客户端生产的随机数Client Random\"},\"1242\":{\"t\":\"服务器生产的随机数Server Random\"},\"1243\":{\"t\":\"第三个随机数pre-master key\"},\"1244\":{\"c\":[\"计算机基础\",\"计算机网络\"]},\"1245\":{\"h\":\"网络综合篇\"},\"1246\":{\"h\":\"浏览器写入网址到网页显示，这期间都发生了什么？\",\"a\":\"浏览器写入网址到网页显示-这期间都发生了什么\"},\"1247\":{\"t\":\"30张图解：键入网址后，到网页显示，其间发生了什么？\"},\"1248\":{\"t\":\"❓：当你在浏览器中输入 google.com 并且按下回车之后发生了什么？\"},\"1249\":{\"t\":\"简单的网络模型\"},\"1250\":{\"t\":\"当你按下G键，浏览器接收到了这个字符，会触发自动完成机制。浏览器会根据自己的算法，以及你是否处于隐私浏览模式，会在浏览器的输入框下方出现下拉列表提供建议。大部分这些算法会优先考虑根据你的的搜索历史和书签，cookie和整个互联网的流行搜索对结果进行排序和优先排序，给出最适合的建议。 当您键入“google.com”时，会运行许多代码块，并且每次按键都会改进建议。 它甚至可能会在您完成输入之前提示“google.com”。\"},\"1251\":{\"t\":\"当你按下回车，浏览器就会收到你需要跳转的网址。\"},\"1252\":{\"t\":\"浏览器收到网址的第一步就是对URL进行解析。\"},\"1253\":{\"t\":\"URL的组成\"},\"1254\":{\"t\":\"URL 解析\"},\"1255\":{\"t\":\"💡：如果没有路径名，就代表访问根目录下的设置的默认文件！例如：/index.html\"},\"1256\":{\"t\":\"浏览器将URL解析完成后，会提取相关信息（web服务器域名和文件名）。会根据这些信息生产HTTP请求信息。\"},\"1257\":{\"t\":\"HTTP请求格式\"},\"1258\":{\"t\":\"HTTP 的消息格式\"},\"1259\":{\"t\":\"生成HTTP消息报文，需要委托操作系统将消息发送给web 服务器。但是网络巨大，怎么去找到确定的服务器呢？而且一般输入的网址是一串由点分隔的字符串，怎么找到web 服务器域名对应的IP地址呢，毕竟操作系统要根据ip地址才能发送消息的。\"},\"1260\":{\"t\":\"DES 服务器专门保存了Web 服务器域名与IP 的对应关系。\"},\"1261\":{\"t\":\"域名的组成\"},\"1262\":{\"t\":\"DNS 域名都是由句点. 来进行分隔得。\"},\"1263\":{\"t\":\"例如：www.goole.com 分割得每一部分都代表不同得层次，越靠后，层级越大\"},\"1264\":{\"t\":\"域名层级结构：\"},\"1265\":{\"t\":\"根DNS 服务器\"},\"1266\":{\"t\":\"顶级域名 DNS 服务器\"},\"1267\":{\"t\":\"权限DNS 服务器\"},\"1268\":{\"t\":\"本地域名服务器\"},\"1269\":{\"t\":\"DNS 树状结构\"},\"1270\":{\"t\":\"这样就可以根据域名得不同组成逐一精确找到对应得IP 地址\"},\"1271\":{\"t\":\"域名解析得工作流程\"},\"1272\":{\"t\":\"本机会向本地得域名服务器发送DNS请求，查询www.goole.com 的IP\"},\"1273\":{\"t\":\"本地域名服务器接收到请求后，会进行迭代查询。\"},\"1274\":{\"t\":\"先查询本地域名服务器的缓存里面，如果没有查询到IP地址，会向一个根域名服务器进行查询\"},\"1275\":{\"t\":\"根域名服务器收到后，会告诉对应的顶级域名服务器（.com）的对应的IP地址\"},\"1276\":{\"t\":\"本地域名服务器会收到后，就会向顶级域名服务器进行查询\"},\"1277\":{\"t\":\"顶级域名服务器会告诉下一次需要查询的权限域名服务器的IP地址\"},\"1278\":{\"t\":\"本地域名服务器收到后，会向权限域名服务器进行查询\"},\"1279\":{\"t\":\"权限域名服务器查询到www.goole.com 的IP地址，发送给本地域名服务器\"},\"1280\":{\"t\":\"本地域名服务器拿到IP地址会返回给本机（客户端）\"},\"1281\":{\"t\":\"域名解析的工作流程\"},\"1282\":{\"t\":\"HTTP是基于TCP协议进行传输的。\"},\"1283\":{\"t\":\"💡：关于TCP的一些知识可以看下面这篇文章：计算机网络面试题汇总之TCP篇\"},\"1284\":{\"h\":\"TCP连接\",\"a\":\"tcp连接\"},\"1285\":{\"t\":\"在HTTP传输数据之前，首先需要TCP建立连接（三次握手）。\"},\"1286\":{\"t\":\"一开始，客户端和服务端都处于 CLOSED 状态。先是服务端主动监听某个端口，处于 LISTEN 状态。\"},\"1287\":{\"t\":\"然后客户端主动发起连接 SYN，之后处于 SYN-SENT 状态。\"},\"1288\":{\"t\":\"服务端收到发起的连接，返回 SYN，并且 ACK 客户端的 SYN，之后处于 SYN-RCVD 状态。\"},\"1289\":{\"t\":\"客户端收到服务端发送的 SYN 和 ACK 之后，发送 ACK 的 ACK，之后处于 ESTABLISHED 状态，因为它一发一收成功了。\"},\"1290\":{\"t\":\"服务端收到 ACK 的 ACK 之后，处于 ESTABLISHED 状态，因为它也一发一收了。\"},\"1291\":{\"t\":\"保证双方有接受与发送的能力！\"},\"1292\":{\"t\":\"https://cdn.jsdelivr.net/gh/baici1/image-host/newimg/20210911145410.png\"},\"1293\":{\"h\":\"分割数据包\",\"a\":\"分割数据包\"},\"1294\":{\"t\":\"如果HTTP的消息过长，超过了MSS 的长度的话，TCP就会把HTTP的数据拆解成一个一个的数据包进行发送，每一个拆分出来的数据包都会加上TCP头信息，然后交到IP协议来发送数据。\"},\"1295\":{\"t\":\"MTU 与 MSS\"},\"1296\":{\"t\":\"MTU 与MSS 的区别\"},\"1297\":{\"t\":\"MTU：一个网络包的最大长度，以太网中一般为 1500 字节。\"},\"1298\":{\"t\":\"MSS：除去 IP 和 TCP 头部之后，一个网络包所能容纳的 TCP 数据的最大长度。\"},\"1299\":{\"t\":\"数据包分割\"},\"1300\":{\"h\":\"TCP报文生成\",\"a\":\"tcp报文生成\"},\"1301\":{\"t\":\"TCP 协议里面会有两个端口，一个是浏览器监听的端口（通常是随机生成的），一个是 Web 服务器监听的端口（HTTP 默认端口号是 80， HTTPS 默认端口号是 443）。\"},\"1302\":{\"t\":\"网络包的报文如下:\"},\"1303\":{\"t\":\"TCP 层报文\"},\"1304\":{\"t\":\"TCP 模块在执行连接、收发、断开等各阶段操作时，都需要委托IP 模块将数据封装成网络包发送给通信对象。\"},\"1305\":{\"t\":\"IP会选择合适的路由和交换的节点，确保数据及时发送出去。\"},\"1306\":{\"h\":\"IP包头格式\",\"a\":\"ip包头格式\"},\"1307\":{\"t\":\"源地址IP，即是客户端输出的 IP 地址；\"},\"1308\":{\"t\":\"目标地址，即通过 DNS 域名解析得到的 Web 服务器 IP。\"},\"1309\":{\"t\":\"但是也有一个问题。\"},\"1310\":{\"t\":\"❓：假设客户端有多个网卡，就会有多个 IP 地址，那 IP 头部的源地址应该选择哪个 IP 呢？\"},\"1311\":{\"t\":\"这个时候会根据路由表规则，来判断选择哪一个网卡作为源地址IP\"},\"1312\":{\"t\":\"过程如下：\"},\"1313\":{\"t\":\"路由规则判断\"},\"1314\":{\"t\":\"路由规则判断\"},\"1315\":{\"t\":\"首先先和第一条目的子网掩码（Genmask）进行 与运算，得到结果为 192.168.10.0，但是第一个条目的 Destination 是 192.168.3.0，两者不一致所以匹配失败。\"},\"1316\":{\"t\":\"再与第二条目的子网掩码进行 与运算，得到的结果为 192.168.10.0，与第二条目的 Destination 192.168.10.0 匹配成功，所以将使用 eth1 网卡的 IP 地址作为 IP 包头的源地址。\"},\"1317\":{\"t\":\"假设 Web 服务器的目标地址是 10.100.20.100，那么依然依照上面的路由表规则判断，判断后的结果是和第三条目匹配。\"},\"1318\":{\"t\":\"第三条目比较特殊，它目标地址和子网掩码都是 0.0.0.0，这表示默认网关，如果其他所有条目都无法匹配，就会自动匹配这一行。并且后续就把包发给路由器，Gateway 即是路由器的 IP 地址。\"},\"1319\":{\"h\":\"IP报文生成\",\"a\":\"ip报文生成\"},\"1320\":{\"t\":\"IP 层报文\"},\"1321\":{\"t\":\"IP包会送到数据链路层，同时会在IP包头部加上MAC 头部。\"},\"1322\":{\"h\":\"MAC包头部格式\",\"a\":\"mac包头部格式\"},\"1323\":{\"t\":\"MAC 包头格式\"},\"1324\":{\"t\":\"在 MAC 包头里需要发送方 MAC 地址和接收方目标 MAC 地址，用于两点之间的传输。\"},\"1325\":{\"t\":\"一般在 TCP/IP 通信里，MAC 包头的协议类型只使用：\"},\"1326\":{\"t\":\"0800 ： IP 协议\"},\"1327\":{\"t\":\"0806 ： ARP 协议\"},\"1328\":{\"t\":\"❓：如何获取对方的MAC地址呢？\"},\"1329\":{\"t\":\"需要根据ARP 协议帮我们找到对方的MAC地址\"},\"1330\":{\"t\":\"ARP 协议会以广播的形式，查询连接的所有设备，查询到对方的MAC地址后，就写入接收方的MAC。\"},\"1331\":{\"t\":\"在后续操作系统会把本次查询结果放到一块叫做 ARP 缓存的内存空间留着以后用，不过缓存的时间就几分钟。\"},\"1332\":{\"t\":\"也就是说，在发包时：\"},\"1333\":{\"t\":\"先查询 ARP 缓存，如果其中已经保存了对方的 MAC 地址，就不需要发送 ARP 查询，直接使用 ARP 缓存中的地址。\"},\"1334\":{\"t\":\"而当 ARP 缓存中不存在对方 MAC 地址时，则发送 ARP 广播查询。\"},\"1335\":{\"h\":\"MAC报文生成\",\"a\":\"mac报文生成\"},\"1336\":{\"t\":\"MAC 层报文\"},\"1337\":{\"t\":\"上层交付的数据包时放在内存的一串二进制数字信息，没有办法直接发送给对方。需要将数字信息转换成电信号，才能在网线上传输。\"},\"1338\":{\"t\":\"负责执行这一操作的是网卡，要控制网卡还需要靠网卡驱动程序。\"},\"1339\":{\"t\":\"网卡驱动从 IP 模块获取到包之后，会将其复制到网卡内的缓存区中，接着会在其开头加上报头和起始帧分界符，在末尾加上用于检测错误的帧校验序列。\"},\"1340\":{\"t\":\"物理层数据包\"},\"1341\":{\"t\":\"起始帧分界符是一个用来表示包起始位置的标记\"},\"1342\":{\"t\":\"末尾的 FCS（帧校验序列）用来检查包传输过程是否有损坏\"},\"1343\":{\"t\":\"至此可以发送到目的网络地址的数据包就诞生了，但是离到达还需要经过几个地方。\"},\"1344\":{\"t\":\"交换机的设计是将网络包原样转发到目的地。交换机工作在 MAC 层，也称为二层网络设备。\"},\"1345\":{\"h\":\"交换机的接受操作\",\"a\":\"交换机的接受操作\"},\"1346\":{\"t\":\"首先，接受发过来的电信号，然后交换机将电信号转换成数字信号。通过包末尾的FCS校验错误。有问题就直接丢掉，没问题就会放到缓冲区。\"},\"1347\":{\"t\":\"交换机的端口不具有MAC地址，他只是起到将数据原样交换到对方。\"},\"1348\":{\"t\":\"将包存入缓冲区后，接下来需要查询一下这个包的接收方 MAC 地址是否已经在 MAC 地址表中有记录了。\"},\"1349\":{\"t\":\"如果有就直接交付给MAC记录的端口。\"},\"1350\":{\"t\":\"如果没有找到对应的端口。将包转发到除了源端口之外的所有端口上，无论该设备连接在哪个端口上都能收到这个包。那么只有相应的接收者才接收包，而其他设备则会忽略这个包。\"},\"1351\":{\"t\":\"交换机的 MAC 地址表主要包含两个信息：\"},\"1352\":{\"t\":\"一个是设备的 MAC 地址，\"},\"1353\":{\"t\":\"另一个是该设备连接在交换机的哪个端口上。\"},\"1354\":{\"t\":\"交换机的 MAC 地址表\"},\"1355\":{\"t\":\"交换机根据 MAC 地址表查找 MAC 地址，然后将信号发送到相应的端口。\"},\"1356\":{\"h\":\"路由器基本原理\",\"a\":\"路由器基本原理\"},\"1357\":{\"t\":\"路由器的端口具有 MAC 地址，因此它就能够成为以太网的发送方和接收方；同时还具有 IP 地址，从这个意义上来说，它和计算机的网卡是一样的。\"},\"1358\":{\"t\":\"当转发包时，首先路由器端口会接收发给自己的以太网包，然后路由表查询转发目标，再由相应的端口作为发送方将以太网包发送出去。\"},\"1359\":{\"h\":\"路由器包接受工作\",\"a\":\"路由器包接受工作\"},\"1360\":{\"t\":\"首先，电信号到达网线接口部分，路由器中的模块会将电信号转成数字信号，然后通过包末尾的 FCS 进行错误校验。\"},\"1361\":{\"t\":\"如果没问题则检查 MAC 头部中的接收方 MAC 地址，看看是不是发给自己的包，如果是就放到接收缓冲区中，否则就丢弃这个包。\"},\"1362\":{\"t\":\"总的来说，路由器的端口都具有 MAC 地址，只接收与自身地址匹配的包，遇到不匹配的包则直接丢弃。\"},\"1363\":{\"h\":\"确定输出端口\",\"a\":\"确定输出端口\"},\"1364\":{\"t\":\"接收到数据包后，路由器会去掉包开头的MAC头部。\"},\"1365\":{\"t\":\"MAC 头部的作用就是将包送达路由器，其中的接收方 MAC 地址就是路由器端口的 MAC 地址。因此，当包到达路由器之后，MAC 头部的任务就完成了，于是 MAC 头部就会被丢弃。\"},\"1366\":{\"t\":\"然后路由器会根据MAC头部后方的IP头部中的内容进行包转发工作。\"},\"1367\":{\"t\":\"转发过程如下\"},\"1368\":{\"t\":\"查询路由表判断转发端口，将其数据进行转发。\"},\"1369\":{\"t\":\"路由器转发\"},\"1370\":{\"t\":\"❓：如何查询路由表？\"},\"1371\":{\"t\":\"每个条目的子网掩码和 192.168.1.100 IP 做 & 与运算后，得到的结果与对应条目的目标地址进行匹配，如果匹配就会作为候选转发目标，如果不匹配就继续与下个条目进行路由匹配。\"},\"1372\":{\"t\":\"举例：\"},\"1373\":{\"t\":\"第二条目的子网掩码 255.255.255.0 与 192.168.1.100 IP 做 & 与运算后，得到结果是 192.168.1.0 ，这与第二条目的目标地址 192.168.1.0 匹配，该第二条目记录就会被作为转发目标。\"},\"1374\":{\"t\":\"如果找不到匹配的路由，那么就会选择默认路由。\"},\"1375\":{\"h\":\"路由器发送操作\",\"a\":\"路由器发送操作\"},\"1376\":{\"t\":\"既然要发送数据，肯定要判断对方在哪？\"},\"1377\":{\"t\":\"首先，我们需要根据路由表的网关列判断对方的地址。\"},\"1378\":{\"t\":\"如果网关是一个 IP 地址，则这个IP 地址就是我们要转发到的目标地址，还未抵达终点，还需继续需要路由器转发。\"},\"1379\":{\"t\":\"如果网关为空，则 IP 头部中的接收方 IP 地址就是要转发到的目标地址，也是就终于找到 IP 包头里的目标地址了，说明已抵达终点。\"},\"1380\":{\"t\":\"知道对方的 IP 地址之后，接下来需要通过 ARP 协议根据 IP 地址查询 MAC 地址，并将查询的结果作为接收方 MAC 地址。\"},\"1381\":{\"t\":\"路由器也有 ARP 缓存，因此首先会在 ARP 缓存中查询，如果找不到则发送 ARP 查询请求。\"},\"1382\":{\"t\":\"既然拿到了对方的MAC地址，就会给数据包封装MAC头部。\"},\"1383\":{\"t\":\"将数据信号转换成电信号，通过端口送去。\"},\"1384\":{\"t\":\"发送的数据包又会通过交换机到达下一个路由器，\"},\"1385\":{\"t\":\"接收方 MAC 地址就是下一个路由器的地址，所以交换机会根据这一地址将包传输到下一个路由器。\"},\"1386\":{\"t\":\"接下来，下一个路由器会将包转发给再下一个路由器，经过层层转发之后，网络包就到达了最终的目的地。\"},\"1387\":{\"t\":\"在传输到目的地址过程中，源 IP 和目标 IP 始终是不会变的，一直变化的是 MAC 地址，因为需要 MAC 地址在以太网内进行两个设备之间的包传输。\"},\"1388\":{\"t\":\"接收端就会跟拆快递一样，不断的拆开发送到的数据包的头部，并且进行校验。以这样的方式去拿到所需要的核心数据。\"},\"1389\":{\"t\":\"网络分层模型\"},\"1390\":{\"t\":\"之后双方就会建立TCP连接，然后web服务器就会向本机发送数据，然后就会关闭TCP连接，浏览器就会进行解析渲染页面。\"},\"1391\":{\"t\":\"当数据传输完毕，需要断开tcp连接，发起tcp四次挥手。\"},\"1392\":{\"t\":\"img\"},\"1393\":{\"t\":\"客户端打算关闭连接，此时会发送一个FIN置为1的TCP报文，即FIN报文，之后客户端进入FIN_WAIT_1状态\"},\"1394\":{\"t\":\"服务端收到此报文后，会回复一个ACK确认应答报文，之后服务端进入CLOSED_WAIT状态\"},\"1395\":{\"t\":\"客户端收到服务端发过来的ACK应答报文，之后进入FIN_WAITE_2状态\"},\"1396\":{\"t\":\"等待服务端处理完数据后，也向客户端发送FIN报文之后服务端进入LAST_ACK状态\"},\"1397\":{\"t\":\"客户端收到服务端的FIN报文后，向服务端发送ACK确认应答报文，之后进入TIME_WAIT状态\"},\"1398\":{\"t\":\"服务端收到客户端发送的ACK确认应答报文后，就直接进入CLOSE状态，至此服务端已经完成连接关闭\"},\"1399\":{\"t\":\"客户端经过2MSL一段时间后，自动进入CLOSED状态，客户端完成连接关闭\"},\"1400\":{\"t\":\"参考博客：渲染页面：浏览器的工作原理 - Web 性能 | MDN\"},\"1401\":{\"t\":\"当浏览器收到数据，就会开始解析收到的信息。“推测性解析”，“解析”是浏览器将通过网络接收的数据转换为DOM和CSSOM的步骤，通过渲染器把DOM和CSSOM在屏幕上绘制成页面。\"},\"1402\":{\"h\":\"构建DOM树\",\"a\":\"构建dom树\"},\"1403\":{\"t\":\"文档对象模型 (DOM) 是HTML和XML文档的编程接口。它提供了对文档的结构化的表述，并定义了一种方式可以使从程序中对该结构进行访问，从而改变文档的结构，样式和内容。DOM 将文档解析为一个由节点和对象（包含属性和方法的对象）组成的结构集合。简言之，它会将web页面和脚本或程序语言连接起来。\"},\"1404\":{\"t\":\"第一步是处理HTML标记，构建DOM树。HTML标记分为开始标记和结束标记，属性名，属性值等，如果文档格式良好，则解析它会简单而快速。解析器将标记化的输入解析到文档中，构建文档树。\"},\"1405\":{\"t\":\"DOM树描述了文档的内容。<html>元素是第一个标签也是文档树的根节点。树反映了不同标记之间的关系和层次结构。嵌套在其他标记中的标记是子节点。DOM节点的数量越多，构建DOM树所需的时间就越长。\"},\"1406\":{\"t\":\"The DOM tree for our sample code, showing all the nodes, including text nodes.\"},\"1407\":{\"t\":\"clipboard.png\"},\"1408\":{\"t\":\"当解析器发现非阻塞资源，例如一张图片，浏览器会请求这些资源并且继续解析。当遇到一个CSS文件时，解析也可以继续进行，**但是对于<script>标签（特别是没有 async 或者 defer 属性）会阻塞渲染并停止HTML的解析。**尽管浏览器的预加载扫描器加速了这个过程，但过多的脚本仍然是一个重要的瓶颈。\"},\"1409\":{\"h\":\"预加载扫描器\",\"a\":\"预加载扫描器\"},\"1410\":{\"t\":\"**预加载扫描仪将解析可用的内容并请求高优先级资源，如CSS、JavaScript和web字体。**多亏了预加载扫描器，我们不必等到解析器找到对外部资源的引用来请求它。它将在后台检索资源，以便在主HTML解析器到达请求的资源时，它们可能已经在运行，或者已经被下载。预加载扫描仪提供的优化减少了阻塞。\"},\"1411\":{\"t\":\"<link rel=\\\"stylesheet\\\" src=\\\"styles.css\\\"/> <script src=\\\"myscript.js\\\" async></script> <img src=\\\"myimage.jpg\\\" alt=\\\"image description\\\"/> <script src=\\\"anotherscript.js\\\" async></script> \"},\"1412\":{\"t\":\"在这个例子中，**当主线程在解析HTML和CSS时，预加载扫描器将找到脚本和图像，并开始下载它们。**为了确保脚本不会阻塞进程，当JavaScript解析和执行顺序不重要时，可以添加async属性或defer属性。\"},\"1413\":{\"t\":\"等待获取CSS不会阻塞HTML的解析或者下载，但是它的确阻塞JavaScript，因为JavaScript经常用于查询元素的CSS属性。\"},\"1414\":{\"h\":\"构建CSSOM树\",\"a\":\"构建cssom树\"},\"1415\":{\"t\":\"浏览器将**CSS规则转换为可以理解和使用的样式映射。**浏览器遍历CSS中的每个规则集，根据CSS选择器创建具有父、子和兄弟关系的节点树。\"},\"1416\":{\"t\":\"浏览器需要将接收到的CSS规则转换为可以使用的内容。\"},\"1417\":{\"t\":\"CSSOM树包括来自用户代理样式表的样式。浏览器从适用于节点的最通用规则开始，并通过应用更具体的规则递归地优化计算的样式。换句话说，它级联属性值。\"},\"1418\":{\"t\":\"构建CSSOM非常非常快，创建CSSOM的总时间通常小于一次DNS查找所需的时间。\"},\"1419\":{\"h\":\"其他过程\",\"a\":\"其他过程\"},\"1420\":{\"h\":\"javascript编译\",\"a\":\"javascript编译\"},\"1421\":{\"t\":\"JavaScript被解释、编译、解析和执行。脚本被解析为抽象语法树。一些浏览器引擎使用”Abstract Syntax Tree“并将其传递到解释器中，输出在主线程上执行的字节码。这就是所谓的JavaScript编译。\"},\"1422\":{\"h\":\"构建辅助功能树\",\"a\":\"构建辅助功能树\"},\"1423\":{\"t\":\"浏览器还构建辅助设备用于分析和解释内容的辅助功能（accessibility ）树。可访问性对象模型（AOM）类似于DOM的语义版本。当DOM更新时，浏览器会更新辅助功能树。辅助技术本身无法修改可访问性树。\"},\"1424\":{\"h\":\"渲染\",\"a\":\"渲染\"},\"1425\":{\"t\":\"渲染步骤包括样式、布局、绘制，在某些情况下还包括合成。\"},\"1426\":{\"t\":\"解析步骤：\"},\"1427\":{\"t\":\"将DOM和CSSOM组合成一个Render树，计算样式树或渲染树从DOM树的根开始构建，遍历每个可见节点。\"},\"1428\":{\"t\":\"💡：<head>和它的子节点以及任何具有display: none样式的结点，它们不会出现在Render树上。\"},\"1429\":{\"t\":\"❗：具有visibility: hidden的节点会出现在Render树上，因为它们会占用空间。\"},\"1430\":{\"t\":\"每个可见节点都应用了其CSSOM规则。\"},\"1431\":{\"t\":\"Render树保存所有具有内容和计算样式的可见节点——将所有相关样式匹配到DOM树中的每个可见节点，并根据CSS级联确定每个节点的计算样式。（用于后面的布局）\"},\"1432\":{\"t\":\"在渲染树上运行布局以计算每个节点的几何体。\"},\"1433\":{\"t\":\"💡：布局是确定呈现树中所有节点的宽度、高度和位置，以及确定页面上每个对象的大小和位置的过程。\"},\"1434\":{\"t\":\"💡：回流是对页面的任何部分或整个文档的任何后续大小和位置的确定。\"},\"1435\":{\"t\":\"为了确定每个对象的确切大小和位置，浏览器从渲染树的根开始遍历它。\"},\"1436\":{\"t\":\"在此阶段，考虑到视区大小，浏览器将确定屏幕上所有不同框的尺寸。以视区的大小为基础，布局通常从body开始，用每个元素的框模型属性排列所有body的子孙元素的尺寸，为不知道其尺寸的替换元素（例如图像）提供占位符空间。\"},\"1437\":{\"t\":\"将各个节点绘制到屏幕上。\"},\"1438\":{\"t\":\"在绘制或光栅化阶段，浏览器将在布局阶段计算的每个框转换为屏幕上的实际像素。\"},\"1439\":{\"t\":\"绘画包括将元素的每个可视部分绘制到屏幕上，包括文本、颜色、边框、阴影和替换的元素（如按钮和图像）。\"},\"1440\":{\"t\":\"为了确保重绘的速度比初始绘制的速度更快，屏幕上的绘图通常被分解成数层。\"},\"1441\":{\"t\":\"绘制可以将布局树中的元素分解为多个层。将内容提升到GPU上的层（而不是CPU上的主线程）可以提高绘制和重新绘制性能。\"},\"1442\":{\"t\":\"🎮：有一些特定的属性和元素可以实例化一个层，包括<video>和<canvas>.\"},\"1443\":{\"t\":\"当文档的各个部分以不同的层绘制，相互重叠时，必须进行合成，以确保它们以正确的顺序绘制到屏幕上，并正确显示内容。\"},\"1444\":{\"h\":\"解析所有步骤：\",\"a\":\"解析所有步骤\"},\"1445\":{\"t\":\"处理HTML标记并构造DOM树。\"},\"1446\":{\"t\":\"处理CSS并构建CSSOM树。\"},\"1447\":{\"t\":\"将DOM和CSSOM组合成一个Render树，计算样式树或渲染树从DOM树的根开始构建，遍历每个可见节点。\"},\"1448\":{\"t\":\"渲染树上运行布局以计算每个节点的几何体。\"},\"1449\":{\"t\":\"将各个节点绘制到屏幕上。\"},\"1450\":{\"t\":\"30张图解：键入网址后，到网页显示，其间发生了什么？\"},\"1451\":{\"t\":\"渲染页面：浏览器的工作原理\"},\"1452\":{\"c\":[\"计算机基础\",\"计算机网络\"]},\"1453\":{\"h\":\"HTTP协议（一）\"},\"1454\":{\"t\":\"为了方便，去更好的观察到每个包得真实内容，最好的方式就是搭建一个小型 HTTP 环境。\"},\"1455\":{\"h\":\"搭建 HTTP 实验环境\",\"a\":\"搭建-http-实验环境\"},\"1456\":{\"t\":\"实验环境用到得应用软件：\"},\"1457\":{\"t\":\"Wireshark+NPcap\"},\"1458\":{\"t\":\"Chrome/Firefox\"},\"1459\":{\"t\":\"Telnet\"},\"1460\":{\"t\":\"OpenResty\"},\"1461\":{\"t\":\"同时需要用到这样一个环境http_study。\"},\"1462\":{\"t\":\"构建过程如下：\"},\"1463\":{\"t\":\"首先从 http_study 下载相关得源码，在 Release 页面里面，将其压缩。\"},\"1464\":{\"t\":\"安装 Wireshark+NPcap 与 Chrome/Firefox，软件，安装过程比较简单，就是找官网下载相关的版本，选择最新的就可，然后一路下一步就可以安装成功了，注：(先安装 NPcap 再安装Wireshark。安装顺序出错需重新安装)\"},\"1465\":{\"t\":\"Windows 10自带Telnet，不需要安装，但默认是不启用的，需要你稍微设置一下。打开Windows的设置窗口，搜索“Telnet”，就会找到“启用或关闭Windows功能”，在这个窗口里找到“Telnet客户端”，打上对钩就可以了，可以参考截图。\"},\"1466\":{\"t\":\"img\"},\"1467\":{\"t\":\"安装 OpenResty，去它的官网，点击左边栏的“Download”，进入下载页面，下载适合你系统的版本，将压缩包解压到刚才的 http_study 文件里面。结果如下：\"},\"1468\":{\"t\":\"image-20220104222534119\"},\"1469\":{\"t\":\"了能够让浏览器能够使用DNS域名访问我们的实验环境，还要改一下本机的hosts文件，位置在C:\\\\WINDOWS\\\\system32\\\\drivers\\\\etc，在里面添加三行本机IP地址到测试域名的映射\"},\"1470\":{\"t\":\"127.0.0.1 www.chrono.com 127.0.0.1 www.metroid.net 127.0.0.1 origin.io \"},\"1471\":{\"t\":\"到这里，安装工作基本上就完成了。下面开始测试，环境是否能正常使用。\"},\"1472\":{\"t\":\"首先，我们要启动 Web 服务器，也就是 OpenResty。在 http_study 的 “www” 目录下有四个批处理文件，分别是：\"},\"1473\":{\"t\":\"start：启动OpenResty服务器；\"},\"1474\":{\"t\":\"stop：停止OpenResty服务器；\"},\"1475\":{\"t\":\"reload：重启OpenResty服务器；\"},\"1476\":{\"t\":\"list：列出已经启动的OpenResty服务器进程。\"},\"1477\":{\"t\":\"使用鼠标双击“start”批处理文件，就会启动OpenResty服务器在后台运行，这个过程可能会有Windows防火墙的警告，选择“允许”即可。\"},\"1478\":{\"t\":\"运行后，鼠标双击“list”可以查看OpenResty是否已经正常启动，应该会有两个nginx.exe的后台进程，大概是下图的样子。\"},\"1479\":{\"t\":\"img\"},\"1480\":{\"t\":\"接下来运行 Wireshark，开始抓包。进行以下配置：\"},\"1481\":{\"t\":\"image-20220104223339422\"},\"1482\":{\"t\":\"鼠标双击开始界面里的“ loopback Adapter”即可开始抓取本机上的网络数据。\"},\"1483\":{\"t\":\"然后我们打开Chrome，在地址栏输入“http://localhost”，访问刚才启动的OpenResty服务器，就会看到一个简单的欢迎界面，如下图所示。\"},\"1484\":{\"t\":\"img\"},\"1485\":{\"t\":\"这时再回头去看Wireshark，应该会显示已经抓到了一些数据，就可以用鼠标点击工具栏里的“停止捕获”按钮告诉Wireshark“到此为止”，不再继续抓包。\"},\"1486\":{\"t\":\"img\"},\"1487\":{\"t\":\"到现在实验环境已经搭建成功了，后续会利用这个环境进行分析每个包的内容。\"},\"1488\":{\"h\":\"键入网址再按下回车会发生什么？\",\"a\":\"键入网址再按下回车会发生什么\"},\"1489\":{\"t\":\"这是一个常见的面试题目！\"},\"1490\":{\"t\":\"其实在网络综合篇已经进行一定的分析，而今天我们需要分析呢，主要分析 HTTP 协议在这个过程中到底干了什么，不能光理论，得实操一下，亲眼见见才行。\"},\"1491\":{\"t\":\"我们启动一下这个实验环境，在 Chrome 浏览器里面输入 http://127.0.0.1/ ，再按下回车键，等待页面的出来，就会在 Wireshark 看到如下画面：\"},\"1492\":{\"t\":\"image-20220105215520494\"},\"1493\":{\"t\":\"注：如果你发现的捕获的包数量少于 11 个包，同时返回的状态码是 304，说明此网站已经缓存了，你可再找一个浏览器进行实验。\"},\"1494\":{\"h\":\"抓包分析\",\"a\":\"抓包分析\"},\"1495\":{\"t\":\"image-20220105220846593\"},\"1496\":{\"t\":\"最开始三个包，是在建立浏览器与服务器的 TCP 连接，可以很明显的看出 Web 服务器的端口是 80，而客户端（浏览器）的端口是 13014，和我们预想的一样三次握手一样。\"},\"1497\":{\"t\":\"image-20220112153830990\"},\"1498\":{\"t\":\"当建立了 TCP 连接后，HTTP 协议就开始工作了，浏览器会发送一个通过TCP发送了一个GET / HTTP/1.1请求报文，也就是 Wireshark 里的第四个包。\"},\"1499\":{\"t\":\"接下来，Web 服务器就会回复第五个包，也就是确认包（ACK）。确认刚才报文已收到。\"},\"1500\":{\"t\":\"Web 服务器收到报文后，会在内部解析这个请求，看看浏览器发送这个请求想要干什么。\"},\"1501\":{\"t\":\"明确要求获取根目录下的默认文件，就从磁盘上把那个文件全读出来，再拼成符合 HTTP 格式的报文，发回去吧。这就是 Wireshark 里的第六个包 “HTTP/1.1 200 OK”，底层走的还是 TCP 协议。\"},\"1502\":{\"t\":\"当接收到服务器发送的报文（第六个包），浏览器就会给服务器回复一个确认包（ACK），确认收到了，这就是第七个包。\"},\"1503\":{\"t\":\"浏览器收到了响应数据后，就会调用引擎处理，渲染等过程，将页面展现出来。\"},\"1504\":{\"t\":\"到这里，你是不是觉得要结束了？❓❓❓\"},\"1505\":{\"t\":\"image-20220112154307779\"},\"1506\":{\"t\":\"其实并没有， 接下来浏览器还会自动去请求网站图标，但是我们这里没有这个文件，所以会返回 404。\"},\"1507\":{\"t\":\"到此，你输入网址再按下回车的过程 HTTP 部分已经结束了。\"},\"1508\":{\"t\":\"image-20220112155233973\"},\"1509\":{\"t\":\"工作完成后，好像并没有直接进入到 TCP 挥手，反而有上图的情况，前两个包可能是告知对方，工作完成了，进入到长连接状态，后面一大段都是双方处于保持连接状态里面。\"},\"1510\":{\"t\":\"http 协议是采用请求-问答的方式，当处于普通模式，双方建立连接，完成工作，就会断开连接，当处于 Keep-alive 模式时，双方建立连接，即使工作完成了，此连接依旧有效状态。keep-alive 模式避免了重新建立连接。\"},\"1511\":{\"t\":\"http1.0 中默认是关闭的，需要在http头加入”Connection: Keep-Alive”，才能启用 Keep-Alive；\"},\"1512\":{\"t\":\"http 1.1 中默认启用 Keep-Alive，目前大部分浏览器都是用 http1.1协议。\"},\"1513\":{\"t\":\"image-20220112155819902\"},\"1514\":{\"t\":\"当我们决定关闭服务器时候，双方就会开始 TCP 挥手。\"},\"1515\":{\"t\":\"总结一下浏览器 HTTP 请求过程：\"},\"1516\":{\"t\":\"浏览器从地址栏的输入中获得服务器的 IP 地址和端口号；\"},\"1517\":{\"t\":\"浏览器用 TCP 的三次握手与服务器建立连接；\"},\"1518\":{\"t\":\"浏览器向服务器发送拼好的报文；\"},\"1519\":{\"t\":\"服务器收到报文后处理请求，同样拼好报文再发给浏览器；\"},\"1520\":{\"t\":\"浏览器解析报文，渲染输出页面。\"},\"1521\":{\"t\":\"关闭浏览器或者服务器就会 TCP 挥手断开连接。\"},\"1522\":{\"h\":\"HTTP 报文解析\",\"a\":\"http-报文解析\"},\"1523\":{\"t\":\"HTTP 协议核心是报文的内容，不同报文格式，会实现更加灵活丰富的功能。\"},\"1524\":{\"h\":\"报文结构\",\"a\":\"报文结构\"},\"1525\":{\"t\":\"HTTP协议的请求报文和响应报文的结构基本相同，由三大部分组成：\"},\"1526\":{\"t\":\"起始行（start line）：描述请求或响应的基本信息；\"},\"1527\":{\"t\":\"头部字段集合（header）：使用key-value形式更详细地说明报文；\"},\"1528\":{\"t\":\"消息正文（entity）：实际传输的数据，它不一定是纯文本，可以是图片、视频等二进制数据\"},\"1529\":{\"t\":\"这其中前两部分起始行和头部字段经常又合称为“请求头”或“响应头”，消息正文又称为“实体”。\"},\"1530\":{\"t\":\"HTTP 协议规定报文必须有 header，但可以没有 body，而且在 header 之后必须要有一个“空行”，也就是“CRLF”，十六进制的“0D0A”。\"},\"1531\":{\"t\":\"img\"},\"1532\":{\"t\":\"我们来看看抓取到的 HTTP 协议。\"},\"1533\":{\"t\":\"image-20220112161630664\"},\"1534\":{\"t\":\"请求报文里面没有 body。一般 GET 请求都是如此只有 header 没有 body。虽然 HTTP 协议对 header 的大小没有做限制，但各个 Web 服务器都不允许过大的请求头，因为头部太大可能会占用大量的服务器资源，影响运行效率，同时浏览器也会做一定限制。\"},\"1535\":{\"h\":\"起始行\",\"a\":\"起始行\"},\"1536\":{\"t\":\"请求行，简要地描述了，客户端将会如何操作服务端地资源，相当于我要借东西，提前跟别人打个招呼。\"},\"1537\":{\"t\":\"请求行由三部分构成：\"},\"1538\":{\"t\":\"请求方法：是一个动词，如 GET/POST，表示对资源的操作；\"},\"1539\":{\"t\":\"请求目标：通常是一个 URI，标记了请求方法要操作的资源；\"},\"1540\":{\"t\":\"版本号：表示报文使用的 HTTP 协议版本。\"},\"1541\":{\"t\":\"很清楚看到 HTTP 版本是 1.1 。\"},\"1542\":{\"t\":\"这三个部分通常使用空格（space）来分隔，最后要用CRLF换行表示结束。\"},\"1543\":{\"t\":\"img\"},\"1544\":{\"t\":\"🌰：\"},\"1545\":{\"t\":\"GET / HTTP/1.1\\\\r\\\\n \"},\"1546\":{\"t\":\"在此请求行中，GET是请求方法，/ 是请求目标，HTTP/1.1 是版本号。\"},\"1547\":{\"t\":\"咦~~，服务器向发送地报文格式好像和这个对不上啊。\"},\"1548\":{\"t\":\"对于响应报文里面，这里并不叫请求行，而是状态行，反应了服务器对此次请求的状态表现。\"},\"1549\":{\"t\":\"状态行要简单一些，同样也是由三部分构成：\"},\"1550\":{\"t\":\"版本号：表示报文使用的 HTTP 协议版本；\"},\"1551\":{\"t\":\"状态码：一个三位数，用代码的形式表示处理的结果，比如 200 是成功，500 是服务器错误；\"},\"1552\":{\"t\":\"原因：作为数字状态码补充，是更详细的解释文字，帮助人理解原因。\"},\"1553\":{\"t\":\"img\"},\"1554\":{\"t\":\"🌰：\"},\"1555\":{\"t\":\"HTTP/1.1 200 OK \"},\"1556\":{\"t\":\"此状态行中，协议版本号是 1.1，状态码是 200，补充文字：OK。\"},\"1557\":{\"h\":\"头部字段\",\"a\":\"头部字段\"},\"1558\":{\"t\":\"在头部字段里，请求报文与响应报文结构基本是一致的。\"},\"1559\":{\"t\":\"头部字段是 key-value 的形式，key 和 value之间用“:”分隔，最后用CRLF换行表示字段结束。比如在“Host: 127.0.0.1”这一行里 key 就是“Host”，value 就是“127.0.0.1”。\"},\"1560\":{\"t\":\"HTTP 头字段非常灵活，不仅可以使用标准里的 Host、Connection 等已有头，也可以任意添加自定义头，这就给 HTTP 协议带来了无限的扩展可能。\"},\"1561\":{\"t\":\"不过使用头字段需要注意下面几点：\"},\"1562\":{\"t\":\"字段名不区分大小写，例如“Host”也可以写成“host”，但首字母大写的可读性更好；\"},\"1563\":{\"t\":\"字段名里不允许出现空格，可以使用连字符“-”，但不能使用下划线“_”。例如，“test-name”是合法的字段名，而“test name”“test_name”是不正确的字段名；\"},\"1564\":{\"t\":\"字段名后面必须紧接着“:”，不能有空格，而“:”后的字段值前可以有多个空格；\"},\"1565\":{\"t\":\"字段的顺序是没有意义的，可以任意排列不影响语义；\"},\"1566\":{\"t\":\"字段原则上不能重复，除非这个字段本身的语义允许，例如Set-Cookie。\"},\"1567\":{\"t\":\"我们来说说常用的头字段：\"},\"1568\":{\"t\":\"Host 字段，它属于请求字段，只能出现在请求头里，它同时也是唯一一个 HTTP/1.1 规范里要求必须出现的字段，也就是说，如果请求头里没有 Host，那这就是一个错误的报文。\"},\"1569\":{\"t\":\"User-Agent 是请求字段，只出现在请求头里。它使用一个字符串来描述发起 HTTP 请求的客户端，服务器可以依据它来返回最合适此浏览器显示的页面。\"},\"1570\":{\"t\":\"Date 字段是一个通用字段，但通常出现在响应头里，表示 HTTP 报文创建的时间，客户端可以使用这个时间再搭配其他字段决定缓存策略\"},\"1571\":{\"t\":\"**Server **字段是响应字段，只能出现在响应头里。它告诉客户端当前正在提供 Web 服务的软件名称和版本号\"},\"1572\":{\"t\":\"Content-Length，它表示报文里body的长度，也就是请求头或响应头空行后面数据的长度。\"},\"1573\":{\"h\":\"请求方式\",\"a\":\"请求方式\"},\"1574\":{\"t\":\"GET：获取资源，可以理解为读取或者下载数据；\"},\"1575\":{\"t\":\"HEAD：获取资源的元信息；\"},\"1576\":{\"t\":\"POST：向资源提交数据，相当于写入或上传数据；\"},\"1577\":{\"t\":\"PUT：类似POST；\"},\"1578\":{\"t\":\"DELETE：删除资源；\"},\"1579\":{\"t\":\"CONNECT：建立特殊的连接隧道；\"},\"1580\":{\"t\":\"OPTIONS：列出可对资源实行的方法；\"},\"1581\":{\"t\":\"TRACE：追踪请求-响应的传输路径。\"},\"1582\":{\"c\":[\"计算机基础\",\"计算机网络\"]},\"1583\":{\"h\":\"学习推荐\"},\"1584\":{\"h\":\"入门\",\"a\":\"入门\"},\"1585\":{\"t\":\"教程\"},\"1586\":{\"t\":\"我比较推崇李文周的博客,写的挺好的，而且他的web项目让我受益匪浅⭐\"},\"1587\":{\"t\":\"极客兔兔-Go 语言简明教程\"},\"1588\":{\"t\":\"电子书\"},\"1589\":{\"t\":\"地鼠文档\"},\"1590\":{\"t\":\"go程序设计语言\"},\"1591\":{\"t\":\"书栈网\"},\"1592\":{\"t\":\"博主\"},\"1593\":{\"t\":\"极客兔兔\"},\"1594\":{\"t\":\"脑子进煎鱼了\"},\"1595\":{\"t\":\"李文周\"},\"1596\":{\"t\":\"小白Debug\"},\"1597\":{\"t\":\"项目\"},\"1598\":{\"t\":\"Go Web开发进阶实战（gin框架） (推荐⭐)\"},\"1599\":{\"h\":\"进阶\",\"a\":\"进阶\"},\"1600\":{\"t\":\"视频\"},\"1601\":{\"t\":\"幼麟实验室 （比较偏向底层解释go语言相关内容）\"},\"1602\":{\"t\":\"公众号\"},\"1603\":{\"t\":\"脑子进煎鱼了\"},\"1604\":{\"t\":\"幼麟实验室\"},\"1605\":{\"t\":\"电子书\"},\"1606\":{\"t\":\"跟煎鱼学习go\"},\"1607\":{\"t\":\"Go 语言高性能编程\"},\"1608\":{\"t\":\"Go-Questions\"},\"1609\":{\"t\":\"7 days golang programs from scratch\"},\"1610\":{\"t\":\"设计模式\"},\"1611\":{\"t\":\"Go数据结构和基础\"},\"1612\":{\"t\":\"刷题\"},\"1613\":{\"t\":\"LeetCode Cookbook\"},\"1614\":{\"t\":\"codetop\"},\"1615\":{\"t\":\"宫水三叶 (虽然用的java解题，但是题解水平很高)\"},\"1616\":{\"t\":\"灵茶山艾府 (每次周赛都会有go题解发出)\"},\"1617\":{\"t\":\"数据结构与算法\"},\"1618\":{\"t\":\"AlgoWiki\"},\"1619\":{\"t\":\"项目\"},\"1620\":{\"t\":\"基于go语言gin框架的web项目骨架\"},\"1621\":{\"h\":\"终极\",\"a\":\"终极\"},\"1622\":{\"t\":\"源码解析\"},\"1623\":{\"t\":\"Go 语言原本\"},\"1624\":{\"t\":\"Go 语言设计与实现\"},\"1625\":{\"t\":\"Go源码阅读\"},\"1626\":{\"c\":[\"语言基础\",\"go\"]},\"1627\":{\"h\":\"数组与slice\"},\"1628\":{\"h\":\"数组\",\"a\":\"数组\"},\"1629\":{\"t\":\"数组是一个具有固定长度且拥有0个或者多个相同数据类型元素的序列。\"},\"1630\":{\"t\":\"数组的每一个元素都是通过索引去访问的，索引从0到数组长度减一。Go内置的函数len可以返回数组中元素个数。\"},\"1631\":{\"t\":\"package main import \\\"fmt\\\" func main(){ var a [3]int b:=[3]int{1,2,3} c:=[...]int{1,2,3} d:=[...]int{9:-1} fmt.Println(\\\"a:\\\",a) fmt.Println(\\\"b:\\\",b) fmt.Println(\\\"c:\\\",c) fmt.Println(\\\"d:\\\",d) } \"},\"1632\":{\"t\":\"image-20211024192051643\"},\"1633\":{\"t\":\"默认情况下，声明一个数组var a [3]int ,元素的初始化值是元素类型的零值。（对于int,对应的零值就是0）\"},\"1634\":{\"t\":\"同时可以使用数组字面量根据一组值来初始化一个数组（b:=[3]int{1,2,3}）。\"},\"1635\":{\"t\":\"如果省略号...代替数组长度，那么数组长度由初始化数组的元素个数决定。（c:=[...]int{1,2,3} 长度为3）\"},\"1636\":{\"t\":\"数组长度是数组类型的一部分。\"},\"1637\":{\"t\":\"那么[3]int和[4]int是两个不同的数组类型。数组长度必须是常量表达式。\"},\"1638\":{\"t\":\"同时组值可以具有索引和索引对应的值d:=[...]int{9:-1},定义了一个拥有10个元素的数组d，最后一个元素值为-1，其余都是0值。\"},\"1639\":{\"t\":\"当函数参数传入的是一个数组时候，传入的参数都会创建一个副本，然后赋值给对应的函数变量。Go中把数组看作是值传递，而在其他语言当中，数组是隐式的引用传递。\"},\"1640\":{\"t\":\"func test1() { arrayA := [2]int{100, 200} var arrayB [2]int arrayB = arrayA fmt.Printf(\\\"arrayA : %p , %v\\\\n\\\", &arrayA, arrayA) fmt.Printf(\\\"arrayB : %p , %v\\\\n\\\", &arrayB, arrayB) testArray(arrayA) } func testArray(x [2]int) { fmt.Printf(\\\"func Array : %p , %v\\\\n\\\", &x, x) } \"},\"1641\":{\"t\":\"image-20211024194617478\"},\"1642\":{\"t\":\"可以看到，三个内存地址都不同，这也就验证了 Go 中数组赋值和函数传参都是值复制的。\"},\"1643\":{\"t\":\"❓：那么这会导致什么问题？\"},\"1644\":{\"t\":\"假想每次传参都用数组，那么每次数组都要被复制一遍。如果数组大小有 100万，在64位机器上就需要花费大约 800W 字节，即 8MB 内存。这样会消耗掉大量的内存。\"},\"1645\":{\"t\":\"❗：解决方案之一：\"},\"1646\":{\"t\":\"使用数组指针，同时也允许被调函数修改调用方数组中的元素。但是也有缺点：数组本身是不可变的，无法为数组添加和删除元素。\"},\"1647\":{\"t\":\"💡：由于数组长度不可变的特性等原因，除在特殊情况下，很少使用数组，一般使用Slice\"},\"1648\":{\"h\":\"切片\",\"a\":\"切片\"},\"1649\":{\"t\":\"slice 表示一个拥有相同类型元素的可边长度的序列。\"},\"1650\":{\"t\":\"用切片解决上面那个问题，那么切片的优势也会表现出来。\"},\"1651\":{\"t\":\"用切片传数组参数，既可以达到节约内存的目的，也可以达到合理处理好共享内存的问题。切片是引用传递，所以它们不需要使用额外的内存并且比使用数组更有效率。\"},\"1652\":{\"t\":\"Slice由三个元素组成\"},\"1653\":{\"t\":\"data :元素存哪里\"},\"1654\":{\"t\":\"len :存了多少个元素\"},\"1655\":{\"t\":\"cap :可以存多少个元素\"},\"1656\":{\"t\":\"package main import \\\"fmt\\\" func main(){ var egg []int //var egg []int=make([]int,2,5) //egg=append(egg,1) fmt.Printf(\\\"addres:%p,first item address:%p len:%v cap:%v data:%v\\\",&egg,egg,len(egg),cap(egg),egg) } package main import \\\"fmt\\\" func main(){ //var egg []int var egg []int=make([]int,2,5) //egg=append(egg,1) fmt.Printf(\\\"addres:%p,first item address:%p len:%v cap:%v data:%v\\\",&egg,egg,len(egg),cap(egg),egg) } \"},\"1657\":{\"t\":\"当定义一个Slice ,就会构造一个如下的一个结构\"},\"1658\":{\"t\":\"切片结构的地址为0xc000004078\"},\"1659\":{\"t\":\"data的地址则为0x0 没有分配底层数组，这里就为nil\"},\"1660\":{\"t\":\"len为0\"},\"1661\":{\"t\":\"cap为0\"},\"1662\":{\"t\":\"image-20211025220403035\"},\"1663\":{\"t\":\"如果通过make的方式去定义一个Slice，就会定义如下情况\"},\"1664\":{\"t\":\"image-20211025220435472\"},\"1665\":{\"t\":\"当你使用make去定义这个变量，会分配三个结构，还会开辟一段内存作为他的底层数组。还会初始化为int类型的零值。\"},\"1666\":{\"t\":\"目前的Slice只存储了两个元素，此时的切片结构\"},\"1667\":{\"t\":\"data应该指向开辟数组的首地址\"},\"1668\":{\"t\":\"len为2\"},\"1669\":{\"t\":\"cap为5\"},\"1670\":{\"t\":\"package main import \\\"fmt\\\" func main(){ //var egg []int var egg []int=make([]int,2,5) egg=append(egg,1) fmt.Printf(\\\"addres:%p,first item address:%p len:%v cap:%v data:%v\\\",&egg,egg,len(egg),cap(egg),egg) } \"},\"1671\":{\"t\":\"当我们添加一个元素时候，会将底层数组第三位改成3，len改成3\"},\"1672\":{\"t\":\"image-20211026141230400\"},\"1673\":{\"t\":\"package main import \\\"fmt\\\" func main(){ //var egg []int var egg []int=make([]int,2,5) egg=append(egg,1) egg[0]=1 fmt.Printf(\\\"addres:%p,first item address:%p len:%v cap:%v data:%v\\\",&egg,egg,len(egg),cap(egg),egg) } \"},\"1674\":{\"t\":\"当我们修改一个元素值时候，地址等不会发生改变，只有值发生了变化。\"},\"1675\":{\"t\":\"image-20211026141521651\"},\"1676\":{\"t\":\"已经存储的是可以进行安全读写的。\"},\"1677\":{\"t\":\"❗：如果超出len的范围访问元素，属于越界访问，会发生panic\"},\"1678\":{\"t\":\"image-20211026141749149\"},\"1679\":{\"t\":\"同时可以通过append去为未开辟底层数组的切片结构开辟一个底层数组\"},\"1680\":{\"t\":\"package main import \\\"fmt\\\" func main(){ //var egg []int var egg []int egg=append(egg,1) fmt.Printf(\\\"addres:%p,first item address:%p len:%v cap:%v data:%v\\\",&egg,egg,len(egg),cap(egg),egg) } \"},\"1681\":{\"t\":\"image-20211026142501669\"},\"1682\":{\"h\":\"底层数组\",\"a\":\"底层数组\"},\"1683\":{\"t\":\"前面所提到的：数组是一个具有固定长度且拥有0个或者多个相同数据类型元素的序列。\"},\"1684\":{\"t\":\"定义int类型的slice，那么底层数组对应的int类型\"},\"1685\":{\"t\":\"定义string类型的slice，那么底层数组对应的string类型\"},\"1686\":{\"t\":\"💡：切片结构的data不一定指向底层数组的首地址，指向开始元素的地址。\"},\"1687\":{\"t\":\"func main(){ egg:=[10]int{0,1,2,3,4,5,6,7,8,9} ans1:=egg[1:4] ans2:=egg[7:] fmt.Printf(\\\"addres:%p,len:%v cap:%v data:%v \\\\n\\\",&egg,len(egg),cap(egg),egg) fmt.Printf(\\\"addres:%p,first item address:%p,egg item address:%p len:%v cap:%v data:%v \\\\n\\\",&ans1,ans1,&egg[1],len(ans1),cap(ans1),ans1) fmt.Printf(\\\"addres:%p,first item address:%p,egg item address:%p len:%v cap:%v data:%v\\\\n\\\",&ans2,ans2,&egg[7],len(ans2),cap(ans2),ans2) } \"},\"1688\":{\"t\":\"image-20211026144659145\"},\"1689\":{\"t\":\"不同slice与声明的数组可以共用一个底层数组\"},\"1690\":{\"t\":\"ans1结构如下：\"},\"1691\":{\"t\":\"data指向数组中索引为1的元素地址\"},\"1692\":{\"t\":\"len为3\"},\"1693\":{\"t\":\"cap为9\"},\"1694\":{\"t\":\"ans1的元素是egg索引1到4，左闭右开的区间，容量是从索引1到底层数组结束，所以为9\"},\"1695\":{\"t\":\"ans2结构如下：\"},\"1696\":{\"t\":\"data指向数组中索引为7的元素地址\"},\"1697\":{\"t\":\"len为3\"},\"1698\":{\"t\":\"cap为3\"},\"1699\":{\"t\":\"ans2的元素是egg索引7到数组结束，容量是从索引7到底层数组结束，所以为3\"},\"1700\":{\"t\":\"ans1的可读写范围是底层数组的索引1到3，如果想扩大读写范围，可以利用append或者改变slice的范围\"},\"1701\":{\"t\":\"❓：那么如果ans2使用append去添加元素，会发生什么？\"},\"1702\":{\"t\":\"func main(){ egg:=[10]int{0,1,2,3,4,5,6,7,8,9} ans1:=egg[1:4] ans2:=egg[7:] ans2=append(ans2,1) fmt.Printf(\\\"addres:%p,len:%v cap:%v data:%v \\\\n\\\",&egg,len(egg),cap(egg),egg) fmt.Printf(\\\"addres:%p,first item address:%p,egg item address:%p len:%v cap:%v data:%v \\\\n\\\",&ans1,ans1,&egg[1],len(ans1),cap(ans1),ans1) fmt.Printf(\\\"addres:%p,first item address:%p,egg item address:%p len:%v cap:%v data:%v\\\\n\\\",&ans2,ans2,&egg[7],len(ans2),cap(ans2),ans2) } \"},\"1703\":{\"t\":\"image-20211026150032973\"},\"1704\":{\"t\":\"因为之前ans1，ans2与egg共用一个底层数组，数组长度是不可改变的。\"},\"1705\":{\"t\":\"改变ans2的可读写范围\"},\"1706\":{\"t\":\"改变ans2的slice范围，但是如果值大于了10就会发生panic。\"},\"1707\":{\"t\":\"通过append，会发生重新开辟底层数组，将值拷贝然后添加值。\"},\"1708\":{\"t\":\"如上图所示。当使用append为ans2添加元素，ans2会新开辟一个底层数组，将之前的数组元素进行拷贝然后修改底层数组的值。\"},\"1709\":{\"t\":\"❓：我们只给ans2添加一个元素，容量从3变成了6呢？\"},\"1710\":{\"h\":\"Slice扩容规则\",\"a\":\"slice扩容规则\"},\"1711\":{\"t\":\"1️⃣:STEP1 预估扩容后的容量\"},\"1712\":{\"t\":\"预估规则：\"},\"1713\":{\"t\":\"如果扩容前容量翻倍小于所需容量（oldCap*2<cap），那么新容量直接等于所需容量（newcap=cap）\"},\"1714\":{\"t\":\"当原slice的cap（oldCap<1024）小于1024时，新slice的cap变为原来的2倍；\"},\"1715\":{\"t\":\"原slice的cap大于1024（oldCap>1024）时，新slice变为原来的1.25倍\"},\"1716\":{\"t\":\"证明：\"},\"1717\":{\"t\":\"//规则1 func main() { var ans []int ans=append(ans,1) fmt.Printf(\\\"cap:%d\\\\n\\\",cap(ans)) ans=append(ans,1,2,3,4,5) fmt.Printf(\\\"cap:%d\\\\n\\\",cap(ans)) } //规则2 func main() { slice := make([]int, 0) oldCap := cap(slice) for i := 0; i < 4096; i++ { slice = append(slice, i) newCap := cap(slice) if newCap != oldCap { fmt.Printf(\\\"oldCap = %-4d after append %-4d newCap = %-4d\\\\n\\\", oldCap, i, newCap) oldCap = newCap } } } \"},\"1718\":{\"t\":\"image-20211026153502610\"},\"1719\":{\"t\":\"image-20211026152707948\"},\"1720\":{\"t\":\"2️⃣:STEP2 计算需要的内存大小\"},\"1721\":{\"t\":\"预估容量*元素类型大小\"},\"1722\":{\"t\":\"3️⃣：STEP3 匹配合适的内存规格\"},\"1723\":{\"t\":\"例子：\"},\"1724\":{\"t\":\"newcap=5，定义是int类型\"},\"1725\":{\"t\":\"需要内存大小为5*8=40，会匹配到48的内存大小。\"},\"1726\":{\"t\":\"48的内存大小可以存6个元素。\"},\"1727\":{\"h\":\"参考文章\",\"a\":\"参考文章\"},\"1728\":{\"t\":\"【Golang源码系列】二：Slice实现原理分析\"},\"1729\":{\"t\":\"深入解析 Go 中 Slice 底层实现\"},\"1730\":{\"h\":\"奇怪的问题\",\"a\":\"奇怪的问题\"},\"1731\":{\"t\":\"为什么slice的扩容规则是这样的？为什么容量大于1024就扩容1.25倍呢？\"},\"1732\":{\"c\":[\"语言基础\",\"go\"]},\"1733\":{\"h\":\"string\"},\"1734\":{\"t\":\"神秘的字符串！！\"},\"1735\":{\"h\":\"字符集\",\"a\":\"字符集\"},\"1736\":{\"h\":\"ASCII 码\",\"a\":\"ascii-码\"},\"1737\":{\"t\":\"一个bit有0和1两种状态，8个bit代表一个字节，有256个状态，00000000（代表0）到11111111（代表255）。数字可以通过值来表示，字符如何表示？\"},\"1738\":{\"t\":\"大写字母A如何在计算机中表示呢？给他指定一个数字编号01000001，当需要存储A时候就存储这个编号值，要读取时候，根据值通过映射关系找到这个字符。向这样去收录很多字符进行统一编号，得到一个字符编号表也叫做字符集。\"},\"1739\":{\"t\":\"上个世纪60年代，美国制定了一套字符编码，对英语字符与二进制位之间的关系，做了统一规定。这被称为 ASCII 码，一直沿用至今。ASCII 码一共规定了128个字符的编码，大写字母A是65（二进制01000001）。\"},\"1740\":{\"h\":\"Unicode\",\"a\":\"unicode\"},\"1741\":{\"t\":\"英语用128个字符编码就够了，但是用来表示其他语言就显得很少了，亚洲国家的文字，使用的符号就更多了，汉字就多达10万左右。后面推出了GB2312（存储简体中文），有部分人需要繁体字，那么有推出了BIG5，不断地推出新的字符集。\"},\"1742\":{\"t\":\"因此，要想打开一个文本文件，就必须知道它的编码方式，否则用错误的编码方式解读，就会出现乱码。为了减少这种情况的产生，推出了一个统一的字符集Unicode，将世界上所有的符号都纳入其中。每一个符号都给予一个独一无二的编码，那么乱码问题就会消失。\"},\"1743\":{\"t\":\"Unicode 是一个很大的集合，现在的规模可以容纳100多万个符号。每个符号的编码都不一样。\"},\"1744\":{\"t\":\"❓：unicode规定了字符的二进制形式，但是没有规定这个二进制如何存储？不同的字符对应的二进制位数肯定也不一样。\"},\"1745\":{\"t\":\"计算机无法知道一串二进制数中三个字节表示的是一个字符而不是表示三个字符。如果都规定用文本中最大的字节作为一个字符来存储（定长编码），英文字母只需要一个字节，那么必然会导致英文字母前面有多个字节是0。这对于存储来说是极大的浪费，文本文件的大小会因此大出二三倍甚至更大，这是无法接受的。\"},\"1746\":{\"t\":\"这个编码问题没有解决，Unicode 在很长一段时间内无法推广。\"},\"1747\":{\"h\":\"UTF-8\",\"a\":\"utf-8\"},\"1748\":{\"t\":\"互联网的普及，强烈要求出现一种统一的编码方式。UTF-8 就是在互联网上使用最广的一种 Unicode 的实现方式。我们来看看UFT-8的编码规则是怎么样的？\"},\"1749\":{\"t\":\"UTF-8 最大的一个特点，就是它是一种变长的编码方式。它可以使用1~4个字节表示一个符号，根据不同的符号而变化字节长度。\"},\"1750\":{\"t\":\"UTF-8的编码规则：\"},\"1751\":{\"t\":\"对于单字节的符号，字节的第一位设为0，后面7位为这个符号的 Unicode 码。因此对于英语字母，UTF-8 编码和 ASCII 码是相同的。\"},\"1752\":{\"t\":\"对于n字节的符号（n > 1），第一个字节的前n位都设为1，第n + 1位设为0，后面字节的前两位一律设为10。剩下的没有提及的二进制位，全部为这个符号的 Unicode 码。\"},\"1753\":{\"t\":\"Unicode符号范围 | UTF-8编码方式 (十六进制) | （二进制） ----------------------+--------------------------------------------- 0000 0000-0000 007F [0,127] | 0xxxxxxx 0000 0080-0000 07FF [128,2047] | 110xxxxx 10xxxxxx 0000 0800-0000 FFFF [2048,65535] | 1110xxxx 10xxxxxx 10xxxxxx 0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx \"},\"1754\":{\"t\":\"举例\"},\"1755\":{\"t\":\"严的 Unicode 是4E25（0100 1110 0010 0101），根据上表，可以发现4E25处在第三行的范围内（0000 0800 - 0000 FFFF），因此严的 UTF-8 编码需要三个字节，即格式是1110xxxx 10xxxxxx 10xxxxxx。然后，从严的最后一个二进制位开始，依次从后向前填入格式中的x，多出的位补0。这样就得到了，严的 UTF-8 编码是11100100 10111000 10100101，转换成十六进制就是E4B8A5。\"},\"1756\":{\"h\":\"字符串（string）\",\"a\":\"字符串-string\"},\"1757\":{\"t\":\"Go的源文件总是按UFT-8进行编码，习惯上Go的字符串会按UTF-8解读。\"},\"1758\":{\"t\":\"string在go中如何定义\"},\"1759\":{\"t\":\"方式一：\"},\"1760\":{\"t\":\"func main(){ var s string=\\\"123\\\\t456\\\\n\\\" fmt.Printf(s) } \"},\"1761\":{\"t\":\"同时在带双引号的字符串字面量中可以使用ASCII码中的转义符。\"},\"1762\":{\"t\":\"方式二：\"},\"1763\":{\"t\":\"func main(){ var s string=`q23` fmt.Printf(s) } \"},\"1764\":{\"t\":\"采用``反引号的方式不会对字符串里面的转义符进行转义，但是可以创建多行的字符串。\"},\"1765\":{\"t\":\"string底层结构\"},\"1766\":{\"t\":\"string需要一个起始地址，在内存中可以找到字符串的内容，在C语言中通过特定的字符/0来表示字符串结束,但是限制字符串不能出现/0字符，而是通过长度len来表示字符串结束。\"},\"1767\":{\"t\":\"len长度不是字符个数，而是字节个数。\"},\"1768\":{\"t\":\"image-20211030162201466\"},\"1769\":{\"t\":\"struct String { byte* str;//首地址 intgo len;//长度 }; \"},\"1770\":{\"t\":\"在java 和 C 语言中，字符串一般是由char[]数组定义，而go 采用byte数组，其实主要和go语言在创建之初并不想以ASCII码为中心，其采用[]byte的方式，使得在字符串接收时，不会出现乱码。同时go为更方便的处理非ASCII字符串时，定义了rune类型，获取一个Unicode字符。\"},\"1771\":{\"t\":\"rune类型作为int32类型的别名，同时byte式int8类型的别名。\"},\"1772\":{\"t\":\"// byte is an alias for uint8 and is equivalent to uint8 in all ways. It is // used, by convention, to distinguish byte values from 8-bit unsigned // integer values. type byte = uint8 // rune is an alias for int32 and is equivalent to int32 in all ways. It is // used, by convention, to distinguish character values from integer values. type rune = int32 \"},\"1773\":{\"t\":\"证明：\"},\"1774\":{\"t\":\"func main(){ s:=\\\"yay世界\\\" fmt.Println(\\\"字节输出\\\") for i:=0;i<len(s);i++{ fmt.Printf(\\\"%c\\\\n\\\",s[i]) } fmt.Println(\\\"字符输出\\\") for _,item:=range s{ fmt.Printf(\\\"%c\\\\n\\\",item) } } \"},\"1775\":{\"t\":\"image-20211030154206313\"},\"1776\":{\"t\":\"string的特性\"},\"1777\":{\"t\":\"Go中的string被定义为只读类型。字符串在编程中经常会被使用到，只读可以保证数据的安全，减少编程的复杂度。不允许修改字符串中的字符。字符串变量是可以共用底层字符串实现的。\"},\"1778\":{\"t\":\"如果你想修改字符串内容，一种方法，可以赋新值，字符串并没有修改原本的内存对应内容，而是指向新的内存，另一种方法：变量强制类型转换成字节slice，就可以进行修改。\"},\"1779\":{\"t\":\"关于slice建议去看slice讲解\"},\"1780\":{\"h\":\"参考文章\",\"a\":\"参考文章\"},\"1781\":{\"t\":\"字符编码笔记：ASCII，Unicode 和 UTF-8\"},\"1782\":{\"t\":\"go 语言string之解析\"},\"1783\":{\"t\":\"Go语言标准库学习之strings——字符串格式化的利器\"},\"1784\":{\"t\":\"十分钟搞清字符集和字符编码\"},\"1785\":{\"c\":[\"语言基础\",\"go\"]},\"1786\":{\"h\":\"map\"},\"1787\":{\"h\":\"map概要\",\"a\":\"map概要\"},\"1788\":{\"t\":\"Go语言中map是散列表的引用。散列表可以用来存储键值对元素。\"},\"1789\":{\"t\":\"map类型是map[k]v，其中k是字典的键，v是字典中值对应的数据类型。\"},\"1790\":{\"t\":\"💡:k的类型必须是可以通过操作符==来进行比较的数据类型。v的类型则没有限制。\"},\"1791\":{\"t\":\"var a map[string]string \"},\"1792\":{\"t\":\"map类型的变量本质上是个指针，这些键值对实际上是通过哈希表来存储的。\"},\"1793\":{\"t\":\"图片\"},\"1794\":{\"t\":\"❓：为什么要用哈希表？\"},\"1795\":{\"t\":\"能够存储键值对的数据结构有很多种，可以是数组，也可以是链表，但是能用不代表好用。如果每次查找一个键都要从第一个元素开始遍历，直到发现匹配的键或者遍历完所有元素，这样的时间复杂度就是O(n)。\"},\"1796\":{\"t\":\"散列表的集合，键值是唯一的，键对应的值可以通过键来获取，更新或者删除。这些操作基本上通过常量时间键的比较来完成，时间复杂度就是O(1)\"},\"1797\":{\"h\":\"Hashmap\",\"a\":\"hashmap\"},\"1798\":{\"h\":\"建表\",\"a\":\"建表\"},\"1799\":{\"t\":\"哈希表通常会有一堆桶(bucket)来存储键值对。现在有一个键值对{k,v} ，那么怎么选桶？通过hash函数将k转换成hash值，通过hash从桶的编号进行选择，从而通过array[hash[key]]实现O(1)的查找效率。\"},\"1800\":{\"t\":\"这里有两种方式比较常用\"},\"1801\":{\"t\":\"取模运算 hash%m（通过hash值与桶的个数进行取模得到编号）\"},\"1802\":{\"t\":\"按位与运算 hash&(m-1) (hash值与m-1进行与运算)\"},\"1803\":{\"t\":\"第二种更加高效，但是有一定的限制。\"},\"1804\":{\"t\":\"❗：m必须要是2的整数次幂这样才能保证与运算结果落在[0,m-1]，而不会出现有些桶注定不会被选中的情况。\"},\"1805\":{\"t\":\"当m是5，他的二进制数为101 那么m-1的二进制数为100 ，无论什么数与m-1进行与运算，后面两位都是0，就会出现编号[1,3]的桶注定不会被选中的情况。\"},\"1806\":{\"t\":\"image-20211028143533945\"},\"1807\":{\"t\":\"哈希函数的实现有很多，其目的都是让哈希结果能够尽可能的均匀分布在0~length(array)间。\"},\"1808\":{\"t\":\"一个完美的哈希函数就是将key和index一 一对应；时间复杂度为O(1)\"},\"1809\":{\"t\":\"一个极坏的哈希函数就是将所有的key都映射到一个index上。可能达到的时间复杂度为O(n)\"},\"1810\":{\"h\":\"哈希冲突\",\"a\":\"哈希冲突\"},\"1811\":{\"t\":\"当我们再次存一个键值对{k2,v2}时候他的哈希值通过哈希函数得到桶的编号，桶里面已经有存储了一个键值对。这就是哈希冲突。在通常情况下，哈希函数输入的范围一定会远远大于输出的范围，所以在使用哈希表时一定会遇到冲突。通常有两个思路来解决。\"},\"1812\":{\"t\":\"第一种：开放地址法\"},\"1813\":{\"t\":\"假设此时需要存储的键值对{k2,v2}对应的桶编号1已经被占用了，那么就用下一个空闲桶编号3来存键值对。\"},\"1814\":{\"t\":\"当查找k2时候，根据哈希函数定位到编号为1的桶，但是通过比较发现key不对，那么就会继续检测下一个桶，直到匹配成功或者遇到空桶就代表key不存在。\"},\"1815\":{\"t\":\"图片\"},\"1816\":{\"t\":\"第二种：拉链法（go的map就是利用这种方式解决）\"},\"1817\":{\"t\":\"假设此时需要存储的键值对{k2,v2}对应的桶编号1已经被占用了，那么就在编号为1的桶后面链接一个桶存储键值对。此时的编号1的桶还要额外记录一个指针，指向连在一起桶。\"},\"1818\":{\"t\":\"当查找k2时候，根据哈希函数定位到编号为1的桶，但是通过比较发现key不对，就会通过指针去查询，通过比较key的值来锁定键值对。\"},\"1819\":{\"t\":\"图片\"},\"1820\":{\"t\":\"❗：如果哈希函数可以很均匀的把key映射到各个桶里，发生哈希冲突的几率就会降低。哈希冲突会影响哈希读写的效率，适当的对哈希表的扩容也是一个保障读写效率的手段之一。\"},\"1821\":{\"h\":\"扩容\",\"a\":\"扩容\"},\"1822\":{\"t\":\"关于扩容，我们要搞清楚两点：\"},\"1823\":{\"t\":\"何时扩容？\"},\"1824\":{\"t\":\"怎么扩容？\"},\"1825\":{\"t\":\"何时扩容？\"},\"1826\":{\"t\":\"哈希表中存储的键值对数量和桶数量的比值会作为判断哈希表是否需要扩容的依据，这个依据叫做负载因子（Load Factor）通常需要设定一个触发扩容的最大负载因子。\"},\"1827\":{\"t\":\"loadFactor = keyCount / bucketCount\"},\"1828\":{\"t\":\"怎么扩容？\"},\"1829\":{\"t\":\"需要扩容时候，就会分配更多的桶作为新桶，此时需要把旧桶的值都迁移到新桶中，如果一次性把所有键值对挪到新的桶里，那么对于键值对数量很多情况，每次扩容占用的时间太长就会造成性能瞬时明显抖动，所以通常会选择**“渐进式扩容”**。\"},\"1830\":{\"t\":\"一个字段（oldbuckets ）记录旧桶的位置，一个字段（nevacuate ）记录旧桶迁移的进度。当需要扩容时候，会分配足够多的新桶，在每次哈希表读写操作，检测当当前处于迁移阶段，就迁移一部分键值对到新桶里，直到所有数据迁移成功。\"},\"1831\":{\"t\":\"图片\"},\"1832\":{\"h\":\"Go中的map\",\"a\":\"go中的map\"},\"1833\":{\"t\":\"map类型的变量本质上是一个hmap类型的指针：\"},\"1834\":{\"t\":\" type hmap struct { count int //已经存储的键值对个数 flags uint8 B uint8 // 常规桶个数等于2^B,选择桶用的是与运算 noverflow uint16 // 使用的溢出桶数量 hash0 uint32 // hash seed buckets unsafe.Pointer // 常规桶起始地址 oldbuckets unsafe.Pointer // 扩容时保存原来常规桶的地址 nevacuate uintptr // 渐进式扩容时记录下一个要被迁移的旧桶编号 extra *mapextra //里面记录的都是溢出桶相关的信息： } \"},\"1835\":{\"h\":\"bmap\",\"a\":\"bmap\"},\"1836\":{\"t\":\"map使用的桶很有设计感，每个桶里可以存储8个键值对，并且为了内存使用更加紧凑，8个键放一起，8个值放一起。对应每个key只保存其哈希值的高8位（tophash）。而每个键值对的tophash、key和value的索引顺序一一对应。这就是map使用的桶的内存布局。\"},\"1837\":{\"t\":\"图片\"},\"1838\":{\"t\":\"既然每个桶里可以存储8个元素，那存满了怎么办？扩容的代价还是比较高的，所以为了减少扩容次数，这里引入了溢出桶(overflow)。溢出桶的内存布局与之前介绍的常规桶相同。如果哈希表要分配的桶的数目大于24，就会预分配2(B-4)个溢出桶备用。这些常规桶和溢出桶在内存中是连续的，只是前2^B个用作常规桶，后面的用作溢出桶。\"},\"1839\":{\"t\":\"//溢出桶相关的信息 type mapextra struct { overflow *[]*bmap //把已经用到的溢出桶链起来 oldoverflow *[]*bmap //渐进式扩容时，保存旧桶用到的溢出桶 nextOverflow *bmap //下一个尚未使用的溢出桶 } \"},\"1840\":{\"t\":\"图片\"},\"1841\":{\"t\":\"如果当前桶存满了以后，检查hmap.extra.nextoverflow，如果还有可用的溢出桶，就在这个桶后面链上这个溢出桶，然后继续往这个溢出桶里存。而hmap.extra.nextoverflow继续指向下一个空闲的溢出桶。\"},\"1842\":{\"t\":\"图片\"},\"1843\":{\"t\":\"如果我们把哈希表的桶存满了，那么现在再继续存储键值对，那么这个哈希表会创建溢出桶还是发生扩容呢？\"},\"1844\":{\"h\":\"扩容规则\",\"a\":\"扩容规则\"},\"1845\":{\"t\":\"翻倍扩容\"},\"1846\":{\"t\":\"go语言中map负载因子默认是6.5，当比值超过负载因子就会触发翻倍扩容。\"},\"1847\":{\"t\":\" hmap.count / 2^hmap.B > 6.5\"},\"1848\":{\"t\":\"分配新桶数目是旧桶的2倍，hmap.oldbuckets指向旧桶，hmap.buckets指向新桶。hmap.nevacuate为0，表示接下来要迁移编号为0的旧桶。\"},\"1849\":{\"t\":\"图片\"},\"1850\":{\"t\":\"例如：将旧桶数量记为m=4，新桶数量就是2m=8，如果一个哈希值选择0号旧桶：h&(m-1)=0，那么h的二进制最低两位一定为0(xxxxxx00)，对于新桶，如果第三位是1的话，就去编号为4的桶，如果为0的话就去编号为0的桶。每个旧桶的键值对都会分流到两个新桶中。\"},\"1851\":{\"t\":\"图片\"},\"1852\":{\"t\":\"编号为hmap.nevacuate的旧桶迁移结束后会增加这个编号值，直到所有旧桶迁移完毕，把hmap.oldbuckets置为nil，一次翻倍扩容结束。\"},\"1853\":{\"t\":\"等量扩容\"},\"1854\":{\"t\":\"如果没有超过设置的负载因子上限，但是使用的溢出桶较多，也会触发扩容，不过这一次是等量扩容。\"},\"1855\":{\"t\":\"第一个问题：用多少溢出桶算多？\"},\"1856\":{\"t\":\"如果常规桶数目不大于2^15，那么使用的溢出桶数目超过常规桶就算是多了；\"},\"1857\":{\"t\":\"如果常规桶数目大于2^ 15，那么使用溢出桶数目一旦超过2^15就算多了。\"},\"1858\":{\"t\":\"第二个问题：为什么要等量扩容？\"},\"1859\":{\"t\":\"在很多键值对被删除的情况下，桶的负载因子没有超过上限值，却偏偏使用了很多溢出桶。\"},\"1860\":{\"t\":\"图片\"},\"1861\":{\"t\":\"这种情况下，如果把这些键值对重新安排到等量的新桶中，虽然哈希值没变，常规桶数目没变，每个键值对还是会选择与旧桶一样的新桶编号，但是能够存储的更加紧凑，进而减少溢出桶的使用。\"},\"1862\":{\"t\":\"图片\"},\"1863\":{\"h\":\"常见问题\",\"a\":\"常见问题\"},\"1864\":{\"t\":\"map每次遍历的顺序都是不同的。\"},\"1865\":{\"t\":\"为了防止开发人员依赖map的顺序，对于每一次map遍历（range），得到结果的顺序都是不同的，因为在初始化迭代器（runtime.mapiterinit）时都对startBucket和startCell进行了random操作。\"},\"1866\":{\"t\":\"func mapiterinit(t *maptype, h *hmap, it *hiter) { //some code ... // decide where to start r := uintptr(fastrand()) //fastrand 是一个快速生成随机数的函数 if h.B > 31-bucketCntBits { r += uintptr(fastrand()) << 31 } it.startBucket = r & bucketMask(h.B) //bucketMask返回bucket的个数-1，也就是全1，将r和bucketMask做与操作，获得开始的桶编号 it.offset = uint8(r >> h.B & (bucketCnt - 1)) //bucketCnt是常量8代表一个桶内的cell数，将r右移B位后与7做与运算，可以获得开始的cell编号 //some code ... } \"},\"1867\":{\"t\":\"k的类型必须是可以通过操作符==来进行比较的数据类型\"},\"1868\":{\"t\":\"实Go语言中每种类型都有对应的类型元数据，类型元数据都有一个相同的Header，就是runtime._type。而在_type.alg这里记录了该类型的两个函数：hash和equal。\"},\"1869\":{\"t\":\"type typeAlg struct { hash func(unsafe.Pointer, uintptr) uintptr equal func(unsafe.Pointer, unsafe.Pointer) bool } \"},\"1870\":{\"t\":\"图片\"},\"1871\":{\"t\":\"slice、function value、map是不可比较的(但是这三种类型都可以和nil进行对比)\"},\"1872\":{\"t\":\"不可寻址\"},\"1873\":{\"t\":\"正是因为扩容过程中会发生键值对迁移，键值对的地址也会发生改变，所以才说map的元素是不可寻址的，如果要取一个value的地址则不能通过编译。\"},\"1874\":{\"t\":\"4.map不支持并发读写，只能并发读\"},\"1875\":{\"h\":\"总结\",\"a\":\"总结\"},\"1876\":{\"t\":\"Go语言中的map通过与运算找桶的编号，发生哈希冲突时候，采用拉链法解决，当负载因子超过6.5时候，发生翻倍扩容，如果溢出桶数量过多，那么采用等量扩容。采用渐进式迁移旧桶键值对。\"},\"1877\":{\"h\":\"使用注意\",\"a\":\"使用注意\"},\"1878\":{\"t\":\"func main(){ find:=map[int]int{} find[1]=0 idx:=0 //在这里的短变量声明，不会对 idx 进行赋值处理，而是重新声明值。注意注意！ if idx,ok:=find[1];!ok { println(111) } println(idx) } \"},\"1879\":{\"h\":\"参考文章\",\"a\":\"参考文章\"},\"1880\":{\"t\":\"【Golang】图解map\"},\"1881\":{\"t\":\"【深度解析golang map】\"},\"1882\":{\"t\":\"[由浅到深，入门Go语言Map实现原理](https://segmentfault.com/a/1190000039101378)\"},\"1883\":{\"t\":\"golang中map底层B值的计算逻辑\"},\"1884\":{\"c\":[\"语言基础\",\"go\"]},\"1885\":{\"h\":\"interface\"},\"1886\":{\"t\":\"推荐阅读：【Golang】图解Interface\"},\"1887\":{\"t\":\"深入研究 Go interface 底层实现\"},\"1888\":{\"h\":\"空接口 interface{}\",\"a\":\"空接口-interface\"},\"1889\":{\"t\":\"空接口类型可以接受任意类型的数据。干的事情不多，记录数据的位置和数据类型即可。空接口类型如下：\"},\"1890\":{\"t\":\"type eface struct { _type *_type //指向接口的动态类型元数据 data unsafe.Pointer //指向接口的动态值。 } \"},\"1891\":{\"t\":\"举个例子🌰：\"},\"1892\":{\"t\":\"var e interface{} //这里定了一个空接口类型 //在 e 没有赋值前 type eface struct { _type *_type //指向接口的动态类型元数据 ->nil data unsafe.Pointer //指向接口的动态值。 ->nil } \"},\"1893\":{\"t\":\"f, _ := os.Open(\\\"eggo.txt\\\") e = f \"},\"1894\":{\"t\":\"如果将 *os.File 类型的变量 f 赋值给 e。来看看变量 e 的结构。\"},\"1895\":{\"t\":\"type eface struct { _type *_type //指向接口的动态类型元数据 ->*os.File 的类型元数据 data unsafe.Pointer //指向接口的动态值。 ->f } \"},\"1896\":{\"t\":\"注：类型元数据这里可以找到类型关联的方法元数据列表。\"},\"1897\":{\"t\":\"图片\"},\"1898\":{\"h\":\"非空接口\",\"a\":\"非空接口\"},\"1899\":{\"t\":\"非空接口就是有方法列表的接口类型。如果一个变量想赋值一个非空接口类型，那么其类型必须实现该接口的要求的所有方法才行。非空接口类型如下：\"},\"1900\":{\"t\":\"type iface struct { tab *itab data unsafe.Pointer //接口的动态值 } //itab type itab struct { inter *interfacetype //接口的类型元数据 _type *_type //指向接口的动态类型元数据 hash uint32 //itab._type中拷贝来的，类型哈希值，用于快速判断类型是否相等时使用，后续会有介绍 _ [4]byte fun [1]uintptr //动态类型实现的接口要求方法地址 } //interfacetype type interfacetype struct { typ _type pkgpath name mhdr []imethod //接口要求的方法列表 } \"},\"1901\":{\"t\":\"举个例子🌰：\"},\"1902\":{\"t\":\"我们声明了一个 io.ReadWriter 的接口类型变量 rw。被赋值前，结构如下：\"},\"1903\":{\"t\":\"type iface struct { tab *itab //->nil data unsafe.Pointer //接口的动态值 ->nil } \"},\"1904\":{\"t\":\"f, _ := os.Open(\\\"eggo.txt\\\") rw = f \"},\"1905\":{\"t\":\"我们将 *os.File 类型变量 f。赋值给 rw。\"},\"1906\":{\"t\":\"那么 rw 的动态值是 f，动态类型是 *os.File。itab.fun 这个数组记录的是 *os.File 这个类型实现的 io.ReadWriter 接口的方法。\"},\"1907\":{\"t\":\"图片\"},\"1908\":{\"t\":\"注：rw 能使用的方法只是接口类型已经注册的。\"},\"1909\":{\"t\":\"总结：\"},\"1910\":{\"t\":\"接口，你可以看作是一个工具（枪），你往里面装怎么样的子弹，他就会打出什么样子弹。\"},\"1911\":{\"h\":\"itab缓存\",\"a\":\"itab缓存\"},\"1912\":{\"t\":\"一个非空接口类型 interfacetype 和一个动态类型 _type 就可以确定一个 itab了。剩余的字段要么来自 _type 要么是动态类型的方法。似乎这个 itab 是可以复用的。那么对于两个个非空接口类型定义的变量，赋值后只要动态类型不变，变得只是动态值 data。\"},\"1913\":{\"t\":\"实际上 Go 语言会把用到的 itab 结构体缓存起来，并且以 <接口类型，动态类型> 组合为 key，以 *itab 为 value，构成一个哈希表，用于存储与查询以及复用 itab 信息\"},\"1914\":{\"t\":\"图片\"},\"1915\":{\"t\":\"这个哈希表可与我们使用的 map 底层的哈希表不同，结构设计更为简便。\"},\"1916\":{\"t\":\"type itabTableType struct { size uintptr // length of entries array. Always a power of 2. // entries 数组的长度。总是 2 的幂。 count uintptr // current number of filled entries. //当前填充的entries数目 entries [itabInitSize]*itab // really [size] large //实际的大小 } \"},\"1917\":{\"t\":\"当需要一个 itab 会先去 itabTable 里面查找，计算哈希值时会用到接口类型(itab.inter)和动态类型(itab._type)的类型哈希值\"},\"1918\":{\"t\":\"如果能查询到对应的 itab 指针就直接拿来用，如果没有就直接创建一个新的 itab。\"},\"1919\":{\"c\":[\"语言基础\",\"go\"]},\"1920\":{\"h\":\"结构体\"},\"1921\":{\"t\":\"推荐学习：\"},\"1922\":{\"t\":\"内存对齐\"},\"1923\":{\"t\":\"Go struct 内存对齐\"},\"1924\":{\"t\":\"【Golang】详解内存对齐\"},\"1925\":{\"t\":\"Dig101:Go之聊聊struct的内存对齐\"},\"1926\":{\"h\":\"前言知识\",\"a\":\"前言知识\"},\"1927\":{\"t\":\"字 word :是用于表示其自然的数据单位，也叫machine word。字是电脑用来一次性处理事务的一个固定长度。\"},\"1928\":{\"t\":\"字长：计算机进行一次整数运算所能处理的二进制数据的位数 字的长度\"},\"1929\":{\"t\":\"字节byte ：1字节=8位(1 byte = 8 bit)\"},\"1930\":{\"t\":\"位 bit\"},\"1931\":{\"h\":\"什么是内存对齐\",\"a\":\"什么是内存对齐\"},\"1932\":{\"t\":\"CPU 访问内存时，并不是逐个字节访问，而是以字长（word size）为单位访问，提高内存访问效率。比如 64 位的 CPU ，字长为 8 字节，那么 CPU 访问内存的单位也是 8 字节。\"},\"1933\":{\"t\":\"为保证程序顺利高效运行，编译器会把各种数据类型安排到合适的地址并占用合适长度，确保CPU访问内存次数减少，这就是内存对齐。\"},\"1934\":{\"h\":\"为什么需要内存对齐\",\"a\":\"为什么需要内存对齐\"},\"1935\":{\"t\":\"CPU 始终以字长访问内存，如果不进行内存对齐，很可能增加 CPU 访问内存的次数，影响性能。\"},\"1936\":{\"t\":\"以32位CPU举例：\"},\"1937\":{\"t\":\"memory alignment\"},\"1938\":{\"t\":\"每次读取会按照字长作为单位去读取内存数据。\"},\"1939\":{\"t\":\"如果非内存对齐，那么在读取 b 数据时候，就需要分两次读，第一次读取地址 0-3 取 3 （一个字节）第二次读取地址 4-7 取 4-5（两个字节），在进行拼接。\"},\"1940\":{\"t\":\"如果内存对齐，那么无论读取 a 还是 b 数据，都是可以通过一次读取字长来获得。\"},\"1941\":{\"t\":\"总结：合理的内存对齐可以提高内存读写的性能，并且便于实现变量操作的原子性。\"},\"1942\":{\"h\":\"对齐系数\",\"a\":\"对齐系数\"},\"1943\":{\"t\":\"每种类型的对齐值就是他的对齐系数，内存对齐要求数据存储地址以及占用字节数是内存对齐的倍数。\"},\"1944\":{\"t\":\"怎么确定每个类型的对齐值呢？\"},\"1945\":{\"t\":\"这个与平台上的编译器有关。每个特定平台上的编译器都有自己的默认\\\"对齐系数\\\"，常用平台默认对齐系数如下：\"},\"1946\":{\"t\":\"32位系统对齐系数是4\"},\"1947\":{\"t\":\"64位系统对齐系数是8\"},\"1948\":{\"t\":\"而数据类型的对齐系数是取类型大小与平台的对齐系数种较小的那个，注意同一个类型在不同平台上的对齐系数不同。\"},\"1949\":{\"t\":\"image-20211115203810278\"},\"1950\":{\"t\":\"unsafe 标准库提供了 Alignof 方法，可以返回一个类型的对齐值。\"},\"1951\":{\"t\":\"func main() { var x string fmt.Println(unsafe.Alignof(x)) //8 } \"},\"1952\":{\"t\":\"为什么不统一使用平台最大对齐值呢或者就采用各个类型对应的对齐值？\"},\"1953\":{\"t\":\"举例：当前平台是 64 位的，最大对齐系数为 8byte\"},\"1954\":{\"t\":\"存储类型为 int8 占 1 字节\"},\"1955\":{\"t\":\"image-20211115210832404\"},\"1956\":{\"t\":\"假设要在 32 位平台，最大对齐系数为 4byte\"},\"1957\":{\"t\":\"存储类型为 int64 占 8 字节\"},\"1958\":{\"t\":\"image-20211115212145440\"},\"1959\":{\"t\":\"目的都是减少浪费，提高性能。\"},\"1960\":{\"t\":\"注意：你要明白对齐系数到底是什么？他是一种帮助变量根据自身的存储容量来更好选择存储地址的一个值。\"},\"1961\":{\"t\":\"他只是来帮助你在一串内存中更好的选择存储地址，存储变量，减少内存访问次数。\"},\"1962\":{\"t\":\"所有的行为与选择都是为了减少内存浪费和提高性能的。\"},\"1963\":{\"h\":\"结构体内存对齐规则\",\"a\":\"结构体内存对齐规则\"},\"1964\":{\"t\":\"怎么确定一个结构体的对齐系数\"},\"1965\":{\"t\":\"func main() { type T struct { a int8 //1 b int64 //8 c int32 //4 d int16 //2 } fmt.Println(unsafe.Alignof(T{}))//8 fmt.Println(unsafe.Sizeof(T{}))//24 } \"},\"1966\":{\"t\":\"先确定结构体中每一个成员的值，选择最大的作为结构体的对齐系数。\"},\"1967\":{\"t\":\"看看结构体如何存储\"},\"1968\":{\"t\":\"首先，结构体的起始地址需要是对齐系数的倍数。结构体的每一个字段都要把起始地址当作地址0，根据对齐系数决定自己放在哪儿。\"},\"1969\":{\"t\":\"接下来，逐个分析每个字段：\"},\"1970\":{\"t\":\"a 是第一个字段，他的对齐系数为 1，所以从第 0 个位置开始占据 1 个字节\"},\"1971\":{\"t\":\"b 是第二个字段，他的对齐系数为 8，所以不能从位置 1 开始，开始位置需要时 8 的倍数，所以从第 8 个位置开始占据 8 个字节\"},\"1972\":{\"t\":\"c 是第三个字段，他的对齐系数为 4，接下来的位置（索引为 16）满足 4 的倍数，所以第 16 个位置开始占据 4 个字节\"},\"1973\":{\"t\":\"d 是第四个字段，他的对齐系数为 2，第 20 个位置满足 2 的倍数，所以第 20 个位置开始占据 2 个字节\"},\"1974\":{\"t\":\"所有成员都放好了，其实还没有结束。\"},\"1975\":{\"t\":\"第二个要求：占据的字节满足结构体对齐系数的倍数\"},\"1976\":{\"t\":\"如果到第四个字段结束，它只占据了 22 个字节，不满足倍数，还需要扩展 2 个字节，以满足 8 的倍数。\"},\"1977\":{\"t\":\"最终这个结构体类型大小是 24 字节\"},\"1978\":{\"t\":\"image-20211116125055315\"},\"1979\":{\"t\":\"如果改变字段的顺序，他的类型大小会发生改变吗？\"},\"1980\":{\"t\":\"答：会的！\"},\"1981\":{\"t\":\"type demo1 struct { a int8 b int16 c int32 } type demo2 struct { a int8 c int32 b int16 } func main() { fmt.Println(unsafe.Sizeof(demo1{})) // 8 fmt.Println(unsafe.Sizeof(demo2{})) // 12 } \"},\"1982\":{\"t\":\"至于为什么你可以通过方法去分析理由！\"},\"1983\":{\"t\":\"空的结构体会怎么对齐？\"},\"1984\":{\"t\":\"空的结构体大小为 0，作为其他的结构体字段时候，会不需要内存对齐。但是有一种情况除外：当空的结构体为其他结构体的最后一个字段时候，会需要内存对齐。因为如果有指针指向该字段, 返回的地址将在结构体之外，如果此指针一直存活不释放对应的内存，就会有内存泄露的问题（该内存不因结构体释放而释放）。\"},\"1985\":{\"t\":\"type demo3 struct { c int32 a struct{} } type demo4 struct { a struct{} c int32 } func main() { fmt.Println(unsafe.Sizeof(demo3{})) // 8 fmt.Println(unsafe.Sizeof(demo4{})) // 4 } \"},\"1986\":{\"t\":\"我猜测他的内存对齐与上一个字段一致。\"},\"1987\":{\"c\":[\"语言基础\",\"go\"]},\"1988\":{\"h\":\"类型系统\"},\"1989\":{\"t\":\"推荐阅读：【Golang】类型系统\"},\"1990\":{\"t\":\"深入研究 Go interface 底层实现\"},\"1991\":{\"h\":\"前言\",\"a\":\"前言\"},\"1992\":{\"t\":\"在编译期间，编译器知道每种类型定义得方法，方法本质是函数，所以在方法得调用上，接收者作为第一个参数传入。这也是为什么 t.F1()==F1(t) 等价得原因。\"},\"1993\":{\"t\":\"到了执行阶段，为了支持反射，接口动态派发，类型断言这些语言特性或机制，编译器会给每种类型生成对应得类型描述信息写入执行文件，这些类型描述信息就是类型元数据。\"},\"1994\":{\"t\":\"以下都是 Go 语言的内置类型：\"},\"1995\":{\"t\":\"内置字符串类型：string。\"},\"1996\":{\"t\":\"内置布尔类型：bool.\"},\"1997\":{\"t\":\"内置数值类型： \"},\"1998\":{\"t\":\"int8、uint8（byte）、int16、uint16、int32（rune）、uint32、int64、uint64、int、uint、uintptr。\"},\"1999\":{\"t\":\"float32、float64。\"},\"2000\":{\"t\":\"complex64、complex128。\"},\"2001\":{\"t\":\"注：byte是uint8的一个内置别名，rune是int32的一个内置别名。\"},\"2002\":{\"t\":\"我们也可以自己定义类型。\"},\"2003\":{\"t\":\"//可以给自定义类型定义方法。 type T1 int //可以给自定义类型定义方法。 type T2 struct { name string } //接口类型是无效的方法接收者 type T3 interface { F1() } \"},\"2004\":{\"t\":\"数据类型很多，不管是内置类型还是自定义类型，他的类型元数据是全局唯一的，这些类型元数据共同构成了 Go 语言的类型系统。\"},\"2005\":{\"t\":\"那么开始正题吧！\"},\"2006\":{\"h\":\"内置数据类型元数据\",\"a\":\"内置数据类型元数据\"},\"2007\":{\"t\":\"每个类型元数据基础信息都放到了 runtime._type 结构体中，作为每个类型元数据的 Header。\"},\"2008\":{\"t\":\"type _type struct { size uintptr //大小 ptrdata uintptr //含有所有指针类型前缀大小 hash uint32 //类型 tflag tflag //类型的特征标记 align uint8 //作为整体变量存放时的对齐字节数 fieldalign uint8 //当前结构字段的对齐字节数 kind uint8 //基础类型枚举值和反射中的 Kind 一致，kind 决定了如何解析该类型 alg *typeAlg //指向一个函数指针表，该表有两个函数，一个是计算类型 Hash 函数。另一个是比较两个类型是否相同的 equal 函数 gcdata *byte //GC 相关 str nameOff //类型名称字符串在二进制文件段中的偏移量 ptrToThis typeOff //类型元信息指针在二进制文件段中的偏移量 } \"},\"2009\":{\"t\":\"_type 存储基本信息，还有额外需要描述的信息也需要存储。例如 slice 的类型元数据在 _type 结构体后面记录了一个 *_type，指向其存储元素的类型元数据。\"},\"2010\":{\"t\":\"type slicetype struct { typ _type elem *_type //指向存储元素的类型元数据，如果存储string类型，那么这个指针指向 string 类型的元数据 } \"},\"2011\":{\"t\":\"指针类型也是如此。\"},\"2012\":{\"t\":\"type ptrtype struct { typ _type elem *_type //指向 指针类型指向的类型元数据 例如 *int 那么elem指向 int 类型的元数据 } \"},\"2013\":{\"t\":\"有些内置类型就没有这么简单。例如 map，struct。\"},\"2014\":{\"t\":\"type maptype struct { typ _type key *_type elem *_type bucket *_type // internal type representing a hash bucket // function for hashing keys (ptr to key, seed) -> hash hasher func(unsafe.Pointer, uintptr) uintptr keysize uint8 // size of key slot elemsize uint8 // size of elem slot bucketsize uint16 // size of bucket flags uint32 } type structtype struct { typ _type pkgPath name fields []structfield } \"},\"2015\":{\"t\":\"但是基本结构都是如此。可以来 type.go 来看看内置类型的元数据\"},\"2016\":{\"h\":\"自定义类型元数据\",\"a\":\"自定义类型元数据\"},\"2017\":{\"t\":\"如果是自定义类型，那么类型元数据的结构体后面还会有一个 uncommontype 结构体。\"},\"2018\":{\"t\":\"type uncommontype struct { pkgpath nameOff //记录类型所在的包路径； mcount uint16 // 记录了该类型关联到多少个方法； _ uint16 // unused moff uint32 //记录的是这些方法的元数据组成的数组，相对于这个uncommontype结构体偏移了多少字节。 } //方法元数据 type method struct { name nameOff // 方法名称偏移量 mtyp typeOff //方法的类型元数据 ifn textOff //fn used in interface call (one-word receiver) tfn textOff //fn used for normal method call } \"},\"2019\":{\"t\":\"举个例子🌰：\"},\"2020\":{\"t\":\"type myslice []string //定义了一个新的类型 myslice //定义的两个方法 func (ms myslice) Len(){ fmt.Println(len(ms)) } func (ms myslice) Cap(){ fmt.Println(cap(ms)) } \"},\"2021\":{\"t\":\"myslice 类型元数据由以下构成：\"},\"2022\":{\"t\":\"slicetype 类型描述信息\"},\"2023\":{\"t\":\"uncommontype 结构体\"},\"2024\":{\"t\":\"注：我们可以通过 uncommontype 结构体找到 myslice 的方法元数据列表。\"},\"2025\":{\"t\":\"图片\"},\"2026\":{\"h\":\"alias 别名\",\"a\":\"alias-别名\"},\"2027\":{\"t\":\"在内置数据里面，byte是uint8的一个内置别名，rune是int32的一个内置别名。\"},\"2028\":{\"t\":\"以下有两种方法，他们有什么不同呢？\"},\"2029\":{\"t\":\"type MyType1 = int32 type MyType2 int32 \"},\"2030\":{\"t\":\"第一种方式叫做类型 int32 取别名。实际上 MyType1 和 int32 会关联到同一个类型元数据，属于同一种类型。\"},\"2031\":{\"t\":\"图片\"},\"2032\":{\"t\":\"第二种方式属于创建新类型，拥有自己的类型元数据，MyType2 和 int32 是两个不同的类型，对应元数据也会不同。\"},\"2033\":{\"t\":\"图片\"},\"2034\":{\"c\":[\"语言基础\",\"go\"]},\"2035\":{\"h\":\"类型断言\"},\"2036\":{\"t\":\"推荐阅读：【Golang】图解类型断言\"},\"2037\":{\"t\":\"我们将接口称之为 抽象类型，像 int，slice，string，map，struct等内置和自定义类型称之为 具体类型。\"},\"2038\":{\"t\":\"类型断言是 Go 语言在接口值上的一个神奇的特性，而类型断言的目标类型可以是抽象类型也可以是具体类型。那么我们就可以组合成四种类型断言，接下来我们逐一看看。\"},\"2039\":{\"h\":\"空接口.(具体类型)\",\"a\":\"空接口-具体类型\"},\"2040\":{\"t\":\"var e interface{} f,_ := os.Open(\\\"eggo.txt\\\") e = f r,ok := e.(*os.File) \"},\"2041\":{\"t\":\"这种类型断言就是判断 e 变量存储的 _type 是否指向 *os.File 的类型元数据。\"},\"2042\":{\"t\":\"图片\"},\"2043\":{\"t\":\"f := \\\"eggo\\\" e = f \"},\"2044\":{\"t\":\"e 的动态类型不是 *os.File 类型，而是 string 类型，那么断言就会失败。\"},\"2045\":{\"t\":\"图片\"},\"2046\":{\"h\":\"非空接口.(具体类型)\",\"a\":\"非空接口-具体类型\"},\"2047\":{\"t\":\"var rw io.ReadWriter f,_ := os.Open(\\\"eggo.txt) rw = f r,ok := rw.(*os.File) \"},\"2048\":{\"t\":\"这种类型断言就是判断 rw 的动态类型是否为 *os.File 类型。\"},\"2049\":{\"t\":\"这里判断方式比较简单：判断 iface.tab 是否等于 <io.ReadWriter，*os.File> 这个组合对应的 itab 指针。\"},\"2050\":{\"t\":\"我们都知道一个 itab 靠接口类型和动态类型进行确定的并且 itab 可以进行复用，所以用上诉方式进行判断。\"},\"2051\":{\"t\":\"图片\"},\"2052\":{\"t\":\"type eggo struct { name string } func (e *eggo) Read(b []byte) (n int, err error) { return len(e.name), nil } func (e *eggo) Write(b []byte) (n int, err error) { return len(e.name), nil } \"},\"2053\":{\"t\":\"在这里我们创建一个新的类型 eggo，同时也实现相关的接口方法。\"},\"2054\":{\"t\":\"f := eggo{name: \\\"eggo\\\"} rw = &f \"},\"2055\":{\"t\":\"如果我们将 eggo 类型的变量赋值给 rw，再去做刚才的类型断言，此时 rw 的 tab 与指向 <io.ReadWriter, *os.File> 组合对应的 itab 结构体指针不相等，所以断言失败。\"},\"2056\":{\"t\":\"图片\"},\"2057\":{\"h\":\"空接口.(非空接口)\",\"a\":\"空接口-非空接口\"},\"2058\":{\"t\":\"var e interface{} f,_ := os.Open(\\\"eggo.txt\\\") e = f rw,ok := e.(io.ReadWriter) \"},\"2059\":{\"t\":\"这种断言就是判断 e 的动态类型是否实现了 io.ReadWriter 的接口方法。\"},\"2060\":{\"t\":\"e 的动态类型是 *os.File，我们接下来应该判断这个类型是否有 io.ReadWriter 接口的方法。\"},\"2061\":{\"t\":\"怎么判断呢？难道拿到类型列表方法信息进行一对一判断？\"},\"2062\":{\"t\":\"当目标类型为非空接口时，我们会首先去根据 <io.ReadWriter，*os.File> 去 itabTable 里面查找对应的 itab 指针。 \"},\"2063\":{\"t\":\"如果找到了，也要进一步确认 itab.fun[0] 是否等于 0，都满足那么皆大欢喜这个类型实现了接口的方法\"},\"2064\":{\"t\":\"没有找到，再去检查动态类型的方法列表进行一对一的比较。\"},\"2065\":{\"t\":\"为什么会需要去进一步确认 itab.fun[0] 是否等于 0？\"},\"2066\":{\"t\":\"因为通过方法列表确定某个具体类型没有实现指定接口，就会把 itab 这里的 fun[0] 置为 0，然后同样会把这个 itab 结构体缓存起来，和那些断言成功的 itab 缓存一样。\"},\"2067\":{\"t\":\"这样子的目的就是避免再遇到同种类型断言时重复检查方法列表的操作。\"},\"2068\":{\"t\":\"回到例子中，因为在 itabTable 找到了 <io.ReadWriter, *os.File> 对应的 itab 结构体，所以断言成功。\"},\"2069\":{\"t\":\"图片\"},\"2070\":{\"t\":\"f := \\\"eggo\\\" e = f \"},\"2071\":{\"t\":\"现在 e 的类型是 string 类型。此时在 itabTable 找不到 <io.ReadWriter, string> 指向的 itab 结构体，同时 string 类型没有实现 io.ReadWriter 接口的方法，所以断言失败。\"},\"2072\":{\"t\":\"但是此时操作没有完，同时 <io.ReadWriter, string> 这个组合会对应下面这个 itab 结构体也会缓存进行哈希表中。\"},\"2073\":{\"t\":\"图片\"},\"2074\":{\"h\":\"非空接口.(非空接口)\",\"a\":\"非空接口-非空接口\"},\"2075\":{\"t\":\"var w io.Writer f,_ := os.Open(\\\"eggo.txt\\\") w = f rw,ok := w.(io.ReadWriter) \"},\"2076\":{\"t\":\"这种断言就是判断 w 的动态类型是否实现了 io.ReadWriter 接口的方法。\"},\"2077\":{\"t\":\"判断方法与前一种断言一致，\"},\"2078\":{\"t\":\"当目标类型为非空接口时，我们会首先去根据 <io.ReadWriter，*os.File> 去 itabTable 里面查找对应的 itab 指针。\"},\"2079\":{\"t\":\"如果找到了，也要进一步确认 itab.fun[0] 是否等于 0，都满足那么皆大欢喜这个类型实现了接口的方法\"},\"2080\":{\"t\":\"没有找到，再去检查动态类型的方法列表进行一对一的比较。\"},\"2081\":{\"t\":\"图片\"},\"2082\":{\"t\":\"type eggo struct { name string } func (e *eggo) Write(b []byte) (n int, err error) { return len(e.name), nil } f := eggo{name: \\\"eggo\\\"} w = &f \"},\"2083\":{\"t\":\"我们创建了一个新类型 eggo，实现了 write 方法。现在 w 的动态类型是 *eggo 但是 *eggo 的方法列表缺少了一个 Read 方法，所以断言失败，但是 <io.ReadWriter,eggo> 组合对应的 itab 结构体指针会被缓存到哈希表中。\"},\"2084\":{\"t\":\"图片\"},\"2085\":{\"h\":\"总结\",\"a\":\"总结\"},\"2086\":{\"t\":\"这四种的判断断言的方式可以分成两种：\"},\"2087\":{\"t\":\"查看当前接口的动态类似是否满足目标对象。断言目标类型是具体类型，无论是空接口还是非空接口，其实都是看的接口的动态类型是否就是目标类型。\"},\"2088\":{\"t\":\"先查表找到 itab 结构体，找不到比较方法，缓存起来。当目标类型是非空接口，其实判断的方法就是先去根据 <接口类型，动态类型> 组合 去查表，如果找到了，那就是满足了要求，如果没有找到，那么就得比较方法列表，然后缓存起来。\"},\"2089\":{\"h\":\"type switch\",\"a\":\"type-switch\"},\"2090\":{\"t\":\"var e interface{} str := \\\"eggo\\\" e = str switch b := e.(type) { case *os.File: { fmt.Println(\\\"*os.File\\\") } case string: { fmt.Println(b) //选择这个分支 } default: fmt.Println(\\\"default\\\") } \"},\"2091\":{\"t\":\"这里的 b 会被赋值为 e 的动态值，下面每个 case 都是把 e 的动态类型和某个具体类型作比较，相等则选择这个分支，没有匹配的则走到 default 分支。\"},\"2092\":{\"t\":\"算得上一个编程小技巧。\"},\"2093\":{\"c\":[\"语言基础\",\"go\"]},\"2094\":{\"h\":\"闭包\"},\"2095\":{\"t\":\"推荐学习：【Golang】图解Function value\"},\"2096\":{\"h\":\"函数\",\"a\":\"函数\"},\"2097\":{\"t\":\"函数，Go 语言中属于头等对象，你可以作为参数进行传递，也可以作为函数返回值，绑定到变量，甚至可以作为一种类型。Go 语言称这样的参数、返回值和变量为Function Value。\"},\"2098\":{\"t\":\"Function Value 本质上是一个指针，却不直接指向函数指令入口，而是指向 runtime.funcval 结构体。\"},\"2099\":{\"t\":\"type funcval struct { //uintptr 是一个整数类型，它大到足以容纳任何指针的位模式。 fn uintptr } \"},\"2100\":{\"t\":\"从结构体的字段定义来看，似乎是一个地址，这个地址应该就是函数入口了。\"},\"2101\":{\"t\":\"通过以下方式找到函数入口：\"},\"2102\":{\"t\":\"举个例子🌰：\"},\"2103\":{\"t\":\"func A(i int) { i++ fmt.Println(i) } func B(){ f1 := A f1(1) } func C(){ f2 := A f2(1) } \"},\"2104\":{\"t\":\"在这个函数中，多个变量都用到一个函数 A，那么编译器在编译阶段就会做出一定的优化，让他们都共用一个 funcval 结构体。在执行阶段，就会去使用它。\"},\"2105\":{\"t\":\"❓：明明可以直接调用函数入口，为什么要通过 funcval 结构体包装函数入口地址，然后使用一个二级指针来调用呢？\"},\"2106\":{\"h\":\"闭包\",\"a\":\"闭包-1\"},\"2107\":{\"h\":\"介绍\",\"a\":\"介绍\"},\"2108\":{\"t\":\"维基百科\"},\"2109\":{\"t\":\"在计算机科学中，闭包（英语：Closure），又称词法闭包（Lexical Closure）或函数闭包（function closures），是在支持头等函数的编程语言中实现词法绑定的一种技术。闭包在实现上是一个结构体，它存储了一个函数（通常是其入口地址）和一个关联的环境（相当于一个符号查找表）。环境里是若干对符号和值的对应关系，它既要包括约束变量（该函数内部绑定的符号），也要包括自由变量（在函数外部定义但在函数内被引用），有些函数也可能没有自由变量。闭包跟函数最大的不同在于，当捕捉闭包的时候，它的自由变量会在捕捉时被确定，这样即便脱离了捕捉时的上下文，它也能照常运行。\"},\"2110\":{\"t\":\"举个例子🌰：\"},\"2111\":{\"t\":\"func create() func(){ c := 2 return func(){ fmt.Println(c) } } func main(){ f1 := create() f2 := create() f1() f2() } \"},\"2112\":{\"t\":\"create 函数的返回值是一个函数，这个函数引用了 create 函数的局部变量 c。满足拥有自由变量。\"},\"2113\":{\"t\":\"f1 := create() 结束后，依然可以通过 f1() 可以正常执行函数，同时去使用捕获到的自由变量 c。\"},\"2114\":{\"t\":\"根据上面两个定义结合维基百科的解释，create 的返回值函数满足闭包的定义，这个自由变量 c 通常被称之为 捕获变量。\"},\"2115\":{\"t\":\"虽然create函数的返回值函数形成闭包，但是Go语言里并没有把闭包从 Function Value 中特别区分出来。在Go语言中闭包只是拥有一个或多个捕获变量的Function Value而已。这些捕获变量就是它的捕获列表，就放在对应的funcval 结构体的后面。\"},\"2116\":{\"t\":\"每个闭包对象都是一个Function Value，但是各自持有自己的捕获列表，这也是称闭包为有状态的函数的原因。\"},\"2117\":{\"h\":\"调用捕获变量\",\"a\":\"调用捕获变量\"},\"2118\":{\"t\":\"当 Function Value 调用函数时候，会将二级地址也就是 funcval 结构体地址存入特定寄存器，例如amd64 平台使用的是 DX 寄存器。\"},\"2119\":{\"t\":\"当闭包函数执行时候，就可以通过寄存器存储地址加上偏移量找到自己的捕获变量。\"},\"2120\":{\"t\":\"如果是没有捕获列表的 Function Value，直接忽略这个寄存器即可。通过这样的方式，Go 语言实现了对 Function Value 的统一调用。\"},\"2121\":{\"t\":\"图片\"},\"2122\":{\"h\":\"捕获列表\",\"a\":\"捕获列表\"},\"2123\":{\"t\":\"捕获列表变量时怎么来的？值拷贝？存储地址？这是一问题。\"},\"2124\":{\"t\":\"注意点：闭包捕获的变量要在闭包函数和外层函数中表现一致。\"},\"2125\":{\"t\":\"如果是值拷贝，就无法保证闭包捕获的变量要在闭包函数和外层函数中表现一致，所以编译器对捕获变量的不同情况做出不同的处理。请记住：无论做什么处理，只有一个目的：闭包捕获的变量要在闭包函数和外层函数中表现一致。\"},\"2126\":{\"t\":\"捕获变量进行初始化赋值，就没有再次修改了\"},\"2127\":{\"t\":\"捕获变量初始化赋值，还被修改过。 \"},\"2128\":{\"t\":\"捕获变量是局部变量\"},\"2129\":{\"t\":\"捕获变量是参数\"},\"2130\":{\"t\":\"捕获变量是返回值\"},\"2131\":{\"t\":\"初始化赋值，不再修改\"},\"2132\":{\"t\":\"func create() func(){ c := 2 return func(){ fmt.Println(c) } } func main(){ f1 := create() f2 := create() f1() f2() } \"},\"2133\":{\"t\":\"他的捕获变量初始化赋值后，之后再也没有修改了，那么这个捕获变量就直接拷贝值，然后放到 funcval 结构体后面。\"},\"2134\":{\"t\":\"捕获局部变量\"},\"2135\":{\"t\":\"func create() (fs [2]func()){ for i := 0; i < 2; i++ { fs[i] = func(){ fmt.Println(i) } } return } func main() { fs := create() for i := 0; i < len(fs); i++ { fs[i]() } } \"},\"2136\":{\"t\":\"在这个例子中，捕获变量是局部变量 i，经过初始化赋值后，还被修改过。这个局部变量会被改为堆分配。\"},\"2137\":{\"t\":\"流程如下：\"},\"2138\":{\"t\":\"在 create 函数栈帧中，局部变量 i 被闭包捕获，因为后续会更改，所以就会被分配到堆上，在栈上的局部变量空间会存储他在堆上的地址，for 循环还没有开始，i 等于 0。\"},\"2139\":{\"t\":\"第一次 for 循环，就会在堆上创建一个 funcval 结构体，指向闭包函数入口，同时后面是捕获变量 i 的地址。i 自增加一，注：create 函数与闭包函数 共用一个堆。\"},\"2140\":{\"t\":\"第二次 for 循环，操作同上\"},\"2141\":{\"t\":\"返回值空间分别是两次创建的 funcval 结构体的地址 addr1,addr2。\"},\"2142\":{\"t\":\"fs 的变量空间分别被返回值进行赋值\"},\"2143\":{\"t\":\"通过多次地址指向，执行 fs 空间对应的函数，此时输出的 i 的值就是分配到堆上捕获变量 i 的值。所以只会输出 2。\"},\"2144\":{\"t\":\"上面的流程的目的只有一个：闭包捕获的变量要在闭包函数和外层函数中表现一致。\"},\"2145\":{\"t\":\"图片\"},\"2146\":{\"t\":\"捕获参数\"},\"2147\":{\"t\":\"如果是参数被捕获，那么调用者依然从栈上传递参数，但是被调用函数会把它拷贝到堆上一份，然后和闭包函数都使用堆上分配的那一个。方式与捕获局部变量一致。\"},\"2148\":{\"t\":\"捕获返回值\"},\"2149\":{\"t\":\"如果是返回值被捕获，那么处理方式就又有些不同了。返回值空间依然由调用者在栈上分配，但是被调用函数（闭包的外层函数）会在堆上也分配一个，并且与闭包函数都使用堆上这一个。但是，在外层函数返回前要把堆上的返回值拷贝到栈上那一个。\"},\"2150\":{\"t\":\"图片\"},\"2151\":{\"t\":\"注：闭包对于捕获变量所有的操作，目的只有一个：闭包捕获的变量要在闭包函数和外层函数中表现一致。\"},\"2152\":{\"c\":[\"语言基础\",\"go\"]},\"2153\":{\"h\":\"方法\"},\"2154\":{\"t\":\"参考阅读：【Golang】方法 Method\"},\"2155\":{\"h\":\"介绍\",\"a\":\"介绍\"},\"2156\":{\"t\":\"方法即 Method，只要你接触过面对对象思想的语言，都会了解。Go 语言支持为任意类型实现方法。\"},\"2157\":{\"t\":\"举个例子🌰：\"},\"2158\":{\"t\":\"type A struct { name string } func (a A) Name() string { a.name = \\\"Hi! \\\" + a.name return a.name } func main() { a := A{name: \\\"eggo\\\"} // 1）编译器的语法糖，提供面向对象的语法 fmt.Println(a.Name())//Hi! eggo // 2）更贴近真实实现的写法，和普通函数调用几乎没什么不同 fmt.Println(A.Name(a))//Hi! eggo } \"},\"2159\":{\"t\":\"上面有两种写法，都能顺利通过编译并且执行，实际上这两种写法会生成同样的机器码。\"},\"2160\":{\"t\":\"第一种：a.Name()，比较常规，方便。这是一种语法糖。\"},\"2161\":{\"t\":\"第二种：A.Name(a)，是一种比较严谨写法的，更贴近于原始。\"},\"2162\":{\"t\":\"这两者是等价的，编译器会识别第一种，然后帮我们把第一种转变成第二种。以下是证据：\"},\"2163\":{\"t\":\"type A struct { name string } func (a A) Name() string { a.name = \\\"Hi! \\\" + a.name return a.name } func Name(a A) string { a.name = \\\"Hi! \\\" + a.name return a.name } func main() { t1 := reflect.TypeOf(A.Name) t2 := reflect.TypeOf(Name) // 会输出true，通过反射来验证，两者的类型是相同的 fmt.Println(t1 == t2)//true } \"},\"2164\":{\"t\":\"输出 True，代表两者类型一致。我们可以发现第二种方式将类型为 A 的变量 a，作为函数第一个参数引入，其余的部分都没有发生改变。说明：方法本质上其实一个普通的函数，只不过会将定义的变量 a 作为一个参数（隐含）。\"},\"2165\":{\"h\":\"值接收者\",\"a\":\"值接收者\"},\"2166\":{\"t\":\"type A struct { name string } func (a A) Name() string { a.name = \\\"Hi! \\\" + a.name return a.name } func main() { a := A{name: \\\"eggo\\\"} // 1）编译器的语法糖，提供面向对象的语法 fmt.Println(a.Name())//Hi! eggo // 2）更贴近真实实现的写法，和普通函数调用几乎没什么不同 fmt.Println(A.Name(a))//Hi! eggo fmt.Println(a.name)//eggo } \"},\"2167\":{\"t\":\"既然和普通函数一致，那么我们分析一下他 a.Name() 的函数调用栈。\"},\"2168\":{\"t\":\"main 函数栈帧局部变量为 a 类型 A，有一个 string 类型的成员，所以他的数据会被放到数据段，在局部变量则是地址，a.Name() 会被编译器转化为 A.Name(a) 这样的函数调用。所以参数是 a，会值拷贝到参数空间。\"},\"2169\":{\"t\":\"当函数 A.Name(a) 执行时候，改变的是参数空间 a 的 string 成员 name，那么数据段会重新建立一个字符串，将 name 的地址指向这个新的字符串。然后值拷贝成员到返回值空间。所以会输出 Hi! eggo 。\"},\"2170\":{\"t\":\"但是局部变量 a 并没有发生改变。因为作为值接收者去调用方法，传参都是值拷贝，改变的是参数 a，而不是局部变量 a。如果你想改变值，需要利用指针接收者。\"},\"2171\":{\"h\":\"指针接收者\",\"a\":\"指针接收者\"},\"2172\":{\"t\":\"type A struct { name string } func (pa *A) Name() string { pa.name = \\\"Hi! \\\" + pa.name return pa.name } func main() { a := A{name: \\\"eggo\\\"} pa := &a //注：这里函数调用了两次所以是两个 Hi！。 fmt.Println(pa.Name()) //Hi! eggo fmt.Println((*A).Name(pa))//Hi! Hi! eggo fmt.Println(pa.name)//Hi! Hi! eggo } \"},\"2173\":{\"t\":\"现在是指针接收者，那么函数调用栈又会是怎么样的呢？\"},\"2174\":{\"t\":\"main 函数调用栈有两个局部变量分别是 a,pa。pa 是存储变量 a 的地址。pa.Name() 会由编译器转换为(*A).Name(pa) 函数调用，所以参数空间拷贝参数 pa 的值，也就是局部变量 a 的地址。\"},\"2175\":{\"t\":\"当函数 (*A).Name(pa) 执行时候，会新建一个字符串，然后参数 &a 的 string 类型成员会重新指向这个新的字符串，然后值拷贝 string 类型的成员到返回值空间，所以会输出 Hi! eggo。\"},\"2176\":{\"t\":\"因为参数拷贝的是 pa 也就是 a的地址，所以会这里会改变 a 的 string 类型成员地址指向的 string 结构体的值。\"},\"2177\":{\"h\":\"语法糖\",\"a\":\"语法糖\"},\"2178\":{\"t\":\"type A struct { name string } func (a A) GetName() string { return a.name } func (pa *A) SetName() string { pa.name = \\\"Hi! \\\" + pa.name return pa.name } func main() { a := A{name: \\\"eggo\\\"} pa := &a fmt.Println(pa.GetName())//eggo fmt.Println(a.SetName())//Hi! eggo fmt.Println(a.name)//Hi! eggo } \"},\"2179\":{\"t\":\"有没有感觉调用的很奇怪！调用者和方法都不太搭！\"},\"2180\":{\"t\":\"这里是语法糖，编译期间，会把 pa.GetName() 这种方法调用转换成 (*pa).GetName()，也就等价于执行 A.GetName(*pa)。而 a.SetName() 会被转换成 (&a).SetName()，也相当于执行(*A).SetName(&a)。\"},\"2181\":{\"t\":\"但是这种语法糖不能用于字面量。\"},\"2182\":{\"t\":\"fmt.Println((A{name: \\\"eggo\\\"}).SetName()) //报错：Cannot call a pointer method on '(A{name: \\\"eggo\\\"})' \"},\"2183\":{\"t\":\"这样是拿不到字面量的地址的，所以转化成指针接收者调用。\"},\"2184\":{\"t\":\"fmt.Println((A{name: \\\"eggo\\\"}).GetName())//不会报错，这里使用的是值接收者。 \"},\"2185\":{\"h\":\"方法的 Function value\",\"a\":\"方法的-function-value\"},\"2186\":{\"t\":\"Go语言中函数作为变量、参数和返回值时，都是以 Function Value 的形式存在的。也知道闭包只是有捕获列表(catch list)的 Funtion Value 而已。\"},\"2187\":{\"t\":\"方法表达式\"},\"2188\":{\"t\":\"type A struct { name string } func (a A) GetName() string { return a.name } func main(){ a := A{name:\\\"eggo\\\"} f1 := A.GetName //方法表达式 fmt.Println(f1(a)) //eggo f2 := a.GetName //方法变量 fmt.Println(f2()) //eggo } \"},\"2189\":{\"t\":\"如果像 f1 这样，把一个类型的方法赋值给他，这样的变量就被称为**“方法表达式”**。其实你可以这样理解：f1 被赋值的是类型 A 的函数，这个函数使用方法 A.Name(a)。所以 f1 的调用方式是传入一个 A 类型变量 a。\"},\"2190\":{\"t\":\"你可以当作在使用 A.Name(a A) 这个函数。\"},\"2191\":{\"t\":\"图片\"},\"2192\":{\"t\":\"方法变量\"},\"2193\":{\"t\":\"像 f2 这样，通过 a.GetName 进行赋值，这样的变量被称为**“方法变量”**。通过方法变量执行方法时，我们无需再传入方法接收者作为第一个参数，这是因为编译器替我们做了处理，相当于 f2()==A.Name(a)。\"},\"2194\":{\"t\":\"作为返回值\"},\"2195\":{\"t\":\"type A struct { name string } func (a A) GetName() string { return a.name } func GetFunc() func() string { a := A{name: \\\"eggo in GetFunc\\\"} return a.GetName } //等价于 /* func GetFunc() func() string { a := A{name: \\\"eggo in GetFunc\\\"} return func() string { return a.GetName() } } */ //进而等价于 /* func GetFunc() func() string { a := A{name: \\\"eggo in GetFunc\\\"} return func() string { return A.GetName(a) } } */ func main() { a := A{name: \\\"eggo in main\\\"} f2 := a.GetName fmt.Println(f2()) //这里输出：eggo in main f3 := GetFunc() fmt.Println(f3()) //这里输出：eggo in GetFunc } \"},\"2196\":{\"t\":\"我们可以发现多次等价后，发现变量 a 是捕获变量，f3 是闭包对象。f2 这个方法变量，使用的是 main 函数的局部变量 a。这样就很好理解上面这段示例程序的输出结果了。\"},\"2197\":{\"t\":\"图片\"},\"2198\":{\"c\":[\"语言基础\",\"go\"]},\"2199\":{\"h\":\"反射\"},\"2200\":{\"t\":\"推荐学习：【Golang】图解反射\"},\"2201\":{\"h\":\"前言\",\"a\":\"前言\"},\"2202\":{\"t\":\"用到反射的场景不多，一般是变量类型不确定，内部结构不明朗的情况，反正我现在一次都没有用过，但是不妨碍我们来看看底层到底是怎么回事。\"},\"2203\":{\"t\":\"reflect 有两个核心类型：reflect.Type 和 reflect.Value。他们撑起了反射功能的基本框架。\"},\"2204\":{\"h\":\"Type\",\"a\":\"type\"},\"2205\":{\"t\":\"reflect.Type 是一个接口类型，定义了一系列方法获取类型各方面的信息。\"},\"2206\":{\"t\":\"type Type interface { Align() int //对齐边界 FieldAlign() int //作为结构体字段的对齐边界 Method(int) Method //获取方法数组中第i个Method MethodByName(string) (Method, bool) //按照名称查找方法 NumMethod() int //方法列表中可导出方法的数目 Name() string //类型名称 PkgPath() string //包路径 Size() uintptr //该类型变量占用字节数 String() string //获取类型的字符串表示 Kind() Kind //类型对应的reflect.Kind Implements(u Type) bool //该类型是否实现了接口u AssignableTo(u Type) bool //是否可以赋值给类型u ConvertibleTo(u Type) bool //是否可转换为类型u Comparable() bool //是否可比较 //只能应用于某些Kind的方法 //Int*, Uint*, Float*, Complex*: Bits() int //Array,Ptr,Slice,Map: Elem() Type //Array Len() int //Chan:ChanDir, Elem ChanDir() ChanDir //Func: In(i int) Type NumIn() int Out(i int) Type NumOut() int IsVariadic() bool //Map: Key() Type //Struct: Field(i int) StructField FieldByIndex(index []int) StructField FieldByName(name string) (StructField, bool) FieldByNameFunc(match func(string) bool) (StructField, bool) NumField() int common() *rtype uncommon() *uncommonType } \"},\"2207\":{\"t\":\"我们通常会用 reflect.TypeOf 这个函数去拿到 reflect.Type 类型的返回值、\"},\"2208\":{\"t\":\"// TypeOf 返回表示 i 的动态类型的反射类型。如果 i 是一个 nil 接口值，则 TypeOf 返回 nil。 func TypeOf(i interface{}) Type { eface := *(*emptyInterface)(unsafe.Pointer(&i)) return toType(eface.typ) } \"},\"2209\":{\"t\":\"举个例子🌰：\"},\"2210\":{\"t\":\" a:=\\\"eggo\\\" t:=reflect.TypeOf(a) fmt.Println(t.Name()) \"},\"2211\":{\"t\":\"我们要反射 int 类型的变量 a。\"},\"2212\":{\"t\":\"我们依旧从函数调用栈开始分析，main 函数栈帧中有两个局部变量 t 与 a，然后是返回值空间，最后是参数。我们知道 Go 语言中参数都是值拷贝。难道这里参数是拷贝变量 a 的值吗？不行，TypeOf 函数的参数类型是空接口。\"},\"2213\":{\"t\":\"type eface struct { _type *_type //指向接口的动态类型元数据 data unsafe.Pointer //指向接口的动态值。 } \"},\"2214\":{\"t\":\"_type 字段接受的是 a 的动态类型，data 接受的是 a 的地址。\"},\"2215\":{\"t\":\"拷贝不了值，那拷贝变量 a 的地址？也不行，因为这样并不符合Go 语言中传参值拷贝的语义，无论对参数做怎么样的修改，都不能作用到局部变量。\"},\"2216\":{\"t\":\"**既然拷贝不了值，也不能拷贝值，那应该怎么办？**实际上在编译阶段会增加一个临时变量作为 a 的拷贝值（copy of a），再把这个临时变量的地址传递给函数使用，这样无论函数对参数做怎么样的修改，都不会作用到局部变量 a。既满足了空接口类型的参数也符合传参值拷贝的语义。\"},\"2217\":{\"t\":\"图片\"},\"2218\":{\"t\":\"当参数是空接口情况，都是通过传递拷贝后变量的地址来实现传值的语义。\"},\"2219\":{\"t\":\"接下来，reflect.TypeOf 函数会把 runtime.eface 类型的参数 i 转化成 reflect.emptInterface 类型并赋给变量 eface，转换以后方便 reflect 包操作内部元素。\"},\"2220\":{\"t\":\"// emptyInterface 是 interface{} 值的标头。 type emptyInterface struct { typ *rtype //string word unsafe.Pointer //->i.data } \"},\"2221\":{\"t\":\"因为 *rtype 实现了 reflect.Type 接口，TypeOf 函数要做的就是把 eface 的 typ 字段取出来，包装成 reflect.Type 类型的返回值就可以了，那么这就是 toType 函数干的活\"},\"2222\":{\"t\":\"func toType(t *rtype) Type { if t == nil { return nil } return t } //上面的代码可以等价于 var ret reflect.Type ret = eface.typ \"},\"2223\":{\"t\":\"reflect.Type 既然是一个非空接口，那么他的结构如下：\"},\"2224\":{\"t\":\"type iface struct { tab *itab data unsafe.Pointer //接口的动态值 ->eface.typ } //itab type itab struct { inter *interfacetype //接口的类型元数据 ->reflect.Type _type *_type //指向接口的动态类型元数据 ->*rtype hash uint32 //itab._type中拷贝来的，类型哈希值 _ [4]byte fun [1]uintptr //动态类型实现的接口要求方法地址 } \"},\"2225\":{\"t\":\"那么最后返回值的结构就与 iface 结构差不多，tab 指向 <reflect.Type，*rtype> 对应的 itab 指针，data 则是变量 a 的地址。\"},\"2226\":{\"t\":\"接下来通过非空接口类型 t 去调用各种方法都会去 string 类型查找相关数据。\"},\"2227\":{\"h\":\"Value\",\"a\":\"value\"},\"2228\":{\"t\":\"reflect.Value 是一个结构体类型。\"},\"2229\":{\"t\":\"type Value struct { typ *rtype //存储反射变量的类型元数据指针 ptr unsafe.Pointer //存储数据地址 flag //是一个位标识符，存储反射变量值的一些描述信息，例如类型掩码，是否为指针，是否为方法，是否只读等等 } \"},\"2230\":{\"t\":\"我们来看看反射是如何更新变量值的！\"},\"2231\":{\"t\":\"举个例子🌰：\"},\"2232\":{\"t\":\" a := \\\"eggo\\\" v := reflect.ValueOf(a) v.SetString(\\\"new eggo\\\") println(a) //panic: reflect: reflect.Value.SetString using unaddressable value \"},\"2233\":{\"t\":\"我们来看看 reflect.ValueOf 函数是怎么样的！\"},\"2234\":{\"t\":\"func ValueOf(i interface{}) Value { if i == nil { return Value{} } escapes(i) return unpackEface(i) } func escapes(x interface{}) { if dummy.b { dummy.x = x } } \"},\"2235\":{\"t\":\"他的参数是空接口类型，所以接受的参数数据是变量 a 的拷贝值地址。\"},\"2236\":{\"t\":\"type eface struct { _type *_type //指向接口的动态类型元数据 ->stringtype data unsafe.Pointer //指向接口的动态值。 ->&(copy of a) } \"},\"2237\":{\"t\":\"根据代码注释，escapes 函数会把参数 i 指向得变量（变量 a 得拷贝值 copy of a）逃逸到堆上，那么栈上只会留下他（copy of a）的地址。\"},\"2238\":{\"t\":\"图片\"},\"2239\":{\"t\":\"func unpackEface(i interface{}) Value { e := (*emptyInterface)(unsafe.Pointer(&i)) // NOTE: don't read e.word until we know whether it is really a pointer or not. t := e.typ if t == nil { return Value{} } f := flag(t.Kind()) if ifaceIndir(t) { f |= flagIndir } return Value{t, e.word, f} } \"},\"2240\":{\"t\":\"简单看这个函数逻辑。ValueOf 函数的返回值是 reflect.Value 类型，返回值结构如下：\"},\"2241\":{\"t\":\"type Value struct { typ *rtype //存储反射变量的类型元数据指针 ->就是参数的 _type ptr unsafe.Pointer //存储数据地址 ->&(copy of a) 根据 unpackEface 来看它来自于 emptyInterface.word 再往前看 其实来自于 参数的 data 字段 flag //是一个位标识符，存储反射变量值的一些描述信息，例如类型掩码，是否为指针，是否为方法，是否只读等等 } \"},\"2242\":{\"t\":\"这个返回值会被赋值给局部变量 v，调用 SetString 。\"},\"2243\":{\"t\":\"func (v Value) SetString(x string) { v.mustBeAssignable() v.mustBe(String) *(*string)(v.ptr) = x } \"},\"2244\":{\"t\":\"SetString 函数会用到 Value 类型的 ptr 字段。但是经过返回值赋值局部变量 v 他的字段 ptr 好像指向的是 &(copy of a)，这是临时变量的地址，不能修改的。所以就会报错。\"},\"2245\":{\"t\":\"因为修改这样一个连用户都不知道的临时变量是没有任何意义，同时我们的本意是要修改局部变量 a，所以就会发生 panic。\"},\"2246\":{\"t\":\"panic: reflect: reflect.Value.SetString using unaddressable value \"},\"2247\":{\"t\":\"好像这样子去修改不符合要求啊！\"},\"2248\":{\"t\":\"我们回忆一下，为什么会发生 panic？我们从后面一步一步理一下，失败原因。\"},\"2249\":{\"t\":\"v 的字段 ptr 指向是 &(copy of a)\"},\"2250\":{\"t\":\"为什么会有这个 &(copy of a)？因为传参传的是局部变量 a，为了满足语义。\"},\"2251\":{\"t\":\"我们现在明白了，要想去修改变量 a，需要反射 a 的指针，只有这样 ptr 才会指向 &a。\"},\"2252\":{\"t\":\"举个例子🌰：\"},\"2253\":{\"t\":\"func main() { a := \\\"eggo\\\" v := reflect.ValueOf(&a) v.Elem().SetString(\\\"new eggo\\\") println(a) } \"},\"2254\":{\"t\":\"这里传参依旧是值拷贝，这次拷贝 a 的地址，escapes 会将参数指向的变量 a 逃逸到堆上，那么栈上只存他的地址 &a。\"},\"2255\":{\"t\":\"图片\"},\"2256\":{\"t\":\"剩余的部分与上面那个例子类似，就不过多的描述了，我们来看看不同的地方。\"},\"2257\":{\"t\":\"通过调用 v.Elem() 方法然后，再调用的的 SetString 方法就可以修改原来的变量 a了。\"},\"2258\":{\"t\":\"为什么一定要先调用 Elem 拿到 ptr 再去修改值呢？\"},\"2259\":{\"t\":\"这个暂时不知道\"},\"2260\":{\"t\":\"func (v Value) Elem() Value { k := v.kind() switch k { case Interface: var eface interface{} if v.typ.NumMethod() == 0 { eface = *(*interface{})(v.ptr) } else { eface = (interface{})(*(*interface { M() })(v.ptr)) } x := unpackEface(eface) if x.flag != 0 { x.flag |= v.flag.ro() } return x case Ptr: ptr := v.ptr if v.flag&flagIndir != 0 { ptr = *(*unsafe.Pointer)(ptr) } // The returned value's address is v's value. if ptr == nil { return Value{} } tt := (*ptrType)(unsafe.Pointer(v.typ)) typ := tt.elem fl := v.flag&flagRO | flagIndir | flagAddr fl |= flag(typ.Kind()) return Value{typ, ptr, fl} } panic(&ValueError{\\\"reflect.Value.Elem\\\", v.kind()}) } \"},\"2261\":{\"t\":\"func (v Value) SetString(x string) { v.mustBeAssignable() v.mustBe(String) *(*string)(v.ptr) = x } \"},\"2262\":{\"c\":[\"语言基础\",\"go\"]},\"2263\":{\"h\":\"函数调用栈\"},\"2264\":{\"t\":\"我们按照编程语言的语法定义的函数，会被编译器编译为一堆堆机器指令，写入可执行文件。程序执行时可执行文件被加载到内存，这些机器指令对应到虚拟地址空间中，位于代码段。\"},\"2265\":{\"t\":\"如果在一个函数中调用另一个函数，编译器就会对应生成一条call指令，程序执行到这条指令时，就会跳转到被调用函数入口处开始执行，而每个函数的最后都有一条ret指令，负责在函数结束后跳回到调用处，继续执行。（如果学过微机原理，你可以懂得指令的含义）\"},\"2266\":{\"h\":\"函数栈帧\",\"a\":\"函数栈帧\"},\"2267\":{\"t\":\"函数执行时候，需要有足够的内存空间，供他存放局部变量，参数等数据，这段空间对应到虚拟地址空间的栈。\"},\"2268\":{\"t\":\"分配给函数的栈空间被称为函数栈帧，Go 语言中函数栈帧布局是如下的，先是调用者栈基地址，然后是函数的局部变量，最后是被调用函数的返回值和参数。\"},\"2269\":{\"t\":\"image-20211123203550591\"},\"2270\":{\"t\":\"注： bp 栈基不一定存在，在有些情况下会被优化掉，也有可能是平台不支持。我们只关注局部变量，返回值的相对位置就好了。\"},\"2271\":{\"t\":\"举个例子：\"},\"2272\":{\"t\":\"func A() { var a1, a2, r1, r2 int64 a1, a2 = 1, 2 r1, r2 = B(a1, a2) r1 = C(a1) println(r1, r2) } func B(p1, p2 int64) (int64, int64) { return p2, p1 } func C(p1 int64) int64 { return p1 } \"},\"2273\":{\"t\":\"函数 A 的栈帧分布就由上至下，分别是局部变量 a1, a2, r1, r2 ，被调函数 B 的返回值 r2,r1 ，被调用函数 B 的参数 a2,a1。\"},\"2274\":{\"t\":\"注意观察参数的顺序，返回值和参数都是先入栈的第二个，然后再入栈的第一个，相当于是从右至左逐一入栈的。\"},\"2275\":{\"t\":\"被调用函数是通过栈指针加上偏移量这样相对寻址的方式来定位自己的参数和返回值，刚好由下至上先找到第一个参数在找到第二个参数（通过增加偏移量的方式）。所以说参数和返回值采用由右至左的入栈顺序比较合适。\"},\"2276\":{\"t\":\"通常，我们认为返回值是通过寄存器传递的，但是 Go 语言支持多返回值，所以在栈上分配返回值空间更合适\"},\"2277\":{\"t\":\"所有的函数的栈帧布局都会遵循统一的约定。\"},\"2278\":{\"t\":\"对于函数 B 的调用会被编译器编译成 Call 指令。Call 指令只做两件事情。\"},\"2279\":{\"t\":\"将下一条指令的地址入栈，被调用函数结束后，跳回到该地址继续执行，这就是返回地址\"},\"2280\":{\"t\":\"跳转到被调用函数的指令入口处执行，所以返回地址下面就是函数 B 的栈帧。\"},\"2281\":{\"t\":\"其余的部分会按照 A 函数布局一样布局。\"},\"2282\":{\"t\":\"当函数 B 执行结束后会释放栈帧，然后就到 Ret 指令了，Ret 指令也会干两件事。\"},\"2283\":{\"t\":\"弹出Call 指令压栈的返回地址\"},\"2284\":{\"t\":\"跳转到返回地址\"},\"2285\":{\"t\":\"函数通过 Call 指令实现跳转，每个函数会分配栈帧，结束前就会释放自己的栈帧，Ret 指令就会将栈恢复到 Call 之前的样子。\"},\"2286\":{\"t\":\"那么函数 C 就是重复函数 B 的行为。\"},\"2287\":{\"t\":\"image-20211123205624277\"},\"2288\":{\"t\":\"在 Go 语言中，函数栈帧是一次性分配的，也就是在函数开始执行时候分配足够大的栈帧空间。\"},\"2289\":{\"t\":\"一次性分配函数栈帧的主要原因是避免栈访问越界。如下图所示，三个 goroutine 初始化分配的栈空间是一样的。如果 g2 剩余的栈空间不够执行接下来的函数，如果选择逐步扩张，那么执行期间就会发生栈访问越界的情况。\"},\"2290\":{\"t\":\"image-20211123210314416\"},\"2291\":{\"t\":\"其实对于栈消耗较大的函数，Go 语言编译器会在函数头部插入检测代码，如果发现需要栈增长，就会另外分配一个足够大的栈空间，将原来栈上的数据都拷过来，原来的空间就会被释放。\"},\"2292\":{\"h\":\"传参\",\"a\":\"传参\"},\"2293\":{\"t\":\"我们在学习 C 语言时候相信也会遇到一个问题 Swap 为什么传参就无法交换变量，而交换指针时候却可以了。我会有很多解决，例如：实参和形参不在同一个地址，改变形参不会影响到实参。现在我们通过函数调用栈，来看看为什么会失败？传指针为什么会成功？\"},\"2294\":{\"t\":\"//值传递 func swap(a,b int) { a,b = b,a } func main() { a,b := 1,2 swap(a,b) println(a,b) //1,2 } \"},\"2295\":{\"t\":\"首先分析 main 函数的函数调用栈。\"},\"2296\":{\"t\":\"在 main 函数栈帧中，先分配局部变量存储空间 a=1,b=2。接下来时被调用函数的返回值，但是 Swap 函数并没有返回值，所以这里就没有，接下来时被调用函数传入的参数 b,a 。在 Go 语言中传参都是值拷贝，拷贝整型变量值。注意：参数入栈顺序！如下图所示。\"},\"2297\":{\"t\":\"image-20211124160403622\"},\"2298\":{\"t\":\"调用者栈帧（sp of main）后面就是 Call 指令存入的返回地址，接下来就是 Swap 函数开始执行。再下面分配的就是 Swap 函数栈帧。接下来就是常规的函数栈帧的分配问题。我们聚焦于代码。\"},\"2299\":{\"t\":\"当 Swap 函数执行这一段交换代码时候a,b = b,a ，要交换两个参数的值，他的参数通过相对寻址找到了，但是交换的是 main 函数栈帧里面的参数空间的 a 与 b ，现在我们想要交换的是局部变量里面的 a 与 b ，而参数空间与局部变量空间并没有关联，这就是他失败的原因。\"},\"2300\":{\"t\":\"//指针传递 func swap(a,b *int) { *a,*b = *b,*a } func main() { a,b := 1,2 swap(&a,&b) println(a,b) //2,1 } \"},\"2301\":{\"t\":\"在 main 函数栈帧中，先分配局部变量，然后在分配参数空间，这里因为参数是指针类型，注意：参数是 int 的指针类型，而不是 int 类型了。传参是值拷贝，所以这里会拷贝 a 和 b 的地址。从右至左入栈。接下来就是返回地址以及 Swap 函数栈帧了。\"},\"2302\":{\"t\":\"image-20211124163255158\"},\"2303\":{\"t\":\"Swap 函数中这一段 *a,*b = *b,*a，交换的是 a 的地址与 b 的地址对应的值。那么回到 main 函数局部变量空间的 a 的地址对应的值就变成了 2。\"},\"2304\":{\"t\":\"在这里他依旧是值的交换，只不过他交换的是 a 和 b 对应地址的值，地址没有发生改变。\"},\"2305\":{\"t\":\"image-20211124163347572\"},\"2306\":{\"h\":\"返回值\",\"a\":\"返回值\"},\"2307\":{\"t\":\"通常，我们认为返回值是通过寄存器传递的，但是 Go 语言支持多返回值，所以在栈上分配返回值空间更合适\"},\"2308\":{\"t\":\"我们先看一个例子：\"},\"2309\":{\"t\":\"func incr(a int) int { var b int defer func(){ a++ b++ }() a++ b = a return b } func main(){ var a,b int b = incr(a) println(a,b) //0,1 } \"},\"2310\":{\"t\":\"我们先进行分析，main 函数栈帧，先是局部变量 a,b 接着是被调用函数 incr 的返回值，然后是被调用函数的参数 a，以及返回地址与 incr 函数栈帧。\"},\"2311\":{\"t\":\"image-20211124170446035\"},\"2312\":{\"t\":\"进入到 incr 函数里面，会执行参数 a 的自增加一，然后是局部变量 b 的赋值。现在有一个问题：到底是先返回值还是先执行 defer 函数？\"},\"2313\":{\"t\":\"答案：先返回值！\"},\"2314\":{\"t\":\"image-20211124170542833\"},\"2315\":{\"t\":\"先会将 incr 函数局部变量中间的 b 的值经过值拷贝到 main 函数的返回值空间，然后再执行 defer 函数。defer 函数将 incr 函数的参数 a 和局部变量 b 进行自增。之后就 incr 结束。\"},\"2316\":{\"t\":\"image-20211124171454627\"},\"2317\":{\"t\":\"main 函数返回值空间的值会通过值拷贝赋值给局部变量中的 b。所以输出分别为 0 和 1。\"},\"2318\":{\"t\":\"image-20211124171504432\"},\"2319\":{\"t\":\"再看下一个例子，这里的局部变量b改成命名返回值，看看有什么不同。\"},\"2320\":{\"t\":\"func incr(a int) (b int) { defer func(){ a++ b++ }() a++ return a } func main(){ var a,b int b = incr(a) println(a,b) //0,2 } \"},\"2321\":{\"t\":\"我们将注意力聚焦到 incr 函数中，我们之前说过会先进行返回值赋值然后去执行 defer 函数，所以这里会先将 参数 a 的值赋值到返回值空间中的 b 上，现在 b=1，开始执行 defer 里面的函数，参数 a 自增，返回值 b 也会自增加一。现在 incr 的返回值 b=2，那么此时 main 函数的返回值空间 b 也会是 2。\"},\"2322\":{\"t\":\"我们先来理一下思路：\"},\"2323\":{\"t\":\"第一种我们所讲的就是匿名返回值，我们只定义了返回值的类型，没有去给他命名。defer 函数的后续操作都是在 incr 函数里面的局部变量和 main 函数的参数空间进行改变。好像并没有改变 main 的返回值空间的变量。\"},\"2324\":{\"t\":\"第二种我们所讲的是命名返回值，在执行 return a 的时候，相当于此时进行一个 b=a 的一段代码。所以在没有执行 defer 函数之前 b=1，此时的 main 返回值空间 b=1，我们可以看到 defer 语句改变了我们返回值空间的变量。\"},\"2325\":{\"t\":\"此时我们可以猜测，如果我们给被调用函数早就命名好了返回值，相当于我们当前函数的返回值空间的已经多了一个命名好的变量，如果没有 defer 函数，此时情况与正常使用无异，但是如果有，此时 defer 就会去改变此时调用者函数返回值空间的变量。此时被调用函数的命名返回值的地址与调用者函数返回值地址一致。\"},\"2326\":{\"h\":\"参考文章\",\"a\":\"参考文章\"},\"2327\":{\"t\":\"【Golang】图解函数调用栈\"},\"2328\":{\"c\":[\"语言基础\",\"go\"]},\"2329\":{\"h\":\"defer\"},\"2330\":{\"t\":\"推荐阅读：【Golang】脱胎换骨的defer\"},\"2331\":{\"h\":\"如何延迟，因何倒序\",\"a\":\"如何延迟-因何倒序\"},\"2332\":{\"t\":\"当你开发时候，我们都会去用 defer 去关闭一个打开的文件，释放 Mysql/Redis 连接，或者解锁一个 Mutex。Go 语言的 defer 是一个很方便的机制，能够把某些函数调用推迟到当前函数返回前才实际执行。而且Go 语言在设计上保证，即使发生 panic ，所有的 defer 调用也能够被执行。不过多个 defer 函数是按照定义顺序倒序执行的。\"},\"2333\":{\"t\":\"func f1() { defer A() fmt.Println(1) } func A() { fmt.Println(2) } func main() { fmt.Println(0) f1() } /* 0 1 2 */ \"},\"2334\":{\"t\":\"我们先来看看为什么 defer 会延时执行。\"},\"2335\":{\"t\":\"func f1() { defer A() fmt.Println(1) } \"},\"2336\":{\"t\":\"像上面的代码，在 Go1.12 编译后的伪指令是这样的：\"},\"2337\":{\"t\":\" func f1() { r := runtime.deferproc(0, A) // 经过recover返回时r为1，否则为0 if r > 0 { goto ret } fmt.Println(1) runtime.deferreturn()//调用 return ret: runtime.deferreturn() } \"},\"2338\":{\"t\":\"如何延迟\"},\"2339\":{\"t\":\"我们可以发现与 defer 指令相关的有两个部分。\"},\"2340\":{\"t\":\"第一部分是 deferproc，他负责保存要执行的函数信息，我们称之为defer**“注册”**。\"},\"2341\":{\"t\":\"func deferproc(siz int32, fn *funcval) \"},\"2342\":{\"t\":\"deferproc 有两个参数，第一个参数是被注册的 defer 函数的参数加返回值占多少字节。这里没有参数与返回值所以为 0。第二个参数是一个 runtime.funcval 结构体的指针，指向函数入口。\"},\"2343\":{\"t\":\"第二部分是 deferreturn，它被编译器被插入到了函数返回前进行调用。负责执行已经注册的 defer 函数。这也是为什么 defer 函数能够延迟执行的原因。先注册后调用。\"},\"2344\":{\"t\":\"因何倒序\"},\"2345\":{\"t\":\"defer 注册信息会保存到 defer 链表。主函数运行会自动启一个 goroutine，在运行时都对应一个 runtime.g 结构体，其中有一个 _defer 字段，保存的就是 defer 链表的头指针。\"},\"2346\":{\"t\":\"deferproc 新注册的 defer 函数信息会添加到链表头部。deferreturn 执行时候也从链表头开始，所以defer 函数才会表现为倒序执行。如下图所示：\"},\"2347\":{\"t\":\"图片\"},\"2348\":{\"h\":\"defer 信息\",\"a\":\"defer-信息\"},\"2349\":{\"t\":\"defer 连接的是 _defer 结构体。\"},\"2350\":{\"t\":\"type _defer struct { siz int32 //deferproc第一个参数传入，就是defer函数参数加返回值的总大小。 started bool //标识defer函数是否已经开始执行； sp uintptr // sp at time of defer 就是注册defer函数的函数栈指针； pc uintptr //是deferproc函数返回后要继续执行的指令地址； fn *funcval //由deferproc的第二个参数传入，也就是被注册的defer函数； _panic *_panic // panic that is running defer 是触发defer函数执行的panic指针，正常流程执行defer时它就是nil； link *_defer //自然是链到之前注册的那个_defer结构体。 } //参数和返回值这段空间会直接分配在_defer结构体后面，用于在注册时保存给defer函数传入的参数，并在执行时直接拷贝到defer函数的调用者栈上。 \"},\"2351\":{\"h\":\"传参机制\",\"a\":\"传参机制\"},\"2352\":{\"t\":\"func A1(a int) { fmt.Println(a)//1 } func A() { a, b := 1, 2 defer A1(a) a = a + b fmt.Println(a, b) //3,2 } func main() { A() } \"},\"2353\":{\"t\":\"我们从函数 A 开始分析。\"},\"2354\":{\"t\":\"在 A 的函数栈中，局部变量存储了 a=1,b=2。开始注册 defer 函数，deferproc 函数会输入两个参数\"},\"2355\":{\"t\":\"所以参数空间里面第一个参数是 A1的参数加返回值共占多少字节的变量，这里 A1 没有返回值，有参数，64 位下的一个 int 类型参数占用 8 个字节。\"},\"2356\":{\"t\":\"第二个参数是函数 A1，前面我们介绍过，没有捕获列表的 Function Value，在编译阶段会做出优化，就是在只读数据段分配一个共用的 funcval 结构体。所以函数 A1 的指令入口地址为 addr1。在只读数据段分配的指向 A1 指令入口的 funcval 结构体地址为 addr2，所以 deferproc 函数第二个参数就是 addr2。\"},\"2357\":{\"t\":\"图片\"},\"2358\":{\"t\":\"那么 A1 函数的参数 a 放哪儿呢？\"},\"2359\":{\"t\":\"上图空缺的地方就是放参数与返回值的。编译器会在 deferproc 函数的两个参数后面开辟一段空间，用于存储 defer 函数 A1 的返回值和参数。同时一段空间也会通过值拷贝到 _defer 结构体后面。所以这里空缺的部分填写 a=1。\"},\"2360\":{\"t\":\"图片\"},\"2361\":{\"t\":\"当 deferproc 函数执行时候，需要堆分配一段空间，用于存放 _defer 结构体以及 defer 函数传递的参数与返回值。现在看看这个堆空间的构成。\"},\"2362\":{\"t\":\"type _defer struct { siz int32 //deferproc第一个参数传入，就是defer函数参数加返回值的总大小。 //8 started bool //标识defer函数是否已经开始执行； //false sp uintptr // sp at time of defer 就是注册defer函数的函数栈指针； //调用栈 A 的栈指针 pc uintptr //是deferproc函数返回后要继续执行的指令地址； //deferproc函数的返回地址return addr； fn *funcval //由deferproc的第二个参数传入，也就是被注册的defer函数；//A1 _panic *_panic // panic that is running defer 是触发defer函数执行的panic指针，正常流程执行defer时它就是nil； //nil link *_defer //自然是链到之前注册的那个_defer结构体。 //nil } //在结构体后面还有 8 个字节用于保存传递给 A1 的参数 a \"},\"2363\":{\"t\":\"然后这个 _defer 结构体就会被添加到 defer 链表头，此时 deferproc 注册结束。\"},\"2364\":{\"t\":\"频繁的堆分配势必影响性能，所以Go语言会预分配不同规格的deferpool，执行时从空闲_defer中取一个出来用。没有空闲的或者没有大小合适的，再进行堆分配。用完以后，再放回空闲_defer池。这样可以避免频繁的堆分配与回收。\"},\"2365\":{\"t\":\"defer 函数的注册已经完成，那么就要开始执行 code 相关的代码了。执行 a = a + b 这里的局部变量 a=3，随后就会输出 a=3,b=2。\"},\"2366\":{\"t\":\"就要到 deferreturn 执行 defer 链表了，从当前的 goroutine 找到链表头的 _defer 结构体，通过 _defer.fn 找到 defer 函数的 funcval 结构体，进而拿到 A1 函数的入口地址，接下来就是调用 A1 函数了。\"},\"2367\":{\"t\":\"_defer 结构体后面的参数与返回值会拷贝到 A1的函数调用栈中，A1 开始执行，就会把之前的参数 a=1，输出来。整个过程就在这里结束了。defer 函数的参数会在注册时候拷贝到堆上，执行时候再拷贝到函数调用栈上。\"},\"2368\":{\"h\":\"defer + 闭包\",\"a\":\"defer-闭包\"},\"2369\":{\"t\":\"如果此时 deferproc 注册是有捕获列表的 Function Value，又会发生什么呢？\"},\"2370\":{\"t\":\"func A() { a, b := 1, 2 defer func(b int) { a = a+b fmt.Println(a, b)//5,2 }(b) a = a + b fmt.Println(a, b)//3,2 } func main() { A() } \"},\"2371\":{\"t\":\"这个例子中，defer 函数传递了局部变量 b 的参数，还捕获了外层函数的局部变量 a，形成了闭包。我们来看看这到底会发生什么？\"},\"2372\":{\"t\":\"这里捕获变量 a 在闭包中被修改过，所以这里函数调用栈的局部变量 a 会改为堆分配，只会存储他的地址。接下来就会创建闭包对象，在堆上分配一个 funcval 结构体，funcval.fn 指向闭包函数入口 addr1。接下来是堆上的 _defer 结构体的构成。\"},\"2373\":{\"t\":\"type _defer struct { siz int32 //deferproc第一个参数传入，就是defer函数参数加返回值的总大小。 //8 started bool //标识defer函数是否已经开始执行； //false sp uintptr // sp at time of defer 就是注册defer函数的函数栈指针； //调用栈 A 的栈指针 pc uintptr //是deferproc函数返回后要继续执行的指令地址； //deferproc函数的返回地址return addr； fn *funcval //由deferproc的第二个参数传入，也就是被注册的defer函数；//闭包函数的入口 _panic *_panic // panic that is running defer 是触发defer函数执行的panic指针，正常流程执行defer时它就是nil； //nil link *_defer //自然是链到之前注册的那个_defer结构体。 //nil } //在结构体后面还有 8 个字节用于保存传递给 闭包函数 的参数 b \"},\"2374\":{\"t\":\"_defer 结构体会被添加到 defer 链表头，deferproc 注册结束，开始执行 code 的代码。\"},\"2375\":{\"t\":\"执行 a = a + b，局部变量 a=3,b=2 ，然后输出。\"},\"2376\":{\"t\":\"接下来是 deferreturn 执行注册的 defer 函数，同时将参数 b 拷贝到执行函数的栈上。闭包函数通过寄存器存储的 funcval 地址加上偏移找到捕获变量 a。此时 a=3，所以执行 defer 函数后，捕获变量 a=5，，参数 b=2。\"},\"2377\":{\"h\":\"奇怪的 defer 函数\",\"a\":\"奇怪的-defer-函数\"},\"2378\":{\"t\":\"func B(a int) int { a++ return a } func A(a int) { a++ fmt.Println(a)//3 } func main() { a := 1 defer A(B(a)) a++ fmt.Println(a)//2 } \"},\"2379\":{\"t\":\"不知道你是否已经猜到答案了？\"},\"2380\":{\"t\":\"我们来分析一波：我们需要明确一点，在 main 函数里面注册的是函数 A，所以 B(a) 是作为参数，同时执行 B(a) 拿到参数值，拷贝到堆上。所以函数 B 在注册时候就执行了，返回值是 2。然后再去执行 defer 函数 A 就会输出 a=3。\"},\"2381\":{\"h\":\"defer 嵌套\",\"a\":\"defer-嵌套\"},\"2382\":{\"t\":\"我们之前眼光聚焦于 defer 的细节，现在我们抛开细节，看看当发生 defer 嵌套时候，defer 函数又会怎么样注册与执行。\"},\"2383\":{\"t\":\"func A(){ //...... defer A1() //...... defer A2() //...... } func A2(){ //...... defer B1() defer B2() //...... } func A1(){ //...... } //所有defer函数都正常执行.... \"},\"2384\":{\"t\":\"函数 A 分别注册了两个 defer 函数 A1和A2。因为此阶段是注册阶段，所以并不会去执行函数。\"},\"2385\":{\"t\":\"图片\"},\"2386\":{\"t\":\"执行 deferreturn，会先判断 defer 链表上的 defer 是不是函数 A 注册的。判断的方法时通过判断 _defer 结构体记录的 sp 是否等于 A 的栈指针。A2 是函数 A 注册的，保存 defer 函数调用的相关信息，然后这一项从 defer 链表中移除，当 A2 执行时候，又会注册两个 defer 函数 B1和B2。\"},\"2387\":{\"t\":\"图片\"},\"2388\":{\"t\":\"A2 函数结束前会执行 defer 链表，同时也会去判断是否是自己注册的链表。B2 执行，然后 B1 执行，其实此时 A2 不知道自己注册的链表是否已经执行完了。那么什么时候会判断 A2 结束了。直到出现 下一个 _defer.sp 不等于 A2 的栈指针即遇到不属于自己注册的 defer 函数代表 A2 注册的 defer 执行完了。\"},\"2389\":{\"t\":\"这里又判断到 A1 是函数 A 注册的 defer 函数，又会回到 A 的defer 执行流程。A1 执行完后，链表为空，此时函数 A 结束。\"},\"2390\":{\"t\":\"理解了defer注册与执行的逻辑，再配合之前介绍过的Function Value、函数调用栈等内容，就很容易理解上面几个例子，也就不用刷那些重复的defer面试题了\"},\"2391\":{\"h\":\"似乎 defer1.12 有点慢\",\"a\":\"似乎-defer1-12-有点慢\"},\"2392\":{\"t\":\"因为 defer 真的很方便，所以大家都已经习惯了随手使用它。但是与一般的函数调用比起来，defer1.12 的实现方式会在调用时造成较大的额外开销，尤其是在锁释放这种场景。因此经常被一些库设计者所诟病，甚至有些项目的注释中写明了不用 defer 能节省多少多少纳秒。\"},\"2393\":{\"t\":\"defer1.12 的性能问题主要缘于两个方面：\"},\"2394\":{\"t\":\"_defer 结构体堆分配，即使有预分配的 deferpool，也需要去堆上获取与释放。而且 defer 函数的参数还要**在注册时从栈拷贝到堆，执行时又要从堆拷贝到栈。**这样左右拷贝，又怎会不慢呢？\"},\"2395\":{\"t\":\"defer 信息保存到链表，而链表操作比较慢。\"},\"2396\":{\"t\":\"但是，defer 作为一个关键的语言特性，怎能如此受人诟病？所以 GO 语言在 1.13 和1.14 中做出了不同的优化。\"},\"2397\":{\"h\":\"defer1.13\",\"a\":\"defer1-13\"},\"2398\":{\"t\":\"我们来看看 defer1.13 到底升级了啥？\"},\"2399\":{\"t\":\"Go1.13 中 defer 性能的优化点，主要集中在减少 defer 结构体堆分配。\"},\"2400\":{\"t\":\"func A1(a int) { fmt.Println(a)//1 } func A() { a, b := 1, 2 defer A1(a) a = a + b fmt.Println(a, b) //3,2 } func main() { A() } \"},\"2401\":{\"t\":\"defer1.13 编译后的伪指令是这样的：\"},\"2402\":{\"t\":\"func A() { var d struct { runtime._defer i int } d.siz = 0 d.fn = A1 d.i = 10 r := runtime.deferprocStack(&d._defer) if r > 0 { goto ret } // code to do something a = a + b fmt.Println(a, b) //3,2 runtime.deferreturn() return ret: runtime.deferreturn() } \"},\"2403\":{\"t\":\"你会发现好像和 defer 1.12 做了很大的改变。\"},\"2404\":{\"t\":\"结构\"},\"2405\":{\"t\":\"defer1.12\"},\"2406\":{\"t\":\"defer1.13\"},\"2407\":{\"t\":\"_defer 的位置\"},\"2408\":{\"t\":\"当执行 deferproc 函数时候会在堆上开辟一段空间专门存储 _defer 结构体\"},\"2409\":{\"t\":\"会在函数调用栈直接分配空间存储 defer 结构体相关字段。\"},\"2410\":{\"t\":\"参数\"},\"2411\":{\"t\":\"会存储在 _defer 结构体后面的空间，使用时候需要从堆上拷贝到函数调用栈\"},\"2412\":{\"t\":\"参数则存储在函数的局部变量空间。使用时候从栈上拷贝变量到参数空间\"},\"2413\":{\"t\":\"_defer 结构体添加到 defer 链表\"},\"2414\":{\"t\":\"当堆上存储 _defer 结构体后，就会将结构体分配添加到链表头上。\"},\"2415\":{\"t\":\"runtime.deferprocStack 则会把栈上分配的_defer 结构体注册到 defer 链表\"},\"2416\":{\"t\":\"从上面伪指令，你会发现多了一个结构体 d，它由两部分组成分别是 runtime._defer 结构体，传给 defer 函数 A1 的参数。\"},\"2417\":{\"t\":\"值得注意的是，1.13 版本并不是所有的 defer 都能够在栈上进行分配空间。循环中的 defer，无论是显示的 for 循环，还是 goto 形成的隐式循环，都只能使用 1.12 版本中的处理方式在堆上分配。即使只执行一次的 for 循环也是一样。\"},\"2418\":{\"t\":\"//显示循环 for i:=0; i< n; i++{ defer B(i) } ...... //隐式循环 again: defer B() if i<n { n++ goto again } \"},\"2419\":{\"t\":\"所以为了区分 _defer 结构体存储的位置，在 defer1.13 中，runtime._defer 结构体增加了一个字段 heap，用于标识是否为堆分配。\"},\"2420\":{\"t\":\"type _defer struct { siz int32 //deferproc第一个参数传入，就是defer函数参数加返回值的总大小。 started bool //标识defer函数是否已经开始执行； heap bool //标识是否为堆分配 sp uintptr // sp at time of defer 就是注册defer函数的函数栈指针； pc uintptr //是deferproc函数返回后要继续执行的指令地址； fn *funcval //由deferproc的第二个参数传入，也就是被注册的defer函数； _panic *_panic // panic that is running defer 是触发defer函数执行的panic指针，正常流程执行defer时它就是nil； link *_defer //自然是链到之前注册的那个_defer结构体。 } //参数和返回值这段空间会直接分配在_defer结构体后面，用于在注册时保存给defer函数传入的参数，并在执行时直接拷贝到defer函数的调用者栈上。 \"},\"2421\":{\"t\":\"defer 函数执行在 1.13 中没有变化，依旧通过 deferreturn 实现，这一次的 _defer 结构体后面的参数和返回值空间，不是从堆拷贝到栈上，而是从栈上的局部变量空间拷贝到参数空间，defer 函数通过相对寻址找到参数。\"},\"2422\":{\"t\":\"1.13 版本的 defer 主要通过减少了 _defer 结构体的堆分配，达到了性能优化在 30% 左右。好像只解决了第一个问题，仍然在使用 defer 链表。在 1.14 版本又会又怎么样的优化呢？\"},\"2423\":{\"h\":\"defer1.14\",\"a\":\"defer1-14\"},\"2424\":{\"t\":\"我们举一个例子看看到底做了怎么样的优化呢？\"},\"2425\":{\"t\":\"func A(i int) { defer A1(i, 2*i) if(i > 1){ defer A2(\\\"Hello\\\", \\\"eggo\\\") } // code to do something return } func A1(a,b int){ //...... } func A2(m,n string){ //...... } \"},\"2426\":{\"t\":\"定义的伪指令会是怎么样的。(以 defer 函数 A1 为例)\"},\"2427\":{\"t\":\"func A(i int){ var a, b int = i, 2*i //...... A1（a, b） return //...... } \"},\"2428\":{\"t\":\"结构\"},\"2429\":{\"t\":\"defer1.12\"},\"2430\":{\"t\":\"defer1.13\"},\"2431\":{\"t\":\"defer 1.14\"},\"2432\":{\"t\":\"_defer 的位置\"},\"2433\":{\"t\":\"当执行 deferproc 函数时候会在堆上开辟一段空间专门存储 _defer 结构体\"},\"2434\":{\"t\":\"会在函数调用栈直接分配空间存储 defer 结构体相关字段。\"},\"2435\":{\"t\":\"没有_defer 结构体了\"},\"2436\":{\"t\":\"参数\"},\"2437\":{\"t\":\"会存储在 _defer 结构体后面的空间，使用时候需要从堆上拷贝到函数调用栈\"},\"2438\":{\"t\":\"参数则存储在函数的局部变量空间。使用时候从栈上拷贝变量到参数空间\"},\"2439\":{\"t\":\"会提前定义并分配到函数调用栈局部变量上\"},\"2440\":{\"t\":\"_defer 结构体添加到 defer 链表\"},\"2441\":{\"t\":\"当堆上存储 _defer 结构体后，就会将结构体分配添加到链表头上。\"},\"2442\":{\"t\":\"runtime.deferprocStack 则会把栈上分配的_defer 结构体注册到 defer 链表\"},\"2443\":{\"t\":\"没有_defer 链表了\"},\"2444\":{\"t\":\"defer 函数执行\"},\"2445\":{\"t\":\"利用 defer 链表找到 _defer 结构体然后找到函数入口地址 ，进行调用。\"},\"2446\":{\"t\":\"与 defer 1.12 一致\"},\"2447\":{\"t\":\"会将执行函数置于函数 A 前，当作普通函数调用。\"},\"2448\":{\"t\":\"通过 defer1.14 这样的方式有以下几个优点：\"},\"2449\":{\"t\":\"不用构建 _defer 结构体\"},\"2450\":{\"t\":\"用不到 defer 链表\"},\"2451\":{\"t\":\"但是好像这样的逻辑怎么用到 defer 函数 A2 呢？怎么判断我应不应该调用这个函数呢？\"},\"2452\":{\"t\":\"defer1.14 通过增加一个标识变量 df 来解决这个问题。df 变量每一位对应当前函数的一个 defer 函数是否执行。\"},\"2453\":{\"t\":\"函数 A1 需要被执行，那么 df|=1 方式将 df 第一位置为1，然后函数结束前通过判断 df 的第一位是否为 1，来决定是否执行。这样的逻辑对于函数 A2 也适用。\"},\"2454\":{\"t\":\"func A(i int){ var df byte //A1的参数 var a, b int = i, 2*i df |= 1 //A2的参数 var m,n string = \\\"Hello\\\", \\\"eggo\\\" if i > 1 { df |= 2 } //code to do something //判断A2是否要调用 if df&2 > 0 { df = df&^2 A2(m, n) } //判断A1是否要调用 if df&1 > 0 { df = df&^1 A1(a, b) } return //省略部分与recover相关的逻辑 } \"},\"2455\":{\"t\":\"Go1.14 把 defer 函数在当前函数内展开并直接调用，这种方式被称为 open coded defer。这种方式不仅不用创建 _defer 结构体，也脱离了 defer 链表的束缚。不过这种方式依然不适用于循环中的 defer，所以 1.12 版本 defer 的处理方式是一直保留的。\"},\"2456\":{\"h\":\"defer 提升后带来的后果\",\"a\":\"defer-提升后带来的后果\"},\"2457\":{\"t\":\"我们一直讨论的是程序正常执行 defer 的处理逻辑，那么如果程序不正常执行了呢，发生了 panic 或者使用了 untime.Goexit 函数，当前的正常程序反而会不执行，而是去执行 defer 链表，可是在 1.14 版本里面并没有注册链表啊。\"},\"2458\":{\"t\":\"defer1.14 版本的 _defer 结构体又增加了几个字段，使那些没有注册到链表的 defer 函数通过栈扫描来注册到链表里。\"},\"2459\":{\"t\":\" type _defer struct { siz int32 started bool heap bool openDefer bool //1 sp uintptr pc uintptr fn *funcval _panic *_panic link *_defer fd unsafe.Pointer //2 varp uintptr //3 framepc uintptr //4 } \"},\"2460\":{\"t\":\"可是这样会导致 defer 确实变快了，但是 panic 却变慢了。\"},\"2461\":{\"t\":\"我们后面看看 panic 又会有怎么样的优化呢？\"},\"2462\":{\"c\":[\"语言基础\",\"go\"]},\"2463\":{\"h\":\"GC-Go\"},\"2464\":{\"t\":\"推荐阅读：\"},\"2465\":{\"t\":\"粗线条话GC（三）\"},\"2466\":{\"t\":\"Go语言垃圾回收采用标记–清扫算法，支持主体并发增量式回收，使用插入与删除两者写屏障结合的混合写屏障。\"},\"2467\":{\"h\":\"基本情况\",\"a\":\"基本情况\"},\"2468\":{\"t\":\"三种 GC 模式\"},\"2469\":{\"t\":\"Golang中垃圾回收支持三种模式：\"},\"2470\":{\"t\":\"gcBackgroundMode，默认模式，标记与清扫过程都是并发执行的；\"},\"2471\":{\"t\":\"gcForceMode，只在清扫阶段支持并发；\"},\"2472\":{\"t\":\"gcForceBlockMode，GC全程需要STW；\"},\"2473\":{\"t\":\"const ( gcBackgroundMode gcMode = iota // concurrent GC and sweep gcForceMode // stop-the-world GC now, concurrent sweep gcForceBlockMode // stop-the-world GC now and STW sweep (forced by user) ) \"},\"2474\":{\"t\":\"两个全局变量\"},\"2475\":{\"t\":\"关于 GC 执行过程，有两个重要的全局变量：gcController 和 work。\"},\"2476\":{\"t\":\"gcController 主要用于支持标记工作顺利执行\"},\"2477\":{\"t\":\" var gcController gcControllerState type gcControllerState struct { scanWork int64 bgScanCredit int64 assistTime int64 dedicatedMarkTime int64 fractionalMarkTime int64 idleMarkTime int64 markStartTime int64 dedicatedMarkWorkersNeeded int64 fractionalUtilizationGoal float64 ...... } \"},\"2478\":{\"t\":\"gcController 会记录一个 mark cycle (标记周期)中不同类型的 mark worker 是否还需要启动，是否需要进行 assist mark（辅助标记），已经执行了多少扫描工作，以及不同类型的 mark worker 分别执行了多长时间等信息。\"},\"2479\":{\"t\":\"work 用于存储全局工作信息\"},\"2480\":{\"t\":\" var work struct { full lfstack // lock-free list of full blocks workbuf ...... bytesMarked uint64 markrootNext uint32 // next markroot job markrootJobs uint32 // number of markroot jobs nFlushCacheRoots int nDataRoots, nBSSRoots, nSpanRoots, nStackRoots int markDoneSema uint32 bgMarkReady note // signal background mark worker has started bgMarkDone uint32 // cas to 1 when at a background mark completion point mode gcMode ...... } \"},\"2481\":{\"t\":\"work 提供全局工作队列缓存，并记录栈、数据段等需要扫描的 root 节点的相关信息；还会记录当前是第几个 GC cycle，当前 GC cycle 已经标记了多少字节，已经 STW 了多长时间，以及控制 GC 向下一阶段过度的信息等等。\"},\"2482\":{\"h\":\"并发 GC 过程\",\"a\":\"并发-gc-过程\"},\"2483\":{\"t\":\"图片\"},\"2484\":{\"t\":\"默认的 gcBackgroundMode （默认模式）下 GC 执行的大致过程如下：\"},\"2485\":{\"t\":\"Mark Setup\"},\"2486\":{\"t\":\"完成上一轮 GC 未完成的清扫工作\"},\"2487\":{\"t\":\"为每个 P 创建一个 mark worker 协程，陷入休眠，等待标记阶段得到调度（findRunnableGCWorker）\"},\"2488\":{\"t\":\"第一次 STW\"},\"2489\":{\"t\":\"开启写屏障\"},\"2490\":{\"t\":\"开启一个新一轮 GC，gcphase 置为 _GCMark，记录 GC 阶段标识；\"},\"2491\":{\"t\":\"writeBarrier.enabled 置为 true，开启写屏障，gcBlackenEnabled 置为 1 表示允许 GC 进行标记工作。\"},\"2492\":{\"t\":\"在 work 中记录 bss 段，数据段，栈中那些 root 节点的必要信息，为 root 节点标记工作做准备。\"},\"2493\":{\"t\":\"Start The World，进入并发标记阶段。\"},\"2494\":{\"t\":\"后台 mark worker 得到调度执行时，会根据 gcController 中记录的相关信息决定 worker 的类型。\"},\"2495\":{\"t\":\"不管什么类型的 worker 都会先执行未完成的 root 标记工作，扫描协程栈时，只会暂停对应协程，通过 stacmap 标记扫描，结束后再将其恢复。\"},\"2496\":{\"t\":\"root 标记工作完成后,需要继续追踪的 root 节点已经被记录到工作队列中，后台 mark worker 会继续处理工作队列中的节点，它们就是所谓的灰色节点。通过灰色节点可能发现更多灰色节点加入工作队列，处理完的灰色节点成为黑色节点。\"},\"2497\":{\"t\":\"当没有 root 标记任务与灰色节点时，GC 就可以进入 Mark Termination 阶段了。\"},\"2498\":{\"t\":\"第二次 STW\"},\"2499\":{\"t\":\"gcphase 置为 _GCMarkTermination\"},\"2500\":{\"t\":\"停止后台 mark worker 和 assist worker\"},\"2501\":{\"t\":\"gcBlackenEnabled 置为 0\"},\"2502\":{\"t\":\"gphase 置为 _GCOff\"},\"2503\":{\"t\":\"关闭写屏障，writeBarrier.enabled 置为 false\"},\"2504\":{\"t\":\"Start The World，进入清扫阶段\"},\"2505\":{\"t\":\"进入 _GCOff 阶段以后，再新分配的对象就是白色的了。\"},\"2506\":{\"t\":\"runtime.main 在程序初始化时会创建用于清扫的协程 bgsweep，存储在全局变量 sweep 中，到清扫阶段这个后台的 sweeper 会被加入到 run queue 中，它得到调度执行时会执行清扫任务。因为清扫工作也是增量进行的，每一轮 GC 开始之前，都要确保完成上一轮 GC 未完成的清扫工作。\"},\"2507\":{\"h\":\"如何应对碎片化内存\",\"a\":\"如何应对碎片化内存\"},\"2508\":{\"t\":\"我们知道 GC 应用的是标记-清扫算法的垃圾回收器，会存在一个问题，不可避免会造成内存碎片化。\"},\"2509\":{\"t\":\"内存碎片化会增加内存分配的负担\"},\"2510\":{\"t\":\"降低内存使用率\"},\"2511\":{\"t\":\"要找到大小合适的内存块的代价会因碎片化而增加。\"},\"2512\":{\"t\":\"解决这一问题的办法主要是使用多个链表，不同链表管理不同大小的内存块。\"},\"2513\":{\"t\":\"因为 mutator 通常不会频繁申请大块内存，所以多链表管理的内存块规格主要面向中小分块，既可以满足大部分内存分配需求，又避免维护大块空闲链表而压迫到内存。\"},\"2514\":{\"t\":\"Go 语言的内存管理是基于 TCMalloc (Thread-Caching Malloc) 模型设计的，TCMalloc 是一种典型的分级、多链表内存管理模型，可以很好的应对碎片化内存。\"},\"2515\":{\"t\":\"Golang 内存管理大致结构\"},\"2516\":{\"t\":\"内存管理模块负责向操作系统申请内存并管理起来。\"},\"2517\":{\"t\":\"Golang 的内存管理分为三级：\"},\"2518\":{\"t\":\"mheap\"},\"2519\":{\"t\":\"mcentral\"},\"2520\":{\"t\":\"mcache\"},\"2521\":{\"t\":\"mheap 管理着虚拟地址空间中一大段连续的内存，我们之前说的堆分配，就是在这里分配。\"},\"2522\":{\"t\":\"图片\"},\"2523\":{\"t\":\"多个 page 组成一个 span ，多个 span 组成一个 arena。\"},\"2524\":{\"t\":\"span 对应的数据结构是 mspan，每个 span 都只存储一种大小的元素，类型规格记录在 mspan.spanClass中，类型规格覆盖了小于等于 32K 的 66 种大小，类型编号 1~66。大于 32K 的大对象直接在mheap 中分配，对应 mspan 的类型编号为 0，这样一共有 67 种。\"},\"2525\":{\"t\":\"同时 spanClass 还记录着该 span 存储元素是否含有指针，含有指针的属于 scan 类型，不含有指针的属于 no-scan 类型，所以总的来说 span 分类一共有 134 种。对于 no-scan 类型的 mspan，GC 并不关心。\"},\"2526\":{\"t\":\"mheap.central 提供全局 span 缓存，它按照 spanClass 类型区分共 134 个 mcentral。每个 mcentral 管理一种 spanclass 的 mspan，并且会将有空闲空间和没有空闲空间的 mspan 分别管理。\"},\"2527\":{\"t\":\"图片\"},\"2528\":{\"t\":\"每个 P 都有一个 mcache 用作本地 span 缓存，与 mcentral 一样，每种规格类型对应 scan 和 no-scan 两个链表。小对象分配时先从本地 mcache 中获取，没有的话就去 mcentral 获取并设置到 P，mcentral 中也没有的话，会向 mheap 申请。\"},\"2529\":{\"t\":\"图片\"},\"2530\":{\"t\":\"扫描和标记相关元数据\"},\"2531\":{\"t\":\"root 节点扫描\"},\"2532\":{\"t\":\"Go 语言在编译阶段会生成 bss 段，数据段等对应的元数据，存储在可执行文件中，通过对应自己的 modualdata，根据其中存储的 gcdatamask、gcbssmask 等信息可以确定特定 root 节点是否需要添加到工作队列中。\"},\"2533\":{\"t\":\"协程栈的元数据存储在 stackmap 中，扫描协程栈时，通过对应元数据可以知道栈上的局部变量、参数、返回值等对象中哪些是存活的指针。\"},\"2534\":{\"t\":\"确定了 root 节点是否为指针，还要再进一步判断这些节点是否指向堆内存。\"},\"2535\":{\"t\":\"堆扫描与标记\"},\"2536\":{\"t\":\"mheap 中每个 arena 对应一个 HeapArena，记录 arena 的元数据信息。\"},\"2537\":{\"t\":\"介绍一下HeapArena 中bitmap 和 spans 字段。\"},\"2538\":{\"t\":\"bitmap 中一个 byte 可以标记 arena 中连续四个指针大小的内存。对于每一个 word 来说，对应了两个 bit，\"},\"2539\":{\"t\":\"低位 bit 用于标记是否为指针，0 为非指针，1 为指针；\"},\"2540\":{\"t\":\"高位 bit 用于标记是否要继续扫描，高位 bit 为 1 就代表扫描完当前 word 并不能完成当前数据对象的扫描。\"},\"2541\":{\"t\":\"图片\"},\"2542\":{\"t\":\"spans 是一个 *mspan 类型的数组，用于记录当前 arena 中每一页对应到哪一个 mspan。\"},\"2543\":{\"t\":\"图片\"},\"2544\":{\"t\":\"所以，我们可以基于 HeapArena 记录的元数据信息，通过一个对象的地址，就可以根据 HeapArena.bitmap 信息扫描它内部是否含有指针，也可以根据对象地址计算出它在哪一页，进而查到存在哪一个 mspan 中\"},\"2545\":{\"t\":\"图片\"},\"2546\":{\"t\":\"而每个 span 都对应两个位图标记：mspan.allocBits 和 mspan.gcmarkBits。\"},\"2547\":{\"t\":\"allocBits 中每一位用于标记一个对象存储单元是否已分配。\"},\"2548\":{\"t\":\"gcmarkBits 中每一位用于标记一个对象是否存活。\"},\"2549\":{\"t\":\"Golang中GC的三色标记\"},\"2550\":{\"t\":\"灰色：gcmarkBits 置为 1 并加入工作队列中\"},\"2551\":{\"t\":\"黑色：gcmarkBits 置为 1\"},\"2552\":{\"t\":\"白色：gcMarkBits 置为 0\"},\"2553\":{\"h\":\"并发标志的分工问题与写屏障记录集竞争问题\",\"a\":\"并发标志的分工问题与写屏障记录集竞争问题\"},\"2554\":{\"t\":\"每个 P 都有一个本地工作队列（p.gcw）和一个写屏障缓冲（p.wbBuf）。\"},\"2555\":{\"t\":\"本地工作队列（p.gcw）里面有两个 workbuf：分别是 wbuf1 和 wbuf2。工作过程如下：\"},\"2556\":{\"t\":\"添加任务从 wbuf1 添加\"},\"2557\":{\"t\":\"当 wbuf1 满了时候，就会交换 wbuf1 和 wbuf2 。\"},\"2558\":{\"t\":\"如果交换之后还是满的，那么就会把当前的 wbuf1 的工作 flush 到全局工作缓存中。\"},\"2559\":{\"t\":\"mark worker 执行 GC 标记工作消耗工作队列时,会处理本地工作队列和全局工作缓存中工作量的均衡问题（runtime.gcDrain和runtime.gcDrainN中）\"},\"2560\":{\"t\":\"如果全局工作缓存为空，就把当前的 p 的工作分一些到全局工作队列中。 \"},\"2561\":{\"t\":\"如果 wbuf2 不为空，那么就将 wbuf2 整个 flush 到全局工作缓存中\"},\"2562\":{\"t\":\"如果 wbuf2 为空，那么考虑 wbuf1，如果 wbuf1 元素个数大于 4 ，就把 wbuf1 一半工作放到全局工作缓存中。\"},\"2563\":{\"t\":\"如果本地工作队列为空，就会从全局工作缓存中获取任务放到本地队列中。\"},\"2564\":{\"t\":\"当 mutator 触发写屏障时并不会直接操作工作队列，而是把相关指针写入当前 p 的写屏障缓冲区(p.wbBuf)中。当 wbBuf 已满或 mark worker 通过工作队列获取不到任务时,会把写屏障缓冲内容 flush 到工作缓存中,\"},\"2565\":{\"t\":\"通过这样区分本地工作队列与全局工作缓存，并为每个 P 设置了写屏障缓冲区，缓解了执行并发标记工作时操作工作队列的竞争问题。\"},\"2566\":{\"h\":\"GC 对 CPU 的使用率\",\"a\":\"gc-对-cpu-的使用率\"},\"2567\":{\"t\":\"GC 默认的 CPU 的使用率为 25%。在 GC 执行的初始化阶段，会根据当前 CPU 核数 X 以 CPU 目标使用率来计算需要启动的 mark worker 数量。\"},\"2568\":{\"t\":\"但是会出现：6*25%=1.5 计算结果不为整数的情况，为了应对此情况，会对该结果进行 rounding（+0.5）。\"},\"2569\":{\"t\":\"但是这样的 rounding 会和目标使用率出现显著偏差（>0.3），所以在 mark worker 中引入了不同的工作模式:\"},\"2570\":{\"t\":\"Dedicated 模式的 worker 会执行标记任务直到被抢占；\"},\"2571\":{\"t\":\"Fractional 模式的 worker 除了被抢占外，还可以在达到目标使用率时主动让出。\"},\"2572\":{\"t\":\"🌰：\"},\"2573\":{\"t\":\"如果有4个核，经过计算 4*25%=1，需要启动一个 Dedicated 模式的 worker。\"},\"2574\":{\"t\":\"如果有6个核，经过计算 6*25%=1.5，rounding 之后等于2，但是误差 2/1.5-1=0.33，大于0.3，所以启动一个 Dedicated 模式的 worker 和一个 Fractional 模式的 worker 来辅助完成额外的目标。\"},\"2575\":{\"t\":\"·调度器执行 findRunnableGcWorker 恢复 mark worker 时，需要设置 worker 运行的模式：\"},\"2576\":{\"t\":\"如果 Dedicated 模式的 worker 数目没有达到上限，就设置为 Dedicated 模式。\"},\"2577\":{\"t\":\"接下来就要看是否需要 Fractional 模式的 worker 辅助工作，需要的话设置为 Fractional 模式\"},\"2578\":{\"t\":\"P会记录自己执行 Fractional 模式的 worker 的时间，如果当前 P 执行 Fractional 模式的时间与本轮标记工作已经执行的时间的比率达到 fractionalUtilizationGoal，Fractional 模式的 worker 就可以主动让出了。\"},\"2579\":{\"t\":\"通过以上方式有效控制 GC 的 CPU 使用率。\"},\"2580\":{\"h\":\"并发GC如何缓解内存分配压力？\",\"a\":\"并发gc如何缓解内存分配压力\"},\"2581\":{\"t\":\"为了避免 GC 执行过程中，内存分配压力过大，还实现了 GC Assist 机制，包括“辅助标记”和“辅助清扫”。\"},\"2582\":{\"t\":\"辅助标价：\"},\"2583\":{\"t\":\"如果协程在 GC 标记工作没有完成，想要分配内存，他就要负担一定的标记工作，申请的内存越大，对应负担的标记任务就越多，这是一种借贷偿还的机制。\"},\"2584\":{\"t\":\"当 mark worker 完成一定量的标记任务就会在全局 gcController 存一笔信用，有债务需要偿还，可以从gcController这里 steal 尽量多的信用来抵消自己欠下的债务。\"},\"2585\":{\"t\":\"图片\"},\"2586\":{\"t\":\"在清扫阶段内存分配可能会触发“辅助清扫”。\"},\"2587\":{\"t\":\"🌰：\"},\"2588\":{\"t\":\"直接从 mheap 分配大对象时，为了维持内存分配量与清扫页面数的线性关系，可能需要执行一定量的清扫工作。\"},\"2589\":{\"t\":\"从本地缓存中直接分配一个 span 时，若存在尚未清扫的可用 span，也需要先清扫这个 span 再分配使用\"},\"2590\":{\"c\":[\"语言基础\",\"go\"]},\"2591\":{\"h\":\"GC\"},\"2592\":{\"h\":\"GC（Garbage Collection）\",\"a\":\"gc-garbage-collection\"},\"2593\":{\"t\":\"推荐阅读：\"},\"2594\":{\"t\":\"粗线条话GC（一）\"},\"2595\":{\"t\":\"粗线条话GC（二）\"},\"2596\":{\"h\":\"为什么会有GC存在\",\"a\":\"为什么会有gc存在\"},\"2597\":{\"t\":\"在我们之前就了解到，程序定义的全局变量，常量等都会分配到数据段中，而函数的局部变量，参数，返回值都会分配到函数调用栈上。那些生命周期超过当前函数的数据，例如闭包的可变变量，还有一些编译阶段不能确定大小的数据，例如反射，都不适合分配到栈上，都会被分配到堆上，在栈上使用其堆上的地址。\"},\"2598\":{\"t\":\"随着程序的运行，慢慢的有些数据不会被再次使用，那么为了减少内存，选择回收。\"},\"2599\":{\"t\":\"那么回收哪一部分的数据呢？\"},\"2600\":{\"t\":\"分配到栈上的数据，他会随着函数调用栈的销毁也会释放自己的内存，所以不用回收这一部分的。\"},\"2601\":{\"t\":\"分配到堆上的数据，他们好像没有人对他处理，如果存在时间长了，对于程序就是一种垃圾了，需要回收这一部分的数据。\"},\"2602\":{\"h\":\"回收方式\",\"a\":\"回收方式\"},\"2603\":{\"h\":\"手动回收\",\"a\":\"手动回收\"},\"2604\":{\"t\":\"有些编程语言需要程序员在编写程序时候，手动释放那些不需要的，分配到堆上的数据。例如（C/C++）\"},\"2605\":{\"t\":\"缺点：\"},\"2606\":{\"t\":\"手动垃圾回收不仅增加编程负担，而且风险还比较高。一旦释放的早了，后续对该数据的访问就会出错。因为被释放的内存可能已经被清空，或重新分配，甚至已经还给操作系统了，这就是所谓的“悬挂指针”问题；而如果忘了释放，它又会一直占用内存，出现“内存泄漏”。\"},\"2607\":{\"h\":\"自动回收\",\"a\":\"自动回收\"},\"2608\":{\"t\":\"越来越多的编程语言已经支持“自动垃圾回收”，包括 Go 语言。\"},\"2609\":{\"t\":\"会自动解决由运行时候识别不再有用的数据并释放，存何时被释放，被释放的内存如何处理等问题。\"},\"2610\":{\"t\":\"我们今天就来看看，自动垃圾回收到底是怎么样的。\"},\"2611\":{\"h\":\"什么是垃圾?&怎么回收\",\"a\":\"什么是垃圾-怎么回收\"},\"2612\":{\"t\":\"你是垃圾吗？\"},\"2613\":{\"t\":\"怎么去区分这个数据是有用的数据还是垃圾呢？\"},\"2614\":{\"t\":\"我们可以确定，程序中用的到的数据，一定是在栈，数据段上存储的数据。也就是说，可以以这些地方的数据作为根节点，可以追踪的范围一定都包含了全部有用的数据。\"},\"2615\":{\"t\":\"那么既然追踪不到的的数据，就一定用不到，就是垃圾。\"},\"2616\":{\"t\":\"这是数据的可达性！\"},\"2617\":{\"t\":\"目前主流的垃圾回收算法都是使用数据“可达性”近似等价于数据有用性的。\"},\"2618\":{\"t\":\"但是能够追踪到的数据不一定是有用！这也为什么是近似的原因。这个数据很少，所以可以进行忽略。\"},\"2619\":{\"h\":\"标记+清扫\",\"a\":\"标记-清扫\"},\"2620\":{\"t\":\"我们通过标记方法，去区分数据的有用性。\"},\"2621\":{\"t\":\"三色抽象可以清晰的展现追踪过程中的数据标记的变化：\"},\"2622\":{\"t\":\"垃圾回收开始会把所有的数据都标记为白色\"},\"2623\":{\"t\":\"能够直接追踪到的 root 节点标记成灰色。灰色代表当前节点展开的追踪还未完成。\"},\"2624\":{\"t\":\"当当前的节点的追踪任务完成后，会将该节点标记成黑色。代表此数据是有用的数据，无需再次进行追踪。\"},\"2625\":{\"t\":\"当没有灰色节点时候，代表标记工作已完成。\"},\"2626\":{\"t\":\"现在有用的数据都是黑色了，垃圾数据则是白色，那么接下来肯定是清除白色的数据。\"},\"2627\":{\"t\":\"三色标记法的三色：\"},\"2628\":{\"t\":\"黑色（Black）：表示对象是 GC Root 可达的，即使用中的对象，黑色是“已经被扫描的对象”。\"},\"2629\":{\"t\":\"灰色（Grey）：表示黑色对像可追踪到的，但还没对它进行扫描。\"},\"2630\":{\"t\":\"白色（White）：白色是对象的初始颜色，如果扫描完成后，对象依然还是白色的，说明此对象是垃圾对象。\"},\"2631\":{\"t\":\"图片\"},\"2632\":{\"t\":\"优点：\"},\"2633\":{\"t\":\"实现简单\"},\"2634\":{\"t\":\"三色标记法的标记过程可以增量式（Incremental）地运行（异步执行）\"},\"2635\":{\"t\":\"缺点：\"},\"2636\":{\"t\":\"容易造成内存碎片化，内存碎片化会影响内存分配与程序执行的效率\"},\"2637\":{\"h\":\"标记+压缩\",\"a\":\"标记-压缩\"},\"2638\":{\"t\":\"这里压缩目的与清扫一直都是回收垃圾，但是这里的行为不一样，移动那些有用数据块，达到压缩的效果。\"},\"2639\":{\"t\":\"图片\"},\"2640\":{\"t\":\"优点：\"},\"2641\":{\"t\":\"解决了内存碎片化的问题\"},\"2642\":{\"t\":\"缺点：\"},\"2643\":{\"t\":\"多次扫描与移动数据块的开销巨大。\"},\"2644\":{\"t\":\"推荐文章：\"},\"2645\":{\"t\":\"垃圾回收(GC)算法介绍(4)——GC标记-压缩算法\"},\"2646\":{\"h\":\"标记+复制式回收\",\"a\":\"标记-复制式回收\"},\"2647\":{\"t\":\"回收过程：\"},\"2648\":{\"t\":\"首先将堆内存划分成两个相等的空间，FROM&TO。程序执行时候使用 FROM 空间\"},\"2649\":{\"t\":\"当要进行垃圾回收时候，扫描 FROM 空间，将可以追踪到数据复制到 TO 空间。\"},\"2650\":{\"t\":\"当所有可追踪数据都复制到 TO 空间时候，就可以将 FROM 和 TO 空间进行交换。简单来讲就是负责的功能进行了交换。\"},\"2651\":{\"t\":\"图片\"},\"2652\":{\"t\":\"优点：\"},\"2653\":{\"t\":\"解决了碎片化问题\"},\"2654\":{\"t\":\"使用连续的内存块，可以实现高速的内存分配。\"},\"2655\":{\"t\":\"缺点：\"},\"2656\":{\"t\":\"只有一半的堆内存可以使用，降低了堆内存的使用率。\"},\"2657\":{\"h\":\"标记+分代回收\",\"a\":\"标记-分代回收\"},\"2658\":{\"t\":\"新生代对象：新创建的对象\"},\"2659\":{\"t\":\"老年代对象：经受住特定次数的垃圾回收而依然存活的对象\"},\"2660\":{\"t\":\"基于弱分代假说，新生代对象成为垃圾的概率高于老年代对象，所以可以把数据划分为新生代和老年代，降低老年代执行垃圾回收的频率。\"},\"2661\":{\"t\":\"优点：\"},\"2662\":{\"t\":\"不用每次都扫描所有数据，将明显提升垃圾回收执行的效率，\"},\"2663\":{\"t\":\"新生代和老年代还可以分别采用不同的回收策略，进一步提升回收效益并减少开销。\"},\"2664\":{\"t\":\"缺点：\"},\"2665\":{\"t\":\"写入屏障会对指针更新操作带来额外的负担。\"},\"2666\":{\"t\":\"另外如果一个程序中大部分对象存活时间都很长的话，会增加新生代 GC 的压力，并且导致老年代 GC 频繁地运行。\"},\"2667\":{\"h\":\"标记+引用计数\",\"a\":\"标记-引用计数\"},\"2668\":{\"t\":\"一个数据对象被引用的次数，程序执行过程中会更新对象及子对象的引用次数。当引用次数更新到 0 时候，就代表这个对象是垃圾了，可以进行回收了。\"},\"2669\":{\"t\":\"图片\"},\"2670\":{\"t\":\"优点：\"},\"2671\":{\"t\":\"不用专门去执行扫描任务，垃圾识别的任务已经分摊到每次数据对象的操作\"},\"2672\":{\"t\":\"缺点：\"},\"2673\":{\"t\":\"实现困难\"},\"2674\":{\"t\":\"高频率的更新引用会带来不小的开销\"},\"2675\":{\"t\":\"需要专门解决循环引用的情况。因为循环引用会导致引用计数无法更新到 0，造成对应的内存无法被回收的情况。\"},\"2676\":{\"t\":\"以上简单介绍了一些垃圾回收的方法，但是这些都是暂停用户程序，一段时间专注于进行垃圾回收（Stop The World）。这里有一个问题：用户真的可以接受长时间的暂停吗？\"},\"2677\":{\"t\":\"所以我们希望尽可能的缩短 STW 的时间。\"},\"2678\":{\"h\":\"增量式垃圾回收\",\"a\":\"增量式垃圾回收\"},\"2679\":{\"t\":\"如何缩短 STW 的时间，如果不能在算法层面上进行优化，那么就在使用层面上优化。\"},\"2680\":{\"t\":\"将用户程序与垃圾回收交替执行，将垃圾回收工作分多次来完成，这就是增量式垃圾回收。\"},\"2681\":{\"t\":\"这里解决方法也有一个问题：误判垃圾。\"},\"2682\":{\"t\":\"在交替执行的过程中，在这里一次垃圾回收工作中将某一个变量标记为垃圾，但是后面的程序运行时候，却需要使用到这个变量，产生了误判的结果，进而会影响程序正常执行。\"},\"2683\":{\"h\":\"原因\",\"a\":\"原因\"},\"2684\":{\"t\":\"根据三色抽象可以很方便的描述出垃圾回收器错误回收可达对象的情况，需要满足以下两个条件：\"},\"2685\":{\"t\":\"黑色对象中存在对白色对象的引用\"},\"2686\":{\"t\":\"不能从任何灰色对象追踪到该白色对象。\"},\"2687\":{\"t\":\"图片\"},\"2688\":{\"t\":\"解释：黑色对象不会被回收期再次处理了，而回收器正在处理的灰色对象又不能抵达这个白色对象，那么就会被当成垃圾，实际上白色对象并不是垃圾，是可达的。\"},\"2689\":{\"t\":\"如何解决呢？\"},\"2690\":{\"t\":\"在扫描过程中，直接不允许出现黑色对象到白色对象的引用。—强三色不变式\"},\"2691\":{\"t\":\"允许出现黑色对象对白色对象的引用，但是可以保证通过灰色对象可以抵达到白色对象。—弱三色不变式\"},\"2692\":{\"t\":\"实现强/弱三色不变式的通常做法是建立读/写屏障。\"},\"2693\":{\"h\":\"写屏障\",\"a\":\"写屏障\"},\"2694\":{\"t\":\"写屏障会在写操作中插入指令，目的是把数据对象的修改通知到垃圾回收器。那么写屏障通常有一个记录集。记录集的选择：\"},\"2695\":{\"t\":\"选择顺序存储，还是哈希存储，\"},\"2696\":{\"t\":\"是精确到修改的对象，还是只记录其所在的页\"},\"2697\":{\"t\":\"怎样选择都会带来不同的结果，需要根据具体的垃圾回收器类型，去设计写屏障的具体实现方案了。\"},\"2698\":{\"t\":\"强三色不变式，提醒我们关注黑色对象与白色对象之间的关系，无论如何不允许出现黑色对象到白色对象的引用，可以通过写屏障直接把白色对象标记为灰色，或者把黑色对象回退到灰色对象，这些都属于**【插入】写屏障**。\"},\"2699\":{\"t\":\"图片\"},\"2700\":{\"t\":\"图片\"},\"2701\":{\"t\":\"弱三色不变式，提醒我们关注那些到白色对象路径的破坏行为，例如在删除灰色对象对白色对象的引用时候，可以把白色对象着色成灰色，这个被称之为**【删除】写屏障**。\"},\"2702\":{\"t\":\"图片\"},\"2703\":{\"h\":\"读屏障\",\"a\":\"读屏障\"},\"2704\":{\"t\":\"非移动式垃圾回收器中，例如【标记+清扫】，天然的不需要读取屏障，但是如果像复制式回收器这样移动数据来避免碎片化，那么 GC 与用户程序交互时候，那么读数据不会很安全了。\"},\"2705\":{\"t\":\"🌰：复制式回收器已经将数据对象 A，复制到 To 空间去了，之后用户程序中某一个对象 B 却引用了 From 空间的陈旧对象 A，而回收器后续复制 B 到 To 空间时候，B 的新副本所持有的是陈旧对象 A，当 From 空间的数据整体被回收，对于陈旧对象 A 的访问便会出错\"},\"2706\":{\"t\":\"图片\"},\"2707\":{\"t\":\"在以上情况下就需要建立读屏障，确保用户程序不会访问到已经存在副本的陈旧对象。当检测到引用对象已经存在新副本时候，应该引用 To 空间的新副本。\"},\"2708\":{\"h\":\"多核场景\",\"a\":\"多核场景\"},\"2709\":{\"t\":\"我们到现在的讨论都是在单核的范围里面，但是实际上都是多核的场景。在多核场景下，垃圾回收器又会怎么样工作呢？\"},\"2710\":{\"h\":\"并行垃圾回收\",\"a\":\"并行垃圾回收\"},\"2711\":{\"t\":\"并行垃圾回收指的是暂停用户程序，多线程并行执行垃圾回收程序的场景，简单讲就是多台机器同时工作就是处理一件事情。\"},\"2712\":{\"t\":\"既然一份任务多个线程来完成，如何进行划分不同线程的任务呢？如果分工不均就会导致有的线程一直在工作，而有的线程则没有工作。\"},\"2713\":{\"t\":\"似乎直接划分工作区域是一个简单的方式，但是却不能保障满意的负载均衡。\"},\"2714\":{\"t\":\"实现线程间工作转移，可以实现较好的负载均衡，却会增加线程间的同步开销。\"},\"2715\":{\"t\":\"不同的同步方式，会带来不同的时间和空间的开销，这得根据场景进行选择。\"},\"2716\":{\"t\":\"除了一些共性问题，不同类型垃圾回收器也得处理一些个性化的问题，例如虽然像标记——清扫类垃圾回收器，重复处理同一个数据对象不会对回收正确性造成什么影响，但是考虑到性能，也是应该尽量避免的。\"},\"2717\":{\"h\":\"并发垃圾回收\",\"a\":\"并发垃圾回收\"},\"2718\":{\"t\":\"并发垃圾回收指的是在某时刻，用户程序与垃圾回收程序并发执行。这和并行垃圾回收是不同的。\"},\"2719\":{\"t\":\"并发场景下，依然需要使用读写屏障保障程序正确执行。不同的是，单核场景下，用户程序与垃圾回收程序不会同时执行，所以用户程序执行写屏障进行记录时，垃圾回收程序不会使用写屏障的记录集。但在多核并发场景下就不一定了，所以并发写屏障的设计还要考虑到用户程序之间，以及与垃圾回收程序之间的竞争问题。\"},\"2720\":{\"h\":\"主体式并发回收/主体增量式回收\",\"a\":\"主体式并发回收-主体增量式回收\"},\"2721\":{\"t\":\"如果没有任何 STW 时间，也就是垃圾回收程序与用户程序完成并发执行，那么垃圾回收开始的消息便很难准确及时的通知到所有线程，会出现某些线程开启写屏障的工作有一点点的延迟而发生错误。\"},\"2722\":{\"t\":\"所以在某些时刻采用 STW 的方式，其他时刻支持并发，叫做主体式并发垃圾回收，这样会更容易实现。\"},\"2723\":{\"t\":\"如果在此基础上再支持增量式回收，便属于主体并发增量式回收。\"},\"2724\":{\"t\":\"图片\"},\"2725\":{\"t\":\"垃圾回收是一个比较深奥的代码艺术，在这里我们只是简单的讲解，做了一个普及，如果你愿意可以找一些经典书籍去学习。\"},\"2726\":{\"t\":\"这一篇算得上是 Go 语言的 GC 的相关基础知识的普及。\"},\"2727\":{\"c\":[\"语言基础\",\"go\"]},\"2728\":{\"h\":\"Go程序启动流程\"},\"2729\":{\"t\":\"推荐阅读：\"},\"2730\":{\"t\":\"2.3 Go 程序启动引导\"},\"2731\":{\"t\":\"Golang并发编程-GPM调度过程源码分析\"},\"2732\":{\"t\":\"《Golang》深入Golang启动过程\"},\"2733\":{\"t\":\"从源码角度看 Golang 的调度\"},\"2734\":{\"h\":\"前言\",\"a\":\"前言\"},\"2735\":{\"t\":\"每次写 Go 程序我总是好奇他的启动流程，今天我们来扒一扒。\"},\"2736\":{\"t\":\"注：我用的电脑是 win10，所以很多地方并不是以 linux 为主。同时这是我自己的一个学习过程，可能会有错误，希望能够得到指导！\"},\"2737\":{\"t\":\"同时文章中的部分代码会经过处理的，会更注重于核心代码流程。\"},\"2738\":{\"t\":\"希望读者能够懂一点点的汇编语言。\"},\"2739\":{\"h\":\"汇编\",\"a\":\"汇编\"},\"2740\":{\"t\":\"Go 程序启动需要对自身运行时进行初始化，其真正的程序入口在 runtime 包里面。\"},\"2741\":{\"t\":\"不同平台的入口文件都不同， 以 AMD64 架构上的 Linux 和 macOS 以及 win10 为例，分别位于：src/runtime/rt0_linux_amd64.s 和 src/runtime/rt0_darwin_amd64.s 以及 src/runtime/rt0_windows_amd64.s。\"},\"2742\":{\"t\":\"这三个文件你都可以看到相类似的入口代码。\"},\"2743\":{\"t\":\"# runtime/rt0_windows_amd64.s #以windows 为例，linux 和macos 都是一致，只是名字的改变罢了。 TEXT _rt0_amd64_windows(SB),NOSPLIT,$-8 JMP _rt0_amd64(SB) \"},\"2744\":{\"t\":\"JMP 是无条件跳转，接着就跳转到了 _rt0_amd64 这个子程序。\"},\"2745\":{\"t\":\"这种做法符合直觉，在程序编译为机器码之后， 依赖特定 CPU 架构的指令集，而操作系统的差异则是直接反应在运行时进行不同的系统级操作上， 例如：系统调用。\"},\"2746\":{\"t\":\"rt0 其实是 runtime0 的缩写，意为运行时的创生，随后所有创建的都是 1 为后缀。\"},\"2747\":{\"t\":\"操作系统通过入口参数的约定与应用程序进行沟通。程序刚刚启动时，栈指针 SP 的前两个值分别对应 argc 和 argv，分别存储参数的数量和具体的参数的值\"},\"2748\":{\"t\":\"# runtime/asm_amd64.s # _rt0_amd64 is common startup code for most amd64 systems when using # internal linking. This is the entry point for the program from the # kernel for an ordinary -buildmode=exe program. The stack holds the # number of arguments and the C-style argv. #_rt0_amd64 是使用内部链接时大多数 amd64 系统的常见启动代码。这是普通 -buildmode=exe 程序的内核程序的入口点。堆栈保存参数的数量和 C 风格的 argv。 TEXT _rt0_amd64(SB),NOSPLIT,$-8 MOVQ 0(SP), DI // argc LEAQ 8(SP), SI // argv JMP runtime·rt0_go(SB) \"},\"2749\":{\"h\":\"rt0_go\",\"a\":\"rt0-go\"},\"2750\":{\"t\":\"接着继续跳转到 rt0_go 子程序里面。\"},\"2751\":{\"t\":\"我们来细细扒一扒这个里面的逻辑。\"},\"2752\":{\"t\":\"这前面一部分就是为了去确定程序入口参数和 CPU 处理器信息。\"},\"2753\":{\"t\":\"# runtime/asm_amd64.s TEXT runtime·rt0_go(SB),NOSPLIT|TOPFRAME,$0 // 将参数向前复制到一个偶数栈上 MOVQ DI, AX // argc MOVQ SI, BX // argv SUBQ $(4*8+7), SP // 2args 2auto ANDQ $~15, SP MOVQ AX, 16(SP) MOVQ BX, 24(SP) #从给定的（操作系统）堆栈中创建 istack。 _cgo_init 可能会更新 stackguard。 # 初始化 g0 执行栈 MOVQ $runtime·g0(SB), DI LEAQ (-64*1024+104)(SP), BX MOVQ BX, g_stackguard0(DI) MOVQ BX, g_stackguard1(DI) MOVQ BX, (g_stack+stack_lo)(DI) MOVQ SP, (g_stack+stack_hi)(DI) // 确定 CPU 处理器的信息 MOVL $0, AX CPUID MOVL AX, SI CMPL AX, $0 JE nocpuinfo #弄清楚如何序列化 RDTSC。在英特尔处理器上，LFENCE 就足够了。 AMD 需要 MFENCE。不知道其余的，所以让我们做MFENCE。 CMPL BX, $0x756E6547 // \\\"Genu\\\" JNE notintel CMPL DX, $0x49656E69 // \\\"ineI\\\" JNE notintel CMPL CX, $0x6C65746E // \\\"ntel\\\" JNE notintel MOVB $1, runtime·isIntel(SB) MOVB $1, runtime·lfenceBeforeRdtsc(SB) # 省略了一大段代码 \"},\"2754\":{\"t\":\"一个影响运行时非常重要的操作便是本地线程存储 （Thread Local Storage, TLS）。\"},\"2755\":{\"t\":\"# runtime/asm_amd64.s TEXT runtime·rt0_go(SB),NOSPLIT|TOPFRAME,$0 # 省略了一大段代码 notintel: #ifdef GOOS_darwin // 跳过 Darwin 上的 TLS 设置 JMP ok #endif LEAQ runtime·m0+m_tls(SB), DI #// DI = m0.tls CALL runtime·settls(SB) # 将 TLS 地址设置到 DI // // 使用它进行存储，确保能正常运行 get_tls(BX) MOVQ $0x123, g(BX) MOVQ runtime·m0+m_tls(SB), AX CMPQ AX, $0x123 // 判断 TLS 是否设置成功 JEQ 2(PC) // 如果相等则向后跳转两条指令 CALL runtime·abort(SB) // 使用 INT 指令执行中断 \"},\"2756\":{\"t\":\"创建全局变量 g0 和 m0，还需要将 m0 和 g0 通过指针进行相互关联。\"},\"2757\":{\"t\":\"# runtime/asm_amd64.s TEXT runtime·rt0_go(SB),NOSPLIT|TOPFRAME,$0 # 省略了一大段代码 // 设置 per-goroutine 和 per-mach“寄存器” // 程序刚刚启动，此时位于主线程 // 当前栈与资源保存在 g0 // 该线程保存在 m0 get_tls(BX) LEAQ runtime·g0(SB), CX MOVQ CX, g(BX) LEAQ runtime·m0(SB), AX //m0 和 g0 通过指针进行相互关联。 // save m->g0 = g0 MOVQ CX, m_g0(AX) // save m0 to g0->m MOVQ AX, g_m(CX) \"},\"2758\":{\"t\":\"这里做一些校验和系统级的初始化工作，包括：运行时类型检查， 系统参数的获取以及影响内存管理和程序调度的相关常量的初始化。\"},\"2759\":{\"t\":\"# runtime/asm_amd64.s TEXT runtime·rt0_go(SB),NOSPLIT|TOPFRAME,$0 # 省略了一大段代码 CLD // convention is D is always left cleared //运行时类型检查 CALL runtime·check(SB) MOVL 16(SP), AX // copy argc MOVL AX, 0(SP) MOVQ 24(SP), AX // copy argv MOVQ AX, 8(SP) //系统参数的获取 CALL runtime·args(SB) //影响内存管理的相关常量的初始化。 CALL runtime·osinit(SB) //程序调度的相关常量的初始化 CALL runtime·schedinit(SB) \"},\"2760\":{\"t\":\"马上就要开始运行了！\"},\"2761\":{\"t\":\"# runtime/asm_amd64.s TEXT runtime·rt0_go(SB),NOSPLIT|TOPFRAME,$0 # 省略了一大段代码 // 创建一个新的 goroutine 来启动程序 MOVQ $runtime·mainPC(SB), AX // entry // entry mainPC方法（也就是runtime·main函数，是一个全局变量）压入AX寄存器 PUSHQ AX PUSHQ $0 // arg size 压入第一个参数到栈 CALL runtime·newproc(SB) // 调用 newproc 函数创建一个新的g POPQ AX POPQ AX // 启动这个 M.mstart CALL runtime·mstart(SB) CALL runtime·abort(SB) // M.mstart 应该永不返回 RET //防止 debugCallV2 的死代码消除，它旨在由调试器调用。 MOVQ $runtime·debugCallV2<ABIInternal>(SB), AX RET \"},\"2762\":{\"t\":\"编译器负责生成了 main 函数的入口地址，runtime.mainPC 在数据段中被定义为 runtime.main 保存主 goroutine 入口地址：\"},\"2763\":{\"t\":\"# mainPC 是 runtime.main 的函数值，要传递给 newproc。对 runtime.main 的引用是通过 ABIInternal 进行的，因为 newproc 需要实际的函数（不是 ABI0 包装器）。 DATA runtime·mainPC+0(SB)/8,$runtime·main<ABIInternal>(SB) GLOBL runtime·mainPC(SB),RODATA,$8 \"},\"2764\":{\"t\":\"当 Go 程序的引导程序启动会调用下面核心函数完成校验与系统初始化：\"},\"2765\":{\"t\":\"check ：运行时类型检查\"},\"2766\":{\"t\":\"args ： 系统参数的获取\"},\"2767\":{\"t\":\"osinit ：影响内存管理的相关常量的初始化\"},\"2768\":{\"t\":\"schedinit ：程序调度与内存分配器、回收器的相关常量的初始化\"},\"2769\":{\"t\":\"newproc：负责根据主 goroutine （即 main）入口地址创建可被运行时调度的执行单元 G。\"},\"2770\":{\"t\":\"mstart ：开始启动调度器的调度循环。\"},\"2771\":{\"t\":\"根据分析，我们知道了，Go 程序既不是从 main.main 直接启动，也不是从 runtime.main 直接启动。 相反，其实际的入口位于 runtime._rt0_amd64_*。随后会转到 runtime.rt0_go 调用。\"},\"2772\":{\"t\":\"程序引导和初始化工作是整个运行时最关键的基础步骤之一。在 schedinit 这个函数的调用过程中， 还会完成整个程序运行时的初始化，包括调度器、执行栈、内存分配器、调度器、垃圾回收器等组件的初始化。 最后通过 newproc 和 mstart 调用进而开始由调度器转为执行主 goroutine。\"},\"2773\":{\"t\":\"启动流程图如下：\"},\"2774\":{\"t\":\"image-20211206191645379\"},\"2775\":{\"h\":\"核心函数\",\"a\":\"核心函数\"},\"2776\":{\"t\":\"我们在之前的分析里面了解到一些核心函数，现在我们来简单看看里面的逻辑，到底每个函数具体工作是什么？至于解析背后的原理，我们留到具体的章节去考虑。\"},\"2777\":{\"t\":\"check 函数，本质上是对编译器翻译工作的一个校验，再次检验类型的内存大小。\"},\"2778\":{\"t\":\"//# runtime/runtime1.go func check() { var ( a int8 b uint8 c int16 d uint16 //省略 ) type x1t struct { x uint8 } type y1t struct { x1 x1t y uint8 } var x1 x1t var y1 y1t // 校验 int8 类型 sizeof 是否为 1，下同 if unsafe.Sizeof(a) != 1 { throw(\\\"bad a\\\") } //省略 } \"},\"2779\":{\"t\":\"args 函数，将操作系统传递 argc,argv 两个参数赋值作为全局变量使用\"},\"2780\":{\"t\":\"//# runtime/runtime1.go var ( argc int32 argv **byte ) func args(c int32, v **byte) { argc = c argv = v sysargs(c, v) } \"},\"2781\":{\"t\":\"img\"},\"2782\":{\"t\":\"那么接下来调用系统特定的 sysargs 函数。\"},\"2783\":{\"t\":\"//runtime/os_dragonfly.go func sysargs(argc int32, argv **byte) { // 跳过 argv, envv 与第一个字符串为路径 n := argc + 1 //跳过 argv, envp 进入 auxv for argv_index(argv, n) != nil { n++ } // skip NULL separator // 跳过 NULL 分隔符 n++ // 尝试读取 auxv auxv := (*[1 << 28]uintptr)(add(unsafe.Pointer(argv), uintptr(n)*sys.PtrSize)) sysauxv(auxv[:]) } func sysauxv(auxv []uintptr) { // 依次读取 auxv 键值对 for i := 0; auxv[i] != _AT_NULL; i += 2 { tag, val := auxv[i], auxv[i+1] switch tag { case _AT_PAGESZ: // 读取内存页的大小 physPageSize = val } } } \"},\"2784\":{\"t\":\"在这里我已经懵了，已经涉及到了操作系统的底层那些内存页等等了。这里就不多去解释。我已经不懂了。😥\"},\"2785\":{\"t\":\"osinit 函数，会获取CPU核数，还会获取当前操作系统的页存大小。\"},\"2786\":{\"t\":\"//runtime/os_dragonfly.go func osinit() { // 获取CPU核数 ncpu = getncpu() if physPageSize == 0 { physPageSize = getPageSize() } } \"},\"2787\":{\"t\":\"schedinit 函数，名字上是调度器的一个初始化，其实内部实际上干的事情都是一些核心部分的初始化，例如：栈，内存，gc，线程等等。\"},\"2788\":{\"t\":\"这里的初始化也是有一定顺序规则的，至于为什么，可能是因为前面的函数为后面的函数提供一定的重要数据。\"},\"2789\":{\"t\":\"// 引导的序列 is: // call osinit // call schedinit // make & queue new G //将new G加入到队列中 // call runtime·mstart // The new G calls runtime·main. func schedinit() { lockInit(&sched.lock, lockRankSched) //省略 lockinit //获取 g 的一个对象 _g_ := getg() sched.maxmcount = 10000 // 限制最大系统线程数量 // The world starts stopped. 用于lock rank, worldStopped() moduledataverify() stackinit() // 初始化执行栈 mallocinit() // 初始化内存分配器 fastrandinit() // must run before mcommoninit // 随机数初始化， mcommoninit(_g_.m, -1) // 初始化当前系统线程 //预分配的 ID 可以作为“id”传递，或者通过传递 -1 来省略。 cpuinit() // must run before alginit // 初始化CPU信息 alginit() // maps must not be used before this call // 主要初始化哈希算法的值 modulesinit() // provides activeModules // activeModules数据初始化，主要是用于gc的数据, typelinksinit() // uses maps, activeModules // 主要初始化activeModules的typemap itabsinit() // uses activeModules // 初始化interface相关， sigsave(&_g_.m.sigmask) // 初始化m的signal mask initSigmask = _g_.m.sigmask goargs() // 参数放到argslice变量中 goenvs() // 环境变量放到envs中 parsedebugvars() // 初始化一系列debug相关的变量 gcinit() // 垃圾回收器初始化 //调度器加锁 lock(&sched.lock) sched.lastpoll = uint64(nanotime()) // 创建 P // 通过 CPU 核心数和 GOMAXPROCS 环境变量确定 P 的数量 procs := ncpu // // procs设置成cpu个数 if n, ok := atoi32(gogetenv(\\\"GOMAXPROCS\\\")); ok && n > 0 { // 如果GOMAXPROCS有设置，则覆盖procs的值 procs = n } // 增加或减少p的实例个数(填procs个p到存放所有p的全局变量allp中)，多了就清理多的p，少了就新建p，但是并没有启动m，m启动后会从这里取p并挂钩上 if procresize(procs) != nil { throw(\\\"unknown runnable goroutine during bootstrap\\\") } //调度器解锁 unlock(&sched.lock) //省略一大段代码 } \"},\"2790\":{\"t\":\"newproc 函数，当前 M 的 P 下创建了一个新的 G，其实也就是我们期待的 runtime.main，不会一开始就直接添加到运行队列中，而是放到 P 的本地队列，成为下一个运行的 G。\"},\"2791\":{\"t\":\"为什么这里一定要放到 runtime.runnext，不是运行队列中呢？\"},\"2792\":{\"t\":\"我的猜测当前是 G0,而且此时其实 m 的对应线程并没有创建出来，现在只是再初始化一些 m 的相关属性，所以不适合直接放入到运行队列中。\"},\"2793\":{\"t\":\"func newproc(siz int32, fn *funcval) { argp := add(unsafe.Pointer(&fn), sys.PtrSize) gp := getg() // 获取当前goroutine的指针， pc := getcallerpc() // 获取伪寄存器PC的内容，函数也是由编译器填充 systemstack(func() { //创建一个新的G newg := newproc1(fn, argp, siz, gp, pc) //关键函数 //获取P的指针 _p_ := getg().m.p.ptr() //将新创建的的 G，添加到 runtime.runnext 队列中如果运行队列满了，就添加到全局队列供其他P进行调度 runqput(_p_, newg, true) //尝试再添加一个 P 来执行 G 的。当 G 变为可运行时调用（newproc，ready）。 if mainStarted { wakep() } }) } func newproc1(fn *funcval, argp unsafe.Pointer, narg int32, callergp *g, callerpc uintptr) *g { (...) _g_ := getg() _p_ := _g_.m.p.ptr() newg := gfget(_p_) //// 从p的dead g列表中获取一个g对象，没有的话就从全局g列表中抓取一批g对象放入p的的dead g列表中，再从中获取。g在运行结束后会重新放入dead g列表等待重复利用 if newg == nil { // 一开始启动应该取不到 newg = malg(_StackMin) // 新建一个g casgstatus(newg, _Gidle, _Gdead) // 设置g的状态从idle到dead allgadd(newg) // 使用 G-> 状态的 Gdead 发布，因此 GC 扫描程序不会查看未初始化的堆栈。 } (...) (...)//关于newg的属性配置 newg.startpc = fn.fn // 将mainPC方法(就是runtime·main方法)指定为这个协程的启动方法 if _g_.m.curg != nil { newg.labels = _g_.m.curg.labels } if isSystemGoroutine(newg, false) { atomic.Xadd(&sched.ngsys, +1) } // Track initial transition? newg.trackingSeq = uint8(fastrand()) if newg.trackingSeq%gTrackingPeriod == 0 { // 判断是不是系统协程（g启动函数包含runtime.*前缀的都是系统协程，除了runtime.main, runtime.handleAsyncEvent） newg.tracking = true } casgstatus(newg, _Gdead, _Grunnable) // 设置g的状态从dead状态到runnable状态 （...） releasem(_g_.m) // 放弃独占m return newg } \"},\"2794\":{\"t\":\"mstart 函数，主要是启动 M，并且开启调度（我们下一次再讨论这个）。\"},\"2795\":{\"t\":\"//mstart 是 new Ms 的入口点。它是用汇编编写的，使用 ABI0，标记为 TOPFRAME，并调用 mstart0。 func mstart() func mstart0() { _g_ := getg() osStack := _g_.stack.lo == 0 if osStack { //从系统堆栈初始化堆栈边界。 Cgo 可能在 stack.hi 中保留了堆栈大小。 minit 可能会更新堆栈边界。注意：这些界限可能不是很准确。我们将 hi 设置为 &size，但它上面还有一些东西。 1024 应该可以弥补这一点，但有点武断。 size := _g_.stack.hi if size == 0 { size = 8192 * sys.StackGuardMultiplier } _g_.stack.hi = uintptr(noescape(unsafe.Pointer(&size))) _g_.stack.lo = _g_.stack.hi - size + 1024 } //初始化堆栈保护，以便我们可以开始调用常规 // Go code. _g_.stackguard0 = _g_.stack.lo + _StackGuard // 这是 g0，所以我们也可以调用 go:systemstack 函数来检查 stackguard1。 _g_.stackguard1 = _g_.stackguard0 mstart1() // Exit this thread. if mStackIsSystemAllocated() { // Windows、Solaris、illumos、Darwin、AIX 和Plan 9 总是system-allocate stack，但是在mstart 之前放在_g_.stack 中，所以上面的逻辑还没有设置osStack。 osStack = true } mexit(osStack) } func mstart1() { _g_ := getg() if _g_ != _g_.m.g0 { // 判断是不是g0 throw(\\\"bad runtime·mstart\\\") } _g_.sched.g = guintptr(unsafe.Pointer(_g_)) _g_.sched.pc = getcallerpc() // 保存pc、sp信息到g0 _g_.sched.sp = getcallersp() asminit() // asm初始化 minit() // m初始化 // Install signal handlers; after minit so that minit can // prepare the thread to be able to handle the signals. if _g_.m == &m0 { mstartm0() // 启动m0的signal handler } if fn := _g_.m.mstartfn; fn != nil { fn() } if _g_.m != &m0 { // 如果不是m0 acquirep(_g_.m.nextp.ptr()) _g_.m.nextp = 0 } schedule() // 进入调度。这个函数会阻塞 } \"},\"2796\":{\"h\":\"总结流程\",\"a\":\"总结流程\"},\"2797\":{\"t\":\"入口：rt0_windows_amd64.s 汇编函数\"},\"2798\":{\"t\":\"初始化 m0,g0\"},\"2799\":{\"t\":\"check ：检查各个类型占用内存大小的正确性\"},\"2800\":{\"t\":\"args ： 设置 argc、argv参数\"},\"2801\":{\"t\":\"osinit ：操作系统相关的 init，比如页大小\"},\"2802\":{\"t\":\"schedinit ：初始化所有 P，初始化其他细节\"},\"2803\":{\"t\":\"newproc ：当前m（m0）的 p 下新建一个 g，指定为 p 的下一个运行的 g\"},\"2804\":{\"t\":\"mstart ：m0启动，接着进入调度，这里阻塞\"},\"2805\":{\"t\":\"abort：退出\"},\"2806\":{\"h\":\"进一步参考文章\",\"a\":\"进一步参考文章\"},\"2807\":{\"t\":\"MinGW-w64安装教程\"},\"2808\":{\"t\":\"Windows平台安装GDB调试器\"},\"2809\":{\"t\":\"[go runtime] - go程序启动过程\"},\"2810\":{\"h\":\"tips\",\"a\":\"tips\"},\"2811\":{\"t\":\"自己整体流程过了一遍后，感觉还是有点点糊糊的。可能自己对操作系统的知识还是不够多，不够支撑自己理解整个过程，但是不用慌。慢慢来！加油团子！\"},\"2812\":{\"t\":\"后续会逐渐学习操作系统，然后补充相关的细节。\"},\"2813\":{\"c\":[\"语言基础\",\"go\"]},\"2814\":{\"h\":\"GPM\"},\"2815\":{\"t\":\"推荐学习：\"},\"2816\":{\"t\":\"【Golang】一个Hello World程序的执行\"},\"2817\":{\"t\":\"Golang并发编程-GPM调度过程源码分析\"},\"2818\":{\"t\":\"Golang并发编程-GPM协程调度模型原理及结构分析\"},\"2819\":{\"t\":\"[典藏版]Golang调度器GPM原理与调度全分析\"},\"2820\":{\"t\":\"Golang并发调度的GMP模型\"},\"2821\":{\"h\":\"hello world！\",\"a\":\"hello-world\"},\"2822\":{\"t\":\"我们一直写 Go 程序，你是否考虑过，一个 hello word！他是如何运行起来的。我们来深挖一波！！\"},\"2823\":{\"t\":\"package main import \\\"fmt\\\" func main() { fmt.Println(\\\"hello world!\\\") } \"},\"2824\":{\"t\":\"这段程序编译后成为为一个可执行文件，执行时候可执行文件被加载到内存中。相信大家在学校里面学过编译原理，一段简单的汇编代码会分成多个段：数据段，代码段，堆栈段，子程序等等。\"},\"2825\":{\"t\":\"数据段\"},\"2826\":{\"t\":\"对于数据段，有很多重要的全局变量，我们一起来看看。\"},\"2827\":{\"t\":\"主协程：g0 与 主线程 m0\"},\"2828\":{\"t\":\"协程对应的数据结构是 runtime.g，工作线程对应的数据结构是 runtime.m。``\"},\"2829\":{\"t\":\"g0 就是主协程对应的 g，与其他协程不同，他的协程栈实际上是在主线程栈上分配的。\"},\"2830\":{\"t\":\"m0 是主线程对应的 m。\"},\"2831\":{\"t\":\"g0 持有 m0 的指针，m0 也记录着 g0 的指针。一开始 m0 上执行的协程正是 g0。m0 与 g0 就联系起来了。\"},\"2832\":{\"t\":\"allgs，allm，allp\"},\"2833\":{\"t\":\"allgs 记录着所有的 g。\"},\"2834\":{\"t\":\"allm 记录着所有的 m。\"},\"2835\":{\"t\":\"allp 记录着所有的 p。\"},\"2836\":{\"t\":\"sched\"},\"2837\":{\"t\":\"最初 Go 语言的调度模型里面只有 M 和 G，所以会有一个 G run queue 里面都是待执行的 G ，每个 M 来到队列获取一个 G 时候都会加锁。多个 M 会分担多个 G 的任务，途中会因为前面的 M 频繁加锁和解锁而发生等待，影响程序的并发性能。\"},\"2838\":{\"t\":\"为了解决这个问题，又引入了一个 P，P 对应的数据结构是 runtime.p。他有一个 runq [256]guintptr ，通过把一个 P 关联到一个 M，这个 M 就可以从 P 的本地 runq 这里获取待执行的 G，不用每次都与其他的 M 在队列中争抢任务了，性能也会提升。\"},\"2839\":{\"t\":\"全局 runq 保存在 全局变量 sched 中，sched 代表是调度器，对应的数据结构是 runtime.schedt。这里记录着所有空闲的 M，空闲的 P，以及许多与调度相关的内容。\"},\"2840\":{\"t\":\"如果一个 P 的本地 runq 已满，那么等待执行的 G 会被放到这个全局 runq 中。M 执行 G 过程如下：\"},\"2841\":{\"t\":\"M 会先去执行对应的 P 本地 runq 中待执行的 G，\"},\"2842\":{\"t\":\"如果没有的话，再到调度器这里全局 runq 领取任务。\"},\"2843\":{\"t\":\"如果也没有了，就会从别的 P 那里分担一部分的 G 过来执行。\"},\"2844\":{\"t\":\"image-20211204194241881\"},\"2845\":{\"t\":\"代码段\"},\"2846\":{\"t\":\"对于这段程序编译成的代码段，程序入口并不是 main.main，不同平台下程序开始进入入口不同。简单的流程如下：\"},\"2847\":{\"t\":\"进入后再进行一系列检查与初始化等准备工作后，\"},\"2848\":{\"t\":\"当 main.goroutine 创建后会被加入到当前 P 的本地队列中，\"},\"2849\":{\"t\":\"然后通过 mstart 函数开启调度循环，队列中只有 main.goroutine 正在等待执行，所以 g0 会切换成 main.goroutine，\"},\"2850\":{\"t\":\"执行入口就是 runtime.main，他会做一些准备工作，监控线程，包初始化等，\"},\"2851\":{\"t\":\"然后就要调用 main.main 了，终于输出了 hello world！。\"},\"2852\":{\"t\":\"image-20211204193223832\"},\"2853\":{\"t\":\"在这里只是简单的用一个例子去介绍了一些相关的代码与变量，后续会进行详细解答。\"},\"2854\":{\"h\":\"详解 GPM\",\"a\":\"详解-gpm\"},\"2855\":{\"t\":\"我们在前面总说 GPM ，那么他们分别代表什么意思呢？\"},\"2856\":{\"t\":\"G 代表 Goroutine，Golang 中的协程，通过 Goroutine 封装的代码片段将以协程方式并发执行，是GPM调度器调度的基本单位。\"},\"2857\":{\"t\":\"P 代表 Processor，GPM 调度器中关联内核级线程与协程的中间调度器，帮助线程去执行协程的任务。\"},\"2858\":{\"t\":\"M 代表 Machine，是内核线程的封装，Goroutine的执行提供了底层线程能力支持。\"},\"2859\":{\"t\":\"白话解释：M 需要去执行 G 的任务，为了更高并发执行性能，我们引入 P，来起到帮助作用。\"},\"2860\":{\"h\":\"M\",\"a\":\"m\"},\"2861\":{\"t\":\"我们来看看 M 的结构：\"},\"2862\":{\"t\":\"type m struct { g0 *g //g 结构体指针，主协程对应的 g0 mstartfn func() //函数类型，对应着当前内核线程需要执行的 Goroutine 函数片段 curg *g //g 结构体指针，对应着当前该 M 相关联(要执行)的 G。 p puintptr //地址类型，对应着当前该 M 关联的 P。 nextp puintptr //地址类型，标识下一个可能与该 M 存在关联的 P。 oldp puintptr //地址类型，记录上一个与该 M 关联的 P。 lockedg guintptr //地址类型，标识当前正在锁定该 M 的G，通过 LockOSThread 进行 G 和 M 的锁定，一旦 G 和 M 锁定后，该 G 只可由该 M 执行。 spinning bool //布尔类型，表示当前是否正在自旋，自旋则代表当前 M 正在寻找可执行的 G。 incgo bool //布尔类型，表示当前是否正在执行 cgo 调用。 ncgo int32 //int32类型，表示当前正在执行的 cgo 调用数目。 // 忽略 } \"},\"2863\":{\"h\":\"P\",\"a\":\"p\"},\"2864\":{\"t\":\"const ( _Pidle = iota //当前p尚未与任何m关联，处于空闲状态 ->0 _Prunning //当前p已经和m关联，并且正在运行g代码 ->1 _Psyscall //当前p正在执行系统调用 ->2 _Pgcstop //当前p需要停止调度，一般在GC前或者刚被创建时 ->3 _Pdead //当前p已死亡，不会再被调度 ->4 ) type p struct { status uint32 //表示当前P的状态，为上述五个状态之一 schedtick uint32 //调度计数器，每被调度一次则自增1 syscalltick uint32 //系统调用计数器，每进行一次系统调用则自增1 m muintptr //即将要关联的m，M的nextp字段对应着该P runqhead uint32 //可运行G队列头，标识目前正在运行的G runqtail uint32 //可运行G队列尾 runq [256]guintptr //可运行的G队列，默认容量为256个G runnext guintptr //下一个将要运行的G gFree struct { //空闲G列表，存储着状态为Gdead的G，当其数目过多时，将会被转移到调度器全局G列表，用于被其他P再次使用（相当于一个G缓存池） gList n int32 } } \"},\"2865\":{\"t\":\"P 的生命周期：\"},\"2866\":{\"t\":\"image.png\"},\"2867\":{\"h\":\"G\",\"a\":\"g\"},\"2868\":{\"t\":\"const ( _Gidle = iota //当前 G 刚被分配，还未初始化 ->0 _Grunnable //正在可运行队列等待运行 ->1 _Grunning //正在运行中，执行G函数 ->2 _Gsyscall //正在执行系统调用 ->3 _Gwaiting //正在被阻塞，一般是该G正在执行网络I/O操作，或正在执行time.Timer、time.Sleep ->4 _Gmoribund_unused //_Gmoribund_unused is currently unused, but hardcoded in gdb ->5 _Gdead //已经使用完正在闲置，放入空闲G列表中，可被再次使用（和P不同，P处于Pdead状态则无法被再次调度） ->6 _Genqueue_unused //_ Genqueue _ unused 当前未使用。 ->7 _Gcopystack //表示当前 G 的栈正在被移动，可能是因为栈的收缩或扩容 ->8 _Gscan = 0x1000 //表明当前正在进行GC扫描，由于在GC扫描的过程中肯定会处于某个前置状态， _Gscanrunnable = _Gscan + _Grunnable //代表当前 G 正等待运行，同时栈正被 GC 扫描 // 0x1001 _Gscanrunning = _Gscan + _Grunning //表示正处于 Grunning状态，同时栈在被 GC 扫描 // 0x1002 _Gscansyscall = _Gscan + _Gsyscall //表示正处于 Gwaiting状态，同时栈在被 GC 扫描 // 0x1003 _Gscanwaiting = _Gscan + _Gwaiting //表示正处于 Gsyscall状态，同时栈在被 GC 扫描 // 0x1004 _Gscanpreempted = _Gscan + _Gpreempted // 0x1009 ) type g struct { stack stack // offset known to runtime/cgo //当前G所被分配的栈内存空间，由lo及hi两个内存指针组成 stackguard0 uintptr // offset known to liblink g0的最大栈内存地址，当超过了这个数值则需要进行栈扩张 stackguard1 uintptr //普通用户G的最大栈内存地址，当超过了这个数值则需要进行栈扩张 m *m // current m; offset known to arm liblink 当前关联该G实例的M实例 sched gobuf //记录G上下文环境，用于上下文切换 atomicstatus uint32 //G的状态值，表示上述几个状态 waitreason waitReason // if status==Gwaiting 处于Gwaiting的原因 preempt bool // preemption signal, duplicates stackguard0 = st 当前G是否可抢占 startpc uintptr // pc of goroutine function 当前G所绑定的函数内存地址 } \"},\"2869\":{\"t\":\"G 生命周期：\"},\"2870\":{\"t\":\"image.png\"},\"2871\":{\"h\":\"sched (调度器)\",\"a\":\"sched-调度器\"},\"2872\":{\"t\":\"type schedt struct { // 全局唯一id goidgen uint64 // 记录的最后一次从i/o中查询G的时间 lastpoll uint64 // 互斥锁 lock mutex // M的空闲链表，通过m.schedlink组成一个M空闲链表 midle muintptr // 正处于自旋状态的M数量 nmidle int32 // 已经被锁定且正在自旋的M数量 nmidlelocked int32 // 下一个M的id，或者是目前已存在的M数量 mnext int64 // M数量的最大值 maxmcount int32 // 已被释放掉的M数量 nmfreed int64 // 系统所开启的协程数量（非用户协程） ngsys uint32 // 空闲P列表 pidle puintptr // 空闲的P数量 npidle uint32 // 全局的G队列 // 根据runqhead可以获取队列头的G及g.schedlink形成G链表 runqhead guintptr runqtail guintptr // 全局G队列大小 runqsize int32 // 等待释放的M列表 freem *m // 是否需要暂停调度（通常因为GC带来的STW） gcwaiting uint32 // 需要停止但是仍为停止的P数量 stopwait int32 // 实现stopwait事件通知 stopnote note // 停止调度期间是否进行系统监控任务 sysmonwait uint32 // 实现sysmonwait事件通知 sysmonnote note } \"},\"2873\":{\"h\":\"核心容器\",\"a\":\"核心容器\"},\"2874\":{\"t\":\"image.png\"},\"2875\":{\"h\":\"详解调度过程\",\"a\":\"详解调度过程\"},\"2876\":{\"h\":\"系统初始化\",\"a\":\"系统初始化\"},\"2877\":{\"t\":\"Go 程序的引导程序启动进行系统初始化，核心步骤：\"},\"2878\":{\"c\":[\"语言基础\",\"go\"]},\"2879\":{\"h\":\"Go语言必知\"},\"2880\":{\"t\":\"当你想要去看一个项目的源码时候，第一步应该先了解它的目录结构。\"},\"2881\":{\"h\":\"目录总览\",\"a\":\"目录总览\"},\"2882\":{\"t\":\". ├── AUTHORS #Golang官方作者清单 ├── CONTRIBUTING.md #加入贡献者队列的指导文件 ├── CONTRIBUTORS #第三方贡献者清单 ├── LICENSE #授权协议 ├── PATENTS #专利 ├── README.md #说明文件 ├── SECURITY.md #安全政策 ├── codereview.cfg #代码审核 ├── api #Golang每个版本的功能列表归档文件 ├── doc #Golang文档说明，和官方文档相同，可以离线查看 ├── lib #像是库文档模板，里面列举了time包的说明 ├── misc #汇集了Go语言相关的IDE、插件、cgo测试程序、示例等乱七八糟的东西 ├── src #Golang核心实现都在这里 └── test #Golang单元测试程序，通过查看测试程序可以学习到golang的用法和特性 \"},\"2883\":{\"h\":\"api\",\"a\":\"api\"},\"2884\":{\"t\":\"该目录中的每个文件都是 Go 语言 API 列表，每行一个，方便 IDE 使用。\"},\"2885\":{\"t\":\". ├── except.txt ├── go1.1.txt ├── go1.10.txt ├── go1.11.txt ├── go1.12.txt ├── go1.13.txt ├── go1.14.txt ├── go1.15.txt ├── go1.16.txt ├── go1.17.txt ├── go1.2.txt ├── go1.3.txt ├── go1.4.txt ├── go1.5.txt ├── go1.6.txt ├── go1.7.txt ├── go1.8.txt ├── go1.9.txt ├── go1.txt ├── next.txt └── README \"},\"2886\":{\"t\":\"README：说明文件，里面有对该目录下文件作用的说明\"},\"2887\":{\"t\":\"except.txt：列举了接下来可能会废弃的 API，但是并不影响兼容问题\"},\"2888\":{\"t\":\"go*.txt：囊括了每个版本的 API 列表，文件内容只增不减，版本发布后就归档不再改动\"},\"2889\":{\"t\":\"next.txt：列举了未来的版本可能实现的新功能\"},\"2890\":{\"h\":\"src\",\"a\":\"src\"},\"2891\":{\"t\":\"├── archive #归档文件处理库，可以用来处理tar与zip类型文件。 ├── bufio #主要用于文本的读取写入，对io.Reader和io.Writer进行了实现和封装，提供了比较便利的方法操作文件。 ├── builtin #定义了常用了内置类型、函数和接口，比如make、new、len、error等。 ├── bytes #定义了用来操作字节的函数。 ├── cmd #提供了Go语言的基本工具，比如我们常用的代码格式化工具gofmt、静态检查工具vet等。 ├── compress #压缩、解压工具，支持bzip2、flate、gzip、lzw、zlib等格式。 ├── constraints #约束定义了一组与类型参数一起使用的有用约束。 ├── container #提供了双向链表（list）、堆（heap）、环形联表（ring）的数据结构的操作。 ├── context #通常在goroutine切换执行时，需要知道相关状态信息才能执行，而这些信息就被封装在context中，它的使用在Go语言中十分广泛。 ├── crypto #封装了很多加解密算法，比如rsa、sha1、aes、md5等函数。 ├── database #提供了各种数据库的通用API，比如SQLite、MySQL、Postgres。 ├── debug #支持Go程序调试。 ├── embed #包嵌入提供了对正在运行的 Go 程序中嵌入的文件的访问。 ├── encoding #封装了各类编码的实现，比如base64、json、xml、hex等。 ├── errors #是我们经常使用的错误函数，也可以自定义。 ├── expvar #提供了一系列标准接口，可以通过HTTP的方式将服务器的变量以JSON格式打印出来。 ├── flag #解析处理命令行参数的工具。 ├── fmt #封装了各种格式化输出方法。 ├── go ├── hash #封装了crc32、crc64在内的哈希函数。 ├── html #HTML模板引擎，可以将代码与HTML混合在一起，它会负责解析转义，类似python的jinja、php的smarty等。 ├── image #一般语言都会有的图像处理库。 ├── index #用来实现字符串高速匹配查找。 ├── internal #internal专门用来控制包导入权限的，以internal命名的包只允许它父级和父级的子级目录导入。 ├── io #为文件I/O提供了一些基本的接口，bufio就对它进行了实现。 ├── log #封装了日志记录方法，比如log.Fatal、log.Print等。 ├── math #封装了基本的数学相关的函数。 ├── mime #封装了MIME类型的解析，MIME是媒体类型，比如文档、文件、字节流性质的格式。 ├── net #封装了各种网络IO的函数，比如TCP、UDP、Socket等。 ├── os #封装了用来操作操作系统的命令，比如调用exec可以执行shell脚本等，当然它支持不同平台的操作。 ├── path #实现了用于处理斜杠分隔符路径的函数。 ├── plugin #Go1.8版本以后提供的插件机制，可以动态地加载动态链接库文件.so，这样对外发布动态链接库就不需要把源码给到对方进行编译了。 ├── reflect #封装反射读取方法，比如读取结构体的方法、属性等。 ├── regexp #封装了正则表达式的实现。 ├── runtime #包含了Go运行时的操作， ├── sort #封装了部分排序算法。 ├── strconv #封装了基础类型与字符串互相转换的方法，比如int转string，反之亦然。 ├── strings #封装了字符串操作的相关方法。 ├── sync #封装了基本的同步机制，各种锁的实现。 ├── syscall #封装了一系列系统调用的接口。 ├── testing #为Go语言测试程序提供支持。 ├── text #封装了文本处理相关的方法，比如文本扫描或文本标签过滤器等。 ├── time #封装了时间处理相关的函数，比如获取当前时间，计算时间差等。 ├── unicode #封装了utf8、utf16的编解码方法。 ├── unsafe #用于一些不安全的操作场景，比如正常情况下，指向不同类型数据的指针是无法互相转换的，但是就可以用unsafe的Pointer方法来实现，所以应该要谨慎使用。 └── vendor \"},\"2892\":{\"h\":\"cmd\",\"a\":\"cmd\"},\"2893\":{\"t\":\"├── addr2line #因为linux上才支持这个命令，所以这里做了一个模拟器，用来支持pprof的 ├── api #用于生成Go语言API列表 ├── asm #汇编器，将源文件汇编为目标文件 ├── buildid #用来更新库或二进制文件中构建的标识 ├── cgo #支持创建调用C代码的包 ├── compile #编译工具 ├── cover #用来分析单元测试覆盖率的工具 ├── dist #是一个引导程序，负责构建Go语言的其他工具 ├── doc #用于提取并生成Go程序文档 ├── fix #用来找到使用旧API的程序，然后更新为新的API ├── go #我们经常用的go命令，管理源代码工具 ├── go.mod ├── go.sum ├── gofmt #代码格式化工具 ├── internal #一些内部通用实现，被其他包调用 ├── link #连接器 ├── nm #列出了由目标文件，归档文件或可执行文件定义或使用的符号 ├── objdump #跟addr2line作用一样，这是linux中该命令的模拟实现，用来支持pprof ├── pack #备份压缩工具，是unix系统中ar工具的简单实现，它可以将多个文件打包为一个备存文件 ├── pprof #Go程序的性能分析工具 ├── README.vendor ├── test2json #将Go测试程序的输出转换为机器可读的JSON流 ├── trace #用来跟踪分析goroutines运行调度状态等功能的工具，比pprof更加细粒度 ├── vendor #Go语言包依赖工具 └── vet #代码静态检查工具 \"},\"2894\":{\"h\":\"参考文章\",\"a\":\"参考文章\"},\"2895\":{\"t\":\"超详细Go语言源码目录说明\"},\"2896\":{\"c\":[\"语言基础\",\"go\"]},\"2897\":{\"h\":\"panic&recover\"},\"2898\":{\"t\":\"推荐阅读：【Golang】图解panic & recover\"},\"2899\":{\"h\":\"前言\",\"a\":\"前言\"},\"2900\":{\"t\":\"之前在 defer 的解析知道，当前执行的 goroutine 持有一个 defer 链表的头指针。其实他也有一个 panic 头指针。\"},\"2901\":{\"t\":\"图片\"},\"2902\":{\"t\":\"接下来看看 panic 是怎么处理的。\"},\"2903\":{\"h\":\"panic\",\"a\":\"panic\"},\"2904\":{\"t\":\"func A(){ defer A1() defer A2() panic(\\\"panicA\\\") fmt.Println(\\\"这里不会被执行\\\") } func A2(){ fmt.Println(\\\"A2正常结束\\\") } func A1(){ fmt.Println(\\\"A1正常结束\\\") } func main() { A() } \"},\"2905\":{\"t\":\"函数 A 注册了两个 defer 函数 A1 和 A2，然后发生了 panic。发生 panic 后，它会立刻停止执行当前函数剩余代码，而是进入了 panic 处理逻辑函数。\"},\"2906\":{\"t\":\"首先会在 panic 链表头处增加一项 panicA，是现在的执行的 panicA，然后在当前的 goroutine 递归执行注册的 defer 函数。这里有点不一样的地方。\"},\"2907\":{\"t\":\"//defer 1.12 type _defer struct { siz int32 started bool // panic执行defer时会把它标记为true sp uintptr pc uintptr fn *funcval _panic *_panic // 记录触发defer执行的_panic指针 link *_defer } \"},\"2908\":{\"t\":\"panic 执行到一个 defer 会先将他的 _defer 结构体的字段 started 设为 true，代表他已经开始执行了，并将字段 _panic 指向当前执行的 panic，表示当前执行的 defer 函数由这个 panic 函数触发的。\"},\"2909\":{\"t\":\"处理完字段赋值，函数 A2 就会正常执行与结束，然后就会移除这一项，继续执行下一个 defer。\"},\"2910\":{\"t\":\"之所以要等到 defer 函数正常返回以后再移除对应的 defer 链表项，主要是为了应对 defer 函数没有正常结束的情况。\"},\"2911\":{\"h\":\"defer 非正常结束\",\"a\":\"defer-非正常结束\"},\"2912\":{\"t\":\"我们再来看个例子：\"},\"2913\":{\"t\":\"func A(){ defer A1() panic(\\\"panicA\\\")//打印panic 信息 } func A1(){ fmt.Println(\\\"A1再次panic\\\") panic(\\\"panicA1\\\")//打印panic信息 } \"},\"2914\":{\"t\":\"在函数 A 中先注册 defer 函数 A1，然后执行到 panic，panic 链表就会增加一项 panicA。之后就会执行 defer 链表的函数。A1 的 _defer 结构体会将 started 置为 true 和 _panic 指向当前执行的 panic。\"},\"2915\":{\"t\":\"图片\"},\"2916\":{\"t\":\"A1 开始执行，再次发生了 panic，当前函数立刻停止执行剩下的代码，在 panic 链表插入了一个新的 _panic，记为 panicA1。\"},\"2917\":{\"t\":\"现在要开始去执行 defer 链表的函数了，但是发现 defer 链表的函数 A1，触发执行的不是当前 panicA1，是之前的 panicA。\"},\"2918\":{\"t\":\"这里会根据 A1 的字段 _panic 找到之前触发执行的 panicA 函数，将它标记为终止。\"},\"2919\":{\"t\":\"type _panic struct { argp unsafe.Pointer //用来存储panic正在执行的defer函数的参数空间地址; arg interface{} //是panic函数自己的参数; link *_panic //自然是链到上一个_panic结构体； recovered bool //标识这个panic是否被恢复； aborted bool //标识这个panic是否被终止。 } \"},\"2920\":{\"t\":\"panicA 的结构体字段 aborted 置为 true。并移除 defer 链表的 A1 函数。\"},\"2921\":{\"t\":\"此时链表已经为空了，那么对于当前执行的 panicA1 函数，没有需要去递归执行的 defer 函数了，就要开始打印信息了。\"},\"2922\":{\"t\":\"panic 打印信息从链表尾开始，也就是根据链表项插入顺序逐一输出。在这里就会先输出 panicA 的信息然后输出 panicA1 的信息，程序结束。\"},\"2923\":{\"t\":\"关键点：\"},\"2924\":{\"t\":\"panic 执行 defer 函数方式是：先标记，执行结束后移除，如果触发指针不匹配则终止之前工作的 panic。\"},\"2925\":{\"t\":\"panic 打印异常信息：顺序从链表尾输出即根据注册顺序来输出信息，所有在 panic 链表的都会被输出。\"},\"2926\":{\"h\":\"recover\",\"a\":\"recover\"},\"2927\":{\"t\":\"recover 可以中止 panic 造成的程序崩溃，但是它只能在 defer 中发挥左右，在其他作用域中调用不会起作用。\"},\"2928\":{\"t\":\"func A(){ defer A1() defer A2() panic(\\\"panicA\\\") fmt.Println(\\\"这里不会被执行\\\") } func A2(){ p := recover() fmt.Println(p) //这里会正常执行输出“panicA” } func A1(){ fmt.Println(\\\"A1正常结束\\\") } func main() { A() } \"},\"2929\":{\"t\":\"加了 recover 好像就可以正常执行程序了，那么这个流程又会是怎么样的呢？\"},\"2930\":{\"t\":\"函数 A 会在当前执行的 goroutine 注册 defer 函数 A1 和 A2。然后在 panic 链表增加一项 panicA。接着就会递归执行 defer 链表的函数，先执行 A2。\"},\"2931\":{\"t\":\"图片\"},\"2932\":{\"t\":\"当执行 A2 函数时候，会发生 recover，其实 recover 函数的做的事情很少，就是将当前执行的 panic 字段 recovered 置为 true。A2 函数接着继续执行，直到结束。\"},\"2933\":{\"t\":\"每次 defer 函数执行完后，在 panic 处理流程都会去检查当前执行的 panic 是否被恢复了，如果被恢复了，那么就会移除。\"},\"2934\":{\"t\":\"A2 执行完后，发现当前执行的 panic 已经被恢复了，那么把它从 panic 链表中移除，同时 A2 执行完后，也会从 defer 函数移除。但是在 A2 移除前，会要保存 _defer 结构体的 sp 和 pc 两个字段的值。\"},\"2935\":{\"t\":\"为什么要保存这两个字段啊？有什么用吗？当前的 panic 函数还没有结束哦！\"},\"2936\":{\"t\":\"先说明这两个字段的作用：\"},\"2937\":{\"t\":\"sp：函数 A 的栈指针。\"},\"2938\":{\"t\":\"pc：调用 deferproc 函数的返回地址。\"},\"2939\":{\"t\":\"图片\"},\"2940\":{\"t\":\"根据这段伪指令，我们直到利用 sp 字段能够回到函数 A 的栈帧，利用 pc 字段可以通过返回地址的值 r 通过判断回到 deferreturn 这里然后继续执行 defer 链表的函数。\"},\"2941\":{\"t\":\"注：函数 A 这里的 deferreturn 只负责执行函数 A 中注册的 defer 函数，也是通过 sp 字段去判断的。\"},\"2942\":{\"t\":\"兜兜转转又回到了 defer 链表，下一个执行的函数是 A1，是函数 A 注册的。执行函数 A1，结束后 defer 链表为空，函数 A 结束了。\"},\"2943\":{\"t\":\"关键点：\"},\"2944\":{\"t\":\"recover 做的事情很少，就是将当前的 panic 结构体字段 recovered 置为 true ，代表此 panic 被恢复了。\"},\"2945\":{\"t\":\"panic 恢复后，会被移除然后通过 sp 和 pc 字段通过判断恢复到 defer 链表，执行的函数都是同一个函数注册的 defer 函数\"},\"2946\":{\"t\":\"在发生 recover 的函数正常返回以后，才会检测当前 panic 是否被恢复，然后才会删除被恢复的 panic。\"},\"2947\":{\"h\":\"recoder 非正常结束\",\"a\":\"recoder-非正常结束\"},\"2948\":{\"t\":\"如果 recover 不是正常返回结果，中间又有一个 panic，那么这过程又会发生什么呢？\"},\"2949\":{\"t\":\"func A(){ defer A1() defer A2() panic(\\\"panicA\\\") fmt.Println(\\\"这里不会被执行\\\")//输出异常信息 } func A2(){ p := recover() fmt.Println(p) //这里会正常执行输出“panicA” panic(\\\"panicA2\\\") //输出异常信息 } func A1(){ fmt.Println(\\\"A1正常结束\\\") } func main() { A() } \"},\"2950\":{\"t\":\"之前的过程省略，直接来到关键处。\"},\"2951\":{\"t\":\"当 panicA 被恢复时候，A2 函数会继续接着执行（注：只有正常返回才会移除 panicA），再次发生了 panic，在 panic 链表增加了一项 panicA2。现在他是当前执行的 panic 函数了。\"},\"2952\":{\"t\":\"在执行 panicA2 流程会触发 defer 链表的执行，发现 defer 函数 A2 已经被执行了，触发者是之前的 panicA。那么就会终止 panicA，A2 也会从 defer 链表中移除。\"},\"2953\":{\"t\":\"图片\"},\"2954\":{\"t\":\"咦！好像 panicA 没有被移除，即使他现在被恢复了。它会被移除吗？接着往下看。\"},\"2955\":{\"t\":\"panicA2 函数会继续去执行 defer 链表接下来的函数 A1。A1 的 _defer结构体中 _panic 会指向 panicA2。\"},\"2956\":{\"t\":\"A1 结束了，那么就要开始输出异常信息了。\"},\"2957\":{\"t\":\"输出异常信息，会将 panic 链表的所有项都会输出出来，不同的是 panicA 会被打上 recover 标记。\"},\"2958\":{\"t\":\"panic: panicA [recovered] panic: panicA2 \"},\"2959\":{\"h\":\"recover 限制\",\"a\":\"recover-限制\"},\"2960\":{\"t\":\"recover 函数只能在 defer 函数中直接调用，也不能间接调用，如果不满足这个要求，那么 recover 不会有任何效果。\"},\"2961\":{\"t\":\"图片\"},\"2962\":{\"h\":\"后续\",\"a\":\"后续\"},\"2963\":{\"t\":\"我们知道在 1.14 版本后 defer 的执行改成了 open coded defer 的方式，既然 panic 需要调用 defer 链表，所以那些没有注册到 defer 链表会通过栈扫描注册到 defer 链表中。剩余的过程是很繁琐的，都是为了迎合 open coded defer。但是 panic 和 recover 的总体设计思路不变。\"},\"2964\":{\"c\":[\"语言基础\",\"go\"]},\"2965\":{\"h\":\"基础学习\"},\"2966\":{\"h\":\"1. 变量\",\"a\":\"_1-变量\"},\"2967\":{\"t\":\"常见数据类型：\"},\"2968\":{\"t\":\"整型：Python中可以处理任意大小的整数。\"},\"2969\":{\"t\":\"浮点型：浮点数也就是小数。\"},\"2970\":{\"t\":\"字符串型：字符串是以单引号或双引号括起来的任意文本。\"},\"2971\":{\"t\":\"布尔型：布尔值只有True、False两种值，要么是True，要么是False。\"},\"2972\":{\"t\":\"复数型：形如3+5j，跟数学上的复数表示一样，唯一不同的是虚部的i换成了j。\"},\"2973\":{\"t\":\"变量命名：\"},\"2974\":{\"t\":\"硬性规则： \"},\"2975\":{\"t\":\"变量名由字母（广义的Unicode字符，不包括特殊字符）、数字和下划线构成，数字不能开头。\"},\"2976\":{\"t\":\"大小写敏感（大写的a和小写的A是两个不同的变量）。\"},\"2977\":{\"t\":\"不要跟关键字（有特殊含义的单词，后面会讲到）和系统保留字（如函数、模块等的名字）冲突。\"},\"2978\":{\"t\":\"PEP 8要求： \"},\"2979\":{\"t\":\"用小写字母拼写，多个单词用下划线连接。\"},\"2980\":{\"t\":\"受保护的实例属性用单个下划线开头。\"},\"2981\":{\"t\":\"私有的实例属性用两个下划线开头。\"},\"2982\":{\"t\":\"运算符：（按照优先级从高到低的顺序列出了所有的运算符）\"},\"2983\":{\"t\":\"运算符\"},\"2984\":{\"t\":\"描述\"},\"2985\":{\"t\":\"[][:]\"},\"2986\":{\"t\":\"下标，切片\"},\"2987\":{\"t\":\"**\"},\"2988\":{\"t\":\"指数\"},\"2989\":{\"t\":\"~+-\"},\"2990\":{\"t\":\"按位取反, 正负号\"},\"2991\":{\"t\":\"*/%//\"},\"2992\":{\"t\":\"乘，除，模，整除\"},\"2993\":{\"t\":\"+-\"},\"2994\":{\"t\":\"加，减\"},\"2995\":{\"t\":\">><<\"},\"2996\":{\"t\":\"右移，左移\"},\"2997\":{\"t\":\"&\"},\"2998\":{\"t\":\"按位与\"},\"2999\":{\"t\":\"^ `\"},\"3000\":{\"t\":\"`\"},\"3001\":{\"t\":\"<=<>>=\"},\"3002\":{\"t\":\"小于等于，小于，大于，大于等于\"},\"3003\":{\"t\":\"==!=\"},\"3004\":{\"t\":\"等于，不等于\"},\"3005\":{\"t\":\"isis not\"},\"3006\":{\"t\":\"身份运算符\"},\"3007\":{\"t\":\"innot in\"},\"3008\":{\"t\":\"成员运算符\"},\"3009\":{\"t\":\"notorand\"},\"3010\":{\"t\":\"逻辑运算符\"},\"3011\":{\"t\":\"=+=-=*=/=%=//=**=&= `\"},\"3012\":{\"t\":\"=^=>>=``<<=`\"},\"3013\":{\"h\":\"2. 基本语句\",\"a\":\"_2-基本语句\"},\"3014\":{\"t\":\"if：\"},\"3015\":{\"t\":\"x = float(input('x = ')) if x > 1: y = 3 * x - 5 else: if x >= -1: y = x + 2 else: y = 5 * x + 3 print('f(%.2f) = %.2f' % (x, y)) \"},\"3016\":{\"t\":\"for… in…：\"},\"3017\":{\"t\":\"sum = 0 for x in range(1, 101): if x % 2 == 0: sum += x print(sum) \"},\"3018\":{\"t\":\"range函数参数：\"},\"3019\":{\"t\":\"start: 计数从 start 开始。默认是从 0 开始。例如range（5）等价于range（0， 5）;\"},\"3020\":{\"t\":\"stop: 计数到 stop 结束，但不包括 stop。例如：range（0， 5） 是[0, 1, 2, 3, 4]没有5\"},\"3021\":{\"t\":\"step：步长，默认为1。例如：range（0， 5） 等价于 range(0, 5, 1)\"},\"3022\":{\"t\":\"while：\"},\"3023\":{\"t\":\"while True: counter += 1 number = int(input('请输入: ')) if number < answer: print('大一点') elif number > answer: print('小一点') else: print('恭喜你猜对了!') break \"},\"3024\":{\"h\":\"3. 函数\",\"a\":\"_3-函数\"},\"3025\":{\"t\":\"使用 def 来定义函数，接下来写函数名称,命名规则跟变量的命名规则是一致的。，括号里面写函数参数。函数内部用 return 返回值。\"},\"3026\":{\"t\":\"def fac(num): \\\"\\\"\\\"求阶乘\\\"\\\"\\\" result = 1 for n in range(1, num + 1): result *= n return result m = int(input('m = ')) n = int(input('n = ')) # 当需要计算阶乘的时候不用再写循环求阶乘而是直接调用已经定义好的函数 print(fac(m) // fac(n) // fac(m - n)) \"},\"3027\":{\"t\":\"在Python中，函数的参数可以有默认值，也支持使用可变参数。\"},\"3028\":{\"t\":\"# 可变参数 def add(*args): total = 0 for val in args: total += val return total # 默认值 def add(a=0, b=0, c=0): \\\"\\\"\\\"三个数相加\\\"\\\"\\\" return a + b + c \"},\"3029\":{\"h\":\"4.模块\",\"a\":\"_4-模块\"},\"3030\":{\"t\":\"在同一个.py文件中定义了两个同名函数，由于Python没有函数重载的概念，那么后面的定义会覆盖之前的定义，也就意味着两个函数同名函数实际上只有一个是存在的。我们利用模块来管理函数。\"},\"3031\":{\"t\":\"module1.py\"},\"3032\":{\"t\":\"def foo(): print('hello, world!') \"},\"3033\":{\"t\":\"module2.py\"},\"3034\":{\"t\":\"def foo(): print('goodbye, world!') \"},\"3035\":{\"t\":\"test.py\"},\"3036\":{\"t\":\"from module1 import foo # 输出hello, world! foo() from module2 import foo # 输出goodbye, world! foo() \"},\"3037\":{\"t\":\"可以对模块设置别名。\"},\"3038\":{\"t\":\"import module1 as m1 import module2 as m2 m1.foo() m2.foo() \"},\"3039\":{\"t\":\"需要说明的是：当我们导入的模块除了定义函数之外还有可以执行代码，如果我们在模块中编写了执行代码，最好是将这些执行代码放入如下所示的条件中。\"},\"3040\":{\"t\":\"module3.py\"},\"3041\":{\"t\":\"def foo(): pass def bar(): pass # __name__是Python中一个隐含的变量它代表了模块的名字 # 只有被Python解释器直接执行的模块的名字才是__main__ if __name__ == '__main__': print('call foo()') foo() print('call bar()') bar() \"},\"3042\":{\"t\":\"test.py\"},\"3043\":{\"t\":\"import module3 # 导入module3时 不会执行模块中if条件成立时的代码 因为模块的名字是module3而不是__main__ \"},\"3044\":{\"h\":\"5.数据结构\",\"a\":\"_5-数据结构\"},\"3045\":{\"h\":\"5.1.字符串\",\"a\":\"_5-1-字符串\"},\"3046\":{\"t\":\"由零个或多个字符组成的有限序列，单个或多个字符用单引号或者双引号包围起来，就可以表示一个字符串。\"},\"3047\":{\"t\":\"相关操作如下：\"},\"3048\":{\"t\":\"s1 = 'hello ' * 3 print(s1) # hello hello hello s2 = 'world' s1 += s2 print(s1) # hello hello hello world print('ll' in s1) # True print('good' in s1) # False str2 = 'abc123456' # 从字符串中取出指定位置的字符(下标运算) print(str2[2]) # c # 字符串切片(从指定的开始索引到指定的结束索引) print(str2[2:5]) # c12 print(str2[2:]) # c123456 print(str2[2::2]) # c246 print(str2[::2]) # ac246 print(str2[::-1]) # 654321cba print(str2[-3:-1]) # 45 str1 = 'hello, world!' # 通过内置函数len计算字符串的长度 print(len(str1)) # 13 # 获得字符串首字母大写的拷贝 print(str1.capitalize()) # Hello, world! # 获得字符串每个单词首字母大写的拷贝 print(str1.title()) # Hello, World! # 获得字符串变大写后的拷贝 print(str1.upper()) # HELLO, WORLD! # 从字符串中查找子串所在位置 print(str1.find('or')) # 8 print(str1.find('shit')) # -1 # 与find类似但找不到子串时会引发异常 # print(str1.index('or')) # print(str1.index('shit')) # 检查字符串是否以指定的字符串开头 print(str1.startswith('He')) # False print(str1.startswith('hel')) # True # 检查字符串是否以指定的字符串结尾 print(str1.endswith('!')) # True # 将字符串以指定的宽度居中并在两侧填充指定的字符 print(str1.center(50, '*')) # 将字符串以指定的宽度靠右放置左侧填充指定的字符 print(str1.rjust(50, ' ')) str2 = 'abc123456' # 检查字符串是否由数字构成 print(str2.isdigit()) # False # 检查字符串是否以字母构成 print(str2.isalpha()) # False # 检查字符串是否以数字和字母构成 print(str2.isalnum()) # True str3 = ' jackfrued@126.com ' print(str3) # 获得字符串修剪左右两侧空格之后的拷贝 print(str3.strip()) # 格式化 a, b = 5, 10 print('%d * %d = %d' % (a, b, a * b)) a, b = 5, 10 print('{0} * {1} = {2}'.format(a, b, a * b)) a, b = 5, 10 print(f'{a} * {b} = {a * b}') \"},\"3049\":{\"h\":\"5.2.列表\",\"a\":\"_5-2-列表\"},\"3050\":{\"t\":\"是值的有序序列，每个值都可以通过索引进行标识，定义列表可以将列表的元素放在[]中，多个元素用,进行分隔。\"},\"3051\":{\"t\":\"相关操作如下：\"},\"3052\":{\"t\":\"f = [x for x in range(1, 10)] print(f) f = [x + y for x in 'ABCDE' for y in '1234567'] print(f) # 用列表的生成表达式语法创建列表容器 # 用这种语法创建列表之后元素已经准备就绪所以需要耗费较多的内存空间 f = [x ** 2 for x in range(1, 1000)] print(sys.getsizeof(f)) # 查看对象占用内存的字节数 print(f) # 请注意下面的代码创建的不是一个列表而是一个生成器对象 # 通过生成器可以获取到数据但它不占用额外的空间存储数据 # 每次需要数据的时候就通过内部的运算得到数据(需要花费额外的时间) f = (x ** 2 for x in range(1, 1000)) print(sys.getsizeof(f)) # 相比生成式生成器不占用存储数据的空间 print(f) for val in f: print(val) \"},\"3053\":{\"t\":\"list1 = [1, 3, 5, 7, 100] print(list1) # [1, 3, 5, 7, 100] # 乘号表示列表元素的重复 list2 = ['hello'] * 3 print(list2) # ['hello', 'hello', 'hello'] # 计算列表长度(元素个数) print(len(list1)) # 5 # 下标(索引)运算 print(list1[0]) # 1 print(list1[4]) # 100 # print(list1[5]) # IndexError: list index out of range print(list1[-1]) # 100 print(list1[-3]) # 5 # 切片操作 fruits = ['grape', 'apple', 'strawberry', 'waxberry'] fruits += ['pitaya', 'pear', 'mango'] # 列表切片 fruits2 = fruits[1:4] print(fruits2) # apple strawberry waxberry # 可以通过完整切片操作来复制列表 fruits3 = fruits[:] print(fruits3) # ['grape', 'apple', 'strawberry', 'waxberry', 'pitaya', 'pear', 'mango'] fruits4 = fruits[-3:-1] print(fruits4) # ['pitaya', 'pear'] # 可以通过反向切片操作来获得倒转后的列表的拷贝 fruits5 = fruits[::-1] print(fruits5) # ['mango', 'pear', 'pitaya', 'waxberry', 'strawberry', 'apple', 'grape'] \"},\"3054\":{\"t\":\"# 通过for循环遍历列表元素 for elem in list1: print(elem) # 通过enumerate函数处理列表之后再遍历可以同时获得元素索引和值 for index, elem in enumerate(list1): print(index, elem) # CURD操作 list1 = [1, 3, 5, 7, 100] # 添加元素 list1.append(200) list1.insert(1, 400) # 合并两个列表 # list1.extend([1000, 2000]) list1 += [1000, 2000] print(list1) # [1, 400, 3, 5, 7, 100, 200, 1000, 2000] print(len(list1)) # 9 # 先通过成员运算判断元素是否在列表中，如果存在就删除该元素 if 3 in list1: list1.remove(3) if 1234 in list1: list1.remove(1234) print(list1) # [1, 400, 5, 7, 100, 200, 1000, 2000] # 从指定的位置删除元素 list1.pop(0) list1.pop(len(list1) - 1) print(list1) # [400, 5, 7, 100, 200, 1000] # 清空列表元素 list1.clear() print(list1) # [] \"},\"3055\":{\"h\":\"5.3.元组\",\"a\":\"_5-3-元组\"},\"3056\":{\"t\":\"元组的元素不能修改。用括号把多个元素组合到一起就形成了一个元组，\"},\"3057\":{\"t\":\"相关操作如下：\"},\"3058\":{\"t\":\"# 定义元组 t = ('骆昊', 38, True, '四川成都') print(t) # 获取元组中的元素 print(t[0]) print(t[3]) # 遍历元组中的值 for member in t: print(member) # 重新给元组赋值 # t[0] = '王大锤' # TypeError # 变量t重新引用了新的元组原来的元组将被垃圾回收 t = ('王大锤', 20, True, '云南昆明') print(t) # 将元组转换成列表 person = list(t) print(person) # 列表是可以修改它的元素的 person[0] = '李小龙' person[1] = 25 print(person) # 将列表转换成元组 fruits_list = ['apple', 'banana', 'orange'] fruits_tuple = tuple(fruits_list) print(fruits_tuple) \"},\"3059\":{\"h\":\"5.4.集合\",\"a\":\"_5-4-集合\"},\"3060\":{\"t\":\"Python中的集合跟数学上的集合是一致的，不允许有重复元素，而且可以进行交集、并集、差集等运算。\"},\"3061\":{\"t\":\"image-20220706111706280\"},\"3062\":{\"t\":\"# 创建集合的字面量语法 set1 = {1, 2, 3, 3, 3, 2} print(set1) print('Length =', len(set1)) # 创建集合的构造器语法(面向对象部分会进行详细讲解) set2 = set(range(1, 10)) set3 = set((1, 2, 3, 3, 2, 1)) print(set2, set3) # 创建集合的推导式语法(推导式也可以用于推导集合) set4 = {num for num in range(1, 100) if num % 3 == 0 or num % 5 == 0} print(set4) \"},\"3063\":{\"t\":\"set1.add(4) set1.add(5) # 合并两个集合，重复元素只会出现一次： set2.update([11, 12]) # 用于移除指定的集合元素。 set2.discard(5) # 用于移除集合中的指定元素。 if 4 in set2: set2.remove(4) print(set1, set2) print(set3.pop()) print(set3) \"},\"3064\":{\"t\":\"集合的成员、交集、并集、差集等运算。\"},\"3065\":{\"t\":\"# 集合的交集、并集、差集、对称差运算 print(set1 & set2) # print(set1.intersection(set2)) print(set1 | set2) # print(set1.union(set2)) print(set1 - set2) # print(set1.difference(set2)) print(set1 ^ set2) # print(set1.symmetric_difference(set2)) # 判断子集和超集 print(set2 <= set1) # print(set2.issubset(set1)) print(set3 <= set1) # print(set3.issubset(set1)) print(set1 >= set2) # print(set1.issuperset(set2)) print(set1 >= set3) # print(set1.issuperset(set3)) \"},\"3066\":{\"h\":\"5.5.字典\",\"a\":\"_5-5-字典\"},\"3067\":{\"t\":\"是一种可变容器模型，它可以存储任意类型对象，字典的每个元素都是由一个键和一个值组成的“键值对”，键和值通过冒号分开。\"},\"3068\":{\"t\":\"相关操作如下：\"},\"3069\":{\"t\":\"# 创建字典的字面量语法 scores = {'骆昊': 95, '白元芳': 78, '狄仁杰': 82} print(scores) # 创建字典的构造器语法 items1 = dict(one=1, two=2, three=3, four=4) # 通过zip函数将两个序列压成字典 items2 = dict(zip(['a', 'b', 'c'], '123')) # 创建字典的推导式语法 items3 = {num: num ** 2 for num in range(1, 10)} print(items1, items2, items3) # 通过键可以获取字典中对应的值 print(scores['骆昊']) print(scores['狄仁杰']) # 对字典中所有键值对进行遍历 for key in scores: print(f'{key}: {scores[key]}') # 更新字典中的元素 scores['白元芳'] = 65 scores['诸葛王朗'] = 71 scores.update(冷面=67, 方启鹤=85) print(scores) if '武则天' in scores: print(scores['武则天']) print(scores.get('武则天')) # get方法也是通过键获取对应的值但是可以设置默认值 print(scores.get('武则天', 60)) # 删除字典中的元素 print(scores.popitem()) print(scores.popitem()) print(scores.pop('骆昊', 100)) # 清空字典 scores.clear() print(scores) \"},\"3070\":{\"h\":\"6.面向对象编程\",\"a\":\"_6-面向对象编程\"},\"3071\":{\"h\":\"6.1 封装\",\"a\":\"_6-1-封装\"},\"3072\":{\"t\":\"类是对象的蓝图和模板，而对象是类的实例。类是抽象的概念，而对象是具体的东西。\"},\"3073\":{\"t\":\"在面向对象编程的世界中，一切皆为对象，对象都有属性和行为，每个对象都是独一无二的，而且对象一定属于某个类（型）。当我们把一大堆拥有共同特征的对象的静态特征（属性）和动态特征（行为）都抽取出来后，就可以定义出一个叫做“类”的东西。\"},\"3074\":{\"t\":\"定义类：\"},\"3075\":{\"t\":\"class Student(object): # __init__是一个特殊方法用于在创建对象时进行初始化操作 # self 指的是传入的对象，或者操作的对象 # 通过这个方法我们可以为学生对象绑定name和age两个属性 def __init__(self, name, age): self.name = name self.age = age def study(self, course_name): print('%s正在学习%s.' % (self.name, course_name)) # PEP 8要求标识符的名字用全小写多个单词用下划线连接 # 但是部分程序员和公司更倾向于使用驼峰命名法(驼峰标识) def watch_movie(self): if self.age < 18: print('%s只能观看《熊出没》.' % self.name) else: print('%s正在观看岛国爱情大电影.' % self.name) \"},\"3076\":{\"t\":\"说明： 写在类中的函数，我们通常称之为（对象的）方法，这些方法就是对象可以接收的消息。\"},\"3077\":{\"t\":\"创建并使用对象：\"},\"3078\":{\"t\":\"def main(): # 创建学生对象并指定姓名和年龄 stu1 = Student('骆昊', 38) # 给对象发study消息 stu1.study('Python程序设计') # 给对象发watch_av消息 stu1.watch_movie() stu2 = Student('王大锤', 15) stu2.study('思想品德') stu2.watch_movie() if __name__ == '__main__': main() \"},\"3079\":{\"t\":\"访问可见性问题：\"},\"3080\":{\"t\":\"在Python中，属性和方法的访问权限只有两种，也就是公开的和私有的，如果希望属性是私有的，在给属性命名时可以用两个下划线作为开头。但是，Python并没有从语法上严格保证私有属性或方法的私密性，它只是给私有的属性和方法换了一个名字来妨碍对它们的访问，事实上如果你知道更换名字的规则仍然可以访问到它们_Test__foo。\"},\"3081\":{\"t\":\"在实际开发中，我们并不建议将属性设置为私有的，因为这会导致子类无法访问。所以大多数Python程序员会遵循一种命名惯例就是让属性名以单下划线开头来表示属性是受保护的，这是大部分人的命名规定，更多的时候它是一种暗示或隐喻。\"},\"3082\":{\"t\":\"@property装饰器：\"},\"3083\":{\"t\":\"我们之前的建议是将属性命名以单下划线开头，通过这种方式来暗示属性是受保护的，不建议外界直接访问，那么如果想访问属性可以通过属性的getter（访问器）和setter（修改器）方法进行对应的操作。如果要做到这点，就可以考虑使用@property包装器来包装getter和setter方法，使得对属性的访问既安全又方便。\"},\"3084\":{\"t\":\"class Person(object): def __init__(self, name, age): self._name = name self._age = age # 访问器 - getter方法 @property def name(self): return self._name # 访问器 - getter方法 @property def age(self): return self._age # 修改器 - setter方法 @age.setter def age(self, age): self._age = age def play(self): if self._age <= 16: print('%s正在玩飞行棋.' % self._name) else: print('%s正在玩斗地主.' % self._name) def main(): person = Person('王大锤', 12) person.play() person.age = 22 person.play() # person.name = '白元芳' # AttributeError: can't set attribute if __name__ == '__main__': main() \"},\"3085\":{\"t\":\"__slots__魔法:\"},\"3086\":{\"t\":\"如果我们需要限定自定义类型的对象只能绑定某些属性，可以通过在类中定义__slots__变量来进行限定。需要注意的是__slots__的限定只对当前类的对象生效，对子类并不起任何作用。\"},\"3087\":{\"t\":\"class Person(object): # 限定Person对象只能绑定_name, _age和_gender属性 __slots__ = ('_name', '_age', '_gender') def __init__(self, name, age): self._name = name self._age = age @property def name(self): return self._name @property def age(self): return self._age @age.setter def age(self, age): self._age = age def play(self): if self._age <= 16: print('%s正在玩飞行棋.' % self._name) else: print('%s正在玩斗地主.' % self._name) def main(): person = Person('王大锤', 22) person.play() person._gender = '男' # AttributeError: 'Person' object has no attribute '_is_gay' # person._is_gay = True \"},\"3088\":{\"t\":\"静态方法：\"},\"3089\":{\"t\":\"这个方法是属于类而并不属于某一个对象的。我们可以使用静态方法来解决这类问题。\"},\"3090\":{\"t\":\"from math import sqrt class Triangle(object): def __init__(self, a, b, c): self._a = a self._b = b self._c = c @staticmethod def is_valid(a, b, c): return a + b > c and b + c > a and a + c > b def perimeter(self): return self._a + self._b + self._c def area(self): half = self.perimeter() / 2 return sqrt(half * (half - self._a) * (half - self._b) * (half - self._c)) def main(): a, b, c = 3, 4, 5 # 静态方法和类方法都是通过给类发消息来调用的 if Triangle.is_valid(a, b, c): t = Triangle(a, b, c) print(t.perimeter()) # 也可以通过给类发消息来调用对象方法但是要传入接收消息的对象作为参数 # print(Triangle.perimeter(t)) print(t.area()) # print(Triangle.area(t)) else: print('无法构成三角形.') if __name__ == '__main__': main() \"},\"3091\":{\"t\":\"类方法：\"},\"3092\":{\"t\":\"可以在类中定义类方法，类方法的第一个参数约定名为cls，它代表的是当前类相关的信息的对象，通过这个参数我们可以获取和类相关的信息并且可以创建出类的对象。我觉得把类看作一个隐匿对象，也可以完成对象实例的工作。类方法，是不需要实例化就可以调用。\"},\"3093\":{\"t\":\"from time import time, localtime, sleep class Clock(object): \\\"\\\"\\\"数字时钟\\\"\\\"\\\" def __init__(self, hour=0, minute=0, second=0): self._hour = hour self._minute = minute self._second = second # 该函数不需要实例化就可以调用 @classmethod def now(cls): ctime = localtime(time()) return cls(ctime.tm_hour, ctime.tm_min, ctime.tm_sec) def run(self): \\\"\\\"\\\"走字\\\"\\\"\\\" self._second += 1 if self._second == 60: self._second = 0 self._minute += 1 if self._minute == 60: self._minute = 0 self._hour += 1 if self._hour == 24: self._hour = 0 def show(self): \\\"\\\"\\\"显示时间\\\"\\\"\\\" return '%02d:%02d:%02d' % \\\\ (self._hour, self._minute, self._second) def main(): # 通过类方法创建对象并获取系统时间 clock = Clock.now() while True: print(clock.show()) sleep(1) clock.run() if __name__ == '__main__': main() \"},\"3094\":{\"h\":\"6.2 继承\",\"a\":\"_6-2-继承\"},\"3095\":{\"t\":\"可以在已有类的基础上创建新类，这其中的一种做法就是让一个类从另一个类那里将属性和方法直接继承下来，从而减少重复代码的编写。提供继承信息的我们称之为父类，也叫超类或基类；得到继承信息的我们称之为子类，也叫派生类或衍生类。子类除了继承父类提供的属性和方法，还可以定义自己特有的属性和方法，所以子类比父类拥有的更多的能力，在实际开发中，我们经常会用子类对象去替换掉一个父类对象，这是面向对象编程中一个常见的行为，对应的原则称之为里氏替换原则。下面我们先看一个继承的例子。\"},\"3096\":{\"t\":\"# 父类 class Person(object): \\\"\\\"\\\"人\\\"\\\"\\\" def __init__(self, name, age): self._name = name self._age = age @property def name(self): return self._name @property def age(self): return self._age @age.setter def age(self, age): self._age = age def play(self): print('%s正在愉快的玩耍.' % self._name) def watch_av(self): if self._age >= 18: print('%s正在观看爱情动作片.' % self._name) else: print('%s只能观看《熊出没》.' % self._name) # 子类 \\\"\\\"\\\" 继承写法： class 子类名称（父类名称）： 调用父类的函数使用： super() #目的是用来解决多重继承时父类的查找问题 \\\"\\\"\\\" class Student(Person): \\\"\\\"\\\"学生\\\"\\\"\\\" def __init__(self, name, age, grade): super().__init__(name, age) self._grade = grade @property def grade(self): return self._grade @grade.setter def grade(self, grade): self._grade = grade def study(self, course): print('%s的%s正在学习%s.' % (self._grade, self._name, course)) class Teacher(Person): \\\"\\\"\\\"老师\\\"\\\"\\\" def __init__(self, name, age, title): super().__init__(name, age) self._title = title @property def title(self): return self._title @title.setter def title(self, title): self._title = title def teach(self, course): print('%s%s正在讲%s.' % (self._name, self._title, course)) def main(): stu = Student('王大锤', 15, '初三') stu.study('数学') stu.watch_av() t = Teacher('骆昊', 38, '砖家') t.teach('Python程序设计') t.watch_av() if __name__ == '__main__': main() \"},\"3097\":{\"h\":\"6.3 多态\",\"a\":\"_6-3-多态\"},\"3098\":{\"t\":\"子类在继承了父类的方法后，可以对父类已有的方法给出新的实现版本，这个动作称之为方法重写（override）。通过方法重写我们可以让父类的同一个行为在子类中拥有不同的实现版本，当我们调用这个经过子类重写的方法时，不同的子类对象会表现出不同的行为，这个就是多态（poly-morphism）。\"},\"3099\":{\"t\":\"from abc import ABCMeta, abstractmethod class Pet(object, metaclass=ABCMeta): \\\"\\\"\\\"宠物\\\"\\\"\\\" def __init__(self, nickname): self._nickname = nickname @abstractmethod def make_voice(self): \\\"\\\"\\\"发出声音\\\"\\\"\\\" pass class Dog(Pet): \\\"\\\"\\\"狗\\\"\\\"\\\" def make_voice(self): print('%s: 汪汪汪...' % self._nickname) class Cat(Pet): \\\"\\\"\\\"猫\\\"\\\"\\\" def make_voice(self): print('%s: 喵...喵...' % self._nickname) def main(): pets = [Dog('旺财'), Cat('凯蒂'), Dog('大黄')] for pet in pets: pet.make_voice() if __name__ == '__main__': main() \"},\"3100\":{\"t\":\"抽象类可以理解为一个模板，你需要往里面重写部分函数，这就是一个完整的类。不同的子类的同一个方法就会有不同的效果产生。\"},\"3101\":{\"t\":\"Python从语法层面并没有像Java或C#那样提供对抽象类的支持，但是我们可以通过abc模块的ABCMeta元类和abstractmethod包装器来达到抽象类的效果，如果一个类中存在抽象方法那么这个类就不能够实例化（创建对象）。上面的代码中，Dog和Cat两个子类分别对Pet类中的make_voice抽象方法进行了重写并给出了不同的实现版本，当我们在main函数中调用该方法时，这个方法就表现出了多态行为（同样的方法做了不同的事情）。\"},\"3102\":{\"h\":\"7.异常\",\"a\":\"_7-异常\"},\"3103\":{\"t\":\"即便 Python 程序的语法是正确的，在运行它的时候，也有可能发生错误。运行期检测到的错误被称为异常。\"},\"3104\":{\"t\":\">>> 10 * (1/0) # 0 不能作为除数，触发异常 Traceback (most recent call last): File \\\"<stdin>\\\", line 1, in ? ZeroDivisionError: division by zero >>> 4 + spam*3 # spam 未定义，触发异常 Traceback (most recent call last): File \\\"<stdin>\\\", line 1, in ? NameError: name 'spam' is not defined >>> '2' + 2 # int 不能与 str 相加，触发异常 Traceback (most recent call last): File \\\"<stdin>\\\", line 1, in <module> TypeError: can only concatenate str (not \\\"int\\\") to str \"},\"3105\":{\"t\":\"可以看到上面的异常类型有 ZeroDivisionError，NameError 和 TypeError。\"},\"3106\":{\"t\":\"最简单的异常错误处理：try/except\"},\"3107\":{\"t\":\"img\"},\"3108\":{\"t\":\"try 语句按照如下方式工作；\"},\"3109\":{\"t\":\"首先，执行 try 子句（在关键字 try 和关键字 except 之间的语句）。\"},\"3110\":{\"t\":\"如果没有异常发生，忽略 except 子句，try 子句执行后结束。\"},\"3111\":{\"t\":\"如果在执行 try 子句的过程中发生了异常，那么 try 子句余下的部分将被忽略。如果异常的类型和 except 之后的名称相符，那么对应的 except 子句将被执行。\"},\"3112\":{\"t\":\"如果一个异常没有与任何的 except 匹配，那么这个异常将会传递给上层的 try 中。(相当于正常的异常报错)\"},\"3113\":{\"t\":\"import sys try: f = open('myfile.txt') s = f.readline() i = int(s.strip()) except OSError as err: print(\\\"OS error: {0}\\\".format(err)) # 只针对对应的 try 子句中的异常进行处理，而不是其他的 try 的处理程序中的异常。 except ValueError: print(\\\"Could not convert data to an integer.\\\") # 最后一个except子句可以忽略异常的名称，它将被当作通配符使用。 except: print(\\\"Unexpected error:\\\", sys.exc_info()[0]) raise \"},\"3114\":{\"t\":\"后面可以写可选的 else 子句。\"},\"3115\":{\"t\":\"else 子句将在 try 子句没有发生任何异常的时候执行。\"},\"3116\":{\"t\":\"for arg in sys.argv[1:]: try: f = open(arg, 'r') except IOError: print('cannot open', arg) else: print(arg, 'has', len(f.readlines()), 'lines') f.close() \"},\"3117\":{\"t\":\"后面还可以写 finaly 子句。\"},\"3118\":{\"t\":\"finally 语句无论是否发生异常都将执行最后的代码。\"},\"3119\":{\"t\":\"try: runoob() except AssertionError as error: print(error) else: try: with open('file.log') as file: read_data = file.read() except FileNotFoundError as fnf_error: print(fnf_error) finally: print('这句话，无论异常是否发生都会执行。') \"},\"3120\":{\"t\":\"使用 raise 语句抛出一个指定的异常。\"},\"3121\":{\"t\":\"用法：\"},\"3122\":{\"t\":\"raise [Exception [, args [, traceback]]] \"},\"3123\":{\"t\":\"用例：\"},\"3124\":{\"t\":\"x = 10 if x > 5: raise Exception('x 不能大于 5。x 的值为: {}'.format(x)) \\\"\\\"\\\" Traceback (most recent call last): File \\\"test.py\\\", line 3, in <module> raise Exception('x 不能大于 5。x 的值为: {}'.format(x)) Exception: x 不能大于 5。x 的值为: 10 \\\"\\\"\\\" \"},\"3125\":{\"h\":\"8.文件操作\",\"a\":\"_8-文件操作\"},\"3126\":{\"t\":\"在Python中实现文件的读写操作其实非常简单，通过Python内置的open函数，我们可以指定文件名、操作模式、编码信息等来获得操作文件的对象，接下来就可以对文件进行读写操作了。\"},\"3127\":{\"t\":\"open函数：\"},\"3128\":{\"t\":\"用法：\"},\"3129\":{\"t\":\"open(file, mode='r', buffering=-1, encoding=None, errors=None, newline=None, closefd=True, opener=None) \"},\"3130\":{\"t\":\"参数说明：\"},\"3131\":{\"t\":\"file: 必需，文件路径（相对或者绝对路径）。\"},\"3132\":{\"t\":\"mode: 可选，文件打开模式\"},\"3133\":{\"t\":\"buffering: 设置缓冲\"},\"3134\":{\"t\":\"encoding: 一般使用utf8\"},\"3135\":{\"t\":\"errors: 报错级别\"},\"3136\":{\"t\":\"newline: 区分换行符\"},\"3137\":{\"t\":\"closefd: 传入的file参数类型\"},\"3138\":{\"t\":\"mode可选模式：\"},\"3139\":{\"t\":\"t\"},\"3140\":{\"t\":\"文本模式 (默认)。\"},\"3141\":{\"t\":\"x\"},\"3142\":{\"t\":\"写模式，新建一个文件，如果该文件已存在则会报错。\"},\"3143\":{\"t\":\"b\"},\"3144\":{\"t\":\"二进制模式。\"},\"3145\":{\"t\":\"+\"},\"3146\":{\"t\":\"打开一个文件进行更新(可读可写)。\"},\"3147\":{\"t\":\"U\"},\"3148\":{\"t\":\"通用换行模式（不推荐）。\"},\"3149\":{\"t\":\"r\"},\"3150\":{\"t\":\"以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。\"},\"3151\":{\"t\":\"rb\"},\"3152\":{\"t\":\"以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。一般用于非文本文件如图片等。\"},\"3153\":{\"t\":\"r+\"},\"3154\":{\"t\":\"打开一个文件用于读写。文件指针将会放在文件的开头。\"},\"3155\":{\"t\":\"rb+\"},\"3156\":{\"t\":\"以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。一般用于非文本文件如图片等。\"},\"3157\":{\"t\":\"w\"},\"3158\":{\"t\":\"打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。\"},\"3159\":{\"t\":\"wb\"},\"3160\":{\"t\":\"以二进制格式打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。一般用于非文本文件如图片等。\"},\"3161\":{\"t\":\"w+\"},\"3162\":{\"t\":\"打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。\"},\"3163\":{\"t\":\"wb+\"},\"3164\":{\"t\":\"以二进制格式打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。一般用于非文本文件如图片等。\"},\"3165\":{\"t\":\"a\"},\"3166\":{\"t\":\"打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。\"},\"3167\":{\"t\":\"ab\"},\"3168\":{\"t\":\"以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。\"},\"3169\":{\"t\":\"a+\"},\"3170\":{\"t\":\"打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。\"},\"3171\":{\"t\":\"ab+\"},\"3172\":{\"t\":\"以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。\"},\"3173\":{\"t\":\"**注意：**使用 open() 函数一定要保证关闭文件对象，即调用 close() 函数。\"},\"3174\":{\"t\":\"读写文件用例：\"},\"3175\":{\"t\":\"\\\"\\\"\\\" 使用`open`函数时指定好带路径的文件名（可以使用相对路径或绝对路径） 并将文件模式设置为`'r'`（如果不指定，默认值也是`'r'`）， 然后通过`encoding`参数指定编码（如果不指定，默认值是None，那么在读取文件时使用的是操作系统默认的编码） \\\"\\\"\\\" def main(): f = None # 为了让代码有一定的健壮性和容错性，我们可以使用Python的异常机制对可能在运行时发生状况的代码进行适当的处理 try: f = open('致橡树.txt', 'r', encoding='utf-8') print(f.read()) except FileNotFoundError: print('无法打开指定的文件!') except LookupError: print('指定了未知的编码!') except UnicodeDecodeError: print('读取文件时解码错误!') finally: if f: f.close() # 通过for-in循环逐行读取 with open('致橡树.txt', mode='r') as f: for line in f: print(line, end='') time.sleep(0.5) print() # 读取文件按行读取到列表中 with open('致橡树.txt') as f: lines = f.readlines() print(lines) if __name__ == '__main__': main() \"},\"3176\":{\"t\":\"from math import sqrt def is_prime(n): \\\"\\\"\\\"判断素数的函数\\\"\\\"\\\" assert n > 0 for factor in range(2, int(sqrt(n)) + 1): if n % factor == 0: return False return True if n != 1 else False def main(): filenames = ('a.txt', 'b.txt', 'c.txt') fs_list = [] try: for filename in filenames: # 向文件里面写数据 fs_list.append(open(filename, 'w', encoding='utf-8')) for number in range(1, 10000): if is_prime(number): if number < 100: fs_list[0].write(str(number) + '\\\\n') elif number < 1000: fs_list[1].write(str(number) + '\\\\n') else: fs_list[2].write(str(number) + '\\\\n') except IOError as ex: print(ex) print('写文件时发生错误!') finally: for fs in fs_list: fs.close() print('操作完成!') if __name__ == '__main__': main() \"},\"3177\":{\"t\":\"def main(): try: #相关操作与读写文本文件一致，需要改下模式即可 with open('guido.jpg', 'rb') as fs1: data = fs1.read() print(type(data)) # <class 'bytes'> with open('吉多.jpg', 'wb') as fs2: fs2.write(data) except FileNotFoundError as e: print('指定的文件无法打开.') except IOError as e: print('读写文件时出现错误.') print('程序执行结束.') if __name__ == '__main__': main() \"},\"3178\":{\"h\":\"8.正则表达式\",\"a\":\"_8-正则表达式\"},\"3179\":{\"t\":\"Python提供了re模块来支持正则表达式相关操作。\"},\"3180\":{\"t\":\"函数\"},\"3181\":{\"t\":\"说明\"},\"3182\":{\"t\":\"compile(pattern, flags=0)\"},\"3183\":{\"t\":\"编译正则表达式返回正则表达式对象\"},\"3184\":{\"t\":\"match(pattern, string, flags=0)\"},\"3185\":{\"t\":\"用正则表达式匹配字符串 成功返回匹配对象 否则返回None\"},\"3186\":{\"t\":\"search(pattern, string, flags=0)\"},\"3187\":{\"t\":\"搜索字符串中第一次出现正则表达式的模式 成功返回匹配对象 否则返回None\"},\"3188\":{\"t\":\"split(pattern, string, maxsplit=0, flags=0)\"},\"3189\":{\"t\":\"用正则表达式指定的模式分隔符拆分字符串 返回列表\"},\"3190\":{\"t\":\"sub(pattern, repl, string, count=0, flags=0)\"},\"3191\":{\"t\":\"用指定的字符串替换原字符串中与正则表达式匹配的模式 可以用count指定替换的次数\"},\"3192\":{\"t\":\"fullmatch(pattern, string, flags=0)\"},\"3193\":{\"t\":\"match函数的完全匹配（从字符串开头到结尾）版本\"},\"3194\":{\"t\":\"findall(pattern, string, flags=0)\"},\"3195\":{\"t\":\"查找字符串所有与正则表达式匹配的模式 返回字符串的列表\"},\"3196\":{\"t\":\"finditer(pattern, string, flags=0)\"},\"3197\":{\"t\":\"查找字符串所有与正则表达式匹配的模式 返回一个迭代器\"},\"3198\":{\"t\":\"purge()\"},\"3199\":{\"t\":\"清除隐式编译的正则表达式的缓存\"},\"3200\":{\"t\":\"re.I / re.IGNORECASE\"},\"3201\":{\"t\":\"忽略大小写匹配标记\"},\"3202\":{\"t\":\"re.M / re.MULTILINE\"},\"3203\":{\"t\":\"多行匹配标记\"},\"3204\":{\"t\":\"用例：\"},\"3205\":{\"t\":\"\\\"\\\"\\\" 验证输入用户名和QQ号是否有效并给出对应的提示信息 要求：用户名必须由字母、数字或下划线构成且长度在6~20个字符之间，QQ号是5~12的数字且首位不能为0 \\\"\\\"\\\" import re def main(): username = input('请输入用户名: ') qq = input('请输入QQ号: ') # match函数的第一个参数是正则表达式字符串或正则表达式对象 # 第二个参数是要跟正则表达式做匹配的字符串对象 # 书写正则表达式时使用了“原始字符串”的写法（在字符串前面加上了r） m1 = re.match(r'^[0-9a-zA-Z_]{6,20})).map(([e,t])=>[e,Et(t,{fields:[p.heading,p.text,p.customFields],storeFields:[p.heading,p.text,p.customFields]})]));self.onmessage=({data:{query:e,locale:t,options:s}})=>{self.postMessage(kt(e,vt[t],s))};
//# sourceMappingURL=index.js.map
, username) if not m1: print('请输入有效的用户名.') m2 = re.match(r'^[1-9]\\\\d{4,11})).map(([e,t])=>[e,Et(t,{fields:[p.heading,p.text,p.customFields],storeFields:[p.heading,p.text,p.customFields]})]));self.onmessage=({data:{query:e,locale:t,options:s}})=>{self.postMessage(kt(e,vt[t],s))};
//# sourceMappingURL=index.js.map
, qq) if not m2: print('请输入有效的QQ号.') if m1 and m2: print('你输入的信息是有效的!') if __name__ == '__main__': main() \"},\"3206\":{\"c\":[\"语言基础\",\"python\"]},\"3207\":{\"h\":\"进阶与算法\"},\"3208\":{\"t\":\"内置方法：\"},\"3209\":{\"t\":\"__init__：在调用类时自动触发，通过object产生的空对象自动调用__init__()\"},\"3210\":{\"t\":\"__new__：在__init__触发前自动触发，调用该类时，内部会通过__new__产生一个新的对象\"},\"3211\":{\"t\":\"__getattr__：在 \\\"对象.属性\\\" 获取属性时，若 \\\"没有该属性\\\" 时触发\"},\"3212\":{\"t\":\"__getattribute__：在 \\\"对象.属性\\\" 获取属性时，\\\"无论有没有该属性\\\" 都会触发，默认return一个None\"},\"3213\":{\"t\":\"__setattr__：当 \\\"对象.属性 = 属性值\\\" ，\\\"添加或修改属性\\\" 时触发\"},\"3214\":{\"t\":\"__call__：在调用对象 \\\"对象 + ()\\\" 时触发\"},\"3215\":{\"t\":\"__str__：在 \\\"打印对象\\\" 时触发\"},\"3216\":{\"t\":\"__getitem__：在对象通过 \\\"对象[key]\\\" 获取属性时触发\"},\"3217\":{\"t\":\"__setitem__：在对象通过 \\\"对象[key]=value值\\\" 获取属性时触发\"},\"3218\":{\"t\":\"Python 将函数视为“一等公民”\"},\"3219\":{\"t\":\"函数可以赋值给变量\"},\"3220\":{\"t\":\"函数可以作为函数的参数\"},\"3221\":{\"t\":\"函数可以作为函数的返回值\"},\"3222\":{\"t\":\"lambda函数返回函数名作为结果\"},\"3223\":{\"t\":\"lambda函数是一种匿名函数，就是没有名字的函数\"},\"3224\":{\"t\":\"使用lambda保留字定义，函数名就是返回结果\"},\"3225\":{\"t\":\"lambda函数用于定义简单的、能够在一行内表示的函数\"},\"3226\":{\"t\":\"格式：lambda[para1,para2,…]:expression\"},\"3227\":{\"t\":\"特点：\"},\"3228\":{\"t\":\"lambda后面没有跟函数名\"},\"3229\":{\"t\":\"[para1,para2,…]参数是可选的，任何类型的，参数往往在后面的expression中体现\"},\"3230\":{\"t\":\"expression表达式实现匿名函数功能的过程，并返回操作结果，具有通常函数return的功能\"},\"3231\":{\"t\":\"整个匿名函数在一行实现所有定义。\"},\"3232\":{\"t\":\"用例：\"},\"3233\":{\"t\":\">>> a = lambda x,y:x**y >>> a(5,4) 625 \"},\"3234\":{\"t\":\"什么是装饰器：定义一个函数，该函数是用来为其他函数添加额外的功能\"},\"3235\":{\"t\":\"器指的是工具，可以定义成成函数\"},\"3236\":{\"t\":\"装饰指的是为其他事物添加额外的东西点缀\"},\"3237\":{\"t\":\"用例：\"},\"3238\":{\"t\":\"# 语法糖：让你开心的语法 import time # 装饰器 def timmer(func): def wrapper(*args, **kwargs): start = time.time() res = func(*args, **kwargs)# 调用函数参数 stop = time.time() print(stop - start) return res return wrapper # 在被装饰对象正上方的单独一行写@装饰器名字 @timmer # index=timmer(index) 相当于执行了这句话，后面调用方式不变 def index(x, y, z): time.sleep(3) print('index %s %s %s' % (x, y, z)) @timmer # home=timmer(ome) def home(name): time.sleep(2) print('welcome %s to home page' % name) index(x=1, y=2, z=3) home('egon') \"},\"3239\":{\"t\":\"模板：\"},\"3240\":{\"t\":\"def outter(func): def wrapper(*args, **kwargs): # 1、调用原函数 # 2、为其增加新功能 res = func(*args, **kwargs) return res return wrapper \"},\"3241\":{\"t\":\"迭代器：\"},\"3242\":{\"t\":\"迭代是Python最强大的功能之一，是访问集合元素的一种方式。\"},\"3243\":{\"t\":\"迭代器是一个可以记住遍历的位置的对象。\"},\"3244\":{\"t\":\"迭代器对象从集合的第一个元素开始访问，直到所有的元素被访问完结束。迭代器只能往前不会后退。\"},\"3245\":{\"t\":\"字符串，列表或元组对象都可用于创建迭代器。\"},\"3246\":{\"t\":\">>> list=[1,2,3,4] >>> it = iter(list) # 创建迭代器对象 >>> print (next(it)) # 输出迭代器的下一个元素 1 >>> print (next(it)) 2 >>> \"},\"3247\":{\"t\":\"把一个类作为一个迭代器使用需要在类中实现两个方法 iter() 与 next() 。\"},\"3248\":{\"t\":\"class MyNumbers: def __iter__(self): self.a = 1 return self def __next__(self): x = self.a self.a += 1 return x myclass = MyNumbers() myiter = iter(myclass) print(next(myiter)) print(next(myiter)) print(next(myiter)) print(next(myiter)) print(next(myiter)) \"},\"3249\":{\"t\":\"StopIteration 异常用于标识迭代的完成，防止出现无限循环的情况，在 __next__() 方法中我们可以设置在完成指定循环次数后触发 StopIteration 异常来结束迭代。\"},\"3250\":{\"t\":\"class MyNumbers: def __iter__(self): self.a = 1 return self def __next__(self): if self.a <= 20: x = self.a self.a += 1 return x else: # 当抛出这个异常，就会停止迭代 raise StopIteration myclass = MyNumbers() myiter = iter(myclass) for x in myiter: print(x) \"},\"3251\":{\"t\":\"生成器：\"},\"3252\":{\"t\":\"生成器是一个返回迭代器的函数，只能用于迭代操作，更简单点理解生成器就是一个迭代器。\"},\"3253\":{\"t\":\"在调用生成器运行的过程中，每次遇到 yield 时函数会暂停并保存当前所有的运行信息，返回 yield 的值, 并在下一次执行 next() 方法时从当前位置继续运行。\"},\"3254\":{\"t\":\"调用一个生成器函数，返回的是一个迭代器对象。\"},\"3255\":{\"t\":\"解释：https://blog.csdn.net/mieleizhi0522/article/details/82142856/\"},\"3256\":{\"t\":\"def foo(): print(\\\"starting...\\\") while True: res = yield 4 print(\\\"res:\\\",res) g = foo() print(next(g)) print(\\\"*\\\"*20) print(next(g)) \\\"\\\"\\\" starting... 4 ******************** res: None 4 \\\"\\\"\\\" def foo(num): print(\\\"starting...\\\") while num<10: num=num+1 yield num for n in foo(0): #相当于在执行生成器函数了 print(n) \\\"\\\"\\\" starting... 1 2 3 4 5 6 7 8 9 10 \\\"\\\"\\\" \"},\"3257\":{\"t\":\"根据上面一个例子，我们可以讲 yield 理解成 return，但是他也是迭代器，当运行next 函数时候，下一次的执行语句从上一次的 yield 开始 。\"},\"3258\":{\"c\":[\"语言基础\",\"python\"]},\"3259\":{\"h\":\"gRPC 快速开始\"},\"3260\":{\"h\":\"背景\",\"a\":\"背景\"},\"3261\":{\"t\":\"随着网站需要增加的服务增多，例如订单服务、支付服务等，你不可能将其定制化添加在一个项目中，会带来维护困难、分工开发易冲突等问题，所以需要将这些功能和服务进行横向的分割，包装成高内聚低耦合的功能单元模块，不同的功能单元可以交付给不同的团队进行开发和维护，这些功能单元模块可以部署在不同的机器上，防止单个机器带来限制以及提高并发处理能力。\"},\"3262\":{\"t\":\"推荐去阅读《大型网站技术架构》，很清晰的讲解了网站架构的历史。\"},\"3263\":{\"t\":\"在构建分布式部署和微服务架构的系统时候，会遇到一些问题：\"},\"3264\":{\"t\":\"语言和平台差异：不同服务可能使用了不同编程语言和平台，在使用时候需要做到兼容性处理。\"},\"3265\":{\"t\":\"性能和容错问题：有些通信协议和传输方式可能存在一定性能瓶颈，还有可能受到网络故障、服务不可以等因素影响，需要选择合适通信协议和传输方式。\"},\"3266\":{\"t\":\"精准调用：需要精准去调用某一个服务下的某一个功能，不能够因为某些原因导致调用出错\"},\"3267\":{\"t\":\"….\"},\"3268\":{\"t\":\"还有很多很多问题。问题的解决方法太多太多了，gRPC 框架可以很好的解决这些问题。\"},\"3269\":{\"t\":\"gRPC 是一种高性能、开源的远程过程调用框架，基于HTTP/2和 ProtoBuf 协议，支持多种编程语言，提供了丰富的功能和易于使用的接口，常用于构建分布式部署和微服务架构的系统。\"},\"3270\":{\"h\":\"调用过程\",\"a\":\"调用过程\"},\"3271\":{\"t\":\"一个程序（称为客户端）调用另一个程序（称为服务器或远程服务）中的函数，过程如下（这整个过程可以抽象成一个购物订单）：\"},\"3272\":{\"t\":\"定义接口（双方地址）：需要确认客户端和服务器之间地址，确认访问对方方式。\"},\"3273\":{\"t\":\"客户端调用（找个快递员A）：客户端应用程序调用本地的代理对象（Proxy Object），并传递参数。代理对象具有与服务器接口相同的方法，但实际上并不执行任何功能。\"},\"3274\":{\"t\":\"打包参数（打包物品）：客户端代理对象将调用信息和参数打包成网络可传输的格式，例如将它们序列化为二进制数据。\"},\"3275\":{\"t\":\"网络传输（快递员骑电动车/摩托车）：打包后的请求通过网络发送到远程服务器。这可能涉及到网络协议、Socket通信、HTTP请求等。\"},\"3276\":{\"t\":\"服务器接收（对方在快递柜找到）：服务器接收到请求后，会根据请求中的信息来确定要调用的具体方法。\"},\"3277\":{\"t\":\"解包参数（对方拆包裹）：服务器解析接收到的请求，将参数从网络传输的格式还原为本地方法可以理解的形式。\"},\"3278\":{\"t\":\"服务器调用（对方使用）：服务器使用解包后的参数调用相应的方法，并执行实际的操作。\"},\"3279\":{\"t\":\"打包结果（对方打包使用感受）：服务器将方法的执行结果打包成网络可传输的格式。\"},\"3280\":{\"t\":\"网络传输（通过网站或者口头告知）：打包后的结果通过网络发送回客户端。\"},\"3281\":{\"t\":\"客户端接收（网站提示店铺）：客户端接收到结果后，将其解包为本地应用程序可以使用的形式。\"},\"3282\":{\"t\":\"返回结果（店铺接受）：客户端代理对象将解包后的结果返回给调用方。\"},\"3283\":{\"t\":\"其实这过程抽象成实际，你到处都可以看到。在这个过程中双方需要隐藏了底层通信细节，使得分布式系统的开发更加方便和灵活，如何实现？关于实现，这个过程中有很多细节需要细细思考，或许可以从一个原始demo 感受下。\"},\"3284\":{\"h\":\"rpc\",\"a\":\"rpc\"},\"3285\":{\"t\":\"首先，我们采用原生rpc，去实现刚才的过程：\"},\"3286\":{\"t\":\"// client.go package main import ( \\\"fmt\\\" \\\"net/rpc\\\" ) func main() { //1. 建立连接 client, err := rpc.Dial(\\\"tcp\\\", \\\"localhost:8008\\\") if err != nil { panic(\\\"连接失败\\\") } // 2.设置结果 var reply string //string有默认值 // 3. 进行调用 选择目标函数，传入参数，结果 err = client.Call(\\\"HelloService.Hello\\\", \\\"123456\\\", &reply) if err != nil { panic(\\\"调用失败\\\") } fmt.Println(reply) } \"},\"3287\":{\"t\":\"// server.go package main import ( \\\"net\\\" \\\"net/rpc\\\" ) type HelloService struct{} func (s *HelloService) Hello(request string, reply *string) error { //返回值是通过修改reply的值 *reply = \\\"hello, \\\" + request return nil } func main() { //1. 实例化一个server listener, _ := net.Listen(\\\"tcp\\\", \\\":8008\\\") //2. 注册处理逻辑 handler，进行绑定 _ = rpc.RegisterName(\\\"HelloService\\\", &HelloService{}) //3. 启动服务，获取接受的字符串信息 conn, _ := listener.Accept() //当一个新的连接进来的时候， //4. 根据传递信息,进行处理,并调用函数 rpc.ServeConn(conn) } \"},\"3288\":{\"t\":\"上面两个代码已经实现了远程调用，但是有以下问题存在：\"},\"3289\":{\"t\":\"使用方式与本地调用有差异，调用方式更加接近本地调用 .hello(\\\"123456\\\")。\"},\"3290\":{\"t\":\"双方需要维护一个函数表和地址表，使用上比较麻烦。\"},\"3291\":{\"t\":\"服务端写起来更加简单点，注册处理函数时候更加方便点（字符串和实体一一对应很容易出现错误）\"},\"3292\":{\"t\":\"基于这两个原因，我们进行进一步的升级。\"},\"3293\":{\"t\":\"希望调用方式更加接近本地调用 .hello(\\\"123456\\\")。\"},\"3294\":{\"t\":\"思考如何接近本地调用？答：去封装一层专门处理 rpc 代码，然后暴露出来，让客户端使用更加贴近本地调用方式。\"},\"3295\":{\"t\":\"// client_proxy.go package client_proxy import ( \\\"net/rpc\\\" ) type HelloServiceStub struct { *rpc.Client } // 创建初始化对象 func NewHelloServiceClient(protcol, address string) HelloServiceStub { conn, err := rpc.Dial(protcol, address) if err != nil { panic(\\\"connect error!\\\") } return HelloServiceStub{conn} } // 将调用方法封装在函数中，就可以实现类似的本地调用 func (c *HelloServiceStub) Hello(request string, reply *string) error { err := c.Call(\\\"HelloService.Hello\\\", request, reply) if err != nil { return err } return nil } \"},\"3296\":{\"t\":\"使用方式：\"},\"3297\":{\"t\":\"// client.go package main import ( client_proxy \\\"demo/new_rpc/client_porxy\\\" \\\"fmt\\\" ) func main() { // 创建服务对象 client := client_proxy.NewHelloServiceClient(\\\"tcp\\\", \\\"localhost:1234\\\") var reply string //string有默认值 // 调用服务中的函数 err := client.Hello(\\\"1234\\\", &reply) if err != nil { panic(\\\"调用失败\\\") } fmt.Println(reply) } \"},\"3298\":{\"t\":\"在客户端使用远程服务方式已经实现了。\"},\"3299\":{\"t\":\"希望不要去记忆一些常用的字符串\"},\"3300\":{\"t\":\"其实这个挺好实现的，创建一个新的文件，将变量暴露出来，后续都是用变量，而不是字符串了。\"},\"3301\":{\"t\":\"// hanlder.go package hanlder const HelloServiceName = \\\"handler/HelloService\\\" \"},\"3302\":{\"t\":\"希望服务端写起来更加简单，减少错误产生。\"},\"3303\":{\"t\":\"怎么去封装服务端的注册处理函数？答：rpc.RegisterName(\\\"HelloService\\\", &HelloService{}) 将这个代码的参数进行封装：\"},\"3304\":{\"t\":\"字符串通过变量去使用\"},\"3305\":{\"t\":\"对该代码进行封装，只传入实体就可。\"},\"3306\":{\"t\":\"// server_proxy.go func RegisterHelloService(srv HelloService) error { return rpc.RegisterName(hanlder.HelloServiceName, srv) } \"},\"3307\":{\"t\":\"存在一个问题：HelloService 结构体声明和函数的参数类型具有很强的耦合（改了结构体名称，就也要改函数参数的类型）\"},\"3308\":{\"t\":\"解决方式：函数参数类型封装成一个接口类型 interface，根据鸭子类型原理就可以解决这个问题了\"},\"3309\":{\"t\":\"// server_proxy.go package server_proxy import ( hanlder \\\"demo/new_rpc/handler\\\" \\\"net/rpc\\\" ) type HelloServicer interface { Hello(request string, reply *string) error } // 如果做到解耦 - 我们关系的是函数 鸭子类型 func RegisterHelloService(srv HelloServicer) error { return rpc.RegisterName(hanlder.HelloServiceName, srv) } \"},\"3310\":{\"t\":\"服务端写法：\"},\"3311\":{\"t\":\"package main import ( \\\"demo/new_rpc/server_proxy\\\" \\\"net\\\" \\\"net/rpc\\\" ) type HelloService struct{} func (s *HelloService) Hello(request string, reply *string) error { //返回值是通过修改reply的值 *reply = \\\"hello, \\\" + request return nil } func main() { //1. 实例化一个server listener, _ := net.Listen(\\\"tcp\\\", \\\":8008\\\") //2. 注册处理逻辑 handler，进行绑定 _ = server_proxy.RegisterHelloService(&HelloService{}) //3. 启动服务，获取接受的字符串信息 conn, _ := listener.Accept() //当一个新的连接进来的时候， //4. 根据传递信息,进行处理,并调用函数 rpc.ServeConn(conn) } \"},\"3312\":{\"t\":\"整体变化不大，只是改了第 21 行的代码。\"},\"3313\":{\"t\":\"在这里，两个代理文件确实会帮助我们去写业务逻辑代码，写多个功能函数时候，其实都是一样逻辑，大胆的想，可以自动生成吗？同时还有很多地方没有完善，例如跨语言调用等。\"},\"3314\":{\"t\":\"其实这些都可以通过gRPC来实现。\"},\"3315\":{\"h\":\"gRPC\",\"a\":\"grpc\"},\"3316\":{\"t\":\"生成这些文件，需要 protobuf 的帮助，入门学习可以参考如下：\"},\"3317\":{\"t\":\"https://juejin.cn/post/7144948875613339685\"},\"3318\":{\"t\":\"https://zhuanlan.zhihu.com/p/435944782\"},\"3319\":{\"t\":\"关于环境搭建，请看上一篇《环境搭建》。\"},\"3320\":{\"t\":\"首先，需要定义双方实现的功能相关信息：参数、函数名、返回类型等等\"},\"3321\":{\"t\":\"syntax = \\\"proto3\\\"; // 定义proto 版本号 option go_package = \\\".;proto\\\"; //定义 go 包名，用于生成的 .pd.go 文件 service Greeter { // 定义消息服务，设置rpc接口服务 rpc SayHello (HelloRequest) returns (HelloReply); } // 定义消息体 message HelloRequest { string name = 1; } // 定义消息体 message HelloReply { string message = 1; } \"},\"3322\":{\"t\":\"自动生成文件\"},\"3323\":{\"t\":\"protoc -I . hello.proto --go_out=plugins=grpc:. \"},\"3324\":{\"t\":\"服务端代码\"},\"3325\":{\"t\":\"//定义一个结构体，作用是实现helloworld中的GreeterServer type Server struct{} // 相关业务函数 func (s *Server) SayHello(ctx context.Context, request *proto.HelloRequest) (*proto.HelloReply, error) { return &proto.HelloReply{ Message: \\\"hello \\\" + request.Name, }, nil } func main() { //1.实例化gRPC服务 g := grpc.NewServer() //2. 服务注册 proto.RegisterGreeterServer(g, &Server{}) // 3. 监听端口 lis, err := net.Listen(\\\"tcp\\\", \\\"0.0.0.0:50051\\\") if err != nil { panic(\\\"failed to listen:\\\" + err.Error()) } //4. 启动服务 err = g.Serve(lis) if err != nil { panic(\\\"failed to start grpc:\\\" + err.Error()) } } \"},\"3326\":{\"t\":\"客户端代码\"},\"3327\":{\"t\":\"func main() { //1. 建立服务连接 conn, err := grpc.Dial(\\\"127.0.0.1:50051\\\", grpc.WithTransportCredentials(insecure.NewCredentials())) if err != nil { panic(err) } // 2.关闭服务 defer conn.Close() // 3. 实例化客户端连接 c := proto.NewGreeterClient(conn) //4. 客户端调用在proto中定义的SayHello()rpc方法，发起请求，接收服务端响应 r, err := c.SayHello(context.Background(), &proto.HelloRequest{Name: \\\"1234\\\"}) if err != nil { panic(err) } fmt.Println(r.Message) } \"},\"3328\":{\"t\":\"运行结果\"},\"3329\":{\"t\":\"image-20230608104107433\"},\"3330\":{\"h\":\"流\",\"a\":\"流\"},\"3331\":{\"t\":\"grpc的 stream (流) 主要用于传输一些大数据，或者服务端和客户端长时间数据交互，比如聊天机器人。所具备流模式如下：\"},\"3332\":{\"t\":\"服务端数据流\"},\"3333\":{\"t\":\"这种模式是客户端发起一次请求，服务端返回一段连续的数据流。典型的例子是客户端向服务端发送一个股票代码，服务端就把该股票的实时数据源源不断的返回给客户端。\"},\"3334\":{\"t\":\"客户端数据流\"},\"3335\":{\"t\":\"这种模式是客户端源源不断的向服务端发送数据流，而在发送结束后，由服务端返回一个响应。典型的例子是物联网终端向服务器报送数据。\"},\"3336\":{\"t\":\"双向数据流\"},\"3337\":{\"t\":\"这种模式是客户端和服务端都可以向对方发送数据流，这个时候双方的数据可以同时互相发送，也就是可以实现实时交互。典型的例子是聊天机器人。\"},\"3338\":{\"t\":\"实现代码：\"},\"3339\":{\"t\":\"protobuf 文件\"},\"3340\":{\"t\":\"syntax = \\\"proto3\\\"; option go_package = \\\".;proto\\\"; service Greeter { rpc GetStream(StreamReqData) returns (stream StreamResData); //服务端流模式 rpc PutStream(stream StreamReqData) returns (StreamResData); //客户端流模式 rpc AllStream(stream StreamReqData) returns (stream StreamResData); //双向流模式 } message StreamReqData { string data = 1; } message StreamResData { string data = 1; } \"},\"3341\":{\"t\":\"func main() { conn, err := grpc.Dial(\\\"localhost:50052\\\", grpc.WithInsecure()) if err != nil { panic(err) } defer conn.Close() //服务端流模式 c := proto.NewGreeterClient(conn) res, _ := c.GetStream(context.Background(), &proto.StreamReqData{Data: \\\"1234\\\"}) for { a, err := res.Recv() if err != nil { fmt.Println(err) break } fmt.Println(a.Data) } //客户端流模式 putS, _ := c.PutStream(context.Background()) i := 0 for { i++ _ = putS.Send(&proto.StreamReqData{ Data: fmt.Sprintf(\\\"1234%d\\\", i), }) time.Sleep(time.Second) if i > 10 { break } } //双向流模式 allStr, _ := c.AllStream(context.Background()) wg := sync.WaitGroup{} wg.Add(2) go func() { defer wg.Done() for { data, _ := allStr.Recv() fmt.Println(\\\"收到客户端消息：\\\" + data.Data) } }() //1. 集中学习protobuf， grpc go func() { defer wg.Done() for { _ = allStr.Send(&proto.StreamReqData{Data: \\\"312\\\"}) time.Sleep(time.Second) } }() wg.Wait() } \"},\"3342\":{\"t\":\"package main import ( \\\"OldPackageTest/stream_grpc_test/proto\\\" \\\"fmt\\\" \\\"google.golang.org/grpc\\\" \\\"net\\\" \\\"sync\\\" \\\"time\\\" ) const PORT = \\\":50052\\\" // 定义一个结构体，实现三种数据流的业务逻辑 type server struct { } func (s *server) GetStream(req *proto.StreamReqData, res proto.Greeter_GetStreamServer) error { i := 0 for { i++ _ = res.Send(&proto.StreamResData{ Data: fmt.Sprintf(\\\"%v\\\", time.Now().Unix()), }) time.Sleep(time.Second) if i > 10 { break } } return nil } func (s *server) PutStream(cliStr proto.Greeter_PutStreamServer) error { for { if a, err := cliStr.Recv(); err != nil { fmt.Println(err) break } else { fmt.Println(a.Data) } } return nil } func (s *server) AllStream(allStr proto.Greeter_AllStreamServer) error { wg := sync.WaitGroup{} wg.Add(2) go func() { defer wg.Done() for { data, _ := allStr.Recv() fmt.Println(\\\"收到客户端消息：\\\" + data.Data) } }() go func() { defer wg.Done() for { _ = allStr.Send(&proto.StreamResData{Data: \\\"我是服务器\\\"}) time.Sleep(time.Second) } }() wg.Wait() return nil } func main() { // 创建连接 lis, err := net.Listen(\\\"tcp\\\", PORT) if err != nil { panic(err) } //实例化grpc服务 s := grpc.NewServer() //服务注册 proto.RegisterGreeterServer(s, &server{}) //启动服务 err = s.Serve(lis) if err != nil { panic(err) } } \"},\"3343\":{\"h\":\"问题\",\"a\":\"问题\"},\"3344\":{\"t\":\"通过生成 .pb.go 文件时候，总是报错。\"},\"3345\":{\"t\":\"报错信息：\"},\"3346\":{\"t\":\"--go_out: protoc-gen-go: plugins are not supported; use 'protoc --go-grpc_out=...' to generate gRPC See https://grpc.io/docs/languages/go/quickstart/#regenerate-grpc-code for more information. \"},\"3347\":{\"t\":\"解决方法：https://blog.51cto.com/u_15619895/5259902\"},\"3348\":{\"h\":\"环境搭建\"},\"3349\":{\"h\":\"gRPC\",\"a\":\"grpc\"},\"3350\":{\"h\":\"基本信息\",\"a\":\"基本信息\"},\"3351\":{\"t\":\"参考文档：\"},\"3352\":{\"t\":\"https://grpc.io/docs/languages/go/quickstart/\"},\"3353\":{\"t\":\"系统版本：Windows\"},\"3354\":{\"t\":\"Go 版本：go version go1.20.4 windows/amd64\"},\"3355\":{\"h\":\"安装步骤\",\"a\":\"安装步骤\"},\"3356\":{\"t\":\"安装 Go\"},\"3357\":{\"t\":\"根据官方文档，选择合适的版本进行安装。\"},\"3358\":{\"t\":\"安装 Protocol Buffers\"},\"3359\":{\"t\":\"根据protocolbuffers/protobuf的 Releases 根据系统选择合适压缩包，参考如下：\"},\"3360\":{\"t\":\"image.png\"},\"3361\":{\"t\":\"然后选择合适目录进行解压。\"},\"3362\":{\"t\":\"接下来你需要在系统变量中添加环境变量，如下图所示：\"},\"3363\":{\"t\":\"image.png\"},\"3364\":{\"t\":\"测试是否安装成功，在命令窗口中输入以下命令：\"},\"3365\":{\"t\":\"C:\\\\Users\\\\Y>protoc Usage: protoc [OPTION] PROTO_FILES Parse PROTO_FILES and generate output based on the options given: 。。。（未展示出来） \"},\"3366\":{\"t\":\"image.png\"},\"3367\":{\"t\":\"安装 Go 语言的一些依赖\"},\"3368\":{\"t\":\"$ go install google.golang.org/protobuf/cmd/protoc-gen-go $ go install google.golang.org/grpc/cmd/protoc-gen-go-grpc $ go install github.com/golang/protobuf/protoc-gen-go \"},\"3369\":{\"t\":\"安装 Goland 插件\"},\"3370\":{\"t\":\"image-20230603152851954\"},\"3371\":{\"h\":\"配置Eslint\"},\"3372\":{\"h\":\"前言\",\"a\":\"前言\"},\"3373\":{\"t\":\"其实我之前也看了很多文章，配置eslint。总是配置失败，然后有很奇怪的错误，今天就花了几个小时吧这个eslint全局配置一下。\"},\"3374\":{\"t\":\"因为现在项目并不是团队合作，所以我一般就直接全局配置，方便使用。\"},\"3375\":{\"t\":\"eslint官网：https://eslint.org/\"},\"3376\":{\"h\":\"步骤\",\"a\":\"步骤\"},\"3377\":{\"t\":\"下载eslint\"},\"3378\":{\"t\":\"image-20211018193342775\"},\"3379\":{\"t\":\"进入setting.json文件里面，进行简单的配置\"},\"3380\":{\"t\":\" // 启用Eslint \\\"eslint.enable\\\": true, \\\"eslint.options\\\": { \\\"configFile\\\": \\\"填写全局eslint配置文件的路径\\\", //指定vscode的eslint所处理的文件的后缀 \\\"extensions\\\": [ \\\".js\\\", \\\".vue\\\", \\\".ts\\\", \\\".tsx\\\" ] }, \\\"editor.codeActionsOnSave\\\": { \\\"source.fixAll.eslint\\\": true }, \"},\"3381\":{\"t\":\"全局安装eslint\"},\"3382\":{\"t\":\"命令：\"},\"3383\":{\"t\":\"npm i eslint -g \"},\"3384\":{\"t\":\"然后进入eslint的包内，创建.eslintrc.js文件\"},\"3385\":{\"t\":\"image-20211018193708076\"},\"3386\":{\"t\":\"写入相关配置\"},\"3387\":{\"t\":\"其实配置可以到网上找。（网上的资源太过于混杂了。我的说不定也不适合你）\"},\"3388\":{\"t\":\"module.exports = { // 默认情况下，ESLint会在所有父级组件中寻找配置文件，一直到根目录。ESLint一旦发现配置文件中有 \\\"root\\\": true，它就会停止在父级目录中寻找。 root: true, // 对Babel解析器的包装使其与 ESLint 兼容。 parser: \\\"babel-eslint\\\", parserOptions: { // 代码是 ECMAScript 模块 sourceType: \\\"module\\\" }, env: { // 预定义的全局变量，这里是浏览器环境 browser: true }, // 扩展一个流行的风格指南，即 eslint-config-standard // https://github.com/feross/standard/blob/master/RULES.md#javascript-standard-style extends: \\\"standard\\\", // required to lint *.vue files plugins: [ // 此插件用来识别.html 和 .vue文件中的js代码 \\\"html\\\", // standard风格的依赖包 \\\"standard\\\", // standard风格的依赖包 \\\"promise\\\" ], // 配置的一些规则 rules: { /* \\\"indent\\\": [\\\"error\\\",2] 数组第一个指定是否启用这个规则 \\\"off\\\" 或 0 - 关闭规则 \\\"warn\\\" 或 1 - 开启规则，使用警告级别的错误：warn (不会导致程序退出) \\\"error\\\" 或 2 - 开启规则，使用错误级别的错误：error (当被触发的时候，程序会退出) 数组第二个指定空几个空格 */ indent: [\\\"error\\\", 2], // allow paren-less arrow functions // \\\"arrow-parens\\\": 0, // allow async-await // \\\"generator-star-spacing\\\": 0, // allow debugger during development \\\"no-debugger\\\": process.env.NODE_ENV === \\\"production\\\" ? 2 : 0, // 禁止条件表达式中出现赋值操作符 \\\"no-cond-assign\\\": 2, // 禁用 console \\\"no-console\\\": 0, // 禁止在条件中使用常量表达式 // if (false) { // doSomethingUnfinished(); // } //cuowu \\\"no-constant-condition\\\": 2, // 禁止在正则表达式中使用控制字符 ：new RegExp(\\\"\\\\x1f\\\") \\\"no-control-regex\\\": 2, // 数组和对象键值对最后一个逗号， never参数：不能带末尾的逗号, always参数：必须带末尾的逗号， // always-multiline：多行模式必须带逗号，单行模式不能带逗号 \\\"comma-dangle\\\": [1, \\\"never\\\"], // 禁用 debugger // 禁止 function 定义中出现重名参数 \\\"no-dupe-args\\\": 2, // 禁止对象字面量中出现重复的 key \\\"no-dupe-keys\\\": 2, // 禁止重复的 case 标签 \\\"no-duplicate-case\\\": 2, // 禁止空语句块 \\\"no-empty\\\": 2, // 禁止在正则表达式中使用空字符集 (/^abc[]/) \\\"no-empty-character-class\\\": 2, // 禁止对 catch 子句的参数重新赋值 \\\"no-ex-assign\\\": 2, // 禁止不必要的布尔转换 \\\"no-extra-boolean-cast\\\": 2, // 禁止不必要的括号 //(a * b) + c;//报错 \\\"no-extra-parens\\\": 0, // 禁止不必要的分号 \\\"no-extra-semi\\\": 2, // 禁止对 function 声明重新赋值 \\\"no-func-assign\\\": 2, // 禁止在嵌套的块中出现 function 或 var 声明 \\\"no-inner-declarations\\\": [2, \\\"functions\\\"], // 禁止 RegExp 构造函数中无效的正则表达式字符串 \\\"no-invalid-regexp\\\": 2, // 禁止在字符串和注释之外不规则的空白 \\\"no-irregular-whitespace\\\": 2, // 禁止在 in 表达式中出现否定的左操作数 \\\"no-negated-in-lhs\\\": 2, // 禁止把全局对象 (Math 和 JSON) 作为函数调用 错误：var math = Math(); \\\"no-obj-calls\\\": 2, // 禁止直接使用 Object.prototypes 的内置属性 \\\"no-prototype-builtins\\\": 0, // 禁止正则表达式字面量中出现多个空格 \\\"no-regex-spaces\\\": 2, // 禁用稀疏数组 \\\"no-sparse-arrays\\\": 2, // 禁止出现令人困惑的多行表达式 \\\"no-unexpected-multiline\\\": 2, // 禁止在return、throw、continue 和 break语句之后出现不可达代码 \\\"no-unreachable\\\": 2, // 要求使用 isNaN() 检查 NaN \\\"use-isnan\\\": 2, // 强制使用有效的 JSDoc 注释 \\\"valid-jsdoc\\\": 1, // 强制 typeof 表达式与有效的字符串进行比较 // typeof foo === \\\"undefimed\\\" 错误 \\\"valid-typeof\\\": 2, // //////////// // 最佳实践 // // //////////// // 定义对象的set存取器属性时，强制定义get \\\"accessor-pairs\\\": 2, // 强制数组方法的回调函数中有 return 语句 \\\"array-callback-return\\\": 0, // 强制把变量的使用限制在其定义的作用域范围内 \\\"block-scoped-var\\\": 0, // 限制圈复杂度，也就是类似if else能连续接多少个 \\\"complexity\\\": [2, 9], // 要求 return 语句要么总是指定返回的值，要么不指定 \\\"consistent-return\\\": 0, // 强制所有控制语句使用一致的括号风格 \\\"curly\\\": [2, \\\"all\\\"], // switch 语句强制 default 分支，也可添加 // no default 注释取消此次警告 \\\"default-case\\\": 2, // 强制object.key 中 . 的位置，参数: // property，'.'号应与属性在同一行 // object, '.' 号应与对象名在同一行 \\\"dot-location\\\": [2, \\\"property\\\"], // 强制使用.号取属性 // 参数： allowKeywords：true 使用保留字做属性名时，只能使用.方式取属性 // false 使用保留字做属性名时, 只能使用[]方式取属性 e.g [2, {\\\"allowKeywords\\\": false}] // allowPattern: 当属性名匹配提供的正则表达式时，允许使用[]方式取值,否则只能用.号取值 e.g [2, {\\\"allowPattern\\\": \\\"^[a-z]+(_[a-z]+)+$\\\"}] \\\"dot-notation\\\": [2, { \\\"allowKeywords\\\": false }], // 使用 === 替代 == allow-null允许null和undefined== \\\"eqeqeq\\\": [2, \\\"allow-null\\\"], // 要求 for-in 循环中有一个 if 语句 \\\"guard-for-in\\\": 2, // 禁用 alert、confirm 和 prompt \\\"no-alert\\\": 0, // 禁用 arguments.caller 或 arguments.callee \\\"no-caller\\\": 2, // 不允许在 case 子句中使用词法声明 \\\"no-case-declarations\\\": 2, // 禁止除法操作符显式的出现在正则表达式开始的位置 \\\"no-div-regex\\\": 2, // 禁止 if 语句中有 return 之后有 else \\\"no-else-return\\\": 0, // 禁止出现空函数.如果一个函数包含了一条注释，它将不会被认为有问题。 \\\"no-empty-function\\\": 2, // 禁止使用空解构模式no-empty-pattern \\\"no-empty-pattern\\\": 2, // 禁止在没有类型检查操作符的情况下与 null 进行比较 \\\"no-eq-null\\\": 1, // 禁用 eval() \\\"no-eval\\\": 2, // 禁止扩展原生类型 \\\"no-extend-native\\\": 2, // 禁止不必要的 .bind() 调用 \\\"no-extra-bind\\\": 2, // 禁用不必要的标签 \\\"no-extra-label:\\\": 0, // 禁止 case 语句落空 \\\"no-fallthrough\\\": 2, // 禁止数字字面量中使用前导和末尾小数点 \\\"no-floating-decimal\\\": 2, // 禁止使用短符号进行类型转换(!!fOO) \\\"no-implicit-coercion\\\": 0, // 禁止在全局范围内使用 var 和命名的 function 声明 \\\"no-implicit-globals\\\": 1, // 禁止使用类似 eval() 的方法 \\\"no-implied-eval\\\": 2, // 禁止 this 关键字出现在类和类对象之外 \\\"no-invalid-this\\\": 0, // 禁用 __iterator__ 属性 \\\"no-iterator\\\": 2, // 禁用标签语句 \\\"no-labels\\\": 2, // 禁用不必要的嵌套块 \\\"no-lone-blocks\\\": 2, // 禁止在循环中出现 function 声明和表达式 \\\"no-loop-func\\\": 1, // 禁用魔术数字(3.14什么的用常量代替) \\\"no-magic-numbers\\\": [1, { \\\"ignore\\\": [0, -1, 1] }], // 禁止使用多个空格 \\\"no-multi-spaces\\\": 2, // 禁止使用多行字符串，在 JavaScript 中，可以在新行之前使用斜线创建多行字符串 \\\"no-multi-str\\\": 2, // 禁止对原生对象赋值 \\\"no-native-reassign\\\": 2, // 禁止在非赋值或条件语句中使用 new 操作符 \\\"no-new\\\": 2, // 禁止对 Function 对象使用 new 操作符 \\\"no-new-func\\\": 0, // 禁止对 String，Number 和 Boolean 使用 new 操作符 \\\"no-new-wrappers\\\": 2, // 禁用八进制字面量 \\\"no-octal\\\": 2, // 禁止在字符串中使用八进制转义序列 \\\"no-octal-escape\\\": 2, // 不允许对 function 的参数进行重新赋值 \\\"no-param-reassign\\\": 0, // 禁用 __proto__ 属性 \\\"no-proto\\\": 2, // 禁止使用 var 多次声明同一变量 \\\"no-redeclare\\\": 2, // 禁用指定的通过 require 加载的模块 \\\"no-return-assign\\\": 0, // 禁止使用 javascript: url \\\"no-script-url\\\": 0, // 禁止自我赋值 \\\"no-self-assign\\\": 2, // 禁止自身比较 \\\"no-self-compare\\\": 2, // 禁用逗号操作符 \\\"no-sequences\\\": 2, // 禁止抛出非异常字面量 \\\"no-throw-literal\\\": 2, // 禁用一成不变的循环条件 \\\"no-unmodified-loop-condition\\\": 2, // 禁止出现未使用过的表达式 \\\"no-unused-expressions\\\": 0, // 禁用未使用过的标签 \\\"no-unused-labels\\\": 2, // 禁止不必要的 .call() 和 .apply() \\\"no-useless-call\\\": 2, // 禁止不必要的字符串字面量或模板字面量的连接 \\\"no-useless-concat\\\": 2, // 禁用不必要的转义字符 \\\"no-useless-escape\\\": 0, // 禁用 void 操作符 \\\"no-void\\\": 0, // 禁止在注释中使用特定的警告术语 \\\"no-warning-comments\\\": 0, // 禁用 with 语句 \\\"no-with\\\": 2, // 强制在parseInt()使用基数参数 \\\"radix\\\": 2, // 要求所有的 var 声明出现在它们所在的作用域顶部 \\\"vars-on-top\\\": 0, // 要求 IIFE 使用括号括起来 \\\"wrap-iife\\\": [2, \\\"any\\\"], // 要求或禁止 “Yoda” 条件 \\\"yoda\\\": [2, \\\"never\\\"], // 要求或禁止使用严格模式指令 \\\"strict\\\": 0, // //////////// // 变量声明 // // //////////// // 要求或禁止 var 声明中的初始化(初值) \\\"init-declarations\\\": 0, // 不允许 catch 子句的参数与外层作用域中的变量同名 \\\"no-catch-shadow\\\": 0, // 禁止删除变量 \\\"no-delete-var\\\": 2, // 不允许标签与变量同名 \\\"no-label-var\\\": 2, // 禁用特定的全局变量 \\\"no-restricted-globals\\\": 0, // 禁止 var 声明 与外层作用域的变量同名 \\\"no-shadow\\\": 0, // 禁止覆盖受限制的标识符 \\\"no-shadow-restricted-names\\\": 2, // 禁用未声明的变量，除非它们在 /*global */ 注释中被提到 \\\"no-undef\\\": 2, // 禁止将变量初始化为 undefined \\\"no-undef-init\\\": 2, // 禁止将 undefined 作为标识符 \\\"no-undefined\\\": 0, // 禁止出现未使用过的变量 \\\"no-unused-vars\\\": [2, { \\\"vars\\\": \\\"all\\\", \\\"args\\\": \\\"none\\\" }], // 不允许在变量定义之前使用它们 \\\"no-use-before-define\\\": 0, // //////////////////////// // Node.js and CommonJS // // //////////////////////// // require return statements after callbacks \\\"callback-return\\\": 0, // 要求 require() 出现在顶层模块作用域中 \\\"global-require\\\": 1, // 要求回调函数中有容错处理 \\\"handle-callback-err\\\": [2, \\\"^(err|error)$\\\"], // 禁止混合常规 var 声明和 require 调用 \\\"no-mixed-requires\\\": 0, // 禁止调用 require 时使用 new 操作符 \\\"no-new-require\\\": 2, // 禁止对 __dirname 和 __filename进行字符串连接 \\\"no-path-concat\\\": 0, // 禁用 process.env \\\"no-process-env\\\": 0, // 禁用 process.exit() \\\"no-process-exit\\\": 0, // 禁用同步方法 \\\"no-sync\\\": 0, // //////////// // 风格指南 // // //////////// // 指定数组的元素之间要以空格隔开(, 后面)， never参数：[ 之前和 ] 之后不能带空格，always参数：[ 之前和 ] 之后必须带空格 \\\"array-bracket-spacing\\\": [2, \\\"never\\\"], // 禁止或强制在单行代码块中使用空格(禁用) \\\"block-spacing\\\": [1, \\\"never\\\"], // 强制使用一致的缩进 第二个参数为 \\\"tab\\\" 时，会使用tab， // if while function 后面的{必须与if在同一行，java风格。 \\\"brace-style\\\": [2, \\\"1tbs\\\", { \\\"allowSingleLine\\\": true }], // 双峰驼命名格式 \\\"camelcase\\\": 2, // 控制逗号前后的空格 \\\"comma-spacing\\\": [2, { \\\"before\\\": false, \\\"after\\\": true }], // 控制逗号在行尾出现还是在行首出现 (默认行尾) // http://eslint.org/docs/rules/comma-style \\\"comma-style\\\": [2, \\\"last\\\"], // \\\"SwitchCase\\\" (默认：0) 强制 switch 语句中的 case 子句的缩进水平 // 以方括号取对象属性时，[ 后面和 ] 前面是否需要空格, 可选参数 never, always \\\"computed-property-spacing\\\": [2, \\\"never\\\"], // 用于指统一在回调函数中指向this的变量名，箭头函数中的this已经可以指向外层调用者，应该没卵用了 // e.g [0,\\\"that\\\"] 指定只能 var that = this. that不能指向其他任何值，this也不能赋值给that以外的其他值 \\\"consistent-this\\\": [1, \\\"that\\\"], // 强制使用命名的 function 表达式 \\\"func-names\\\": 0, // 文件末尾强制换行 \\\"eol-last\\\": 2, // \\\"indent\\\": [2, 4, { // \\\"SwitchCase\\\": 1 // }], // 强制在对象字面量的属性中键和值之间使用一致的间距 \\\"key-spacing\\\": [2, { \\\"beforeColon\\\": false, \\\"afterColon\\\": true }], // 强制使用一致的换行风格 \\\"linebreak-style\\\": [1, \\\"unix\\\"], // 要求在注释周围有空行 ( 要求在块级注释之前有一空行) \\\"lines-around-comment\\\": [1, { \\\"beforeBlockComment\\\": true }], // 强制一致地使用函数声明或函数表达式，方法定义风格，参数： // declaration: 强制使用方法声明的方式，function f(){} e.g [2, \\\"declaration\\\"] // expression：强制使用方法表达式的方式，var f = function() {} e.g [2, \\\"expression\\\"] // allowArrowFunctions: declaration风格中允许箭头函数。 e.g [2, \\\"declaration\\\", { \\\"allowArrowFunctions\\\": true }] \\\"func-style\\\": 0, // 强制回调函数最大嵌套深度 5层 \\\"max-nested-callbacks\\\": [1, 5], // 禁止使用指定的标识符 \\\"id-blacklist\\\": 0, // 强制标识符的最新和最大长度 \\\"id-length\\\": 0, // 要求标识符匹配一个指定的正则表达式 \\\"id-match\\\": 0, // 强制在 JSX 属性中一致地使用双引号或单引号 \\\"jsx-quotes\\\": 0, // 强制在关键字前后使用一致的空格 (前后腰需要) \\\"keyword-spacing\\\": 2, // 强制一行的最大长度 \\\"max-len\\\": [1, 200], // 强制最大行数 \\\"max-lines\\\": 0, // 强制 function 定义中最多允许的参数数量 \\\"max-params\\\": [1, 7], // 强制 function 块最多允许的的语句数量 \\\"max-statements\\\": [1, 200], // 强制每一行中所允许的最大语句数量 \\\"max-statements-per-line\\\": 0, // 要求构造函数首字母大写 （要求调用 new 操作符时有首字母大小的函数，允许调用首字母大写的函数时没有 new 操作符。） \\\"new-cap\\\": [2, { \\\"newIsCap\\\": true, \\\"capIsNew\\\": false }], // 要求调用无参构造函数时有圆括号 \\\"new-parens\\\": 2, // 要求或禁止 var 声明语句后有一行空行 \\\"newline-after-var\\\": 0, // 禁止使用 Array 构造函数 \\\"no-array-constructor\\\": 2, // 禁用按位运算符 \\\"no-bitwise\\\": 0, // 要求 return 语句之前有一空行 \\\"newline-before-return\\\": 0, // 要求方法链中每个调用都有一个换行符 \\\"newline-per-chained-call\\\": 1, // 禁用 continue 语句 \\\"no-continue\\\": 0, // 禁止在代码行后使用内联注释 \\\"no-inline-comments\\\": 0, // 禁止 if 作为唯一的语句出现在 else 语句中 \\\"no-lonely-if\\\": 0, // 禁止混合使用不同的操作符 \\\"no-mixed-operators\\\": 0, // 不允许空格和 tab 混合缩进 \\\"no-mixed-spaces-and-tabs\\\": 2, // 不允许多个空行 \\\"no-multiple-empty-lines\\\": [2, { \\\"max\\\": 2 }], // 不允许否定的表达式 \\\"no-negated-condition\\\": 0, // 不允许使用嵌套的三元表达式 \\\"no-nested-ternary\\\": 0, // 禁止使用 Object 的构造函数 \\\"no-new-object\\\": 2, // 禁止使用一元操作符 ++ 和 -- \\\"no-plusplus\\\": 0, // 禁止使用特定的语法 \\\"no-restricted-syntax\\\": 0, // 禁止 function 标识符和括号之间出现空格 \\\"no-spaced-func\\\": 2, // 不允许使用三元操作符 \\\"no-ternary\\\": 0, // 禁用行尾空格 \\\"no-trailing-spaces\\\": 2, // 禁止标识符中有悬空下划线_bar \\\"no-underscore-dangle\\\": 0, // 禁止可以在有更简单的可替代的表达式时使用三元操作符 \\\"no-unneeded-ternary\\\": 2, // 禁止属性前有空白 \\\"no-whitespace-before-property\\\": 0, // 强制花括号内换行符的一致性 \\\"object-curly-newline\\\": 0, // 强制在花括号中使用一致的空格 \\\"object-curly-spacing\\\": 0, // 强制将对象的属性放在不同的行上 \\\"object-property-newline\\\": 0, // 强制函数中的变量要么一起声明要么分开声明 \\\"one-var\\\": [2, { \\\"initialized\\\": \\\"never\\\" }], // 要求或禁止在 var 声明周围换行 \\\"one-var-declaration-per-line\\\": 0, // 要求或禁止在可能的情况下要求使用简化的赋值操作符 \\\"operator-assignment\\\": 0, // 强制操作符使用一致的换行符 \\\"operator-linebreak\\\": [2, \\\"after\\\", { \\\"overrides\\\": { \\\"?\\\": \\\"before\\\", \\\":\\\": \\\"before\\\" } }], // 要求或禁止块内填充 \\\"padded-blocks\\\": 0, // 要求对象字面量属性名称用引号括起来 \\\"quote-props\\\": 0, // 强制使用一致的反勾号、双引号或单引号 \\\"quotes\\\": [2, \\\"double\\\", \\\"avoid-escape\\\"], // 要求使用 JSDoc 注释 \\\"require-jsdoc\\\": 1, // 要求或禁止使用分号而不是 ASI（这个才是控制行尾部分号的，） \\\"semi\\\": [2, \\\"always\\\"], // 强制分号之前和之后使用一致的空格 \\\"semi-spacing\\\": 0, // 要求同一个声明块中的变量按顺序排列 \\\"sort-vars\\\": 0, // 强制在块之前使用一致的空格 \\\"space-before-blocks\\\": [2, \\\"always\\\"], // 强制在 function的左括号之前使用一致的空格 \\\"space-before-function-paren\\\": [0, \\\"always\\\"], // 强制在圆括号内使用一致的空格 \\\"space-in-parens\\\": [2, \\\"never\\\"], // 要求操作符周围有空格 \\\"space-infix-ops\\\": 2, // 强制在一元操作符前后使用一致的空格 \\\"space-unary-ops\\\": [2, { \\\"words\\\": true, \\\"nonwords\\\": false }], // 强制在注释中 // 或 /* 使用一致的空格 \\\"spaced-comment\\\": [2, \\\"always\\\", { \\\"markers\\\": [\\\"global\\\", \\\"globals\\\", \\\"eslint\\\", \\\"eslint-disable\\\", \\\"*package\\\", \\\"!\\\"] }], // 要求或禁止 Unicode BOM \\\"unicode-bom\\\": 0, // 要求正则表达式被括号括起来 \\\"wrap-regex\\\": 0, // //////////// // ES6.相关 // // //////////// // 要求箭头函数体使用大括号 \\\"arrow-body-style\\\": 2, // 要求箭头函数的参数使用圆括号 \\\"arrow-parens\\\": 2, \\\"arrow-spacing\\\": [2, { \\\"before\\\": true, \\\"after\\\": true }], // 强制在子类构造函数中用super()调用父类构造函数，TypeScrip的编译器也会提示 \\\"constructor-super\\\": 0, // 强制 generator 函数中 * 号周围使用一致的空格 \\\"generator-star-spacing\\\": [2, { \\\"before\\\": true, \\\"after\\\": true }], // 禁止修改类声明的变量 \\\"no-class-assign\\\": 2, // 不允许箭头功能，在那里他们可以混淆的比较 \\\"no-confusing-arrow\\\": 0, // 禁止修改 const 声明的变量 \\\"no-const-assign\\\": 2, // 禁止类成员中出现重复的名称 \\\"no-dupe-class-members\\\": 2, // 不允许复制模块的进口 \\\"no-duplicate-imports\\\": 0, // 禁止 Symbol 的构造函数 \\\"no-new-symbol\\\": 2, // 允许指定模块加载时的进口 \\\"no-restricted-imports\\\": 0, // 禁止在构造函数中，在调用 super() 之前使用 this 或 super \\\"no-this-before-super\\\": 2, // 禁止不必要的计算性能键对象的文字 \\\"no-useless-computed-key\\\": 0, // 要求使用 let 或 const 而不是 var \\\"no-var\\\": 0, // 要求或禁止对象字面量中方法和属性使用简写语法 \\\"object-shorthand\\\": 0, // 要求使用箭头函数作为回调 \\\"prefer-arrow-callback\\\": 0, // 要求使用 const 声明那些声明后不再被修改的变量 \\\"prefer-const\\\": 0, // 要求在合适的地方使用 Reflect 方法 \\\"prefer-reflect\\\": 0, // 要求使用扩展运算符而非 .apply() \\\"prefer-spread\\\": 0, // 要求使用模板字面量而非字符串连接 \\\"prefer-template\\\": 0, // Suggest using the rest parameters instead of arguments \\\"prefer-rest-params\\\": 0, // 要求generator 函数内有 yield \\\"require-yield\\\": 0, // enforce spacing between rest and spread operators and their expressions \\\"rest-spread-spacing\\\": 0, // 强制模块内的 import 排序 \\\"sort-imports\\\": 0, // 要求或禁止模板字符串中的嵌入表达式周围空格的使用 \\\"template-curly-spacing\\\": 1, // 强制在 yield* 表达式中 * 周围使用空格 \\\"yield-star-spacing\\\": 2 } }; \"},\"3389\":{\"t\":\"这里总之一句话，去寻找符合自己的。可能你的项目会有很多错误，找到对应的eslint规则，去看是否是自己需要的，进行选择使用。\"},\"3390\":{\"h\":\"忠告\",\"a\":\"忠告\"},\"3391\":{\"t\":\"可能你的eslint会打印很多很多奇怪的错误，其实分两部分\"},\"3392\":{\"t\":\"你没有下载相关的包或者插件\"},\"3393\":{\"t\":\"你可能会弹出下面的信息，其实就是要你全局安装相关的插件或者包\"},\"3394\":{\"t\":\"[Error - 下午6:53:02] Request textDocument/codeAction failed. Message: Request textDocument/codeAction failed with message: Failed to load plugin 'prettier' declared in '--config': Cannot find module 'eslint-plugin-prettier' Require stack: - D:\\\\Program Files\\\\nodejs\\\\node_global\\\\__placeholder__.js Referenced from: D:\\\\Program Files\\\\nodejs\\\\node_global\\\\.eslintrc.js Code: -32603 [Error - 下午6:53:04] Request textDocument/codeAction failed. Message: Request textDocument/codeAction failed with message: Failed to load plugin 'prettier' declared in '--config': Cannot find module 'eslint-plugin-prettier' Require stack: - D:\\\\Program Files\\\\nodejs\\\\node_global\\\\__placeholder__.js Referenced from: D:\\\\Program Files\\\\nodejs\\\\node_global\\\\.eslintrc.js \"},\"3395\":{\"t\":\"你的配置文件有问题（应该写数字而不是error）\"},\"3396\":{\"t\":\"可能弹出的错误\"},\"3397\":{\"t\":\"Request textDocument/codeAction failed. Message: Request textDocument/codeAction failed with message: --config: Configuration for rule \\\"brace-style\\\" is invalid: Value \\\"1tabs\\\" should be equal to one of the allowed values. \"},\"3398\":{\"t\":\"如果出现这种错误，按照他的要求去进行更改即可，即使你改了还是不行的话，你可以选择删除，或者换一种配置文件，或者去看你的vscode的setting是不是出现配置重复的问题。\"},\"3399\":{\"t\":\"记得搞完配置一定要重启eslint。\"},\"3400\":{\"c\":[\"工具教程\"]},\"3401\":{\"h\":\"Github Action\"},\"3402\":{\"h\":\"基本介绍\",\"a\":\"基本介绍\"},\"3403\":{\"t\":\"GitHub Actions 是一种持续集成和持续交付 (CI/CD) 平台，可以执行一些操作，例如运行测试、打包并部署、发布项目等，你也不用写很复杂得脚本去实现，直接引用别人写好的 action 最后组成一个 actions 组合来达到你的目的。\"},\"3404\":{\"t\":\"官方文档\"},\"3405\":{\"h\":\"相关部分\",\"a\":\"相关部分\"},\"3406\":{\"h\":\"workflow 工作流\",\"a\":\"workflow-工作流\"},\"3407\":{\"t\":\"工作流可运行一个或者多个任务，你可以自己设定触发机制，自动触发或者手动触发。\"},\"3408\":{\"t\":\"工作流存储在 .github/workflows 文件夹中，以 yaml 格式进行配置，一个 yaml 代表一个工作流。\"},\"3409\":{\"h\":\"event 事件\",\"a\":\"event-事件\"},\"3410\":{\"t\":\"设置触发工作流运行得特定机制，例如当有人在仓库中提交文件，需要重新对项目进行打包并部署，那么你需要将触发机制设置为 push 操作。\"},\"3411\":{\"t\":\"在 yaml 文件中你需要配置得是 on。\"},\"3412\":{\"t\":\"举个例子：我现在需要配置只要仓库有 push 操作就会运行该工作流。\"},\"3413\":{\"t\":\"on: # 触发条件，这里设置为 push，也就是只有在 push 时才会触发 push: branches: # 确保这是你正在使用的分支名称 - main \"},\"3414\":{\"t\":\"触发事件有很多，你可以参考官方文档进行选择。\"},\"3415\":{\"t\":\"注意：不一定所有事情都是用于触发机制，也有设置上下文操作得。\"},\"3416\":{\"h\":\"job 任务\",\"a\":\"job-任务\"},\"3417\":{\"t\":\"任务是工作流中在同一运行器中执行得一组步骤。每个步骤按顺序执行得。你也可以去配置任务与其他任务之间得关系，设置条件或者并发运行等。\"},\"3418\":{\"t\":\"在 yaml 文件中是如下配置：\"},\"3419\":{\"t\":\"jobs: # 第一个 job 的 id deploy-pages: name: # job 名称 runs-on: # 运行环境：window/Ubuntu/macOS等 if: # 设置条件 steps: # 设置步骤 ...还有很多配置 \"},\"3420\":{\"t\":\"相关的配置请参考官方文档。\"},\"3421\":{\"h\":\"step 步骤\",\"a\":\"step-步骤\"},\"3422\":{\"t\":\"就是你要干的动作/活动，你可以运行相关命令，或者选择其他的 action 进行运行等。\"},\"3423\":{\"t\":\" steps: - name: # 名称 run: # 运行命令 env: # 设置一些环境变量 uses: # 选择合适 action 进行执行 with: # action的一些配置 \"},\"3424\":{\"h\":\"实例部署\",\"a\":\"实例部署\"},\"3425\":{\"t\":\"场景：使用 Github Action 对 vuepress 项目进行打包并部署\"},\"3426\":{\"t\":\"在 .github/workflows 文件夹中创建一个 yaml 文件。\"},\"3427\":{\"t\":\"相关配置如下：\"},\"3428\":{\"t\":\"name: 部署文档 on: workflow_call: secrets: # 获取 ACCESS_TOKEN 权限 ACCESS_TOKEN: required: true # 触发条件，这里设置为 push，也就是只有在 push 时才会触发 push: branches: # 确保这是你正在使用的分支名称 - main jobs: deploy-pages: runs-on: ubuntu-latest # 设置运行环境 # 接下来的步骤 steps: # 检查并获取仓库源码，包括子模块 - name: Checkout uses: actions/checkout@v3 with: fetch-depth: 0 # 如果你文档需要 Git 子模块，取消注释下一行 submodules: true # 设置 Node.js 环境 - name: Set up Node.js uses: actions/setup-node@v3 with: node-version: 18 # 安装 pnpm - name: Install pnpm run: npm install -g pnpm # 安装依赖 - name: Install dependencies run: pnpm install --no-frozen-lockfile # 打包并构建文档 - name: 构建文档 env: NODE_OPTIONS: --max_old_space_size=8192 run: |- pnpm run docs:build # 创建 CNAME 文件，设置自定义域名 - name: Create CNAME run: | echo \\\"yay-docs.yangdiy.cn\\\" > CNAME mv CNAME src/.vuepress/dist # 查看 workflow 的文档来获取更多信息 # @see https://github.com/crazy-max/ghaction-github-pages # 部署到 GitHub Pages - name: Deploy to GitHub Pages uses: crazy-max/ghaction-github-pages@v2 with: # 部署到 gh-pages 分支 target_branch: gh-pages # 部署目录为 VuePress 的默认输出目录 build_dir: src/.vuepress/dist env: # @see https://docs.github.com/cn/actions/reference/authentication-in-a-workflow#about-the-github_token-secret GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }} \"},\"3429\":{\"t\":\"这里需要设置 ACCESS_TOKEN，步骤如下：\"},\"3430\":{\"t\":\"在 个人账号->setting-> Developer settings-> Personal access tokens->Tokens 里面进行创建 Token ，关于权限的选择，选择关于 workflows & repo 就可以了，设置相关的期限。\"},\"3431\":{\"t\":\"在 个人仓库-> Settings-> Secrets and variables-> Actions 里面填写刚才的 Token 。注意：名称要与文件内容保持一致。\"},\"3432\":{\"h\":\"问题\",\"a\":\"问题\"},\"3433\":{\"t\":\"自定义域名后，页面没有样式，如下图所示：\"},\"3434\":{\"t\":\"image-20230530232846985\"},\"3435\":{\"t\":\"解决方案：\"},\"3436\":{\"t\":\"这与你的部署域名有关系，需要修改的配置 base选项\"},\"3437\":{\"t\":\"如果你的域名是 https://<USERNAME>.github.io/ 或者 自定义域名，你需要将 base 设置成 /\"},\"3438\":{\"t\":\"如果你的域名是 https://github.com/<USERNAME>/<REPO> ，你需要将 base 设置成 /<REPO>/\"},\"3439\":{\"t\":\"注意：base 的斜杠数量和方向\"},\"3440\":{\"t\":\"项目配置为自己 GitHub pages 自定义域名\"},\"3441\":{\"t\":\"场景：在部署时候，每次工作流生成的打包文件会覆盖之前，所以项目的域名总是 GitHub Pages 默认域名，但是我希望他是一个自定义域名。\"},\"3442\":{\"t\":\"解决方案：\"},\"3443\":{\"t\":\"本质上你通过 github pages 设置的自定义域名就是在你的项目中加入了一个 CNAME 文件，文件内容是你的域名。基于该原因有这样以下的解决方案：\"},\"3444\":{\"t\":\"利用 Git 进行提交\"},\"3445\":{\"t\":\"打包后加入文件\"},\"3446\":{\"t\":\"第一种方案会遇到权限问题，总是会报如下错：\"},\"3447\":{\"t\":\"remote: Permission to baici1/yay-docs.git denied to github-actions[bot]. fatal: unable to access 'https://github.com/baici1/yay-docs.git/': The requested URL returned error: 403 \"},\"3448\":{\"t\":\"第二种方案就比较简单，加入以下代码即可实现：\"},\"3449\":{\"t\":\" - name: Create CNAME run: | echo \\\"yay-docs.yangdiy.cn\\\" > CNAME mv CNAME src/.vuepress/dist \"},\"3450\":{\"h\":\"参考\",\"a\":\"参考\"},\"3451\":{\"t\":\"https://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html\"},\"3452\":{\"t\":\"https://docs.github.com/en/actions/quickstart\"},\"3453\":{\"h\":\"Book\"},\"3454\":{\"h\":\"C V\"},\"3455\":{\"h\":\"A I\"},\"3456\":{\"h\":\"Database\"},\"3457\":{\"h\":\"Cs\"},\"3458\":{\"h\":\"Network\"},\"3459\":{\"h\":\"Go\"},\"3460\":{\"h\":\"Language\"},\"3461\":{\"h\":\"Python\"},\"3462\":{\"h\":\"Micro\"},\"3463\":{\"h\":\"Project\"},\"3464\":{\"h\":\"Tools\"},\"3465\":{\"h\":\"Posts\"},\"3466\":{\"h\":\"Apple\"},\"3467\":{\"h\":\"Banana\"}},\"dirtCount\":0,\"index\":[[\"部署目录为\",{\"1\":{\"3428\":1}}],[\"部署到\",{\"1\":{\"3428\":2}}],[\"部署文档\",{\"1\":{\"3428\":1}}],[\"部分已经结束了\",{\"1\":{\"1507\":1}}],[\"部分内容\",{\"1\":{\"1097\":1}}],[\"活动\",{\"1\":{\"3422\":1}}],[\"名称要与文件内容保持一致\",{\"1\":{\"3431\":1}}],[\"名称\",{\"1\":{\"3419\":1,\"3423\":1}}],[\"名字上是调度器的一个初始化\",{\"1\":{\"2787\":1}}],[\"名字第一个字是张\",{\"1\":{\"272\":1}}],[\"任务是工作流中在同一运行器中执行得一组步骤\",{\"1\":{\"3417\":1}}],[\"任务\",{\"0\":{\"3416\":1}}],[\"任何类型的\",{\"1\":{\"3229\":1}}],[\"官方文档\",{\"1\":{\"3404\":1}}],[\"官方自带的逻辑备份工具是\",{\"1\":{\"308\":1}}],[\"工具教程\",{\"2\":{\"3400\":1}}],[\"工作流存储在\",{\"1\":{\"3408\":1}}],[\"工作流可运行一个或者多个任务\",{\"1\":{\"3407\":1}}],[\"工作流\",{\"0\":{\"3406\":1}}],[\"工作线程对应的数据结构是\",{\"1\":{\"2828\":1}}],[\"工作过程如下\",{\"1\":{\"2555\":1}}],[\"工作完成了\",{\"1\":{\"1509\":1}}],[\"工作完成后\",{\"1\":{\"1509\":1}}],[\"忠告\",{\"0\":{\"3390\":1}}],[\"周围使用空格\",{\"1\":{\"3388\":1}}],[\"排序\",{\"1\":{\"3388\":1}}],[\"排他锁\",{\"1\":{\"604\":1}}],[\"混合缩进\",{\"1\":{\"3388\":1}}],[\"混合加密的方式实现信息的机密性\",{\"1\":{\"1206\":1}}],[\"块最多允许的的语句数量\",{\"1\":{\"3388\":1}}],[\"箭头函数中的this已经可以指向外层调用者\",{\"1\":{\"3388\":1}}],[\"条件\",{\"1\":{\"3388\":1}}],[\"替代\",{\"1\":{\"3388\":1}}],[\"号周围使用一致的空格\",{\"1\":{\"3388\":1}}],[\"号取值\",{\"1\":{\"3388\":1}}],[\"号取属性\",{\"1\":{\"3388\":1}}],[\"号应与对象名在同一行\",{\"1\":{\"3388\":1}}],[\"号应与属性在同一行\",{\"1\":{\"3388\":1}}],[\"错误\",{\"1\":{\"3388\":2}}],[\"错误发现就直接丢弃\",{\"1\":{\"709\":1}}],[\"声明那些声明后不再被修改的变量\",{\"1\":{\"3388\":1}}],[\"声明的变量\",{\"1\":{\"3388\":1}}],[\"声明周围换行\",{\"1\":{\"3388\":1}}],[\"声明语句后有一行空行\",{\"1\":{\"3388\":1}}],[\"声明和\",{\"1\":{\"3388\":1}}],[\"声明和表达式\",{\"1\":{\"3388\":1}}],[\"声明中的初始化\",{\"1\":{\"3388\":1}}],[\"声明出现在它们所在的作用域顶部\",{\"1\":{\"3388\":1}}],[\"声明\",{\"1\":{\"3388\":3}}],[\"声明重新赋值\",{\"1\":{\"3388\":1}}],[\"声明一个数组var\",{\"1\":{\"1633\":1}}],[\"禁止类成员中出现重复的名称\",{\"1\":{\"3388\":1}}],[\"禁止修改\",{\"1\":{\"3388\":1}}],[\"禁止修改类声明的变量\",{\"1\":{\"3388\":1}}],[\"禁止属性前有空白\",{\"1\":{\"3388\":1}}],[\"禁止可以在有更简单的可替代的表达式时使用三元操作符\",{\"1\":{\"3388\":1}}],[\"禁止标识符中有悬空下划线\",{\"1\":{\"3388\":1}}],[\"禁止混合使用不同的操作符\",{\"1\":{\"3388\":1}}],[\"禁止混合常规\",{\"1\":{\"3388\":1}}],[\"禁止或强制在单行代码块中使用空格\",{\"1\":{\"3388\":1}}],[\"禁止调用\",{\"1\":{\"3388\":1}}],[\"禁止将\",{\"1\":{\"3388\":1}}],[\"禁止将变量初始化为\",{\"1\":{\"3388\":1}}],[\"禁止覆盖受限制的标识符\",{\"1\":{\"3388\":1}}],[\"禁止删除变量\",{\"1\":{\"3388\":1}}],[\"禁止抛出非异常字面量\",{\"1\":{\"3388\":1}}],[\"禁止自身比较\",{\"1\":{\"3388\":1}}],[\"禁止自我赋值\",{\"1\":{\"3388\":1}}],[\"禁止使用特定的语法\",{\"1\":{\"3388\":1}}],[\"禁止使用一元操作符\",{\"1\":{\"3388\":1}}],[\"禁止使用指定的标识符\",{\"1\":{\"3388\":1}}],[\"禁止使用\",{\"1\":{\"3388\":4}}],[\"禁止使用多行字符串\",{\"1\":{\"3388\":1}}],[\"禁止使用多个空格\",{\"1\":{\"3388\":1}}],[\"禁止使用类似\",{\"1\":{\"3388\":1}}],[\"禁止使用短符号进行类型转换\",{\"1\":{\"3388\":1}}],[\"禁止使用空解构模式no\",{\"1\":{\"3388\":1}}],[\"禁止数字字面量中使用前导和末尾小数点\",{\"1\":{\"3388\":1}}],[\"禁止扩展原生类型\",{\"1\":{\"3388\":1}}],[\"禁止出现未使用过的变量\",{\"1\":{\"3388\":1}}],[\"禁止出现未使用过的表达式\",{\"1\":{\"3388\":1}}],[\"禁止出现空函数\",{\"1\":{\"3388\":1}}],[\"禁止出现令人困惑的多行表达式\",{\"1\":{\"3388\":1}}],[\"禁止除法操作符显式的出现在正则表达式开始的位置\",{\"1\":{\"3388\":1}}],[\"禁止正则表达式字面量中出现多个空格\",{\"1\":{\"3388\":1}}],[\"禁止直接使用\",{\"1\":{\"3388\":1}}],[\"禁止把全局对象\",{\"1\":{\"3388\":1}}],[\"禁止不必要的计算性能键对象的文字\",{\"1\":{\"3388\":1}}],[\"禁止不必要的字符串字面量或模板字面量的连接\",{\"1\":{\"3388\":1}}],[\"禁止不必要的\",{\"1\":{\"3388\":2}}],[\"禁止不必要的分号\",{\"1\":{\"3388\":1}}],[\"禁止不必要的括号\",{\"1\":{\"3388\":1}}],[\"禁止不必要的布尔转换\",{\"1\":{\"3388\":1}}],[\"禁止对原生对象赋值\",{\"1\":{\"3388\":1}}],[\"禁止对\",{\"1\":{\"3388\":5}}],[\"禁止对象字面量中出现重复的\",{\"1\":{\"3388\":1}}],[\"禁止空语句块\",{\"1\":{\"3388\":1}}],[\"禁止重复的\",{\"1\":{\"3388\":1}}],[\"禁止\",{\"1\":{\"3388\":9}}],[\"禁止在构造函数中\",{\"1\":{\"3388\":1}}],[\"禁止在代码行后使用内联注释\",{\"1\":{\"3388\":1}}],[\"禁止在注释中使用特定的警告术语\",{\"1\":{\"3388\":1}}],[\"禁止在字符串中使用八进制转义序列\",{\"1\":{\"3388\":1}}],[\"禁止在字符串和注释之外不规则的空白\",{\"1\":{\"3388\":1}}],[\"禁止在非赋值或条件语句中使用\",{\"1\":{\"3388\":1}}],[\"禁止在循环中出现\",{\"1\":{\"3388\":1}}],[\"禁止在全局范围内使用\",{\"1\":{\"3388\":1}}],[\"禁止在没有类型检查操作符的情况下与\",{\"1\":{\"3388\":1}}],[\"禁止在return\",{\"1\":{\"3388\":1}}],[\"禁止在\",{\"1\":{\"3388\":1}}],[\"禁止在嵌套的块中出现\",{\"1\":{\"3388\":1}}],[\"禁止在正则表达式中使用空字符集\",{\"1\":{\"3388\":1}}],[\"禁止在正则表达式中使用控制字符\",{\"1\":{\"3388\":1}}],[\"禁止在条件中使用常量表达式\",{\"1\":{\"3388\":1}}],[\"禁止条件表达式中出现赋值操作符\",{\"1\":{\"3388\":1}}],[\"禁用行尾空格\",{\"1\":{\"3388\":1}}],[\"禁用按位运算符\",{\"1\":{\"3388\":1}}],[\"禁用同步方法\",{\"1\":{\"3388\":1}}],[\"禁用未声明的变量\",{\"1\":{\"3388\":1}}],[\"禁用未使用过的标签\",{\"1\":{\"3388\":1}}],[\"禁用特定的全局变量\",{\"1\":{\"3388\":1}}],[\"禁用一成不变的循环条件\",{\"1\":{\"3388\":1}}],[\"禁用逗号操作符\",{\"1\":{\"3388\":1}}],[\"禁用指定的通过\",{\"1\":{\"3388\":1}}],[\"禁用八进制字面量\",{\"1\":{\"3388\":1}}],[\"禁用魔术数字\",{\"1\":{\"3388\":1}}],[\"禁用不必要的转义字符\",{\"1\":{\"3388\":1}}],[\"禁用不必要的嵌套块\",{\"1\":{\"3388\":1}}],[\"禁用不必要的标签\",{\"1\":{\"3388\":1}}],[\"禁用标签语句\",{\"1\":{\"3388\":1}}],[\"禁用稀疏数组\",{\"1\":{\"3388\":1}}],[\"禁用\",{\"1\":{\"3388\":13}}],[\"扩展一个流行的风格指南\",{\"1\":{\"3388\":1}}],[\"扩容规则\",{\"0\":{\"1844\":1}}],[\"扩容的代价还是比较高的\",{\"1\":{\"1838\":1}}],[\"扩容时保存原来常规桶的地址\",{\"1\":{\"1834\":1}}],[\"扩容\",{\"0\":{\"1821\":1}}],[\"兼容\",{\"1\":{\"3388\":1}}],[\"配置的一些规则\",{\"1\":{\"3388\":1}}],[\"配置eslint\",{\"0\":{\"3371\":1},\"1\":{\"3373\":1}}],[\"配套的提交语句是\",{\"1\":{\"174\":1}}],[\"测试是否安装成功\",{\"1\":{\"3364\":1}}],[\"集中学习protobuf\",{\"1\":{\"3341\":1}}],[\"集合的交集\",{\"1\":{\"3065\":1}}],[\"集合的成员\",{\"1\":{\"3064\":1}}],[\"集合\",{\"0\":{\"3059\":1}}],[\"双引号或单引号\",{\"1\":{\"3388\":1}}],[\"双峰驼命名格式\",{\"1\":{\"3388\":1}}],[\"双向流模式\",{\"1\":{\"3340\":1,\"3341\":1}}],[\"双向数据流\",{\"1\":{\"3336\":1}}],[\"双方需要维护一个函数表和地址表\",{\"1\":{\"3290\":1}}],[\"双方地址\",{\"1\":{\"3272\":1}}],[\"双方就会开始\",{\"1\":{\"1514\":1}}],[\"双方建立连接\",{\"1\":{\"1510\":2}}],[\"双方采用会话密钥进行加密通信\",{\"1\":{\"1213\":1}}],[\"双方协商产生会话密钥\",{\"1\":{\"1212\":1}}],[\"典型的例子是聊天机器人\",{\"1\":{\"3337\":1}}],[\"典型的例子是物联网终端向服务器报送数据\",{\"1\":{\"3335\":1}}],[\"典型的例子是客户端向服务端发送一个股票代码\",{\"1\":{\"3333\":1}}],[\"典藏版\",{\"1\":{\"2819\":1}}],[\"监听端口\",{\"1\":{\"3325\":1}}],[\"监控线程\",{\"1\":{\"2850\":1}}],[\"鸭子类型\",{\"1\":{\"3309\":1}}],[\"思考如何接近本地调用\",{\"1\":{\"3294\":1}}],[\"思想品德\",{\"1\":{\"3078\":1}}],[\"感受下\",{\"1\":{\"3283\":1}}],[\"感觉还是有点点糊糊的\",{\"1\":{\"2811\":1}}],[\"店铺接受\",{\"1\":{\"3282\":1}}],[\"摩托车\",{\"1\":{\"3275\":1}}],[\"框架可以很好的解决这些问题\",{\"1\":{\"3268\":1}}],[\"精准调用\",{\"1\":{\"3266\":1}}],[\"支付服务等\",{\"1\":{\"3261\":1}}],[\"支持多种编程语言\",{\"1\":{\"3269\":1}}],[\"支持创建调用c代码的包\",{\"1\":{\"2893\":1}}],[\"支持go程序调试\",{\"1\":{\"2891\":1}}],[\"支持bzip2\",{\"1\":{\"2891\":1}}],[\"支持主体并发增量式回收\",{\"1\":{\"2466\":1}}],[\"支持事务和外键\",{\"1\":{\"435\":1}}],[\"支持行级锁\",{\"1\":{\"432\":1}}],[\"支持的引擎如上\",{\"1\":{\"428\":1}}],[\"支持\",{\"1\":{\"60\":1,\"438\":1,\"695\":1}}],[\"背景\",{\"0\":{\"3260\":1}}],[\"迭代是python最强大的功能之一\",{\"1\":{\"3242\":1}}],[\"迭代器只能往前不会后退\",{\"1\":{\"3244\":1}}],[\"迭代器对象从集合的第一个元素开始访问\",{\"1\":{\"3244\":1}}],[\"迭代器是一个可以记住遍历的位置的对象\",{\"1\":{\"3243\":1}}],[\"迭代器\",{\"1\":{\"3241\":1}}],[\"装饰器名字\",{\"1\":{\"3238\":1}}],[\"装饰器\",{\"1\":{\"3238\":1}}],[\"装饰指的是为其他事物添加额外的东西点缀\",{\"1\":{\"3236\":1}}],[\"器指的是工具\",{\"1\":{\"3235\":1}}],[\"特点\",{\"1\":{\"3227\":1}}],[\"特别是没有\",{\"1\":{\"1408\":1}}],[\"书写正则表达式时使用了\",{\"1\":{\"3205\":1}}],[\"书栈网\",{\"1\":{\"1591\":1}}],[\"验证输入用户名和qq号是否有效并给出对应的提示信息\",{\"1\":{\"3205\":1}}],[\"吉多\",{\"1\":{\"3177\":1}}],[\"致橡树\",{\"1\":{\"3175\":3}}],[\"区分换行符\",{\"1\":{\"3136\":1}}],[\"区间查询\",{\"1\":{\"201\":1}}],[\"必需\",{\"1\":{\"3131\":1}}],[\"必须与if在同一行\",{\"1\":{\"3388\":1}}],[\"必须带末尾的逗号\",{\"1\":{\"3388\":1}}],[\"必须进行合成\",{\"1\":{\"1443\":1}}],[\"必须先获得整个表的\",{\"1\":{\"608\":1,\"609\":1}}],[\"必须使用所有的索引列来查找\",{\"1\":{\"470\":1}}],[\"抽象类可以理解为一个模板\",{\"1\":{\"3100\":1}}],[\"抽象类型\",{\"1\":{\"2037\":1}}],[\"凯蒂\",{\"1\":{\"3099\":1}}],[\"旺财\",{\"1\":{\"3099\":1}}],[\"喵\",{\"1\":{\"3099\":2}}],[\"猫\",{\"1\":{\"3099\":1}}],[\"汪汪汪\",{\"1\":{\"3099\":1}}],[\"狗\",{\"1\":{\"3099\":1}}],[\"宠物\",{\"1\":{\"3099\":1}}],[\"砖家\",{\"1\":{\"3096\":1}}],[\"初值\",{\"1\":{\"3388\":1}}],[\"初三\",{\"1\":{\"3096\":1}}],[\"初始化其他细节\",{\"1\":{\"2802\":1}}],[\"初始化所有\",{\"1\":{\"2802\":1}}],[\"初始化堆栈保护\",{\"1\":{\"2795\":1}}],[\"初始化一系列debug相关的变量\",{\"1\":{\"2789\":1}}],[\"初始化m的signal\",{\"1\":{\"2789\":1}}],[\"初始化interface相关\",{\"1\":{\"2789\":1}}],[\"初始化cpu信息\",{\"1\":{\"2789\":1}}],[\"初始化当前系统线程\",{\"1\":{\"2789\":1}}],[\"初始化内存分配器\",{\"1\":{\"2789\":1}}],[\"初始化执行栈\",{\"1\":{\"2789\":1}}],[\"初始化\",{\"1\":{\"2753\":1,\"2798\":1}}],[\"初始化分配的栈空间是一样的\",{\"1\":{\"2289\":1}}],[\"初始化赋值\",{\"1\":{\"2131\":1}}],[\"初始化序列号\",{\"1\":{\"1049\":1}}],[\"老师\",{\"1\":{\"3096\":1}}],[\"老年代对象\",{\"1\":{\"2659\":1}}],[\"学生\",{\"1\":{\"3096\":1}}],[\"学习推荐\",{\"0\":{\"1583\":1}}],[\"学习\",{\"0\":{\"26\":1}}],[\"人\",{\"1\":{\"3096\":1}}],[\"父类名称\",{\"1\":{\"3096\":1}}],[\"父类\",{\"1\":{\"3096\":1}}],[\"父节点左子树所有结点的值小于父节点的值\",{\"1\":{\"205\":1}}],[\"继承写法\",{\"1\":{\"3096\":1}}],[\"继承\",{\"0\":{\"3094\":1}}],[\"继续执行下一个\",{\"1\":{\"2909\":1}}],[\"继续执行\",{\"1\":{\"2265\":1}}],[\"继续判断其他条件是否满足\",{\"1\":{\"277\":1}}],[\"走字\",{\"1\":{\"3093\":1}}],[\"静态方法和类方法都是通过给类发消息来调用的\",{\"1\":{\"3090\":1}}],[\"静态方法\",{\"1\":{\"3088\":1}}],[\"静态检查工具vet等\",{\"1\":{\"2891\":1}}],[\"男\",{\"1\":{\"3087\":1}}],[\"限定person对象只能绑定\",{\"1\":{\"3087\":1}}],[\"限制圈复杂度\",{\"1\":{\"3388\":1}}],[\"限制\",{\"0\":{\"2959\":1}}],[\"限制最大系统线程数量\",{\"1\":{\"2789\":1}}],[\"魔法\",{\"1\":{\"3085\":1}}],[\"事件\",{\"0\":{\"3409\":1}}],[\"事实上如果你知道更换名字的规则仍然可以访问到它们\",{\"1\":{\"3080\":1}}],[\"事务对数据加上x锁时\",{\"1\":{\"604\":1}}],[\"事务的原子性确保动作要么全部完成\",{\"1\":{\"556\":1}}],[\"事务的能力\",{\"1\":{\"435\":1}}],[\"事务是最小的执行单位\",{\"1\":{\"556\":1}}],[\"事务是要保证当前一串的操作\",{\"1\":{\"142\":1}}],[\"事务有哪些特性\",{\"0\":{\"555\":1}}],[\"事务有四个特性\",{\"1\":{\"144\":1}}],[\"事务在执行的时候\",{\"1\":{\"368\":1}}],[\"事务在执行期间看到的数据前后必须是一致的\",{\"1\":{\"157\":1}}],[\"事务不提交\",{\"1\":{\"341\":1}}],[\"事务启动方式\",{\"0\":{\"172\":1}}],[\"事务隔离实现\",{\"0\":{\"165\":1}}],[\"事务b才可以继续执行\",{\"1\":{\"158\":1}}],[\"事务b的更新在提交后才能被a看到\",{\"1\":{\"156\":1}}],[\"事务\",{\"0\":{\"140\":1,\"554\":1},\"1\":{\"141\":1,\"356\":1,\"359\":1,\"374\":1,\"564\":3,\"566\":3}}],[\"熊出没\",{\"1\":{\"3075\":1,\"3096\":1}}],[\"驼峰标识\",{\"1\":{\"3075\":1}}],[\"型\",{\"1\":{\"3073\":1}}],[\"武则天\",{\"1\":{\"3069\":4}}],[\"冷面=67\",{\"1\":{\"3069\":1}}],[\"诸葛王朗\",{\"1\":{\"3069\":1}}],[\"zhihu\",{\"1\":{\"3318\":1}}],[\"zhuanlan\",{\"1\":{\"3318\":1}}],[\"z=3\",{\"1\":{\"3238\":1}}],[\"z\",{\"1\":{\"3205\":1,\"3238\":2,\"3388\":2}}],[\"za\",{\"1\":{\"3205\":1}}],[\"zero\",{\"1\":{\"3104\":1}}],[\"zerodivisionerror\",{\"1\":{\"3104\":1,\"3105\":1}}],[\"zip\",{\"1\":{\"3069\":1}}],[\"zlib等格式\",{\"1\":{\"2891\":1}}],[\"狄仁杰\",{\"1\":{\"3069\":2}}],[\"交集\",{\"1\":{\"3064\":1}}],[\"交换的是\",{\"1\":{\"2303\":1}}],[\"交换机根据\",{\"1\":{\"1355\":1}}],[\"交换机的\",{\"1\":{\"1351\":1,\"1354\":1}}],[\"交换机的端口不具有mac地址\",{\"1\":{\"1347\":1}}],[\"交换机的接受操作\",{\"0\":{\"1345\":1}}],[\"交换机的设计是将网络包原样转发到目的地\",{\"1\":{\"1344\":1}}],[\"交换机工作在\",{\"1\":{\"1344\":1}}],[\"差集\",{\"1\":{\"3065\":1}}],[\"差集等运算\",{\"1\":{\"3060\":1,\"3064\":1}}],[\"差错校验等功能\",{\"1\":{\"709\":1}}],[\"李小龙\",{\"1\":{\"3058\":1}}],[\"李文周\",{\"1\":{\"1595\":1}}],[\"云南昆明\",{\"1\":{\"3058\":1}}],[\"王大锤\",{\"1\":{\"3058\":2,\"3078\":1,\"3084\":1,\"3087\":1,\"3096\":1}}],[\"四川成都\",{\"1\":{\"3058\":1}}],[\"四次握手也可以同步初始序列号\",{\"1\":{\"829\":1}}],[\"骆昊\",{\"1\":{\"3058\":1,\"3069\":3,\"3078\":1,\"3096\":1}}],[\"求阶乘\",{\"1\":{\"3026\":1}}],[\"括号里面写函数参数\",{\"1\":{\"3025\":1}}],[\"命名规则跟变量的命名规则是一致的\",{\"1\":{\"3025\":1}}],[\"命令\",{\"1\":{\"3382\":1}}],[\"命令来控制并发\",{\"1\":{\"321\":1}}],[\"命令来做全库备份\",{\"1\":{\"310\":1}}],[\"命令之后由于客户端发生异常断开\",{\"1\":{\"314\":1}}],[\"命令是\",{\"1\":{\"293\":1}}],[\"恭喜你猜对了\",{\"1\":{\"3023\":1}}],[\"步长\",{\"1\":{\"3021\":1}}],[\"步骤如下\",{\"1\":{\"3429\":1}}],[\"步骤\",{\"0\":{\"3376\":1,\"3421\":1},\"1\":{\"30\":1}}],[\"身份运算符\",{\"1\":{\"3006\":1}}],[\"身份证号\",{\"1\":{\"267\":1}}],[\"身份证与姓名\",{\"1\":{\"252\":1}}],[\"右移\",{\"1\":{\"2996\":1}}],[\"右子树所有结点的值大于父节点的值\",{\"1\":{\"205\":1}}],[\"乘号表示列表元素的重复\",{\"1\":{\"3053\":1}}],[\"乘\",{\"1\":{\"2992\":1}}],[\"运算\",{\"1\":{\"3053\":1}}],[\"运算符\",{\"1\":{\"2982\":1,\"2983\":1}}],[\"运行命令\",{\"1\":{\"3423\":1}}],[\"运行环境\",{\"1\":{\"3419\":1}}],[\"运行结果\",{\"1\":{\"3328\":1}}],[\"运行期检测到的错误被称为异常\",{\"1\":{\"3103\":1}}],[\"运行时类型检查\",{\"1\":{\"2758\":1,\"2759\":1,\"2765\":1}}],[\"运行的模式\",{\"1\":{\"2575\":1}}],[\"运行后\",{\"1\":{\"1478\":1}}],[\"私有的实例属性用两个下划线开头\",{\"1\":{\"2981\":1}}],[\"受保护的实例属性用单个下划线开头\",{\"1\":{\"2980\":1}}],[\"冲突\",{\"1\":{\"2977\":1}}],[\"广义的unicode字符\",{\"1\":{\"2975\":1}}],[\"广播查询\",{\"1\":{\"1334\":1}}],[\"广播通信\",{\"1\":{\"788\":1}}],[\"硬性规则\",{\"1\":{\"2974\":1}}],[\"形如3+5j\",{\"1\":{\"2972\":1}}],[\"形成的隐式循环\",{\"1\":{\"2417\":1}}],[\"形成了闭包\",{\"1\":{\"2371\":1}}],[\"浮点数也就是小数\",{\"1\":{\"2969\":1}}],[\"浮点型\",{\"1\":{\"2969\":1}}],[\"兜兜转转又回到了\",{\"1\":{\"2942\":1}}],[\"移除前\",{\"1\":{\"2934\":1}}],[\"移动那些有用数据块\",{\"1\":{\"2638\":1}}],[\"顺序从链表尾输出即根据注册顺序来输出信息\",{\"1\":{\"2925\":1}}],[\"记得搞完配置一定要重启eslint\",{\"1\":{\"3399\":1}}],[\"记为\",{\"1\":{\"2916\":1}}],[\"记录触发defer执行的\",{\"1\":{\"2907\":1}}],[\"记录g上下文环境\",{\"1\":{\"2868\":1}}],[\"记录上一个与该\",{\"1\":{\"2862\":1}}],[\"记录上的最新值\",{\"1\":{\"166\":1}}],[\"记录着所有的\",{\"1\":{\"2833\":1,\"2834\":1,\"2835\":1}}],[\"记录集的选择\",{\"1\":{\"2694\":1}}],[\"记录的最后一次从i\",{\"1\":{\"2872\":1}}],[\"记录的元数据信息\",{\"1\":{\"2544\":1}}],[\"记录的是这些方法的元数据组成的数组\",{\"1\":{\"2018\":1}}],[\"记录的是这个语句的原始逻辑\",{\"1\":{\"112\":1,\"646\":1}}],[\"记录的是\",{\"1\":{\"112\":1,\"645\":1}}],[\"记录\",{\"1\":{\"2490\":1,\"2536\":1}}],[\"记录了该类型关联到多少个方法\",{\"1\":{\"2018\":1}}],[\"记录了啥\",{\"0\":{\"614\":1,\"636\":1}}],[\"记录类型所在的包路径\",{\"1\":{\"2018\":1}}],[\"记录数据的位置和数据类型即可\",{\"1\":{\"1889\":1}}],[\"记录旧桶迁移的进度\",{\"1\":{\"1830\":1}}],[\"记录旧桶的位置\",{\"1\":{\"1830\":1}}],[\"记录成功了\",{\"1\":{\"684\":1}}],[\"记录内容是语句的原始逻辑\",{\"1\":{\"637\":1}}],[\"记录由\",{\"1\":{\"617\":1}}],[\"记录一条交易日志\",{\"1\":{\"366\":1}}],[\"记录所有的操作记录\",{\"1\":{\"114\":1}}],[\"递归执行注册的\",{\"1\":{\"2906\":1}}],[\"跟数学上的复数表示一样\",{\"1\":{\"2972\":1}}],[\"跟addr2line作用一样\",{\"1\":{\"2893\":1}}],[\"跟煎鱼学习go\",{\"1\":{\"1606\":1}}],[\"封装\",{\"0\":{\"3071\":1}}],[\"封装反射读取方法\",{\"1\":{\"2891\":1}}],[\"封装了utf8\",{\"1\":{\"2891\":1}}],[\"封装了时间处理相关的函数\",{\"1\":{\"2891\":1}}],[\"封装了文本处理相关的方法\",{\"1\":{\"2891\":1}}],[\"封装了一系列系统调用的接口\",{\"1\":{\"2891\":1}}],[\"封装了字符串操作的相关方法\",{\"1\":{\"2891\":1}}],[\"封装了基本的同步机制\",{\"1\":{\"2891\":1}}],[\"封装了基本的数学相关的函数\",{\"1\":{\"2891\":1}}],[\"封装了基础类型与字符串互相转换的方法\",{\"1\":{\"2891\":1}}],[\"封装了部分排序算法\",{\"1\":{\"2891\":1}}],[\"封装了正则表达式的实现\",{\"1\":{\"2891\":1}}],[\"封装了用来操作操作系统的命令\",{\"1\":{\"2891\":1}}],[\"封装了mime类型的解析\",{\"1\":{\"2891\":1}}],[\"封装了日志记录方法\",{\"1\":{\"2891\":1}}],[\"封装了crc32\",{\"1\":{\"2891\":1}}],[\"封装了各种网络io的函数\",{\"1\":{\"2891\":1}}],[\"封装了各种格式化输出方法\",{\"1\":{\"2891\":1}}],[\"封装了各类编码的实现\",{\"1\":{\"2891\":1}}],[\"封装了很多加解密算法\",{\"1\":{\"2891\":1}}],[\"封装的代码片段将以协程方式并发执行\",{\"1\":{\"2856\":1}}],[\"环形联表\",{\"1\":{\"2891\":1}}],[\"环境搭建\",{\"0\":{\"3348\":1},\"1\":{\"3319\":1}}],[\"环境变量确定\",{\"1\":{\"2789\":1}}],[\"环境变量放到envs中\",{\"1\":{\"2789\":1}}],[\"环境里是若干对符号和值的对应关系\",{\"1\":{\"2109\":1}}],[\"环境是否能正常使用\",{\"1\":{\"1471\":1}}],[\"环境\",{\"1\":{\"1454\":1,\"3428\":1}}],[\"约束定义了一组与类型参数一起使用的有用约束\",{\"1\":{\"2891\":1}}],[\"归档文件或可执行文件定义或使用的符号\",{\"1\":{\"2893\":1}}],[\"归档文件处理库\",{\"1\":{\"2891\":1}}],[\"归档日志\",{\"1\":{\"98\":1,\"637\":1,\"652\":1}}],[\"囊括了每个版本的\",{\"1\":{\"2888\":1}}],[\"└──\",{\"1\":{\"2882\":1,\"2885\":1,\"2891\":1,\"2893\":1}}],[\"示例等乱七八糟的东西\",{\"1\":{\"2882\":1}}],[\"插件\",{\"1\":{\"2882\":1,\"3369\":1}}],[\"插入\",{\"1\":{\"2698\":1}}],[\"插入新记录的时候可以不指定\",{\"1\":{\"226\":1}}],[\"汇集了go语言相关的ide\",{\"1\":{\"2882\":1}}],[\"汇编器\",{\"1\":{\"2893\":1}}],[\"汇编函数\",{\"1\":{\"2797\":1}}],[\"汇编\",{\"0\":{\"2739\":1}}],[\"专利\",{\"1\":{\"2882\":1}}],[\"授权协议\",{\"1\":{\"2882\":1}}],[\"├──\",{\"1\":{\"2882\":13,\"2885\":20,\"2891\":45,\"2893\":24}}],[\"互斥锁\",{\"1\":{\"2872\":1}}],[\"互联网的普及\",{\"1\":{\"1748\":1}}],[\"生命周期\",{\"1\":{\"2869\":1}}],[\"生成这些文件\",{\"1\":{\"3316\":1}}],[\"生成器是一个返回迭代器的函数\",{\"1\":{\"3252\":1}}],[\"生成器\",{\"1\":{\"3251\":1}}],[\"生成http消息报文\",{\"1\":{\"1259\":1}}],[\"生成对应的解析树\",{\"1\":{\"698\":1}}],[\"普通用户g的最大栈内存地址\",{\"1\":{\"2868\":1}}],[\"普通索引的唯一作用就是为了快速查询数据\",{\"1\":{\"510\":1}}],[\"普通索引\",{\"1\":{\"508\":1,\"510\":1,\"543\":1}}],[\"普通索引查询方式\",{\"1\":{\"218\":1}}],[\"忽略大小写匹配标记\",{\"1\":{\"3201\":1}}],[\"忽略\",{\"1\":{\"2862\":1,\"3110\":1}}],[\"忽略它比解决它更具性价比\",{\"1\":{\"879\":1}}],[\"布尔值只有true\",{\"1\":{\"2971\":1}}],[\"布尔型\",{\"1\":{\"2971\":1}}],[\"布尔类型\",{\"1\":{\"2862\":2}}],[\"布局通常从body开始\",{\"1\":{\"1436\":1}}],[\"布局是确定呈现树中所有节点的宽度\",{\"1\":{\"1433\":1}}],[\"布局\",{\"1\":{\"1425\":1}}],[\"白元芳\",{\"1\":{\"3069\":2,\"3084\":1}}],[\"白话解释\",{\"1\":{\"2859\":1}}],[\"白色是对象的初始颜色\",{\"1\":{\"2630\":1}}],[\"白色\",{\"1\":{\"2552\":1,\"2630\":1}}],[\"帮助线程去执行协程的任务\",{\"1\":{\"2857\":1}}],[\"帮助人理解原因\",{\"1\":{\"1552\":1}}],[\"详解调度过程\",{\"0\":{\"2875\":1}}],[\"详解\",{\"0\":{\"2854\":1}}],[\"详解内存对齐\",{\"1\":{\"1924\":1}}],[\"队列中只有\",{\"1\":{\"2849\":1}}],[\"队列中如果运行队列满了\",{\"1\":{\"2793\":1}}],[\"过来执行\",{\"1\":{\"2843\":1}}],[\"过程\",{\"0\":{\"2482\":1}}],[\"过程如下\",{\"1\":{\"76\":1,\"1312\":1,\"2840\":1,\"3271\":1}}],[\"领取任务\",{\"1\":{\"2842\":1}}],[\"途中会因为前面的\",{\"1\":{\"2837\":1}}],[\"持有一个\",{\"1\":{\"2900\":1}}],[\"持有\",{\"1\":{\"2831\":1}}],[\"持久性\",{\"1\":{\"144\":1,\"559\":1}}],[\"退出\",{\"1\":{\"2805\":1}}],[\"尝试再添加一个\",{\"1\":{\"2793\":1}}],[\"尝试读取\",{\"1\":{\"2783\":1}}],[\"少了就新建p\",{\"1\":{\"2789\":1}}],[\"填写全局eslint配置文件的路径\",{\"1\":{\"3380\":1}}],[\"填procs个p到存放所有p的全局变量allp中\",{\"1\":{\"2789\":1}}],[\"填入server\",{\"1\":{\"797\":1}}],[\"填入client\",{\"1\":{\"796\":1}}],[\"线程等等\",{\"1\":{\"2787\":1}}],[\"😥\",{\"1\":{\"2784\":1}}],[\"💡\",{\"1\":{\"275\":1,\"1255\":1,\"1283\":1,\"1428\":1,\"1433\":1,\"1434\":1,\"1647\":1,\"1686\":1,\"1790\":1}}],[\"校验\",{\"1\":{\"2778\":1}}],[\"核心步骤\",{\"1\":{\"2877\":1}}],[\"核心容器\",{\"0\":{\"2873\":1}}],[\"核心数和\",{\"1\":{\"2789\":1}}],[\"核心函数\",{\"0\":{\"2775\":1}}],[\"核数\",{\"1\":{\"2567\":1}}],[\"入口\",{\"1\":{\"2797\":1}}],[\"入口地址创建可被运行时调度的执行单元\",{\"1\":{\"2769\":1}}],[\"入口地址\",{\"1\":{\"2762\":1}}],[\"入门学习可以参考如下\",{\"1\":{\"3316\":1}}],[\"入门go语言map实现原理\",{\"1\":{\"1882\":1}}],[\"入门\",{\"0\":{\"1584\":1}}],[\"压入第一个参数到栈\",{\"1\":{\"2761\":1}}],[\"压入ax寄存器\",{\"1\":{\"2761\":1}}],[\"压缩算法\",{\"1\":{\"2645\":1}}],[\"压缩\",{\"1\":{\"717\":1,\"2891\":1}}],[\"马上就要开始运行了\",{\"1\":{\"2760\":1}}],[\"省略一大段代码\",{\"1\":{\"2789\":1}}],[\"省略\",{\"1\":{\"2778\":2,\"2789\":1}}],[\"省略了一大段代码\",{\"1\":{\"2753\":1,\"2755\":1,\"2757\":1,\"2759\":1,\"2761\":1}}],[\"省略部分与recover相关的逻辑\",{\"1\":{\"2454\":1}}],[\"弄清楚如何序列化\",{\"1\":{\"2753\":1}}],[\"子模块\",{\"1\":{\"3428\":1}}],[\"子句中使用词法声明\",{\"1\":{\"3388\":1}}],[\"子句中的异常进行处理\",{\"1\":{\"3113\":1}}],[\"子句的缩进水平\",{\"1\":{\"3388\":1}}],[\"子句的参数与外层作用域中的变量同名\",{\"1\":{\"3388\":1}}],[\"子句的参数重新赋值\",{\"1\":{\"3388\":1}}],[\"子句的过程中发生了异常\",{\"1\":{\"3111\":1}}],[\"子句没有发生任何异常的时候执行\",{\"1\":{\"3115\":1}}],[\"子句将在\",{\"1\":{\"3115\":1}}],[\"子句将被执行\",{\"1\":{\"3111\":1}}],[\"子句余下的部分将被忽略\",{\"1\":{\"3111\":1}}],[\"子句执行后结束\",{\"1\":{\"3110\":1}}],[\"子句\",{\"1\":{\"3109\":1,\"3110\":1,\"3114\":1,\"3117\":1}}],[\"子类在继承了父类的方法后\",{\"1\":{\"3098\":1}}],[\"子类名称\",{\"1\":{\"3096\":1}}],[\"子类\",{\"1\":{\"3096\":1}}],[\"子类除了继承父类提供的属性和方法\",{\"1\":{\"3095\":1}}],[\"子程序等等\",{\"1\":{\"2824\":1}}],[\"子程序里面\",{\"1\":{\"2750\":1}}],[\"子和兄弟关系的节点树\",{\"1\":{\"1415\":1}}],[\"风格指南\",{\"1\":{\"3388\":1}}],[\"风格的\",{\"1\":{\"2748\":1}}],[\"风险较高\",{\"1\":{\"314\":1}}],[\"堆\",{\"1\":{\"2891\":1}}],[\"堆栈段\",{\"1\":{\"2824\":1}}],[\"堆栈中创建\",{\"1\":{\"2753\":1}}],[\"堆栈保存参数的数量和\",{\"1\":{\"2748\":1}}],[\"堆扫描与标记\",{\"1\":{\"2535\":1}}],[\"$8\",{\"1\":{\"2763\":1}}],[\"$1\",{\"1\":{\"2753\":2}}],[\"$runtime\",{\"1\":{\"2753\":1,\"2761\":2,\"2763\":1}}],[\"$~15\",{\"1\":{\"2753\":1}}],[\"$0x123\",{\"1\":{\"2755\":2}}],[\"$0x6c65746e\",{\"1\":{\"2753\":1}}],[\"$0x49656e69\",{\"1\":{\"2753\":1}}],[\"$0x756e6547\",{\"1\":{\"2753\":1}}],[\"$0\",{\"1\":{\"2753\":3,\"2755\":1,\"2757\":1,\"2759\":1,\"2761\":2}}],[\"$\",{\"1\":{\"2743\":1,\"2748\":1,\"2753\":1,\"3205\":2,\"3368\":3,\"3388\":1,\"3428\":1}}],[\"希望服务端写起来更加简单\",{\"1\":{\"3302\":1}}],[\"希望不要去记忆一些常用的字符串\",{\"1\":{\"3299\":1}}],[\"希望调用方式更加接近本地调用\",{\"1\":{\"3293\":1}}],[\"希望读者能够懂一点点的汇编语言\",{\"1\":{\"2738\":1}}],[\"希望能够得到指导\",{\"1\":{\"2736\":1}}],[\"希望断开连接\",{\"1\":{\"753\":1}}],[\"今天就花了几个小时吧这个eslint全局配置一下\",{\"1\":{\"3373\":1}}],[\"今天我们来扒一扒\",{\"1\":{\"2735\":1}}],[\"今后任何新的请求都应使用新的uri代替\",{\"1\":{\"1103\":1}}],[\"便属于主体并发增量式回收\",{\"1\":{\"2723\":1}}],[\"叫做主体式并发垃圾回收\",{\"1\":{\"2722\":1}}],[\"单行模式不能带逗号\",{\"1\":{\"3388\":1}}],[\"单个或多个字符用单引号或者双引号包围起来\",{\"1\":{\"3046\":1}}],[\"单核场景下\",{\"1\":{\"2719\":1}}],[\"单以name=\",{\"1\":{\"288\":1}}],[\"复数型\",{\"1\":{\"2972\":1}}],[\"复制到\",{\"1\":{\"2705\":1}}],[\"复制式回收器已经将数据对象\",{\"1\":{\"2705\":1}}],[\"复现过程\",{\"0\":{\"13\":1}}],[\"复现\",{\"0\":{\"12\":1}}],[\"天然的不需要读取屏障\",{\"1\":{\"2704\":1}}],[\"弱三色不变式的通常做法是建立读\",{\"1\":{\"2692\":1}}],[\"弱三色不变式\",{\"1\":{\"2691\":1,\"2701\":1}}],[\"强制模块内的\",{\"1\":{\"3388\":1}}],[\"强制分号之前和之后使用一致的空格\",{\"1\":{\"3388\":1}}],[\"强制操作符使用一致的换行符\",{\"1\":{\"3388\":1}}],[\"强制函数中的变量要么一起声明要么分开声明\",{\"1\":{\"3388\":1}}],[\"强制将对象的属性放在不同的行上\",{\"1\":{\"3388\":1}}],[\"强制花括号内换行符的一致性\",{\"1\":{\"3388\":1}}],[\"强制每一行中所允许的最大语句数量\",{\"1\":{\"3388\":1}}],[\"强制最大行数\",{\"1\":{\"3388\":1}}],[\"强制一行的最大长度\",{\"1\":{\"3388\":1}}],[\"强制一致地使用函数声明或函数表达式\",{\"1\":{\"3388\":1}}],[\"强制标识符的最新和最大长度\",{\"1\":{\"3388\":1}}],[\"强制回调函数最大嵌套深度\",{\"1\":{\"3388\":1}}],[\"强制在子类构造函数中用super\",{\"1\":{\"3388\":1}}],[\"强制在注释中\",{\"1\":{\"3388\":1}}],[\"强制在一元操作符前后使用一致的空格\",{\"1\":{\"3388\":1}}],[\"强制在圆括号内使用一致的空格\",{\"1\":{\"3388\":1}}],[\"强制在块之前使用一致的空格\",{\"1\":{\"3388\":1}}],[\"强制在花括号中使用一致的空格\",{\"1\":{\"3388\":1}}],[\"强制在关键字前后使用一致的空格\",{\"1\":{\"3388\":1}}],[\"强制在\",{\"1\":{\"3388\":3}}],[\"强制在对象字面量的属性中键和值之间使用一致的间距\",{\"1\":{\"3388\":1}}],[\"强制在parseint\",{\"1\":{\"3388\":1}}],[\"强制使用方法表达式的方式\",{\"1\":{\"3388\":1}}],[\"强制使用方法声明的方式\",{\"1\":{\"3388\":1}}],[\"强制使用一致的反勾号\",{\"1\":{\"3388\":1}}],[\"强制使用一致的换行风格\",{\"1\":{\"3388\":1}}],[\"强制使用一致的缩进\",{\"1\":{\"3388\":1}}],[\"强制使用命名的\",{\"1\":{\"3388\":1}}],[\"强制使用\",{\"1\":{\"3388\":1}}],[\"强制使用有效的\",{\"1\":{\"3388\":1}}],[\"强制object\",{\"1\":{\"3388\":1}}],[\"强制所有控制语句使用一致的括号风格\",{\"1\":{\"3388\":1}}],[\"强制把变量的使用限制在其定义的作用域范围内\",{\"1\":{\"3388\":1}}],[\"强制数组方法的回调函数中有\",{\"1\":{\"3388\":1}}],[\"强制定义get\",{\"1\":{\"3388\":1}}],[\"强制\",{\"1\":{\"3388\":5}}],[\"强三色不变式\",{\"1\":{\"2690\":1,\"2698\":1}}],[\"强烈要求出现一种统一的编码方式\",{\"1\":{\"1748\":1}}],[\"产生一个新的对象\",{\"1\":{\"3210\":1}}],[\"产生了误判的结果\",{\"1\":{\"2682\":1}}],[\"产出一篇读后感\",{\"1\":{\"6\":1}}],[\"误判垃圾\",{\"1\":{\"2681\":1}}],[\"造成的程序崩溃\",{\"1\":{\"2927\":1}}],[\"造成对应的内存无法被回收的情况\",{\"1\":{\"2675\":1}}],[\"造成不必要的资源浪费\",{\"1\":{\"833\":1}}],[\"另外如果一个程序中大部分对象存活时间都很长的话\",{\"1\":{\"2666\":1}}],[\"另一个是比较两个类型是否相同的\",{\"1\":{\"2008\":1}}],[\"另一个是该设备连接在交换机的哪个端口上\",{\"1\":{\"1353\":1}}],[\"另一种方法\",{\"1\":{\"1778\":1}}],[\"另一方面时为了安全性\",{\"1\":{\"844\":1}}],[\"达到压缩的效果\",{\"1\":{\"2638\":1}}],[\"达到了性能优化在\",{\"1\":{\"2422\":1}}],[\"容易造成内存碎片化\",{\"1\":{\"2636\":1}}],[\"容量从3变成了6呢\",{\"1\":{\"1709\":1}}],[\"容量是从索引7到底层数组结束\",{\"1\":{\"1699\":1}}],[\"容量是从索引1到底层数组结束\",{\"1\":{\"1694\":1}}],[\"异常来结束迭代\",{\"1\":{\"3249\":1}}],[\"异常用于标识迭代的完成\",{\"1\":{\"3249\":1}}],[\"异常\",{\"0\":{\"3102\":1}}],[\"异常重启了\",{\"1\":{\"69\":1}}],[\"异步执行\",{\"1\":{\"2634\":1}}],[\"垃圾识别的任务已经分摊到每次数据对象的操作\",{\"1\":{\"2671\":1}}],[\"垃圾回收器初始化\",{\"1\":{\"2789\":1}}],[\"垃圾回收器等组件的初始化\",{\"1\":{\"2772\":1}}],[\"垃圾回收器又会怎么样工作呢\",{\"1\":{\"2709\":1}}],[\"垃圾回收是一个比较深奥的代码艺术\",{\"1\":{\"2725\":1}}],[\"垃圾回收程序不会使用写屏障的记录集\",{\"1\":{\"2719\":1}}],[\"垃圾回收\",{\"1\":{\"2645\":1}}],[\"垃圾回收开始会把所有的数据都标记为白色\",{\"1\":{\"2622\":1}}],[\"垃圾数据则是白色\",{\"1\":{\"2626\":1}}],[\"近似等价于数据有用性的\",{\"1\":{\"2617\":1}}],[\"悬挂指针\",{\"1\":{\"2606\":1}}],[\"手动垃圾回收不仅增加编程负担\",{\"1\":{\"2606\":1}}],[\"手动释放那些不需要的\",{\"1\":{\"2604\":1}}],[\"手动回收\",{\"0\":{\"2603\":1}}],[\"程序会退出\",{\"1\":{\"3388\":1}}],[\"程序结束\",{\"1\":{\"2922\":1}}],[\"程序中嵌入的文件的访问\",{\"1\":{\"2891\":1}}],[\"程序中用的到的数据\",{\"1\":{\"2614\":1}}],[\"程序入口并不是\",{\"1\":{\"2846\":1}}],[\"程序\",{\"1\":{\"2822\":1}}],[\"程序引导和初始化工作是整个运行时最关键的基础步骤之一\",{\"1\":{\"2772\":1}}],[\"程序既不是从\",{\"1\":{\"2771\":1}}],[\"程序调度与内存分配器\",{\"1\":{\"2768\":1}}],[\"程序调度的相关常量的初始化\",{\"1\":{\"2759\":1}}],[\"程序的语法是正确的\",{\"1\":{\"3103\":1}}],[\"程序的引导程序启动进行系统初始化\",{\"1\":{\"2877\":1}}],[\"程序的引导程序启动会调用下面核心函数完成校验与系统初始化\",{\"1\":{\"2764\":1}}],[\"程序的内核程序的入口点\",{\"1\":{\"2748\":1}}],[\"程序刚刚启动\",{\"1\":{\"2757\":1}}],[\"程序刚刚启动时\",{\"1\":{\"2747\":1}}],[\"程序启动需要对自身运行时进行初始化\",{\"1\":{\"2740\":1}}],[\"程序启动引导\",{\"1\":{\"2730\":1}}],[\"程序我总是好奇他的启动流程\",{\"1\":{\"2735\":1}}],[\"程序定义的全局变量\",{\"1\":{\"2597\":1}}],[\"程序执行结束\",{\"1\":{\"3177\":1}}],[\"程序执行过程中会更新对象及子对象的引用次数\",{\"1\":{\"2668\":1}}],[\"程序执行时候使用\",{\"1\":{\"2648\":1}}],[\"程序执行时可执行文件被加载到内存\",{\"1\":{\"2264\":1}}],[\"程序执行到这条指令时\",{\"1\":{\"2265\":1}}],[\"想要分配内存\",{\"1\":{\"2583\":1}}],[\"机制\",{\"1\":{\"2581\":1}}],[\"调度计数器\",{\"1\":{\"2864\":1}}],[\"调度器中关联内核级线程与协程的中间调度器\",{\"1\":{\"2857\":1}}],[\"调度器解锁\",{\"1\":{\"2789\":1}}],[\"调度器加锁\",{\"1\":{\"2789\":1}}],[\"调度器\",{\"0\":{\"2871\":1},\"1\":{\"2772\":1}}],[\"调度器执行\",{\"1\":{\"2575\":1}}],[\"调用父类构造函数\",{\"1\":{\"3388\":1}}],[\"调用父类的函数使用\",{\"1\":{\"3096\":1}}],[\"调用服务中的函数\",{\"1\":{\"3297\":1}}],[\"调用方式更加接近本地调用\",{\"1\":{\"3289\":1}}],[\"调用失败\",{\"1\":{\"3286\":1,\"3297\":1}}],[\"调用另一个程序\",{\"1\":{\"3271\":1}}],[\"调用过程\",{\"0\":{\"3270\":1}}],[\"调用一个生成器函数\",{\"1\":{\"3254\":1}}],[\"调用原函数\",{\"1\":{\"3240\":1}}],[\"调用函数参数\",{\"1\":{\"3238\":1}}],[\"调用函数时候\",{\"1\":{\"2118\":1}}],[\"调用该类时\",{\"1\":{\"3210\":1}}],[\"调用数目\",{\"1\":{\"2862\":1}}],[\"调用进而开始由调度器转为执行主\",{\"1\":{\"2772\":1}}],[\"调用栈\",{\"1\":{\"2362\":1,\"2373\":1}}],[\"调用也能够被执行\",{\"1\":{\"2332\":1}}],[\"调用者栈帧\",{\"1\":{\"2298\":1}}],[\"调用者和方法都不太搭\",{\"1\":{\"2179\":1}}],[\"调用\",{\"1\":{\"2242\":1,\"2337\":1,\"2761\":1,\"2771\":1,\"2862\":1,\"2938\":1,\"3388\":2}}],[\"调用捕获变量\",{\"0\":{\"2117\":1}}],[\"调用引擎接口取\",{\"1\":{\"91\":1}}],[\"调用innodb引擎接口取这个表的第一行\",{\"1\":{\"90\":1}}],[\"缓解了执行并发标记工作时操作工作队列的竞争问题\",{\"1\":{\"2565\":1}}],[\"缓存起来\",{\"1\":{\"2088\":1}}],[\"缓存一样\",{\"1\":{\"2066\":1}}],[\"缓存中查询\",{\"1\":{\"1381\":1}}],[\"缓存中不存在对方\",{\"1\":{\"1334\":1}}],[\"缓存中的地址\",{\"1\":{\"1333\":1}}],[\"缓存\",{\"1\":{\"1333\":1,\"1381\":1,\"2526\":1,\"2528\":1}}],[\"缓存的内存空间留着以后用\",{\"1\":{\"1331\":1}}],[\"缓存在窗口中\",{\"1\":{\"948\":1}}],[\"触发事件有很多\",{\"1\":{\"3414\":1}}],[\"触发条件\",{\"1\":{\"3413\":1,\"3428\":1}}],[\"触发前自动触发\",{\"1\":{\"3210\":1}}],[\"触发异常\",{\"1\":{\"3104\":3}}],[\"触发者是之前的\",{\"1\":{\"2952\":1}}],[\"触发执行的不是当前\",{\"1\":{\"2917\":1}}],[\"触发写屏障时并不会直接操作工作队列\",{\"1\":{\"2564\":1}}],[\"触发器\",{\"1\":{\"59\":1,\"689\":1}}],[\"满了时候\",{\"1\":{\"2557\":1}}],[\"满足拥有自由变量\",{\"1\":{\"2112\":1}}],[\"满足\",{\"1\":{\"284\":1,\"1972\":1}}],[\"添加或修改属性\",{\"1\":{\"3213\":1}}],[\"添加元素\",{\"1\":{\"3054\":1}}],[\"添加到\",{\"1\":{\"2793\":1}}],[\"添加\",{\"1\":{\"2556\":1}}],[\"添加任务从\",{\"1\":{\"2556\":1}}],[\"黑色对象不会被回收期再次处理了\",{\"1\":{\"2688\":1}}],[\"黑色对象中存在对白色对象的引用\",{\"1\":{\"2685\":1}}],[\"黑色是\",{\"1\":{\"2628\":1}}],[\"黑色\",{\"1\":{\"2551\":1,\"2628\":1}}],[\"灰色代表当前节点展开的追踪还未完成\",{\"1\":{\"2623\":1}}],[\"灰色\",{\"1\":{\"2550\":1,\"2629\":1}}],[\"低位\",{\"1\":{\"2539\":1}}],[\"低高度\",{\"1\":{\"490\":1}}],[\"扫描程序不会查看未初始化的堆栈\",{\"1\":{\"2793\":1}}],[\"扫描\",{\"1\":{\"2649\":1,\"2868\":4}}],[\"扫描和标记相关元数据\",{\"1\":{\"2530\":1}}],[\"扫描协程栈时\",{\"1\":{\"2495\":1,\"2533\":1}}],[\"申请的内存越大\",{\"1\":{\"2583\":1}}],[\"申请\",{\"1\":{\"2528\":1}}],[\"申请证书\",{\"1\":{\"1201\":1}}],[\"含有指针的属于\",{\"1\":{\"2525\":1}}],[\"含有所有指针类型前缀大小\",{\"1\":{\"2008\":1}}],[\"种\",{\"1\":{\"2524\":1,\"2525\":1}}],[\"种大小\",{\"1\":{\"2524\":1}}],[\"降低老年代执行垃圾回收的频率\",{\"1\":{\"2660\":1}}],[\"降低了堆内存的使用率\",{\"1\":{\"2656\":1}}],[\"降低内存使用率\",{\"1\":{\"2510\":1}}],[\"降低耦合度\",{\"1\":{\"420\":1}}],[\"阶段以后\",{\"1\":{\"2505\":1}}],[\"阶段了\",{\"1\":{\"2497\":1}}],[\"阶段标识\",{\"1\":{\"2490\":1}}],[\"栈\",{\"1\":{\"2787\":1}}],[\"栈指针\",{\"1\":{\"2747\":1}}],[\"栈中那些\",{\"1\":{\"2492\":1}}],[\"栈基不一定存在\",{\"1\":{\"2270\":1}}],[\"陷入休眠\",{\"1\":{\"2487\":1}}],[\"陷入了等待\",{\"1\":{\"909\":1}}],[\"协程对应的数据结构是\",{\"1\":{\"2828\":1}}],[\"协程栈的元数据存储在\",{\"1\":{\"2533\":1}}],[\"协程\",{\"1\":{\"2487\":1}}],[\"协议带来了无限的扩展可能\",{\"1\":{\"1560\":1}}],[\"协议版本号是\",{\"1\":{\"1556\":1}}],[\"协议版本\",{\"1\":{\"1540\":1,\"1550\":1}}],[\"协议对\",{\"1\":{\"1534\":1}}],[\"协议规定报文必须有\",{\"1\":{\"1530\":1}}],[\"协议核心是报文的内容\",{\"1\":{\"1523\":1}}],[\"协议是采用请求\",{\"1\":{\"1510\":1}}],[\"协议就开始工作了\",{\"1\":{\"1498\":1}}],[\"协议在这个过程中到底干了什么\",{\"1\":{\"1490\":1}}],[\"协议根据\",{\"1\":{\"1380\":1}}],[\"协议会以广播的形式\",{\"1\":{\"1330\":1}}],[\"协议帮我们找到对方的mac地址\",{\"1\":{\"1329\":1}}],[\"协议里面会有两个端口\",{\"1\":{\"1301\":1}}],[\"协议需要到\",{\"1\":{\"1201\":1}}],[\"协议中的两种发送请求的方法\",{\"1\":{\"1170\":1}}],[\"协议\",{\"1\":{\"1071\":1,\"1204\":2,\"1326\":1,\"1327\":1,\"1501\":1,\"1532\":1,\"3269\":1}}],[\"协议的\",{\"1\":{\"867\":1}}],[\"协议可以⼀个主机同时向多个主机发送消息\",{\"1\":{\"735\":1}}],[\"协议有\",{\"1\":{\"711\":1,\"713\":1,\"719\":1}}],[\"节点标记成灰色\",{\"1\":{\"2623\":1}}],[\"节点标记工作做准备\",{\"1\":{\"2492\":1}}],[\"节点是否为指针\",{\"1\":{\"2534\":1}}],[\"节点是否需要添加到工作队列中\",{\"1\":{\"2532\":1}}],[\"节点扫描\",{\"1\":{\"2531\":1}}],[\"节点已经被记录到工作队列中\",{\"1\":{\"2496\":1}}],[\"节点的必要信息\",{\"1\":{\"2492\":1}}],[\"节点的相关信息\",{\"1\":{\"2481\":1}}],[\"节约资源\",{\"1\":{\"840\":1}}],[\"清除隐式编译的正则表达式的缓存\",{\"1\":{\"3199\":1}}],[\"清空字典\",{\"1\":{\"3069\":1}}],[\"清空列表元素\",{\"1\":{\"3054\":1}}],[\"清扫类垃圾回收器\",{\"1\":{\"2716\":1}}],[\"清扫算法的垃圾回收器\",{\"1\":{\"2508\":1}}],[\"清扫算法\",{\"1\":{\"2466\":1}}],[\"清洗数据\",{\"1\":{\"21\":1}}],[\"粗线条话gc\",{\"1\":{\"2465\":1,\"2594\":1,\"2595\":1}}],[\"^abc\",{\"1\":{\"3388\":1}}],[\"^\",{\"1\":{\"2999\":1,\"3065\":1,\"3205\":2,\"3388\":2}}],[\"^1\",{\"1\":{\"2454\":1}}],[\"^2\",{\"1\":{\"2454\":1}}],[\"仍然在使用\",{\"1\":{\"2422\":1}}],[\"仍然能够把数据恢复回来\",{\"1\":{\"134\":1}}],[\"左移\",{\"1\":{\"2996\":1}}],[\"左右\",{\"1\":{\"2422\":1}}],[\"左闭右开的区间\",{\"1\":{\"1694\":1}}],[\"怎样选择都会带来不同的结果\",{\"1\":{\"2697\":1}}],[\"怎能如此受人诟病\",{\"1\":{\"2396\":1}}],[\"怎么去封装服务端的注册处理函数\",{\"1\":{\"3303\":1}}],[\"怎么去区分这个数据是有用的数据还是垃圾呢\",{\"1\":{\"2613\":1}}],[\"怎么去找到确定的服务器呢\",{\"1\":{\"1259\":1}}],[\"怎么回收\",{\"0\":{\"2611\":1}}],[\"怎么判断我应不应该调用这个函数呢\",{\"1\":{\"2451\":1}}],[\"怎么判断呢\",{\"1\":{\"2061\":1}}],[\"怎么确定一个结构体的对齐系数\",{\"1\":{\"1964\":1}}],[\"怎么确定每个类型的对齐值呢\",{\"1\":{\"1944\":1}}],[\"怎么扩容\",{\"1\":{\"1824\":1,\"1828\":1}}],[\"怎么找到web\",{\"1\":{\"1259\":1}}],[\"怎么做呢\",{\"1\":{\"256\":1}}],[\"怎么做到恢复到半个月内任意一秒的状态\",{\"1\":{\"124\":1}}],[\"尤其是在锁释放这种场景\",{\"1\":{\"2392\":1}}],[\"真的很方便\",{\"1\":{\"2392\":1}}],[\"理解成\",{\"1\":{\"3257\":1}}],[\"理解了defer注册与执行的逻辑\",{\"1\":{\"2390\":1}}],[\"理由\",{\"1\":{\"921\":1}}],[\"嵌套时候\",{\"1\":{\"2382\":1}}],[\"嵌套\",{\"0\":{\"2381\":1}}],[\"嵌套在其他标记中的标记是子节点\",{\"1\":{\"1405\":1}}],[\"奇怪的\",{\"0\":{\"2377\":1}}],[\"奇怪的问题\",{\"0\":{\"1730\":1}}],[\"频繁加锁和解锁而发生等待\",{\"1\":{\"2837\":1}}],[\"频繁地运行\",{\"1\":{\"2666\":1}}],[\"频繁的堆分配势必影响性能\",{\"1\":{\"2364\":1}}],[\"频繁用作查询条件的字段建立索引\",{\"1\":{\"455\":1}}],[\"放入空闲g列表中\",{\"1\":{\"2868\":1}}],[\"放弃独占m\",{\"1\":{\"2793\":1}}],[\"放哪儿呢\",{\"1\":{\"2358\":1}}],[\"放在数组的这个位置\",{\"1\":{\"187\":1}}],[\"脱胎换骨的defer\",{\"1\":{\"2330\":1}}],[\"拷贝到堆上\",{\"1\":{\"2380\":1}}],[\"拷贝到执行函数的栈上\",{\"1\":{\"2376\":1}}],[\"拷贝整型变量值\",{\"1\":{\"2296\":1}}],[\"拷贝不了值\",{\"1\":{\"2215\":1}}],[\"弹出call\",{\"1\":{\"2283\":1}}],[\"跳过\",{\"1\":{\"2755\":1,\"2783\":3}}],[\"跳转到返回地址\",{\"1\":{\"2284\":1}}],[\"跳转到被调用函数的指令入口处执行\",{\"1\":{\"2280\":1}}],[\"跳回到该地址继续执行\",{\"1\":{\"2279\":1}}],[\"供他存放局部变量\",{\"1\":{\"2267\":1}}],[\"拿到参数值\",{\"1\":{\"2380\":1}}],[\"拿到\",{\"1\":{\"2258\":1}}],[\"拿不到也不要阻塞后面的业务语句\",{\"1\":{\"342\":1}}],[\"失败原因\",{\"1\":{\"2248\":1}}],[\"逃逸到堆上\",{\"1\":{\"2237\":1,\"2254\":1}}],[\"难道这里参数是拷贝变量\",{\"1\":{\"2212\":1}}],[\"难道拿到类型列表方法信息进行一对一判断\",{\"1\":{\"2061\":1}}],[\"隐含\",{\"1\":{\"2164\":1}}],[\"隐式循环\",{\"1\":{\"2418\":1}}],[\"隐式字符编码转换\",{\"1\":{\"553\":1}}],[\"隐式类型转换\",{\"1\":{\"552\":1}}],[\"输出迭代器的下一个元素\",{\"1\":{\"3246\":1}}],[\"输出goodbye\",{\"1\":{\"3036\":1}}],[\"输出hello\",{\"1\":{\"3036\":1}}],[\"输出异常信息\",{\"1\":{\"2949\":2,\"2957\":1}}],[\"输出来\",{\"1\":{\"2367\":1}}],[\"输出\",{\"1\":{\"2164\":1}}],[\"输出在主线程上执行的字节码\",{\"1\":{\"1421\":1}}],[\"共用一个堆\",{\"1\":{\"2139\":1}}],[\"共享锁\",{\"1\":{\"605\":1}}],[\"循环中有一个\",{\"1\":{\"3388\":1}}],[\"循环中的\",{\"1\":{\"2417\":1}}],[\"循环也是一样\",{\"1\":{\"2417\":1}}],[\"循环\",{\"1\":{\"2139\":1,\"2140\":1,\"2417\":1}}],[\"循环还没有开始\",{\"1\":{\"2138\":1}}],[\"循环结束\",{\"1\":{\"243\":1}}],[\"局部变量存储了\",{\"1\":{\"2354\":1}}],[\"局部变量\",{\"1\":{\"2138\":1,\"2375\":1}}],[\"局部性原理是指无论程序指令还是数据都趋于聚集在一个较小的连续区域中\",{\"1\":{\"495\":1}}],[\"流\",{\"0\":{\"3330\":1},\"1\":{\"3331\":1}}],[\"流程会触发\",{\"1\":{\"2952\":1}}],[\"流程如下\",{\"1\":{\"2137\":1}}],[\"流量控制过程\",{\"0\":{\"1025\":1}}],[\"流量控制是对发送方和接收方两者的发送数据量的一个束缚\",{\"1\":{\"957\":1}}],[\"流量控制\",{\"0\":{\"931\":1},\"1\":{\"1031\":1,\"1053\":1}}],[\"捕获返回值\",{\"1\":{\"2148\":1}}],[\"捕获参数\",{\"1\":{\"2146\":1}}],[\"捕获局部变量\",{\"1\":{\"2134\":1}}],[\"捕获列表变量时怎么来的\",{\"1\":{\"2123\":1}}],[\"捕获列表\",{\"0\":{\"2122\":1}}],[\"捕获变量是返回值\",{\"1\":{\"2130\":1}}],[\"捕获变量是参数\",{\"1\":{\"2129\":1}}],[\"捕获变量是局部变量\",{\"1\":{\"2128\":1,\"2136\":1}}],[\"捕获变量初始化赋值\",{\"1\":{\"2127\":1}}],[\"捕获变量进行初始化赋值\",{\"1\":{\"2126\":1}}],[\"捕获变量\",{\"1\":{\"2114\":1,\"2376\":1}}],[\"寄存器\",{\"1\":{\"2118\":1,\"2757\":1}}],[\"平台\",{\"1\":{\"3403\":1}}],[\"平台使用的是\",{\"1\":{\"2118\":1}}],[\"平衡树查找时间复杂度最坏的情况是等于树高\",{\"1\":{\"493\":1}}],[\"依赖特定\",{\"1\":{\"2745\":1}}],[\"依然需要使用读写屏障保障程序正确执行\",{\"1\":{\"2719\":1}}],[\"依然可以通过\",{\"1\":{\"2113\":1}}],[\"依旧通过\",{\"1\":{\"2421\":1}}],[\"依次读取\",{\"1\":{\"2783\":1}}],[\"依次从后向前填入格式中的x\",{\"1\":{\"1755\":1}}],[\"依次取出来\",{\"1\":{\"128\":1}}],[\"介绍一下heaparena\",{\"1\":{\"2537\":1}}],[\"介绍\",{\"0\":{\"2107\":1,\"2155\":1}}],[\"介绍udp\",{\"0\":{\"1005\":1}}],[\"似乎直接划分工作区域是一个简单的方式\",{\"1\":{\"2713\":1}}],[\"似乎\",{\"0\":{\"2391\":1}}],[\"似乎是一个地址\",{\"1\":{\"2100\":1}}],[\"似乎这个\",{\"1\":{\"1912\":1}}],[\"却会增加线程间的同步开销\",{\"1\":{\"2714\":1}}],[\"却引用了\",{\"1\":{\"2705\":1}}],[\"却需要使用到这个变量\",{\"1\":{\"2682\":1}}],[\"却变慢了\",{\"1\":{\"2460\":1}}],[\"却不直接指向函数指令入口\",{\"1\":{\"2098\":1}}],[\"却偏偏使用了很多溢出桶\",{\"1\":{\"1859\":1}}],[\"甚至已经还给操作系统了\",{\"1\":{\"2606\":1}}],[\"甚至有些项目的注释中写明了不用\",{\"1\":{\"2392\":1}}],[\"甚至可以作为一种类型\",{\"1\":{\"2097\":1}}],[\"甚至发生发送方发送的报文数据只有几个字节的情况\",{\"1\":{\"948\":1}}],[\"绑定到变量\",{\"1\":{\"2097\":1}}],[\"闭包函数通过寄存器存储的\",{\"1\":{\"2376\":1}}],[\"闭包函数\",{\"1\":{\"2373\":1}}],[\"闭包函数的入口\",{\"1\":{\"2373\":1}}],[\"闭包对于捕获变量所有的操作\",{\"1\":{\"2151\":1}}],[\"闭包的外层函数\",{\"1\":{\"2149\":1}}],[\"闭包捕获的变量要在闭包函数和外层函数中表现一致\",{\"1\":{\"2124\":1,\"2125\":1,\"2144\":1,\"2151\":1}}],[\"闭包跟函数最大的不同在于\",{\"1\":{\"2109\":1}}],[\"闭包在实现上是一个结构体\",{\"1\":{\"2109\":1}}],[\"闭包\",{\"0\":{\"2094\":1,\"2106\":1,\"2368\":1},\"1\":{\"2109\":1}}],[\"算得上一个编程小技巧\",{\"1\":{\"2092\":1}}],[\"算法介绍\",{\"1\":{\"2645\":1}}],[\"算法\",{\"1\":{\"990\":1}}],[\"断言目标类型是具体类型\",{\"1\":{\"2087\":1}}],[\"断开等各阶段操作时\",{\"1\":{\"1304\":1}}],[\"断开连接\",{\"1\":{\"71\":1}}],[\"找个快递员a\",{\"1\":{\"3273\":1}}],[\"找不到比较方法\",{\"1\":{\"2088\":1}}],[\"找不到\",{\"1\":{\"2071\":1}}],[\"找到对应的eslint规则\",{\"1\":{\"3389\":1}}],[\"找到之前触发执行的\",{\"1\":{\"2918\":1}}],[\"找到链表头的\",{\"1\":{\"2366\":1}}],[\"找到了\",{\"1\":{\"2068\":1}}],[\"找到第一个满足条件的记录\",{\"1\":{\"274\":1}}],[\"找到第一个满足条件的记录是\",{\"1\":{\"262\":1}}],[\"找到\",{\"1\":{\"241\":1,\"242\":1,\"2366\":1}}],[\"找到最近的一次全量备份\",{\"1\":{\"127\":1}}],[\"置为\",{\"1\":{\"2066\":1,\"2490\":1,\"2491\":2,\"2499\":1,\"2501\":1,\"2502\":1,\"2503\":1,\"2550\":1,\"2551\":1,\"2552\":1,\"2914\":1,\"2920\":1,\"2932\":1,\"2944\":1}}],[\"靠接口类型和动态类型进行确定的并且\",{\"1\":{\"2050\":1}}],[\"像是库文档模板\",{\"1\":{\"2882\":1}}],[\"像上面的代码\",{\"1\":{\"2336\":1}}],[\"像\",{\"1\":{\"2037\":1,\"2193\":1}}],[\"拥有自己的类型元数据\",{\"1\":{\"2032\":1}}],[\"拥塞发送\",{\"1\":{\"988\":1}}],[\"拥塞避免的规则是每当收到一个ack时候\",{\"1\":{\"980\":1}}],[\"拥塞避免算法\",{\"1\":{\"977\":1}}],[\"拥塞避免\",{\"0\":{\"978\":1},\"1\":{\"967\":1,\"981\":1}}],[\"拥塞控制\",{\"1\":{\"1053\":1}}],[\"拥塞控制主要是四个算法\",{\"1\":{\"965\":1}}],[\"拥塞控制的原理是什么\",{\"0\":{\"964\":1}}],[\"拥塞窗口+1\",{\"1\":{\"980\":1}}],[\"拥塞窗口以指数级别的上升\",{\"1\":{\"971\":1}}],[\"拥塞窗口与发送窗口有什么关系\",{\"0\":{\"961\":1}}],[\"拥塞窗口\",{\"1\":{\"959\":1,\"986\":1,\"998\":1}}],[\"别名\",{\"0\":{\"2026\":1}}],[\"函数内有\",{\"1\":{\"3388\":1}}],[\"函数内部用\",{\"1\":{\"3025\":1}}],[\"函数名\",{\"1\":{\"3320\":1}}],[\"函数名就是返回结果\",{\"1\":{\"3224\":1}}],[\"函数参数类型封装成一个接口类型\",{\"1\":{\"3308\":1}}],[\"函数可以作为函数的返回值\",{\"1\":{\"3221\":1}}],[\"函数可以作为函数的参数\",{\"1\":{\"3220\":1}}],[\"函数可以赋值给变量\",{\"1\":{\"3219\":1}}],[\"函数一定要保证关闭文件对象\",{\"1\":{\"3173\":1}}],[\"函数只能在\",{\"1\":{\"2960\":1}}],[\"函数还没有结束哦\",{\"1\":{\"2935\":1}}],[\"函数移除\",{\"1\":{\"2934\":1}}],[\"函数接着继续执行\",{\"1\":{\"2932\":1}}],[\"函数时候\",{\"1\":{\"2932\":1,\"3257\":1}}],[\"函数时候会在堆上开辟一段空间专门存储\",{\"1\":{\"2408\":1,\"2433\":1}}],[\"函数方式是\",{\"1\":{\"2924\":1}}],[\"函数没有正常结束的情况\",{\"1\":{\"2910\":1}}],[\"函数正常返回以后再移除对应的\",{\"1\":{\"2910\":1}}],[\"函数触发的\",{\"1\":{\"2908\":1}}],[\"函数由这个\",{\"1\":{\"2908\":1}}],[\"函数和接口\",{\"1\":{\"2891\":1}}],[\"函数片段\",{\"1\":{\"2862\":1}}],[\"函数类型\",{\"1\":{\"2862\":1}}],[\"函数开启调度循环\",{\"1\":{\"2849\":1}}],[\"函数开始执行\",{\"1\":{\"2298\":1}}],[\"函数来检查\",{\"1\":{\"2795\":1}}],[\"函数也是由编译器填充\",{\"1\":{\"2793\":1}}],[\"函数创建一个新的g\",{\"1\":{\"2761\":1}}],[\"函数在当前函数内展开并直接调用\",{\"1\":{\"2455\":1}}],[\"函数代表\",{\"1\":{\"2388\":1}}],[\"函数结束前会执行\",{\"1\":{\"2388\":1}}],[\"函数又会怎么样注册与执行\",{\"1\":{\"2382\":1}}],[\"函数后\",{\"1\":{\"2376\":1}}],[\"函数传递了局部变量\",{\"1\":{\"2371\":1}}],[\"函数传递的参数与返回值\",{\"1\":{\"2361\":1}}],[\"函数了\",{\"1\":{\"2366\":1,\"2921\":1,\"2951\":1}}],[\"函数第二个参数就是\",{\"1\":{\"2356\":1}}],[\"函数才会表现为倒序执行\",{\"1\":{\"2346\":1}}],[\"函数信息会添加到链表头部\",{\"1\":{\"2346\":1}}],[\"函数能够延迟执行的原因\",{\"1\":{\"2343\":1}}],[\"函数是否执行\",{\"1\":{\"2452\":1}}],[\"函数是按照定义顺序倒序执行的\",{\"1\":{\"2332\":1}}],[\"函数是怎么样的\",{\"1\":{\"2233\":1}}],[\"函数之前\",{\"1\":{\"2324\":1}}],[\"函数中直接调用\",{\"1\":{\"2960\":1}}],[\"函数中\",{\"1\":{\"2321\":1,\"3388\":1}}],[\"函数中这一段\",{\"1\":{\"2303\":1}}],[\"函数返回值空间的值会通过值拷贝赋值给局部变量中的\",{\"1\":{\"2317\":1}}],[\"函数将\",{\"1\":{\"2315\":1}}],[\"函数局部变量中间的\",{\"1\":{\"2315\":1}}],[\"函数局部变量空间的\",{\"1\":{\"2303\":1}}],[\"函数里面注册的是函数\",{\"1\":{\"2380\":1}}],[\"函数里面的局部变量和\",{\"1\":{\"2323\":1}}],[\"函数里面\",{\"1\":{\"2312\":1}}],[\"函数执行完后\",{\"1\":{\"2933\":1}}],[\"函数执行\",{\"1\":{\"2444\":1}}],[\"函数执行在\",{\"1\":{\"2421\":1}}],[\"函数执行这一段交换代码时候a\",{\"1\":{\"2299\":1}}],[\"函数执行时候\",{\"1\":{\"2267\":1,\"2361\":1}}],[\"函数并没有返回值\",{\"1\":{\"2296\":1}}],[\"函数通过栈扫描来注册到链表里\",{\"1\":{\"2458\":1}}],[\"函数通过相对寻址找到参数\",{\"1\":{\"2421\":1}}],[\"函数通过\",{\"1\":{\"2285\":1}}],[\"函数布局一样布局\",{\"1\":{\"2281\":1}}],[\"函数会继续去执行\",{\"1\":{\"2955\":1}}],[\"函数会继续接着执行\",{\"1\":{\"2951\":1}}],[\"函数会输入两个参数\",{\"1\":{\"2354\":1}}],[\"函数会用到\",{\"1\":{\"2244\":1}}],[\"函数会把参数\",{\"1\":{\"2237\":1}}],[\"函数会把\",{\"1\":{\"2219\":1}}],[\"函数干的活\",{\"1\":{\"2221\":1}}],[\"函数要做的就是把\",{\"1\":{\"2221\":1}}],[\"函数调用的相关信息\",{\"1\":{\"2386\":1}}],[\"函数调用栈等内容\",{\"1\":{\"2390\":1}}],[\"函数调用栈\",{\"0\":{\"2263\":1}}],[\"函数调用栈有两个局部变量分别是\",{\"1\":{\"2174\":1}}],[\"函数调用\",{\"1\":{\"2174\":1}}],[\"函数栈帧了\",{\"1\":{\"2301\":1}}],[\"函数栈帧里面的参数空间的\",{\"1\":{\"2299\":1}}],[\"函数栈帧是一次性分配的\",{\"1\":{\"2288\":1}}],[\"函数栈帧\",{\"0\":{\"2266\":1},\"1\":{\"2298\":1,\"2310\":2}}],[\"函数栈帧局部变量为\",{\"1\":{\"2168\":1}}],[\"函数栈帧中有两个局部变量\",{\"1\":{\"2212\":1}}],[\"函数栈帧中\",{\"1\":{\"2138\":1,\"2296\":1,\"2301\":1}}],[\"函数与闭包函数\",{\"1\":{\"2139\":1}}],[\"函数的返回地址\",{\"1\":{\"2938\":1}}],[\"函数的返回值空间\",{\"1\":{\"2315\":1,\"2321\":1}}],[\"函数的返回值是\",{\"1\":{\"2240\":1}}],[\"函数的返回值是一个函数\",{\"1\":{\"2112\":1}}],[\"函数的做的事情很少\",{\"1\":{\"2932\":1}}],[\"函数的入口地址\",{\"1\":{\"2366\":1,\"2762\":1}}],[\"函数的\",{\"1\":{\"2366\":1}}],[\"函数的注册已经完成\",{\"1\":{\"2365\":1}}],[\"函数的两个参数后面开辟一段空间\",{\"1\":{\"2359\":1}}],[\"函数的后续操作都是在\",{\"1\":{\"2323\":1}}],[\"函数的参数可以有默认值\",{\"1\":{\"3027\":1}}],[\"函数的参数还要\",{\"1\":{\"2394\":1}}],[\"函数的参数会在注册时候拷贝到堆上\",{\"1\":{\"2367\":1}}],[\"函数的参数加返回值占多少字节\",{\"1\":{\"2342\":1}}],[\"函数的参数空间进行改变\",{\"1\":{\"2323\":1}}],[\"函数的参数\",{\"1\":{\"2315\":1,\"2358\":1}}],[\"函数的参数类型是空接口\",{\"1\":{\"2212\":1}}],[\"函数的函数调用栈\",{\"1\":{\"2295\":1}}],[\"函数的局部变量\",{\"1\":{\"2112\":1,\"2196\":1}}],[\"函数\",{\"0\":{\"2096\":1,\"2377\":1,\"3024\":1},\"1\":{\"2008\":2,\"2097\":1,\"2273\":1,\"2312\":1,\"2315\":1,\"2321\":1,\"2325\":1,\"2343\":1,\"2354\":1,\"2359\":1,\"2376\":1,\"2380\":1,\"2384\":2,\"2386\":1,\"2389\":1,\"2416\":1,\"2426\":1,\"2451\":1,\"2453\":1,\"2457\":1,\"2777\":1,\"2779\":1,\"2782\":1,\"2785\":1,\"2787\":1,\"2790\":1,\"2794\":1,\"2905\":2,\"2906\":1,\"2909\":1,\"2914\":1,\"2918\":1,\"2920\":1,\"2921\":1,\"2930\":2,\"2937\":1,\"2941\":2,\"2942\":1,\"2945\":1,\"2952\":1,\"3173\":1,\"3180\":1}}],[\"逐个分析每个字段\",{\"1\":{\"1969\":1}}],[\"逐渐慢慢提高到慢启动门限\",{\"1\":{\"973\":1}}],[\"占据的字节满足结构体对齐系数的倍数\",{\"1\":{\"1975\":1}}],[\"占\",{\"1\":{\"1954\":1,\"1957\":1}}],[\"方启鹤=85\",{\"1\":{\"3069\":1}}],[\"方便使用\",{\"1\":{\"3374\":1}}],[\"方便\",{\"1\":{\"2160\":1,\"2884\":1}}],[\"方法定义风格\",{\"1\":{\"3388\":1}}],[\"方法时从当前位置继续运行\",{\"1\":{\"3253\":1}}],[\"方法中我们可以设置在完成指定循环次数后触发\",{\"1\":{\"3249\":1}}],[\"方法进行对应的操作\",{\"1\":{\"3083\":1}}],[\"方法就可以修改原来的变量\",{\"1\":{\"2257\":1}}],[\"方法然后\",{\"1\":{\"2257\":1}}],[\"方法列表中可导出方法的数目\",{\"1\":{\"2206\":1}}],[\"方法变量\",{\"1\":{\"2188\":1,\"2192\":1,\"2193\":1}}],[\"方法表达式\",{\"1\":{\"2187\":1,\"2188\":1,\"2189\":1}}],[\"方法的\",{\"0\":{\"2185\":1}}],[\"方法的类型元数据\",{\"1\":{\"2018\":1}}],[\"方法本质上其实一个普通的函数\",{\"1\":{\"2164\":1}}],[\"方法本质是函数\",{\"1\":{\"1992\":1}}],[\"方法即\",{\"1\":{\"2156\":1}}],[\"方法名称偏移量\",{\"1\":{\"2018\":1}}],[\"方法元数据\",{\"1\":{\"2018\":1}}],[\"方法\",{\"0\":{\"2153\":1},\"1\":{\"1950\":1,\"2083\":2,\"2154\":1,\"3076\":1,\"3388\":1}}],[\"方式取值\",{\"1\":{\"3388\":1}}],[\"方式取属性\",{\"1\":{\"3388\":2}}],[\"方式将\",{\"1\":{\"2453\":1}}],[\"方式与捕获局部变量一致\",{\"1\":{\"2147\":1}}],[\"方式二\",{\"1\":{\"1762\":1}}],[\"方式一\",{\"1\":{\"1759\":1}}],[\"合并两个集合\",{\"1\":{\"3063\":1}}],[\"合并两个列表\",{\"1\":{\"3054\":1}}],[\"合并的过程\",{\"1\":{\"224\":1}}],[\"合理的内存对齐可以提高内存读写的性能\",{\"1\":{\"1941\":1}}],[\"始终以字长访问内存\",{\"1\":{\"1935\":1}}],[\"始终是不会变的\",{\"1\":{\"1387\":1}}],[\"信息扫描它内部是否含有指针\",{\"1\":{\"2544\":1}}],[\"信息保存到链表\",{\"1\":{\"2395\":1}}],[\"信息\",{\"0\":{\"2348\":1},\"1\":{\"1913\":1,\"2913\":1}}],[\"构造函数\",{\"1\":{\"3388\":1}}],[\"构造函数中无效的正则表达式字符串\",{\"1\":{\"3388\":1}}],[\"构成一个哈希表\",{\"1\":{\"1913\":1}}],[\"构建文档\",{\"1\":{\"3428\":1}}],[\"构建文档树\",{\"1\":{\"1404\":1}}],[\"构建过程如下\",{\"1\":{\"1462\":1}}],[\"构建辅助功能树\",{\"0\":{\"1422\":1}}],[\"构建cssom非常非常快\",{\"1\":{\"1418\":1}}],[\"构建cssom树\",{\"0\":{\"1414\":1}}],[\"构建dom树所需的时间就越长\",{\"1\":{\"1405\":1}}],[\"构建dom树\",{\"0\":{\"1402\":1},\"1\":{\"1404\":1}}],[\"组合来达到你的目的\",{\"1\":{\"3403\":1}}],[\"组合\",{\"1\":{\"2088\":1}}],[\"组合对应的\",{\"1\":{\"2055\":1,\"2083\":1}}],[\"组合为\",{\"1\":{\"1913\":1}}],[\"组成一个\",{\"1\":{\"2523\":2}}],[\"组成的结构集合\",{\"1\":{\"1403\":1}}],[\"组成\",{\"1\":{\"399\":1,\"617\":1}}],[\"赋值后只要动态类型不变\",{\"1\":{\"1912\":1}}],[\"赋值给\",{\"1\":{\"1894\":1,\"1905\":1}}],[\"剩余的过程是很繁琐的\",{\"1\":{\"2963\":1}}],[\"剩余的栈空间不够执行接下来的函数\",{\"1\":{\"2289\":1}}],[\"剩余的部分与上面那个例子类似\",{\"1\":{\"2256\":1}}],[\"剩余的字段要么来自\",{\"1\":{\"1912\":1}}],[\"剩下的没有提及的二进制位\",{\"1\":{\"1752\":1}}],[\"枪\",{\"1\":{\"1910\":1}}],[\"动态类型>\",{\"1\":{\"1913\":1,\"2088\":1}}],[\"动态类型是\",{\"1\":{\"1906\":1}}],[\"动态类型实现的接口要求方法地址\",{\"1\":{\"1900\":1,\"2224\":1}}],[\"动态主机配置\",{\"1\":{\"719\":1}}],[\"干的事情不多\",{\"1\":{\"1889\":1}}],[\"深入golang启动过程\",{\"1\":{\"2732\":1}}],[\"深入研究\",{\"1\":{\"1887\":1,\"1990\":1}}],[\"深入解析\",{\"1\":{\"1729\":1}}],[\"深度解析golang\",{\"1\":{\"1881\":1}}],[\"图解panic\",{\"1\":{\"2898\":1}}],[\"图解函数调用栈\",{\"1\":{\"2327\":1}}],[\"图解反射\",{\"1\":{\"2200\":1}}],[\"图解function\",{\"1\":{\"2095\":1}}],[\"图解类型断言\",{\"1\":{\"2036\":1}}],[\"图解interface\",{\"1\":{\"1886\":1}}],[\"图解map\",{\"1\":{\"1880\":1}}],[\"图片\",{\"1\":{\"37\":1,\"1068\":1,\"1074\":1,\"1793\":1,\"1815\":1,\"1819\":1,\"1831\":1,\"1837\":1,\"1840\":1,\"1842\":1,\"1849\":1,\"1851\":1,\"1860\":1,\"1862\":1,\"1870\":1,\"1897\":1,\"1907\":1,\"1914\":1,\"2025\":1,\"2031\":1,\"2033\":1,\"2042\":1,\"2045\":1,\"2051\":1,\"2056\":1,\"2069\":1,\"2073\":1,\"2081\":1,\"2084\":1,\"2121\":1,\"2145\":1,\"2150\":1,\"2191\":1,\"2197\":1,\"2217\":1,\"2238\":1,\"2255\":1,\"2347\":1,\"2357\":1,\"2360\":1,\"2385\":1,\"2387\":1,\"2483\":1,\"2522\":1,\"2527\":1,\"2529\":1,\"2541\":1,\"2543\":1,\"2545\":1,\"2585\":1,\"2631\":1,\"2639\":1,\"2651\":1,\"2669\":1,\"2687\":1,\"2699\":1,\"2700\":1,\"2702\":1,\"2706\":1,\"2724\":1,\"2901\":1,\"2915\":1,\"2931\":1,\"2939\":1,\"2953\":1,\"2961\":1}}],[\"类方法的第一个参数约定名为cls\",{\"1\":{\"3092\":1}}],[\"类方法\",{\"1\":{\"3091\":1,\"3092\":1}}],[\"类\",{\"1\":{\"3073\":1}}],[\"类是抽象的概念\",{\"1\":{\"3072\":1}}],[\"类是对象的蓝图和模板\",{\"1\":{\"3072\":1}}],[\"类型区分共\",{\"1\":{\"2526\":1}}],[\"类型编号\",{\"1\":{\"2524\":1}}],[\"类型规格覆盖了小于等于\",{\"1\":{\"2524\":1}}],[\"类型规格记录在\",{\"1\":{\"2524\":1}}],[\"类型参数占用\",{\"1\":{\"2355\":1}}],[\"类型了\",{\"1\":{\"2301\":1}}],[\"类型查找相关数据\",{\"1\":{\"2226\":1}}],[\"类型并赋给变量\",{\"1\":{\"2219\":1}}],[\"类型对应的reflect\",{\"1\":{\"2206\":1}}],[\"类型名称\",{\"1\":{\"2206\":1}}],[\"类型名称字符串在二进制文件段中的偏移量\",{\"1\":{\"2008\":1}}],[\"类型成员地址指向的\",{\"1\":{\"2176\":1}}],[\"类型成员会重新指向这个新的字符串\",{\"1\":{\"2175\":1}}],[\"类型没有实现\",{\"1\":{\"2071\":1}}],[\"类型断言是\",{\"1\":{\"2038\":1}}],[\"类型断言\",{\"0\":{\"2035\":1}}],[\"类型断言这些语言特性或机制\",{\"1\":{\"1993\":1}}],[\"类型描述信息\",{\"1\":{\"2022\":1}}],[\"类型元信息指针在二进制文件段中的偏移量\",{\"1\":{\"2008\":1}}],[\"类型元数据由以下构成\",{\"1\":{\"2021\":1}}],[\"类型元数据这里可以找到类型关联的方法元数据列表\",{\"1\":{\"1896\":1}}],[\"类型元数据都有一个相同的header\",{\"1\":{\"1868\":1}}],[\"类型的数组\",{\"1\":{\"2542\":1}}],[\"类型的\",{\"1\":{\"2244\":1,\"2525\":1}}],[\"类型的参数\",{\"1\":{\"2219\":1}}],[\"类型的返回值就可以了\",{\"1\":{\"2221\":1}}],[\"类型的返回值\",{\"1\":{\"2207\":1}}],[\"类型的成员到返回值空间\",{\"1\":{\"2175\":1}}],[\"类型的成员\",{\"1\":{\"2168\":1}}],[\"类型的元数据\",{\"1\":{\"2010\":1,\"2012\":1}}],[\"类型的特征标记\",{\"1\":{\"2008\":1}}],[\"类型的变量赋值给\",{\"1\":{\"2055\":1}}],[\"类型的变量\",{\"1\":{\"1894\":1,\"2211\":1}}],[\"类型\",{\"1\":{\"2008\":1,\"2044\":2,\"2048\":1,\"2071\":1,\"2168\":1,\"2240\":1,\"2525\":2,\"2778\":1}}],[\"类型系统\",{\"0\":{\"1988\":1},\"1\":{\"1989\":1}}],[\"类型变量\",{\"1\":{\"1905\":1,\"2189\":1}}],[\"类型哈希值\",{\"1\":{\"1900\":1,\"2224\":1}}],[\"类似python的jinja\",{\"1\":{\"2891\":1}}],[\"类似post\",{\"1\":{\"1577\":1}}],[\"类似于dom的语义版本\",{\"1\":{\"1423\":1}}],[\"获得字符串修剪左右两侧空格之后的拷贝\",{\"1\":{\"3048\":1}}],[\"获得字符串变大写后的拷贝\",{\"1\":{\"3048\":1}}],[\"获得字符串每个单词首字母大写的拷贝\",{\"1\":{\"3048\":1}}],[\"获得字符串首字母大写的拷贝\",{\"1\":{\"3048\":1}}],[\"获得开始的桶编号\",{\"1\":{\"1866\":1}}],[\"获取接受的字符串信息\",{\"1\":{\"3287\":1,\"3311\":1}}],[\"获取属性时触发\",{\"1\":{\"3216\":1,\"3217\":1}}],[\"获取属性时\",{\"1\":{\"3211\":1,\"3212\":1}}],[\"获取元组中的元素\",{\"1\":{\"3058\":1}}],[\"获取p的指针\",{\"1\":{\"2793\":1}}],[\"获取伪寄存器pc的内容\",{\"1\":{\"2793\":1}}],[\"获取当前goroutine的指针\",{\"1\":{\"2793\":1}}],[\"获取cpu核数\",{\"1\":{\"2786\":1}}],[\"获取并设置到\",{\"1\":{\"2528\":1}}],[\"获取类型的字符串表示\",{\"1\":{\"2206\":1}}],[\"获取方法数组中第i个method\",{\"1\":{\"2206\":1}}],[\"获取一个unicode字符\",{\"1\":{\"1770\":1}}],[\"获取资源的元信息\",{\"1\":{\"1575\":1}}],[\"获取资源\",{\"1\":{\"1574\":1}}],[\"获取权限\",{\"1\":{\"62\":1,\"690\":1}}],[\"获取\",{\"1\":{\"40\":1,\"2789\":1,\"3428\":1}}],[\"桶的负载因子没有超过上限值\",{\"1\":{\"1859\":1}}],[\"桶里面已经有存储了一个键值对\",{\"1\":{\"1811\":1}}],[\"新的内容将会被写入到已有内容之后\",{\"1\":{\"3166\":1,\"3168\":1}}],[\"新建一个文件\",{\"1\":{\"3142\":1}}],[\"新建一个g\",{\"1\":{\"2793\":1}}],[\"新生代和老年代还可以分别采用不同的回收策略\",{\"1\":{\"2663\":1}}],[\"新生代对象成为垃圾的概率高于老年代对象\",{\"1\":{\"2660\":1}}],[\"新生代对象\",{\"1\":{\"2658\":1}}],[\"新创建的对象\",{\"1\":{\"2658\":1}}],[\"新注册的\",{\"1\":{\"2346\":1}}],[\"新桶数量就是2m=8\",{\"1\":{\"1850\":1}}],[\"新slice变为原来的1\",{\"1\":{\"1715\":1}}],[\"新slice的cap变为原来的2倍\",{\"1\":{\"1714\":1}}],[\"翻倍扩容\",{\"1\":{\"1845\":1}}],[\"保存在\",{\"1\":{\"2839\":1}}],[\"保存pc\",{\"1\":{\"2795\":1}}],[\"保存主\",{\"1\":{\"2762\":1}}],[\"保存\",{\"1\":{\"2386\":1}}],[\"保存的就是\",{\"1\":{\"2345\":1}}],[\"保存旧桶用到的溢出桶\",{\"1\":{\"1839\":1}}],[\"保证双方有接受与发送的能力\",{\"1\":{\"1291\":1}}],[\"保证了两个日志状态逻辑上是一致的\",{\"1\":{\"685\":1}}],[\"保证了mysql集群架构的数据一致性\",{\"1\":{\"652\":1}}],[\"保证了数据持久性与完整性\",{\"1\":{\"615\":1}}],[\"保证数据库中每一行数据的唯一性\",{\"1\":{\"446\":1}}],[\"保证数据完整性\",{\"1\":{\"408\":1}}],[\"保证读写的正确性\",{\"1\":{\"322\":1}}],[\"溢出桶相关的信息\",{\"1\":{\"1839\":1}}],[\"溢出桶的内存布局与之前介绍的常规桶相同\",{\"1\":{\"1838\":1}}],[\"检查并获取仓库源码\",{\"1\":{\"3428\":1}}],[\"检查\",{\"1\":{\"3388\":1}}],[\"检查字符串是否以数字和字母构成\",{\"1\":{\"3048\":1}}],[\"检查字符串是否以字母构成\",{\"1\":{\"3048\":1}}],[\"检查字符串是否以指定的字符串结尾\",{\"1\":{\"3048\":1}}],[\"检查字符串是否以指定的字符串开头\",{\"1\":{\"3048\":1}}],[\"检查字符串是否由数字构成\",{\"1\":{\"3048\":1}}],[\"检查各个类型占用内存大小的正确性\",{\"1\":{\"2799\":1}}],[\"检查hmap\",{\"1\":{\"1841\":1}}],[\"检测当当前处于迁移阶段\",{\"1\":{\"1830\":1}}],[\"检索\",{\"1\":{\"289\":1}}],[\"检索出表中\",{\"1\":{\"272\":1}}],[\"渐进式扩容时\",{\"1\":{\"1839\":1}}],[\"渐进式扩容时记录下一个要被迁移的旧桶编号\",{\"1\":{\"1834\":1}}],[\"渐进式扩容\",{\"1\":{\"1829\":1}}],[\"何时扩容\",{\"1\":{\"1823\":1,\"1825\":1}}],[\"适当的对哈希表的扩容也是一个保障读写效率的手段之一\",{\"1\":{\"1820\":1}}],[\"适用于读多写少的场景\",{\"1\":{\"601\":1}}],[\"拉链法\",{\"1\":{\"1816\":1}}],[\"间\",{\"1\":{\"1807\":1}}],[\"间隙锁只有在可重复读隔离级别才会生效\",{\"1\":{\"598\":1}}],[\"间隙锁的引入\",{\"1\":{\"597\":1}}],[\"间隙锁和行锁合称\",{\"1\":{\"597\":1}}],[\"建表\",{\"0\":{\"1798\":1}}],[\"建立服务连接\",{\"1\":{\"3327\":1}}],[\"建立连接\",{\"1\":{\"3286\":1}}],[\"建立特殊的连接隧道\",{\"1\":{\"1579\":1}}],[\"建立逻辑连接\",{\"1\":{\"709\":1}}],[\"建立唯一索引的目的大部分时候都是为了该属性列的数据的唯一性\",{\"1\":{\"509\":1}}],[\"建立唯一索引\",{\"1\":{\"454\":1}}],[\"建立\",{\"1\":{\"267\":1,\"715\":1}}],[\"建立了索引\",{\"1\":{\"253\":1}}],[\"散列表的集合\",{\"1\":{\"1796\":1}}],[\"散列表可以用来存储键值对元素\",{\"1\":{\"1788\":1}}],[\"采用渐进式迁移旧桶键值对\",{\"1\":{\"1876\":1}}],[\"采用拉链法解决\",{\"1\":{\"1876\":1}}],[\"采用byte数组\",{\"1\":{\"1770\":1}}],[\"采用``反引号的方式不会对字符串里面的转义符进行转义\",{\"1\":{\"1764\":1}}],[\"采用追加写的方式\",{\"1\":{\"108\":1}}],[\"习惯上go的字符串会按utf\",{\"1\":{\"1757\":1}}],[\"严的\",{\"1\":{\"1755\":2}}],[\"编号为hmap\",{\"1\":{\"1852\":1}}],[\"编码信息等来获得操作文件的对象\",{\"1\":{\"3126\":1}}],[\"编码是11100100\",{\"1\":{\"1755\":1}}],[\"编码需要三个字节\",{\"1\":{\"1755\":1}}],[\"编码和\",{\"1\":{\"1751\":1}}],[\"编译正则表达式返回正则表达式对象\",{\"1\":{\"3183\":1}}],[\"编译工具\",{\"1\":{\"2893\":1}}],[\"编译后的伪指令是这样的\",{\"1\":{\"2336\":1,\"2401\":1}}],[\"编译期间\",{\"1\":{\"2180\":1}}],[\"编译器负责生成了\",{\"1\":{\"2762\":1}}],[\"编译器就会对应生成一条call指令\",{\"1\":{\"2265\":1}}],[\"编译器的语法糖\",{\"1\":{\"2158\":1,\"2166\":1}}],[\"编译器会在\",{\"1\":{\"2359\":1}}],[\"编译器会识别第一种\",{\"1\":{\"2162\":1}}],[\"编译器会给每种类型生成对应得类型描述信息写入执行文件\",{\"1\":{\"1993\":1}}],[\"编译器会把各种数据类型安排到合适的地址并占用合适长度\",{\"1\":{\"1933\":1}}],[\"编译器知道每种类型定义得方法\",{\"1\":{\"1992\":1}}],[\"编译\",{\"1\":{\"1421\":1}}],[\"英语\",{\"1\":{\"2109\":1}}],[\"英语用128个字符编码就够了\",{\"1\":{\"1741\":1}}],[\"英文字母只需要一个字节\",{\"1\":{\"1745\":1}}],[\"汉字就多达10万左右\",{\"1\":{\"1741\":1}}],[\"亚洲国家的文字\",{\"1\":{\"1741\":1}}],[\"美国制定了一套字符编码\",{\"1\":{\"1739\":1}}],[\"码是相同的\",{\"1\":{\"1751\":1}}],[\"码一共规定了128个字符的编码\",{\"1\":{\"1739\":1}}],[\"码\",{\"0\":{\"1736\":1},\"1\":{\"1739\":1,\"1751\":1,\"1752\":1}}],[\"神秘的字符串\",{\"1\":{\"1734\":1}}],[\"证明\",{\"1\":{\"1716\":1,\"1773\":1}}],[\"证书颁发机构如\",{\"1\":{\"1201\":1}}],[\"改了结构体名称\",{\"1\":{\"3307\":1}}],[\"改变形参不会影响到实参\",{\"1\":{\"2293\":1}}],[\"改变的是参数\",{\"1\":{\"2170\":1}}],[\"改变的是参数空间\",{\"1\":{\"2169\":1}}],[\"改变ans2的slice范围\",{\"1\":{\"1706\":1}}],[\"改变ans2的可读写范围\",{\"1\":{\"1705\":1}}],[\"改成\",{\"1\":{\"348\":1}}],[\"改成提交\",{\"1\":{\"121\":1,\"667\":1}}],[\"底层的哈希表不同\",{\"1\":{\"1915\":1}}],[\"底层实现\",{\"1\":{\"1729\":1,\"1887\":1,\"1990\":1}}],[\"底层数组\",{\"0\":{\"1682\":1}}],[\"底层走的还是\",{\"1\":{\"1501\":1}}],[\"属于同一种类型\",{\"1\":{\"2030\":1}}],[\"属于越界访问\",{\"1\":{\"1677\":1}}],[\"属性中一致地使用双引号或单引号\",{\"1\":{\"3388\":1}}],[\"属性值\",{\"1\":{\"3213\":1}}],[\"属性值等\",{\"1\":{\"1404\":1}}],[\"属性和方法的访问权限只有两种\",{\"1\":{\"3080\":1}}],[\"属性等\",{\"1\":{\"2891\":1}}],[\"属性\",{\"1\":{\"1408\":1,\"3073\":1,\"3211\":1,\"3212\":1,\"3213\":1,\"3388\":2}}],[\"属性名\",{\"1\":{\"1404\":1}}],[\"属性不可再分\",{\"1\":{\"423\":1}}],[\"切片操作\",{\"1\":{\"3053\":1}}],[\"切片结构的data不一定指向底层数组的首地址\",{\"1\":{\"1686\":1}}],[\"切片结构的地址为0xc000004078\",{\"1\":{\"1658\":1}}],[\"切片是引用传递\",{\"1\":{\"1651\":1}}],[\"切片\",{\"0\":{\"1648\":1},\"1\":{\"2986\":1}}],[\"内部会通过\",{\"1\":{\"3210\":1}}],[\"内部结构不明朗的情况\",{\"1\":{\"2202\":1}}],[\"内置方法\",{\"1\":{\"3208\":1}}],[\"内置数据类型元数据\",{\"0\":{\"2006\":1}}],[\"内置数值类型\",{\"1\":{\"1997\":1}}],[\"内置布尔类型\",{\"1\":{\"1996\":1}}],[\"内置字符串类型\",{\"1\":{\"1995\":1}}],[\"内存分配器\",{\"1\":{\"2772\":1}}],[\"内存分配压力过大\",{\"1\":{\"2581\":1}}],[\"内存碎片化会影响内存分配与程序执行的效率\",{\"1\":{\"2636\":1}}],[\"内存碎片化会增加内存分配的负担\",{\"1\":{\"2509\":1}}],[\"内存泄漏\",{\"1\":{\"2606\":1}}],[\"内存管理模块负责向操作系统申请内存并管理起来\",{\"1\":{\"2516\":1}}],[\"内存管理大致结构\",{\"1\":{\"2515\":1}}],[\"内存对齐要求数据存储地址以及占用字节数是内存对齐的倍数\",{\"1\":{\"1943\":1}}],[\"内存对齐\",{\"1\":{\"1922\":1,\"1923\":1}}],[\"内存\",{\"1\":{\"1644\":1,\"2787\":1}}],[\"内容如下\",{\"1\":{\"1223\":1}}],[\"内容可能会被窃听\",{\"1\":{\"1195\":1}}],[\"假想每次传参都用数组\",{\"1\":{\"1644\":1}}],[\"假设要在\",{\"1\":{\"1956\":1}}],[\"假设此时需要存储的键值对\",{\"1\":{\"1813\":1,\"1817\":1}}],[\"假设\",{\"1\":{\"1317\":1}}],[\"假设客户端有多个网卡\",{\"1\":{\"1310\":1}}],[\"假设两个设备在整个传输过程中都保持相同的窗口大小\",{\"1\":{\"1030\":1}}],[\"假设接收窗口和发送窗口相同\",{\"1\":{\"1029\":1}}],[\"假设以下场景\",{\"1\":{\"1027\":1}}],[\"假设有\",{\"1\":{\"384\":1}}],[\"假设字段\",{\"1\":{\"356\":1}}],[\"假设表\",{\"1\":{\"333\":1}}],[\"假设备份期间\",{\"1\":{\"302\":1}}],[\"假设你负责实现一个电影票在线交易业务\",{\"1\":{\"363\":1}}],[\"假设你现在要维护\",{\"1\":{\"301\":1}}],[\"假设你的表中确实有一个唯一字段\",{\"1\":{\"228\":1}}],[\"假设我们都要查询\",{\"1\":{\"216\":1}}],[\"假设一个值从\",{\"1\":{\"167\":1}}],[\"假设在\",{\"1\":{\"134\":1}}],[\"假设当前\",{\"1\":{\"133\":1}}],[\"三色标记法的标记过程可以增量式\",{\"1\":{\"2634\":1}}],[\"三色标记法的三色\",{\"1\":{\"2627\":1}}],[\"三色抽象可以清晰的展现追踪过程中的数据标记的变化\",{\"1\":{\"2621\":1}}],[\"三种\",{\"1\":{\"2468\":1}}],[\"三\",{\"1\":{\"2465\":1}}],[\"三个数相加\",{\"1\":{\"3028\":1}}],[\"三个\",{\"1\":{\"2289\":1}}],[\"三个内存地址都不同\",{\"1\":{\"1642\":1}}],[\"三次握手\",{\"1\":{\"1285\":1}}],[\"三次握手建立连接\",{\"1\":{\"1202\":1}}],[\"三次握手是理论上最少次数可靠连接建立\",{\"1\":{\"840\":1}}],[\"三次握手则可以在客户端\",{\"1\":{\"822\":1}}],[\"三次握手避免历史连接过程如下\",{\"1\":{\"816\":1}}],[\"三次握手的首要原因是为防止旧的重复连接引起连接初始化混乱的问题\",{\"1\":{\"815\":1}}],[\"三次握手才可以避免资源浪费\",{\"1\":{\"812\":1}}],[\"三次握手才可以同步双方的初始序列号\",{\"1\":{\"811\":1}}],[\"三次握手才可以阻止重复历史连接的初始化\",{\"1\":{\"810\":1}}],[\"三次握手过程如下\",{\"1\":{\"792\":1}}],[\"传入参数\",{\"1\":{\"3286\":1}}],[\"传入的file参数类型\",{\"1\":{\"3137\":1}}],[\"传入的参数都会创建一个副本\",{\"1\":{\"1639\":1}}],[\"传递\",{\"1\":{\"2789\":1}}],[\"传给\",{\"1\":{\"2416\":1}}],[\"传指针为什么会成功\",{\"1\":{\"2293\":1}}],[\"传参机制\",{\"0\":{\"2351\":1}}],[\"传参是值拷贝\",{\"1\":{\"2301\":1}}],[\"传参\",{\"0\":{\"2292\":1}}],[\"传参都是值拷贝\",{\"1\":{\"2170\":1}}],[\"传输\",{\"1\":{\"1069\":1}}],[\"传输方式\",{\"1\":{\"777\":1}}],[\"传输数据首先要建立连接\",{\"1\":{\"766\":1}}],[\"传输层有tcp与udp协议\",{\"0\":{\"763\":1}}],[\"传输层\",{\"1\":{\"712\":1}}],[\"代理对象具有与服务器接口相同的方法\",{\"1\":{\"3273\":1}}],[\"代码是\",{\"1\":{\"3388\":1}}],[\"代码\",{\"1\":{\"3294\":1}}],[\"代码静态检查工具\",{\"1\":{\"2893\":1}}],[\"代码格式化工具\",{\"1\":{\"2893\":1}}],[\"代码审核\",{\"1\":{\"2882\":1}}],[\"代码段\",{\"1\":{\"2824\":1,\"2845\":1}}],[\"代表一个工作流\",{\"1\":{\"3408\":1}}],[\"代表此\",{\"1\":{\"2944\":1}}],[\"代表此数据是有用的数据\",{\"1\":{\"2624\":1}}],[\"代表他已经开始执行了\",{\"1\":{\"2908\":1}}],[\"代表当前\",{\"1\":{\"2868\":1}}],[\"代表\",{\"1\":{\"2856\":1,\"2857\":1,\"2858\":1}}],[\"代表是调度器\",{\"1\":{\"2839\":1}}],[\"代表标记工作已完成\",{\"1\":{\"2625\":1}}],[\"代表两者类型一致\",{\"1\":{\"2164\":1}}],[\"代表255\",{\"1\":{\"1737\":1}}],[\"代表0\",{\"1\":{\"1737\":1}}],[\"代表这个过程没有发生意外\",{\"1\":{\"681\":1}}],[\"代替数组长度\",{\"1\":{\"1635\":1}}],[\"元组的元素不能修改\",{\"1\":{\"3056\":1}}],[\"元组\",{\"0\":{\"3055\":1}}],[\"元素个数\",{\"1\":{\"3053\":1}}],[\"元素个数大于\",{\"1\":{\"2562\":1}}],[\"元素类型大小\",{\"1\":{\"1721\":1}}],[\"元素存哪里\",{\"1\":{\"1653\":1}}],[\"元素的初始化值是元素类型的零值\",{\"1\":{\"1633\":1}}],[\"元数据锁是\",{\"1\":{\"322\":1,\"323\":1}}],[\"终于输出了\",{\"1\":{\"2851\":1}}],[\"终极\",{\"0\":{\"1621\":1}}],[\"终止此次连接\",{\"1\":{\"820\":1}}],[\"终止会话\",{\"1\":{\"715\":1}}],[\"灵茶山艾府\",{\"1\":{\"1616\":1}}],[\"灵活易于扩展\",{\"1\":{\"1182\":1}}],[\"灵活性好\",{\"1\":{\"726\":1}}],[\"宫水三叶\",{\"1\":{\"1615\":1}}],[\"刷题\",{\"1\":{\"1612\":1}}],[\"刷盘的时机与参数\",{\"1\":{\"654\":1}}],[\"刷盘相关的参数是\",{\"1\":{\"628\":1}}],[\"公众号\",{\"1\":{\"1602\":1}}],[\"幼麟实验室\",{\"1\":{\"1601\":1,\"1604\":1}}],[\"脑子进煎鱼了\",{\"1\":{\"1594\":1,\"1603\":1}}],[\"博主\",{\"1\":{\"1592\":1}}],[\"地运行\",{\"1\":{\"2634\":1}}],[\"地鼠文档\",{\"1\":{\"1589\":1}}],[\"地址类型\",{\"1\":{\"2862\":4}}],[\"地址设置到\",{\"1\":{\"2755\":1}}],[\"地址加上偏移找到捕获变量\",{\"1\":{\"2376\":1}}],[\"地址没有发生改变\",{\"1\":{\"2304\":1}}],[\"地址等不会发生改变\",{\"1\":{\"1674\":1}}],[\"地址和端口号\",{\"1\":{\"1516\":1}}],[\"地址和接收方目标\",{\"1\":{\"1324\":1}}],[\"地址在以太网内进行两个设备之间的包传输\",{\"1\":{\"1387\":1}}],[\"地址查询\",{\"1\":{\"1380\":1}}],[\"地址之后\",{\"1\":{\"1380\":1}}],[\"地址就是下一个路由器的地址\",{\"1\":{\"1385\":1}}],[\"地址就是要转发到的目标地址\",{\"1\":{\"1379\":1}}],[\"地址就是我们要转发到的目标地址\",{\"1\":{\"1378\":1}}],[\"地址就是路由器端口的\",{\"1\":{\"1365\":1}}],[\"地址表查找\",{\"1\":{\"1355\":1}}],[\"地址表\",{\"1\":{\"1354\":1}}],[\"地址表主要包含两个信息\",{\"1\":{\"1351\":1}}],[\"地址表中有记录了\",{\"1\":{\"1348\":1}}],[\"地址是否已经在\",{\"1\":{\"1348\":1}}],[\"地址时\",{\"1\":{\"1334\":1}}],[\"地址作为\",{\"1\":{\"1316\":1}}],[\"地址\",{\"1\":{\"1270\":1,\"1307\":1,\"1310\":1,\"1318\":1,\"1324\":1,\"1333\":1,\"1352\":1,\"1355\":1,\"1357\":2,\"1361\":1,\"1362\":1,\"1365\":1,\"1378\":1,\"1380\":2,\"1387\":1}}],[\"教程\",{\"1\":{\"1585\":1}}],[\"删除字典中的元素\",{\"1\":{\"3069\":1}}],[\"删除\",{\"1\":{\"2701\":1}}],[\"删除资源\",{\"1\":{\"1578\":1}}],[\"删除五个模态值中包含\",{\"1\":{\"21\":1}}],[\"规则2\",{\"1\":{\"1717\":1}}],[\"规则1\",{\"1\":{\"1717\":1}}],[\"规范里要求必须出现的字段\",{\"1\":{\"1568\":1}}],[\"规定除了最初建⽴连接时的\",{\"1\":{\"750\":1}}],[\"补充文字\",{\"1\":{\"1556\":1}}],[\"补充知识\",{\"0\":{\"1004\":1}}],[\"标签\",{\"1\":{\"3388\":1}}],[\"标记\",{\"1\":{\"2957\":1}}],[\"标记为\",{\"1\":{\"2795\":1}}],[\"标记+引用计数\",{\"0\":{\"2667\":1}}],[\"标记+分代回收\",{\"0\":{\"2657\":1}}],[\"标记+复制式回收\",{\"0\":{\"2646\":1}}],[\"标记+压缩\",{\"0\":{\"2637\":1}}],[\"标记+清扫\",{\"0\":{\"2619\":1},\"1\":{\"2704\":1}}],[\"标记任务与灰色节点时\",{\"1\":{\"2497\":1}}],[\"标记扫描\",{\"1\":{\"2495\":1}}],[\"标记工作没有完成\",{\"1\":{\"2583\":1}}],[\"标记工作消耗工作队列时\",{\"1\":{\"2559\":1}}],[\"标记工作完成后\",{\"1\":{\"2496\":1}}],[\"标记工作\",{\"1\":{\"2495\":1}}],[\"标记周期\",{\"1\":{\"2478\":1}}],[\"标记与清扫过程都是并发执行的\",{\"1\":{\"2470\":1}}],[\"标记了请求方法要操作的资源\",{\"1\":{\"1539\":1}}],[\"标识符和括号之间出现空格\",{\"1\":{\"3388\":1}}],[\"标识这个panic是否被终止\",{\"1\":{\"2919\":1}}],[\"标识这个panic是否被恢复\",{\"1\":{\"2919\":1}}],[\"标识目前正在运行的g\",{\"1\":{\"2864\":1}}],[\"标识当前正在锁定该\",{\"1\":{\"2862\":1}}],[\"标识下一个可能与该\",{\"1\":{\"2862\":1}}],[\"标识是否为堆分配\",{\"1\":{\"2420\":1}}],[\"标识defer函数是否已经开始执行\",{\"1\":{\"2350\":1,\"2362\":1,\"2373\":1,\"2420\":1}}],[\"标准库提供了\",{\"1\":{\"1950\":1}}],[\"标准定义的隔离级别来解决\",{\"1\":{\"571\":1}}],[\"十分钟搞清字符集和字符编码\",{\"1\":{\"1784\":1}}],[\"十分不利于网络的稳定传递\",{\"1\":{\"989\":1}}],[\"十六进制\",{\"1\":{\"1753\":1}}],[\"十六进制的\",{\"1\":{\"1530\":1}}],[\"响应的传输路径\",{\"1\":{\"1581\":1}}],[\"响应头\",{\"1\":{\"1529\":1}}],[\"响应速度\",{\"1\":{\"1202\":1}}],[\"起始行\",{\"0\":{\"1535\":1},\"1\":{\"1526\":1}}],[\"起始帧分界符是一个用来表示包起始位置的标记\",{\"1\":{\"1341\":1}}],[\"此插件用来识别\",{\"1\":{\"3388\":1}}],[\"此状态行中\",{\"1\":{\"1556\":1}}],[\"此连接依旧有效状态\",{\"1\":{\"1510\":1}}],[\"此时链表已经为空了\",{\"1\":{\"2921\":1}}],[\"此时位于主线程\",{\"1\":{\"2757\":1}}],[\"此时函数\",{\"1\":{\"2389\":1}}],[\"此时被调用函数的命名返回值的地址与调用者函数返回值地址一致\",{\"1\":{\"2325\":1}}],[\"此时情况与正常使用无异\",{\"1\":{\"2325\":1}}],[\"此时我们可以猜测\",{\"1\":{\"2325\":1}}],[\"此时输出的\",{\"1\":{\"2143\":1}}],[\"此时在\",{\"1\":{\"2071\":1}}],[\"此时需要把旧桶的值都迁移到新桶中\",{\"1\":{\"1829\":1}}],[\"此时的\",{\"1\":{\"2324\":1}}],[\"此时的编号1的桶还要额外记录一个指针\",{\"1\":{\"1817\":1}}],[\"此时的切片结构\",{\"1\":{\"1666\":1}}],[\"此时窗口不为0\",{\"1\":{\"934\":1}}],[\"此时会发送一个fin置为1的tcp报文\",{\"1\":{\"849\":1,\"1393\":1}}],[\"此时建立索引没有太大的实际效果\",{\"1\":{\"461\":1}}],[\"此时\",{\"1\":{\"119\":1,\"665\":1,\"674\":1,\"2055\":1,\"2325\":1,\"2363\":1,\"2376\":1}}],[\"问答的方式\",{\"1\":{\"1510\":1}}],[\"问题的解决方法太多太多了\",{\"1\":{\"3268\":1}}],[\"问题的答案是\",{\"1\":{\"359\":1}}],[\"问题不大\",{\"1\":{\"481\":1}}],[\"问题最后要归结到\",{\"1\":{\"385\":1}}],[\"问题就解决了\",{\"1\":{\"348\":1}}],[\"问题\",{\"0\":{\"47\":1,\"3343\":1,\"3432\":1},\"1\":{\"2606\":1}}],[\"反之亦然\",{\"1\":{\"2891\":1}}],[\"反之锁粒度越小\",{\"1\":{\"354\":1}}],[\"反正我现在一次都没有用过\",{\"1\":{\"2202\":1}}],[\"反射\",{\"0\":{\"2199\":1}}],[\"反应了服务器对此次请求的状态表现\",{\"1\":{\"1548\":1}}],[\"反而有上图的情况\",{\"1\":{\"1509\":1}}],[\"挥手断开连接\",{\"1\":{\"1521\":1}}],[\"挥手\",{\"1\":{\"1509\":1,\"1514\":1}}],[\"格式进行配置\",{\"1\":{\"3408\":1}}],[\"格式\",{\"1\":{\"3226\":1}}],[\"格式化\",{\"1\":{\"3048\":1}}],[\"格式的报文\",{\"1\":{\"1501\":1}}],[\"格式有\",{\"1\":{\"717\":1}}],[\"明明可以直接调用函数入口\",{\"1\":{\"2105\":1}}],[\"明确要求获取根目录下的默认文件\",{\"1\":{\"1501\":1}}],[\"明文传输\",{\"1\":{\"1191\":1,\"1200\":1}}],[\"抓包分析\",{\"0\":{\"1494\":1}}],[\"看到如下画面\",{\"1\":{\"1491\":1}}],[\"看看当发生\",{\"1\":{\"2382\":1}}],[\"看看有什么不同\",{\"1\":{\"2319\":1}}],[\"看看结构体如何存储\",{\"1\":{\"1967\":1}}],[\"看看浏览器发送这个请求想要干什么\",{\"1\":{\"1500\":1}}],[\"看看是不是发给自己的包\",{\"1\":{\"1361\":1}}],[\"看看下面这个解决方案\",{\"1\":{\"256\":1}}],[\"亲眼见见才行\",{\"1\":{\"1490\":1}}],[\"得拷贝值\",{\"1\":{\"2237\":1}}],[\"得实操一下\",{\"1\":{\"1490\":1}}],[\"得到继承信息的我们称之为子类\",{\"1\":{\"3095\":1}}],[\"得到调度执行时\",{\"1\":{\"2494\":1}}],[\"得到一个字符编号表也叫做字符集\",{\"1\":{\"1738\":1}}],[\"得到的结果与对应条目的目标地址进行匹配\",{\"1\":{\"1371\":1}}],[\"得到的结果为\",{\"1\":{\"1316\":1}}],[\"得到的库不是一个逻辑时间点\",{\"1\":{\"305\":1}}],[\"得到结果的顺序都是不同的\",{\"1\":{\"1865\":1}}],[\"得到结果是\",{\"1\":{\"1373\":1}}],[\"得到结果为\",{\"1\":{\"1315\":1}}],[\"得到结果\",{\"1\":{\"261\":1,\"262\":1}}],[\"得到\",{\"1\":{\"218\":1}}],[\"得到新的一行数据\",{\"1\":{\"118\":1}}],[\"停止调度期间是否进行系统监控任务\",{\"1\":{\"2872\":1}}],[\"停止后台\",{\"1\":{\"2500\":1}}],[\"停止捕获\",{\"1\":{\"1485\":1}}],[\"停止openresty服务器\",{\"1\":{\"1474\":1}}],[\"鼠标双击开始界面里的\",{\"1\":{\"1482\":1}}],[\"鼠标双击\",{\"1\":{\"1478\":1}}],[\"批处理文件\",{\"1\":{\"1477\":1}}],[\"列举了未来的版本可能实现的新功能\",{\"1\":{\"2889\":1}}],[\"列举了接下来可能会废弃的\",{\"1\":{\"2887\":1}}],[\"列表或元组对象都可用于创建迭代器\",{\"1\":{\"3245\":1}}],[\"列表是可以修改它的元素的\",{\"1\":{\"3058\":1}}],[\"列表切片\",{\"1\":{\"3053\":1}}],[\"列表\",{\"0\":{\"3049\":1},\"1\":{\"2884\":1,\"2888\":1}}],[\"列出了由目标文件\",{\"1\":{\"2893\":1}}],[\"列出可对资源实行的方法\",{\"1\":{\"1580\":1}}],[\"列出已经启动的openresty服务器进程\",{\"1\":{\"1476\":1}}],[\"列号\",{\"1\":{\"836\":1}}],[\"启用eslint\",{\"1\":{\"3380\":1}}],[\"启用或关闭windows功能\",{\"1\":{\"1465\":1}}],[\"启动服务\",{\"1\":{\"3287\":1,\"3311\":1,\"3325\":1,\"3342\":1}}],[\"启动m0的signal\",{\"1\":{\"2795\":1}}],[\"启动流程图如下\",{\"1\":{\"2773\":1}}],[\"启动这个\",{\"1\":{\"2761\":1}}],[\"启动openresty服务器\",{\"1\":{\"1473\":1}}],[\"位下的一个\",{\"1\":{\"2355\":1}}],[\"位于代码段\",{\"1\":{\"2264\":1}}],[\"位平台\",{\"1\":{\"1956\":1}}],[\"位的\",{\"1\":{\"1932\":1,\"1953\":1}}],[\"位\",{\"1\":{\"1930\":1}}],[\"位置在c\",{\"1\":{\"1469\":1}}],[\"位为\",{\"1\":{\"753\":1}}],[\"点击左边栏的\",{\"1\":{\"1467\":1}}],[\"搜索字符串中第一次出现正则表达式的模式\",{\"1\":{\"3187\":1}}],[\"搜索\",{\"1\":{\"1465\":1}}],[\"软件\",{\"1\":{\"1464\":1}}],[\"搭建\",{\"0\":{\"1455\":1}}],[\"🎮\",{\"1\":{\"1442\":1}}],[\"🌰\",{\"1\":{\"300\":1,\"327\":1,\"356\":1,\"362\":1,\"515\":1,\"523\":1,\"531\":1,\"1544\":1,\"1554\":1,\"2572\":1,\"2587\":1,\"2705\":1}}],[\"屏幕上的绘图通常被分解成数层\",{\"1\":{\"1440\":1}}],[\"阴影和替换的元素\",{\"1\":{\"1439\":1}}],[\"边框\",{\"1\":{\"1439\":1}}],[\"颜色\",{\"1\":{\"1439\":1}}],[\"绘画包括将元素的每个可视部分绘制到屏幕上\",{\"1\":{\"1439\":1}}],[\"绘制可以将布局树中的元素分解为多个层\",{\"1\":{\"1441\":1}}],[\"绘制\",{\"1\":{\"1425\":1}}],[\"❗\",{\"1\":{\"1429\":1,\"1645\":1,\"1677\":1,\"1804\":1,\"1820\":1}}],[\"遍历元组中的值\",{\"1\":{\"3058\":1}}],[\"遍历每个可见节点\",{\"1\":{\"1427\":1,\"1447\":1}}],[\"遍历期间的寻道次数更少\",{\"1\":{\"490\":1}}],[\"渲染输出页面\",{\"1\":{\"1520\":1}}],[\"渲染等过程\",{\"1\":{\"1503\":1}}],[\"渲染树上运行布局以计算每个节点的几何体\",{\"1\":{\"1448\":1}}],[\"渲染步骤包括样式\",{\"1\":{\"1425\":1}}],[\"渲染\",{\"0\":{\"1424\":1}}],[\"渲染页面\",{\"1\":{\"1400\":1,\"1451\":1}}],[\"辅助标价\",{\"1\":{\"2582\":1}}],[\"辅助标记\",{\"1\":{\"2478\":1,\"2581\":1}}],[\"辅助清扫\",{\"1\":{\"2581\":1,\"2586\":1}}],[\"辅助工作\",{\"1\":{\"2577\":1}}],[\"辅助技术本身无法修改可访问性树\",{\"1\":{\"1423\":1}}],[\"辅助索引\",{\"0\":{\"507\":1}}],[\"脚本被解析为抽象语法树\",{\"1\":{\"1421\":1}}],[\"创建连接\",{\"1\":{\"3342\":1}}],[\"创建服务对象\",{\"1\":{\"3297\":1}}],[\"创建初始化对象\",{\"1\":{\"3295\":1}}],[\"创建迭代器对象\",{\"1\":{\"3246\":1}}],[\"创建新文件用于读写\",{\"1\":{\"3170\":1,\"3172\":1}}],[\"创建新文件进行写入\",{\"1\":{\"3166\":1,\"3168\":1}}],[\"创建新文件\",{\"1\":{\"3158\":1,\"3160\":1,\"3162\":1,\"3164\":1}}],[\"创建对象\",{\"1\":{\"3101\":1}}],[\"创建学生对象并指定姓名和年龄\",{\"1\":{\"3078\":1}}],[\"创建并使用对象\",{\"1\":{\"3077\":1}}],[\"创建字典的推导式语法\",{\"1\":{\"3069\":1}}],[\"创建字典的构造器语法\",{\"1\":{\"3069\":1}}],[\"创建字典的字面量语法\",{\"1\":{\"3069\":1}}],[\"创建集合的推导式语法\",{\"1\":{\"3062\":1}}],[\"创建集合的构造器语法\",{\"1\":{\"3062\":1}}],[\"创建集合的字面量语法\",{\"1\":{\"3062\":1}}],[\"创建后会被加入到当前\",{\"1\":{\"2848\":1}}],[\"创建\",{\"1\":{\"2789\":1,\"3384\":1,\"3428\":1}}],[\"创建全局变量\",{\"1\":{\"2756\":1}}],[\"创建一个新的文件\",{\"1\":{\"3300\":1}}],[\"创建一个新的g\",{\"1\":{\"2793\":1}}],[\"创建一个新的\",{\"1\":{\"2761\":1}}],[\"创建一个\",{\"1\":{\"2487\":1}}],[\"创建cssom的总时间通常小于一次dns查找所需的时间\",{\"1\":{\"1418\":1}}],[\"创建索引占据空间\",{\"1\":{\"449\":1}}],[\"创建索引和维护索引需要时间\",{\"1\":{\"448\":1}}],[\"样式和内容\",{\"1\":{\"1403\":1}}],[\"推导式也可以用于推导集合\",{\"1\":{\"3062\":1}}],[\"推出了一个统一的字符集unicode\",{\"1\":{\"1742\":1}}],[\"推测性解析\",{\"1\":{\"1401\":1}}],[\"推荐去阅读\",{\"1\":{\"3262\":1}}],[\"推荐文章\",{\"1\":{\"2644\":1}}],[\"推荐学习\",{\"1\":{\"1921\":1,\"2095\":1,\"2200\":1,\"2815\":1}}],[\"推荐⭐\",{\"1\":{\"1598\":1}}],[\"推荐博客\",{\"1\":{\"1169\":1,\"1190\":1}}],[\"推荐\",{\"1\":{\"659\":1}}],[\"推荐选择普通索引\",{\"1\":{\"537\":1}}],[\"推荐阅读\",{\"1\":{\"475\":1,\"1886\":1,\"1989\":1,\"2036\":1,\"2330\":1,\"2464\":1,\"2593\":1,\"2729\":1,\"2898\":1}}],[\"推荐使用索引场景\",{\"1\":{\"453\":1}}],[\"|=\",{\"1\":{\"2239\":1,\"2260\":2,\"2454\":2}}],[\"|\",{\"1\":{\"1400\":1,\"1753\":6,\"2260\":2,\"3065\":1,\"3428\":2,\"3449\":1}}],[\"肯定要判断对方在哪\",{\"1\":{\"1376\":1}}],[\"遇到不匹配的包则直接丢弃\",{\"1\":{\"1362\":1}}],[\"电子书\",{\"1\":{\"1588\":1,\"1605\":1}}],[\"电子邮件传输\",{\"1\":{\"719\":1}}],[\"电信号到达网线接口部分\",{\"1\":{\"1360\":1}}],[\"路由器也有\",{\"1\":{\"1381\":1}}],[\"路由器发送操作\",{\"0\":{\"1375\":1}}],[\"路由器转发\",{\"1\":{\"1369\":1}}],[\"路由器会去掉包开头的mac头部\",{\"1\":{\"1364\":1}}],[\"路由器的端口都具有\",{\"1\":{\"1362\":1}}],[\"路由器的端口具有\",{\"1\":{\"1357\":1}}],[\"路由器中的模块会将电信号转成数字信号\",{\"1\":{\"1360\":1}}],[\"路由器包接受工作\",{\"0\":{\"1359\":1}}],[\"路由器基本原理\",{\"0\":{\"1356\":1}}],[\"路由规则判断\",{\"1\":{\"1313\":1,\"1314\":1}}],[\"末尾的\",{\"1\":{\"1342\":1}}],[\"匹配合适的内存规格\",{\"1\":{\"1722\":1}}],[\"匹配\",{\"1\":{\"1373\":1,\"3112\":1}}],[\"匹配成功\",{\"1\":{\"1316\":1}}],[\"匹配条件\",{\"1\":{\"283\":1}}],[\"目录总览\",{\"0\":{\"2881\":1}}],[\"目录下有四个批处理文件\",{\"1\":{\"1472\":1}}],[\"目标使用率来计算需要启动的\",{\"1\":{\"2567\":1}}],[\"目标地址\",{\"1\":{\"1308\":1}}],[\"目前主流的垃圾回收算法都是使用数据\",{\"1\":{\"2617\":1}}],[\"目前的slice只存储了两个元素\",{\"1\":{\"1666\":1}}],[\"目前大部分浏览器都是用\",{\"1\":{\"1512\":1}}],[\"目的是用来解决多重继承时父类的查找问题\",{\"1\":{\"3096\":1}}],[\"目的是把数据对象的修改通知到垃圾回收器\",{\"1\":{\"2694\":1}}],[\"目的只有一个\",{\"1\":{\"2151\":1}}],[\"目的都是减少浪费\",{\"1\":{\"1959\":1}}],[\"目的端口\",{\"1\":{\"761\":1}}],[\"目的地址\",{\"1\":{\"758\":1}}],[\"收到客户端消息\",{\"1\":{\"3341\":1,\"3342\":1}}],[\"收到的数据的序列号\",{\"1\":{\"747\":1}}],[\"收发\",{\"1\":{\"1304\":1}}],[\"模板\",{\"1\":{\"3239\":1}}],[\"模\",{\"1\":{\"2992\":1}}],[\"模型设计的\",{\"1\":{\"2514\":1}}],[\"模型进行训练\",{\"1\":{\"36\":1}}],[\"模式的时间与本轮标记工作已经执行的时间的比率达到\",{\"1\":{\"2578\":1}}],[\"模式的\",{\"1\":{\"2570\":1,\"2571\":1,\"2573\":1,\"2574\":2,\"2576\":1,\"2577\":1,\"2578\":2}}],[\"模式\",{\"1\":{\"2468\":1,\"2576\":1,\"2577\":1}}],[\"模式避免了重新建立连接\",{\"1\":{\"1510\":1}}],[\"模式时\",{\"1\":{\"1510\":1}}],[\"模块\",{\"0\":{\"3029\":1},\"1\":{\"3388\":1}}],[\"模块等的名字\",{\"1\":{\"2977\":1}}],[\"模块获取到包之后\",{\"1\":{\"1339\":1}}],[\"模块将数据封装成网络包发送给通信对象\",{\"1\":{\"1304\":1}}],[\"模块在执行连接\",{\"1\":{\"1304\":1}}],[\"默认域名\",{\"1\":{\"3441\":1}}],[\"默认行尾\",{\"1\":{\"3388\":1}}],[\"默认return一个none\",{\"1\":{\"3212\":1}}],[\"默认\",{\"1\":{\"3140\":1,\"3388\":1}}],[\"默认值是none\",{\"1\":{\"3175\":1}}],[\"默认值也是`\",{\"1\":{\"3175\":1}}],[\"默认值\",{\"1\":{\"3028\":1}}],[\"默认为1\",{\"1\":{\"3021\":1}}],[\"默认是从\",{\"1\":{\"3019\":1}}],[\"默认容量为256个g\",{\"1\":{\"2864\":1}}],[\"默认的\",{\"1\":{\"2484\":1,\"2567\":1}}],[\"默认模式\",{\"1\":{\"2470\":1,\"2484\":1}}],[\"默认情况下\",{\"1\":{\"1633\":1,\"3388\":1}}],[\"默认端口号是\",{\"1\":{\"1301\":2}}],[\"默认时间是\",{\"1\":{\"67\":1}}],[\"除非它们在\",{\"1\":{\"3388\":1}}],[\"除非这个字段本身的语义允许\",{\"1\":{\"1566\":1}}],[\"除\",{\"1\":{\"2992\":1}}],[\"除在特殊情况下\",{\"1\":{\"1647\":1}}],[\"除去\",{\"1\":{\"1298\":1}}],[\"除了runtime\",{\"1\":{\"2793\":1}}],[\"除了一些共性问题\",{\"1\":{\"2716\":1}}],[\"除了被抢占外\",{\"1\":{\"2571\":1}}],[\"除了\",{\"1\":{\"1202\":1}}],[\"除了性能外\",{\"1\":{\"223\":1}}],[\"除了对回滚段的影响\",{\"1\":{\"171\":1}}],[\"权限\",{\"1\":{\"3428\":1}}],[\"权限域名服务器查询到www\",{\"1\":{\"1279\":1}}],[\"权限dns\",{\"1\":{\"1267\":1}}],[\"权限细粒度更低\",{\"1\":{\"432\":1}}],[\"顶级域名服务器会告诉下一次需要查询的权限域名服务器的ip地址\",{\"1\":{\"1277\":1}}],[\"顶级域名\",{\"1\":{\"1266\":1}}],[\"根域名服务器收到后\",{\"1\":{\"1275\":1}}],[\"根dns\",{\"1\":{\"1265\":1}}],[\"根据系统选择合适压缩包\",{\"1\":{\"3359\":1}}],[\"根据protocolbuffers\",{\"1\":{\"3359\":1}}],[\"根据官方文档\",{\"1\":{\"3357\":1}}],[\"根据鸭子类型原理就可以解决这个问题了\",{\"1\":{\"3308\":1}}],[\"根据传递信息\",{\"1\":{\"3287\":1,\"3311\":1}}],[\"根据这段伪指令\",{\"1\":{\"2940\":1}}],[\"根据runqhead可以获取队列头的g及g\",{\"1\":{\"2872\":1}}],[\"根据分析\",{\"1\":{\"2771\":1}}],[\"根据三色抽象可以很方便的描述出垃圾回收器错误回收可达对象的情况\",{\"1\":{\"2684\":1}}],[\"根据其中存储的\",{\"1\":{\"2532\":1}}],[\"根据代码注释\",{\"1\":{\"2237\":1}}],[\"根据对齐系数决定自己放在哪儿\",{\"1\":{\"1968\":1}}],[\"根据哈希函数定位到编号为1的桶\",{\"1\":{\"1814\":1,\"1818\":1}}],[\"根据不同的符号而变化字节长度\",{\"1\":{\"1749\":1}}],[\"根据值通过映射关系找到这个字符\",{\"1\":{\"1738\":1}}],[\"根据css选择器创建具有父\",{\"1\":{\"1415\":1}}],[\"根据上面一个例子\",{\"1\":{\"3257\":1}}],[\"根据上面两个定义结合维基百科的解释\",{\"1\":{\"2114\":1}}],[\"根据上表\",{\"1\":{\"1755\":1}}],[\"根据上图的流量控制\",{\"1\":{\"1032\":1}}],[\"根据上述的两种情况\",{\"1\":{\"896\":1}}],[\"根据上诉的条件\",{\"1\":{\"370\":1}}],[\"根据第三版\",{\"1\":{\"861\":1}}],[\"根据表的引擎定义\",{\"1\":{\"694\":1}}],[\"根据策略选择合适的时机\",{\"1\":{\"616\":1}}],[\"根据局部性原理\",{\"1\":{\"497\":1}}],[\"根据加锁的范围\",{\"1\":{\"291\":1}}],[\"根据创建联合索引的顺序\",{\"1\":{\"288\":1}}],[\"根据前缀索引规则\",{\"1\":{\"274\":1}}],[\"根据最左前缀原则\",{\"1\":{\"268\":1}}],[\"根据叶子节点的内容\",{\"1\":{\"212\":1}}],[\"根据自己业务情况去使用\",{\"1\":{\"164\":1}}],[\"根据\",{\"1\":{\"17\":1,\"22\":1,\"222\":1,\"1026\":1,\"2241\":1}}],[\"越来越多的编程语言已经支持\",{\"1\":{\"2608\":1}}],[\"越靠后\",{\"1\":{\"1263\":1}}],[\"越大\",{\"1\":{\"488\":1}}],[\"域名解析得到的\",{\"1\":{\"1308\":1}}],[\"域名解析得工作流程\",{\"1\":{\"1271\":1}}],[\"域名解析的工作流程\",{\"1\":{\"1281\":1}}],[\"域名层级结构\",{\"1\":{\"1264\":1}}],[\"域名都是由句点\",{\"1\":{\"1262\":1}}],[\"域名的组成\",{\"1\":{\"1261\":1}}],[\"域名系统\",{\"1\":{\"719\":1}}],[\"❓❓❓\",{\"1\":{\"1504\":1}}],[\"❓\",{\"1\":{\"1248\":1,\"1310\":1,\"1328\":1,\"1370\":1,\"1643\":1,\"1701\":1,\"1709\":1,\"1744\":1,\"1794\":1,\"2105\":1}}],[\"键和值通过冒号分开\",{\"1\":{\"3067\":1}}],[\"键值对\",{\"1\":{\"2783\":1,\"3067\":1}}],[\"键值对的地址也会发生改变\",{\"1\":{\"1873\":1}}],[\"键值是唯一的\",{\"1\":{\"1796\":1}}],[\"键对应的值可以通过键来获取\",{\"1\":{\"1796\":1}}],[\"键对的集合\",{\"1\":{\"465\":1}}],[\"键入网址再按下回车会发生什么\",{\"0\":{\"1488\":1}}],[\"键入网址后\",{\"1\":{\"1247\":1,\"1450\":1}}],[\"摘要算法的方式来实现完整性\",{\"1\":{\"1207\":1}}],[\"握手需要的\",{\"1\":{\"1202\":1}}],[\"页面没有样式\",{\"1\":{\"3433\":1}}],[\"页面里面\",{\"1\":{\"1463\":1}}],[\"页面响应速度比\",{\"1\":{\"1202\":1}}],[\"页分裂操作还影响数据页的利用率\",{\"1\":{\"223\":1}}],[\"眼没了\",{\"1\":{\"1197\":1}}],[\"冒充风险\",{\"1\":{\"1197\":1}}],[\"拼多多\",{\"1\":{\"1196\":1}}],[\"篡改风险\",{\"1\":{\"1196\":1}}],[\"窃听风险\",{\"1\":{\"1195\":1}}],[\"减\",{\"1\":{\"2994\":1}}],[\"减轻了服务器的负担\",{\"1\":{\"1187\":1}}],[\"减少错误产生\",{\"1\":{\"3302\":1}}],[\"减少内存访问次数\",{\"1\":{\"1961\":1}}],[\"减少编程的复杂度\",{\"1\":{\"1777\":1}}],[\"减少到\",{\"1\":{\"1040\":1}}],[\"减少为\",{\"1\":{\"1034\":1}}],[\"减少服务器被攻击的风险\",{\"1\":{\"802\":1}}],[\"减少了将数据从磁盘读入内存的操作\",{\"1\":{\"543\":1}}],[\"减少了\",{\"1\":{\"497\":1}}],[\"减少了语句的交互次数\",{\"1\":{\"178\":1}}],[\"减少磁盘读写\",{\"1\":{\"485\":1}}],[\"减少回表率\",{\"1\":{\"289\":1}}],[\"减少回表次数\",{\"1\":{\"280\":1,\"528\":1}}],[\"减少io磁盘读写读取正行数据\",{\"1\":{\"286\":1}}],[\"减少语句的执行时间\",{\"1\":{\"253\":1}}],[\"头指针\",{\"1\":{\"2900\":1}}],[\"头字段非常灵活\",{\"1\":{\"1560\":1}}],[\"头字段等每个组成要求都没有被固定死\",{\"1\":{\"1183\":1}}],[\"头部字段是\",{\"1\":{\"1559\":1}}],[\"头部字段\",{\"0\":{\"1557\":1}}],[\"头部字段集合\",{\"1\":{\"1527\":1}}],[\"头部就会被丢弃\",{\"1\":{\"1365\":1}}],[\"头部的任务就完成了\",{\"1\":{\"1365\":1}}],[\"头部的作用就是将包送达路由器\",{\"1\":{\"1365\":1}}],[\"头部的源地址应该选择哪个\",{\"1\":{\"1310\":1}}],[\"头部中的接收方\",{\"1\":{\"1361\":1,\"1379\":1}}],[\"头部\",{\"1\":{\"1321\":1}}],[\"头部之后\",{\"1\":{\"1298\":1}}],[\"头部信息也是\",{\"1\":{\"1181\":1}}],[\"头中有一个\",{\"1\":{\"867\":1}}],[\"本地\",{\"1\":{\"2841\":1}}],[\"本地工作队列\",{\"1\":{\"2555\":1}}],[\"本地域名服务器拿到ip地址会返回给本机\",{\"1\":{\"1280\":1}}],[\"本地域名服务器收到后\",{\"1\":{\"1278\":1}}],[\"本地域名服务器会收到后\",{\"1\":{\"1276\":1}}],[\"本地域名服务器接收到请求后\",{\"1\":{\"1273\":1}}],[\"本地域名服务器\",{\"1\":{\"1268\":1}}],[\"本质上你通过\",{\"1\":{\"3443\":1}}],[\"本质上是对编译器翻译工作的一个校验\",{\"1\":{\"2777\":1}}],[\"本质上是一个指针\",{\"1\":{\"2098\":1}}],[\"本质上就是\",{\"1\":{\"1177\":1}}],[\"本机会向本地得域名服务器发送dns请求\",{\"1\":{\"1272\":1}}],[\"本次例子是把服务端作为发送方\",{\"1\":{\"1033\":1}}],[\"偷偷藏了数据\",{\"1\":{\"1176\":1}}],[\"恕不处理\",{\"1\":{\"1176\":1}}],[\"技术上是完全行的通的\",{\"1\":{\"1175\":1}}],[\"带上\",{\"1\":{\"1175\":1}}],[\"链表中\",{\"1\":{\"2963\":1}}],[\"链表中移除\",{\"1\":{\"2386\":1,\"2934\":1,\"2952\":1}}],[\"链表会通过栈扫描注册到\",{\"1\":{\"2963\":1}}],[\"链表接下来的函数\",{\"1\":{\"2955\":1}}],[\"链表增加了一项\",{\"1\":{\"2951\":1}}],[\"链表增加一项\",{\"1\":{\"2930\":1}}],[\"链表插入了一个新的\",{\"1\":{\"2916\":1}}],[\"链表就会增加一项\",{\"1\":{\"2914\":1}}],[\"链表项\",{\"1\":{\"2910\":1}}],[\"链表的所有项都会输出出来\",{\"1\":{\"2957\":1}}],[\"链表的执行\",{\"1\":{\"2952\":1}}],[\"链表的都会被输出\",{\"1\":{\"2925\":1}}],[\"链表的\",{\"1\":{\"2920\":1}}],[\"链表的函数了\",{\"1\":{\"2917\":1}}],[\"链表的函数\",{\"1\":{\"2914\":1,\"2917\":1,\"2930\":1,\"2940\":1}}],[\"链表的束缚\",{\"1\":{\"2455\":1}}],[\"链表的头指针\",{\"1\":{\"2345\":1,\"2900\":1}}],[\"链表找到\",{\"1\":{\"2445\":1}}],[\"链表为空\",{\"1\":{\"2389\":1,\"2942\":1}}],[\"链表上的\",{\"1\":{\"2386\":1}}],[\"链表了\",{\"1\":{\"2366\":1,\"2443\":1}}],[\"链表头处增加一项\",{\"1\":{\"2906\":1}}],[\"链表头\",{\"1\":{\"2363\":1,\"2374\":1}}],[\"链表\",{\"1\":{\"2345\":1,\"2388\":1,\"2413\":1,\"2415\":1,\"2422\":1,\"2440\":1,\"2442\":1,\"2450\":1,\"2457\":1,\"2942\":1,\"2945\":1,\"2963\":1}}],[\"链接\",{\"1\":{\"1175\":1,\"1177\":1}}],[\"链地址法\",{\"1\":{\"466\":1}}],[\"描述请求或响应的基本信息\",{\"1\":{\"1526\":1}}],[\"描述\",{\"1\":{\"1151\":1,\"2984\":1}}],[\"延时的长度可包含在服务器的retry\",{\"1\":{\"1148\":1}}],[\"您所请求的资源无法找到\",{\"1\":{\"1133\":1}}],[\"网上的资源太过于混杂了\",{\"1\":{\"3387\":1}}],[\"网站提示店铺\",{\"1\":{\"3281\":1}}],[\"网站设计人员可设置\",{\"1\":{\"1133\":1}}],[\"网卡驱动从\",{\"1\":{\"1339\":1}}],[\"网卡的\",{\"1\":{\"1316\":1}}],[\"网页上植入垃圾广告\",{\"1\":{\"1197\":1}}],[\"网页\",{\"1\":{\"1133\":1}}],[\"网络传输\",{\"1\":{\"3275\":1,\"3280\":1}}],[\"网络分层模型\",{\"1\":{\"1389\":1}}],[\"网络包就到达了最终的目的地\",{\"1\":{\"1386\":1}}],[\"网络包的报文如下\",{\"1\":{\"1302\":1}}],[\"网络综合篇\",{\"0\":{\"1245\":1}}],[\"网络负担就会更重\",{\"1\":{\"957\":1}}],[\"网络管理\",{\"1\":{\"719\":1}}],[\"网络层是不可靠的\",{\"1\":{\"755\":1}}],[\"网络层\",{\"1\":{\"710\":1}}],[\"临时重定向\",{\"1\":{\"1121\":1}}],[\"临时移动\",{\"1\":{\"1106\":1}}],[\"查找字符串所有与正则表达式匹配的模式\",{\"1\":{\"3195\":1,\"3197\":1}}],[\"查看\",{\"1\":{\"3428\":1}}],[\"查看对象占用内存的字节数\",{\"1\":{\"3052\":1}}],[\"查看当前接口的动态类似是否满足目标对象\",{\"1\":{\"2087\":1}}],[\"查看其它地址\",{\"1\":{\"1109\":1}}],[\"查询请求\",{\"1\":{\"1381\":1}}],[\"查询路由表判断转发端口\",{\"1\":{\"1368\":1}}],[\"查询到对方的mac地址后\",{\"1\":{\"1330\":1}}],[\"查询连接的所有设备\",{\"1\":{\"1330\":1}}],[\"查询www\",{\"1\":{\"1272\":1}}],[\"查询少的表不建议建立索引\",{\"1\":{\"460\":1}}],[\"查询结果是联合索引的字段或是主键\",{\"1\":{\"286\":1}}],[\"查询的是所有名字第一个字是\",{\"1\":{\"262\":1}}],[\"查询的代价也比较大\",{\"1\":{\"256\":1}}],[\"查询所有名字为\",{\"1\":{\"261\":1}}],[\"查询\",{\"1\":{\"246\":1,\"1333\":1}}],[\"查询缓存\",{\"0\":{\"73\":1},\"1\":{\"59\":1,\"691\":1}}],[\"永久移动\",{\"1\":{\"1103\":1}}],[\"浏览器解析报文\",{\"1\":{\"1520\":1}}],[\"浏览器向服务器发送拼好的报文\",{\"1\":{\"1518\":1}}],[\"浏览器用\",{\"1\":{\"1517\":1}}],[\"浏览器收到了响应数据后\",{\"1\":{\"1503\":1}}],[\"浏览器收到网址的第一步就是对url进行解析\",{\"1\":{\"1252\":1}}],[\"浏览器里面输入\",{\"1\":{\"1491\":1}}],[\"浏览器从地址栏的输入中获得服务器的\",{\"1\":{\"1516\":1}}],[\"浏览器从渲染树的根开始遍历它\",{\"1\":{\"1435\":1}}],[\"浏览器从适用于节点的最通用规则开始\",{\"1\":{\"1417\":1}}],[\"浏览器还构建辅助设备用于分析和解释内容的辅助功能\",{\"1\":{\"1423\":1}}],[\"浏览器需要将接收到的css规则转换为可以使用的内容\",{\"1\":{\"1416\":1}}],[\"浏览器遍历css中的每个规则集\",{\"1\":{\"1415\":1}}],[\"浏览器将在布局阶段计算的每个框转换为屏幕上的实际像素\",{\"1\":{\"1438\":1}}],[\"浏览器将确定屏幕上所有不同框的尺寸\",{\"1\":{\"1436\":1}}],[\"浏览器将\",{\"1\":{\"1415\":1}}],[\"浏览器将url解析完成后\",{\"1\":{\"1256\":1}}],[\"浏览器的工作原理\",{\"1\":{\"1400\":1,\"1451\":1}}],[\"浏览器就会给服务器回复一个确认包\",{\"1\":{\"1502\":1}}],[\"浏览器就会进行解析渲染页面\",{\"1\":{\"1390\":1}}],[\"浏览器就会收到你需要跳转的网址\",{\"1\":{\"1251\":1}}],[\"浏览器会发送一个通过tcp发送了一个get\",{\"1\":{\"1498\":1}}],[\"浏览器会更新辅助功能树\",{\"1\":{\"1423\":1}}],[\"浏览器会请求这些资源并且继续解析\",{\"1\":{\"1408\":1}}],[\"浏览器会根据自己的算法\",{\"1\":{\"1250\":1}}],[\"浏览器会自动定向到新uri\",{\"1\":{\"1103\":1}}],[\"浏览器接收到了这个字符\",{\"1\":{\"1250\":1}}],[\"浏览器写入网址到网页显示\",{\"0\":{\"1246\":1}}],[\"浏览器通常都会限制\",{\"1\":{\"1176\":1}}],[\"浏览器\",{\"1\":{\"1094\":1,\"1100\":1,\"1496\":1}}],[\"非正常结束\",{\"0\":{\"2911\":1,\"2947\":1}}],[\"非用户协程\",{\"1\":{\"2872\":1}}],[\"非移动式垃圾回收器中\",{\"1\":{\"2704\":1}}],[\"非空接口类型如下\",{\"1\":{\"1899\":1}}],[\"非空接口就是有方法列表的接口类型\",{\"1\":{\"1899\":1}}],[\"非空接口\",{\"0\":{\"1898\":1,\"2046\":1,\"2057\":1,\"2074\":2}}],[\"非授权信息\",{\"1\":{\"1088\":1}}],[\"非主键索引\",{\"1\":{\"487\":1}}],[\"非主键索引也被称为二级索引\",{\"1\":{\"214\":1}}],[\"非主键索引的叶子节点内容是主键的值\",{\"1\":{\"214\":1}}],[\"成功返回匹配对象\",{\"1\":{\"3185\":1,\"3187\":1}}],[\"成功请求并创建了新的资源\",{\"1\":{\"1082\":1}}],[\"成为下一个运行的\",{\"1\":{\"2790\":1}}],[\"成员运算符\",{\"1\":{\"3008\":1}}],[\"成员\",{\"1\":{\"2169\":1}}],[\"成本太高了\",{\"1\":{\"202\":1}}],[\"成本和查询成本就比较高\",{\"1\":{\"100\":1}}],[\"已被释放掉的m数量\",{\"1\":{\"2872\":1}}],[\"已满\",{\"1\":{\"2840\":1}}],[\"已满或\",{\"1\":{\"2564\":1}}],[\"已接受\",{\"1\":{\"1085\":1}}],[\"已创建\",{\"1\":{\"1082\":1}}],[\"已经使用完正在闲置\",{\"1\":{\"2868\":1}}],[\"已经涉及到了操作系统的底层那些内存页等等了\",{\"1\":{\"2784\":1}}],[\"已经被执行了\",{\"1\":{\"2952\":1}}],[\"已经被恢复了\",{\"1\":{\"2934\":1}}],[\"已经被锁定且正在自旋的m数量\",{\"1\":{\"2872\":1}}],[\"已经被扫描的对象\",{\"1\":{\"2628\":1}}],[\"已经被废弃的http状态码\",{\"1\":{\"1118\":1}}],[\"已经\",{\"1\":{\"2481\":1}}],[\"已经标记了多少字节\",{\"1\":{\"2481\":1}}],[\"已经执行了多少扫描工作\",{\"1\":{\"2478\":1}}],[\"已经存储的键值对个数\",{\"1\":{\"1834\":1}}],[\"已经存储的是可以进行安全读写的\",{\"1\":{\"1676\":1}}],[\"已经接受请求\",{\"1\":{\"1085\":1}}],[\"已经是\",{\"1\":{\"681\":1}}],[\"已经记录了这一条操作了\",{\"1\":{\"676\":1}}],[\"已经覆盖了我们的查询需求\",{\"1\":{\"519\":1}}],[\"请看上一篇\",{\"1\":{\"3319\":1}}],[\"请注意下面的代码创建的不是一个列表而是一个生成器对象\",{\"1\":{\"3052\":1}}],[\"请输入有效的qq号\",{\"1\":{\"3205\":1}}],[\"请输入有效的用户名\",{\"1\":{\"3205\":1}}],[\"请输入qq号\",{\"1\":{\"3205\":1}}],[\"请输入用户名\",{\"1\":{\"3205\":1}}],[\"请输入\",{\"1\":{\"3023\":1}}],[\"请记住\",{\"1\":{\"2125\":1}}],[\"请求方式\",{\"0\":{\"1573\":1}}],[\"请求方法\",{\"1\":{\"1538\":1}}],[\"请求的客户端\",{\"1\":{\"1569\":1}}],[\"请求的资源已被永久的移动到新uri\",{\"1\":{\"1103\":1}}],[\"请求的资源可包括多个位置\",{\"1\":{\"1100\":1}}],[\"请求报文与响应报文结构基本是一致的\",{\"1\":{\"1558\":1}}],[\"请求报文里面没有\",{\"1\":{\"1534\":1}}],[\"请求目标\",{\"1\":{\"1539\":1}}],[\"请求行由三部分构成\",{\"1\":{\"1537\":1}}],[\"请求行\",{\"1\":{\"1536\":1}}],[\"请求都是如此只有\",{\"1\":{\"1534\":1}}],[\"请求头\",{\"1\":{\"1529\":1}}],[\"请求过程\",{\"1\":{\"1515\":1}}],[\"请求从服务器获取资源\",{\"1\":{\"1171\":1}}],[\"请求要求用户的身份认证\",{\"1\":{\"1127\":1}}],[\"请求成功\",{\"1\":{\"1079\":1,\"1088\":1}}],[\"请完整详细一条更新语句\",{\"0\":{\"660\":1}}],[\"五大类\",{\"1\":{\"1076\":1}}],[\"五层体系结构\",{\"1\":{\"721\":1}}],[\"文本模式\",{\"1\":{\"3140\":1}}],[\"文本文件的大小会因此大出二三倍甚至更大\",{\"1\":{\"1745\":1}}],[\"文档对象模型\",{\"1\":{\"1403\":1}}],[\"文字\",{\"1\":{\"1068\":1}}],[\"文件内容是你的域名\",{\"1\":{\"3443\":1}}],[\"文件内容只增不减\",{\"1\":{\"2888\":1}}],[\"文件中是如下配置\",{\"1\":{\"3418\":1}}],[\"文件中你需要配置得是\",{\"1\":{\"3411\":1}}],[\"文件夹中创建一个\",{\"1\":{\"3426\":1}}],[\"文件夹中\",{\"1\":{\"3408\":1}}],[\"文件末尾强制换行\",{\"1\":{\"3388\":1}}],[\"文件时候\",{\"1\":{\"3344\":1}}],[\"文件打开时会是追加模式\",{\"1\":{\"3170\":1}}],[\"文件打开模式\",{\"1\":{\"3132\":1}}],[\"文件指针将会放在文件的结尾\",{\"1\":{\"3166\":1,\"3168\":1,\"3170\":1,\"3172\":1}}],[\"文件指针将会放在文件的开头\",{\"1\":{\"3152\":1,\"3154\":1,\"3156\":1}}],[\"文件的指针将会放在文件的开头\",{\"1\":{\"3150\":1}}],[\"文件路径\",{\"1\":{\"3131\":1}}],[\"文件操作\",{\"0\":{\"3125\":1}}],[\"文件\",{\"1\":{\"2891\":1,\"3321\":1,\"3339\":1,\"3426\":1,\"3428\":1,\"3443\":1}}],[\"文件传输\",{\"1\":{\"719\":1}}],[\"文件写到一定大小后会切换到下一个\",{\"1\":{\"113\":1,\"649\":1}}],[\"文件里面\",{\"1\":{\"19\":1,\"1467\":1}}],[\"滑动窗口\",{\"1\":{\"1053\":1}}],[\"滑动窗口的工作流程\",{\"1\":{\"925\":1}}],[\"quote\",{\"1\":{\"3388\":1}}],[\"quotes\",{\"1\":{\"3388\":2}}],[\"quickstart\",{\"1\":{\"3346\":1,\"3352\":1,\"3452\":1}}],[\"queue\",{\"1\":{\"2506\":1,\"2789\":1,\"2837\":1}}],[\"questions\",{\"1\":{\"1608\":1}}],[\"query\",{\"1\":{\"68\":1}}],[\"qq号是5~12的数字且首位不能为0\",{\"1\":{\"3205\":1}}],[\"qq\",{\"1\":{\"1050\":1,\"3205\":2}}],[\"七层模型\",{\"1\":{\"1045\":1}}],[\"七层模型传输数据过程\",{\"1\":{\"722\":1}}],[\"下午6\",{\"1\":{\"3394\":2}}],[\"下标运算\",{\"1\":{\"3048\":1}}],[\"下标\",{\"1\":{\"2986\":1,\"3053\":1}}],[\"下新建一个\",{\"1\":{\"2803\":1}}],[\"下创建了一个新的\",{\"1\":{\"2790\":1}}],[\"下同\",{\"1\":{\"2778\":1}}],[\"下\",{\"1\":{\"2484\":1}}],[\"下面我们先看一个继承的例子\",{\"1\":{\"3095\":1}}],[\"下面每个\",{\"1\":{\"2091\":1}}],[\"下面开始测试\",{\"1\":{\"1471\":1}}],[\"下面举个栗子\",{\"1\":{\"1027\":1}}],[\"下载eslint\",{\"1\":{\"3377\":1}}],[\"下载适合你系统的版本\",{\"1\":{\"1467\":1}}],[\"下载相关得源码\",{\"1\":{\"1463\":1}}],[\"下一次的执行语句从上一次的\",{\"1\":{\"3257\":1}}],[\"下一个执行的函数是\",{\"1\":{\"2942\":1}}],[\"下一个m的id\",{\"1\":{\"2872\":1}}],[\"下一个将要运行的g\",{\"1\":{\"2864\":1}}],[\"下一个\",{\"1\":{\"2388\":1}}],[\"下一个尚未使用的溢出桶\",{\"1\":{\"1839\":1}}],[\"下一个路由器会将包转发给再下一个路由器\",{\"1\":{\"1386\":1}}],[\"下一行\",{\"1\":{\"91\":1}}],[\"未展示出来\",{\"1\":{\"3365\":1}}],[\"未定义\",{\"1\":{\"3104\":1}}],[\"未完成的清扫工作\",{\"1\":{\"2486\":1,\"2506\":1}}],[\"未修改\",{\"1\":{\"1112\":1}}],[\"未收到数据并不可以接收的数据\",{\"1\":{\"1023\":1}}],[\"未提交\",{\"1\":{\"358\":1}}],[\"未提交变更对其他事务也是不可见的\",{\"1\":{\"150\":1}}],[\"~+\",{\"1\":{\"2989\":1}}],[\"~\",{\"1\":{\"1018\":1}}],[\"⽆连接\",{\"1\":{\"1006\":1}}],[\"利⽤\",{\"1\":{\"1006\":1}}],[\"利用磁盘的预读特性与局部性原理\",{\"1\":{\"494\":1}}],[\"利用\",{\"1\":{\"438\":1,\"2445\":1,\"2940\":1,\"3444\":1}}],[\"利用表锁\",{\"1\":{\"431\":1}}],[\"利用率很高\",{\"1\":{\"384\":1}}],[\"利用率很低之后\",{\"1\":{\"224\":1}}],[\"利用二分法查询\",{\"1\":{\"200\":1}}],[\"++\",{\"1\":{\"3388\":1}}],[\"+$\",{\"1\":{\"3388\":1}}],[\"+1\",{\"1\":{\"2793\":1}}],[\"+0\",{\"1\":{\"2568\":1}}],[\"+=\",{\"1\":{\"1866\":1,\"2783\":1,\"3017\":1,\"3023\":1,\"3028\":1,\"3048\":1,\"3053\":1,\"3054\":1,\"3093\":3,\"3248\":1,\"3250\":1}}],[\"+\",{\"0\":{\"2368\":1},\"1\":{\"998\":1,\"1021\":1,\"1181\":1,\"1752\":1,\"1753\":1,\"2158\":1,\"2163\":2,\"2166\":1,\"2172\":1,\"2178\":1,\"2352\":1,\"2365\":1,\"2370\":1,\"2375\":1,\"2400\":1,\"2402\":1,\"2783\":1,\"2795\":2,\"2868\":5,\"2993\":1,\"3015\":2,\"3026\":1,\"3028\":2,\"3052\":1,\"3090\":5,\"3104\":2,\"3145\":1,\"3176\":4,\"3214\":1,\"3287\":1,\"3311\":1,\"3325\":3,\"3341\":1,\"3342\":1,\"3388\":3}}],[\"慢慢来\",{\"1\":{\"2811\":1}}],[\"慢慢的有些数据不会被再次使用\",{\"1\":{\"2598\":1}}],[\"慢慢的增加调整到网络的最佳值\",{\"1\":{\"980\":1}}],[\"慢启动门限\",{\"1\":{\"985\":1}}],[\"慢启动的发送包的数量不是一直提高\",{\"1\":{\"975\":1}}],[\"慢启动的规则是当发送方收到一个ack\",{\"1\":{\"971\":1}}],[\"慢启动算法\",{\"1\":{\"974\":1}}],[\"慢启动是一点点的去提高发送包的数量\",{\"1\":{\"973\":1}}],[\"慢启动\",{\"0\":{\"970\":1},\"1\":{\"966\":1}}],[\"刚被分配\",{\"1\":{\"2868\":1}}],[\"刚好由下至上先找到第一个参数在找到第二个参数\",{\"1\":{\"2275\":1}}],[\"刚开始很慢的启动\",{\"1\":{\"973\":1}}],[\"刚才你提到前两次握手时随机生成的序列号\",{\"0\":{\"841\":1}}],[\"快递员骑电动车\",{\"1\":{\"3275\":1}}],[\"快\",{\"1\":{\"1202\":1}}],[\"快恢复\",{\"1\":{\"969\":1}}],[\"快重传和快恢复\",{\"0\":{\"982\":1}}],[\"快重传\",{\"1\":{\"968\":1}}],[\"快速开始\",{\"0\":{\"3259\":1}}],[\"快速重传和快速恢复\",{\"1\":{\"1003\":1}}],[\"快速重传机制\",{\"1\":{\"901\":1}}],[\"快速重传\",{\"0\":{\"899\":1},\"1\":{\"900\":1}}],[\"快速取到对应的值\",{\"1\":{\"465\":1}}],[\"恶性循环下去\",{\"1\":{\"957\":1}}],[\"极客兔兔\",{\"1\":{\"1587\":1,\"1593\":1}}],[\"极客时间\",{\"1\":{\"301\":1}}],[\"极易导致发送的数据包出现丢失\",{\"1\":{\"957\":1}}],[\"很清晰的讲解了网站架构的历史\",{\"1\":{\"3262\":1}}],[\"很清楚看到\",{\"1\":{\"1541\":1}}],[\"很可能增加\",{\"1\":{\"1935\":1}}],[\"很少使用数组\",{\"1\":{\"1647\":1}}],[\"很小达几个字节\",{\"1\":{\"952\":1}}],[\"很多时候\",{\"1\":{\"146\":1}}],[\"糊涂窗口综合症\",{\"1\":{\"950\":1}}],[\"糊涂在哪\",{\"1\":{\"949\":1}}],[\"症状是\",{\"1\":{\"947\":1}}],[\"窗口大小\",{\"1\":{\"952\":1}}],[\"窗口探测\",{\"1\":{\"942\":1,\"943\":1}}],[\"窗口关闭潜在的危险\",{\"1\":{\"938\":1}}],[\"于是发送了\",{\"1\":{\"1040\":1}}],[\"于是发送端就可以根据这个接收端的处理能力来发送数据\",{\"1\":{\"929\":1}}],[\"于是接收窗口往右移动\",{\"1\":{\"1035\":1,\"1037\":1}}],[\"于是可用窗口耗尽为\",{\"1\":{\"1036\":1}}],[\"于是可用窗口\",{\"1\":{\"1034\":1,\"1038\":1,\"1039\":1,\"1040\":1}}],[\"于是\",{\"1\":{\"958\":1,\"1042\":1,\"1365\":1}}],[\"于是会导致更多的丢包\",{\"1\":{\"957\":1}}],[\"于是重发的就快\",{\"1\":{\"895\":1}}],[\"告诉你我收到了哪些\",{\"1\":{\"914\":1}}],[\"告诉tcp协议应该把报文发送给哪一个进程\",{\"1\":{\"762\":1}}],[\"啊\",{\"1\":{\"910\":1}}],[\"驱动重传\",{\"1\":{\"900\":1}}],[\"丢了包就一切重来\",{\"1\":{\"989\":1}}],[\"丢了老半天才重发\",{\"1\":{\"894\":1}}],[\"丢失\",{\"1\":{\"134\":1,\"914\":1}}],[\"较小时\",{\"1\":{\"895\":1}}],[\"较大时\",{\"1\":{\"894\":1}}],[\"较取值为0情况下更安全\",{\"1\":{\"635\":1}}],[\"超详细go语言源码目录说明\",{\"1\":{\"2895\":1}}],[\"超过了mss\",{\"1\":{\"1294\":1}}],[\"超过的部分\",{\"1\":{\"1176\":1}}],[\"超过这个时间报文将被丢弃\",{\"1\":{\"867\":1}}],[\"超文本\",{\"1\":{\"1067\":1}}],[\"超文本传输协议可以分为三个部分\",{\"1\":{\"1066\":1}}],[\"超文本传输协议怎么理解\",{\"0\":{\"1065\":1}}],[\"超时时间较长与较短\",{\"1\":{\"893\":1}}],[\"超时时间设置为多少\",{\"1\":{\"889\":1}}],[\"超时重传时间\",{\"1\":{\"892\":1,\"896\":1,\"897\":1}}],[\"超时重传时间是以\",{\"1\":{\"892\":1}}],[\"超时重传\",{\"0\":{\"884\":1},\"1\":{\"988\":1}}],[\"连续两次丢包的概率只有万分之一\",{\"1\":{\"879\":1}}],[\"连接失败\",{\"1\":{\"3286\":1}}],[\"连接的是\",{\"1\":{\"2349\":1}}],[\"连接建立过程\",{\"1\":{\"1214\":1}}],[\"连接方式\",{\"1\":{\"1203\":1}}],[\"连接管理以及窗⼝控制等机制实现可靠性传输的\",{\"1\":{\"881\":1}}],[\"连接\",{\"1\":{\"765\":1,\"1496\":1,\"2332\":1}}],[\"连接中出现异常必须强制断开连接\",{\"1\":{\"751\":1}}],[\"连接后\",{\"1\":{\"64\":1,\"1498\":1}}],[\"连接某个服务器数据库\",{\"1\":{\"62\":1}}],[\"连接器就会自动将它断开\",{\"1\":{\"67\":1}}],[\"连接器会到权限表里面查出你拥有的权限\",{\"1\":{\"66\":1}}],[\"连接器根据用用户名和密码就会开始验证你的身份\",{\"1\":{\"64\":1}}],[\"连接器负责与客户端连接\",{\"1\":{\"62\":1}}],[\"连接器\",{\"0\":{\"61\":1},\"1\":{\"690\":1,\"2893\":1}}],[\"综上所诉time\",{\"1\":{\"875\":1}}],[\"综合\",{\"0\":{\"686\":1}}],[\"综合看\",{\"1\":{\"380\":1}}],[\"报错信息\",{\"1\":{\"3345\":1}}],[\"报错级别\",{\"1\":{\"3135\":1}}],[\"报错\",{\"1\":{\"2182\":1,\"3388\":1}}],[\"报文创建的时间\",{\"1\":{\"1570\":1}}],[\"报文结构\",{\"0\":{\"1524\":1}}],[\"报文解析\",{\"0\":{\"1522\":1}}],[\"报文信息如下\",{\"1\":{\"1231\":1}}],[\"报文\",{\"1\":{\"909\":1,\"910\":1}}],[\"报文往返\",{\"1\":{\"897\":2}}],[\"报文通知源主机\",{\"1\":{\"867\":1}}],[\"报文基于是\",{\"1\":{\"867\":1}}],[\"报文就会被丢弃\",{\"1\":{\"867\":1}}],[\"报⽂时\",{\"1\":{\"822\":1}}],[\"卷1\",{\"1\":{\"861\":1}}],[\"返回类型等等\",{\"1\":{\"3320\":1}}],[\"返回的是一个迭代器对象\",{\"1\":{\"3254\":1}}],[\"返回的地址将在结构体之外\",{\"1\":{\"1984\":1}}],[\"返回一个迭代器\",{\"1\":{\"3197\":1}}],[\"返回一个ack确认应答报文\",{\"1\":{\"858\":1}}],[\"返回字符串的列表\",{\"1\":{\"3195\":1}}],[\"返回列表\",{\"1\":{\"3189\":1}}],[\"返回表示\",{\"1\":{\"2208\":1}}],[\"返回值都会分配到函数调用栈上\",{\"1\":{\"2597\":1}}],[\"返回值等对象中哪些是存活的指针\",{\"1\":{\"2533\":1}}],[\"返回值是通过修改reply的值\",{\"1\":{\"3287\":1,\"3311\":1}}],[\"返回值是\",{\"1\":{\"2380\":1}}],[\"返回值\",{\"0\":{\"2306\":1},\"1\":{\"2321\":1,\"3025\":1}}],[\"返回值和参数都是先入栈的第二个\",{\"1\":{\"2274\":1}}],[\"返回值和变量为function\",{\"1\":{\"2097\":1}}],[\"返回值的相对位置就好了\",{\"1\":{\"2270\":1}}],[\"返回值结构如下\",{\"1\":{\"2240\":1}}],[\"返回值空间\",{\"1\":{\"2324\":1}}],[\"返回值空间依然由调用者在栈上分配\",{\"1\":{\"2149\":1}}],[\"返回值空间分别是两次创建的\",{\"1\":{\"2141\":1}}],[\"返回\",{\"1\":{\"1288\":1,\"2208\":1,\"3253\":1}}],[\"返回信息会包括新的uri\",{\"1\":{\"1103\":1}}],[\"返回ack=6\",{\"1\":{\"907\":1}}],[\"返回2\",{\"1\":{\"903\":1}}],[\"返回结果\",{\"1\":{\"694\":1,\"3282\":1}}],[\"仅仅表示客户端不再发送数据\",{\"1\":{\"857\":1}}],[\"防止单个机器带来限制以及提高并发处理能力\",{\"1\":{\"3261\":1}}],[\"防止出现无限循环的情况\",{\"1\":{\"3249\":1}}],[\"防止\",{\"1\":{\"2761\":1}}],[\"防止黑客伪造相同序列号tcp报文被对方接收\",{\"1\":{\"844\":1}}],[\"防止其它事务读取或修改数据\",{\"1\":{\"602\":1}}],[\"出该报文是不是历史报文\",{\"1\":{\"842\":1}}],[\"出现在顶层模块作用域中\",{\"1\":{\"3388\":1}}],[\"出现\",{\"1\":{\"2606\":1}}],[\"出现sack机制\",{\"1\":{\"912\":1}}],[\"出现概率不高\",{\"1\":{\"256\":1}}],[\"出现同一个值的情况\",{\"1\":{\"188\":1}}],[\"同样的方法做了不同的事情\",{\"1\":{\"3101\":1}}],[\"同样也是由三部分构成\",{\"1\":{\"1549\":1}}],[\"同样拼好报文再发给浏览器\",{\"1\":{\"1519\":1}}],[\"同步双方初始序列号\",{\"1\":{\"823\":1}}],[\"同时还有很多地方没有完善\",{\"1\":{\"3313\":1}}],[\"同时还具有\",{\"1\":{\"1357\":1}}],[\"同时栈在被\",{\"1\":{\"2868\":3}}],[\"同时栈正被\",{\"1\":{\"2868\":1}}],[\"同时文章中的部分代码会经过处理的\",{\"1\":{\"2737\":1}}],[\"同时这是我自己的一个学习过程\",{\"1\":{\"2736\":1}}],[\"同时执行\",{\"1\":{\"2380\":1}}],[\"同时一段空间也会通过值拷贝到\",{\"1\":{\"2359\":1}}],[\"同时我们的本意是要修改局部变量\",{\"1\":{\"2245\":1}}],[\"同时后面是捕获变量\",{\"1\":{\"2139\":1}}],[\"同时去使用捕获到的自由变量\",{\"1\":{\"2113\":1}}],[\"同时也会去判断是否是自己注册的链表\",{\"1\":{\"2388\":1}}],[\"同时也实现相关的接口方法\",{\"1\":{\"2053\":1}}],[\"同时也允许被调函数修改调用方数组中的元素\",{\"1\":{\"1646\":1}}],[\"同时byte式int8类型的别名\",{\"1\":{\"1771\":1}}],[\"同时go为更方便的处理非ascii字符串时\",{\"1\":{\"1770\":1}}],[\"同时在带双引号的字符串字面量中可以使用ascii码中的转义符\",{\"1\":{\"1761\":1}}],[\"同时可以通过append去为未开辟底层数组的切片结构开辟一个底层数组\",{\"1\":{\"1679\":1}}],[\"同时可以使用数组字面量根据一组值来初始化一个数组\",{\"1\":{\"1634\":1}}],[\"同时组值可以具有索引和索引对应的值d\",{\"1\":{\"1638\":1}}],[\"同时浏览器也会做一定限制\",{\"1\":{\"1534\":1}}],[\"同时返回的状态码是\",{\"1\":{\"1493\":1}}],[\"同时需要用到这样一个环境http\",{\"1\":{\"1461\":1}}],[\"同时需求归档\",{\"1\":{\"114\":1}}],[\"同时会在ip包头部加上mac\",{\"1\":{\"1321\":1}}],[\"同时\",{\"1\":{\"1034\":1,\"2071\":1,\"2072\":1,\"2525\":1,\"2934\":1}}],[\"同时处于last\",{\"1\":{\"874\":1}}],[\"同时发送\",{\"1\":{\"867\":1}}],[\"同时控制位中的syn置为1\",{\"1\":{\"795\":1}}],[\"同时对\",{\"1\":{\"739\":1}}],[\"同时将参数\",{\"1\":{\"2376\":1}}],[\"同时将更新操作记录写入\",{\"1\":{\"664\":1}}],[\"同时将这个更新操作记录到\",{\"1\":{\"119\":1}}],[\"同时高度越低\",{\"1\":{\"488\":1}}],[\"同时让逻辑上相邻的数据都能尽量的存储在物理上也相邻的硬盘空间上\",{\"1\":{\"485\":1}}],[\"同时保存指向每个数据行的指针\",{\"1\":{\"466\":1}}],[\"同时有另外一个顾客\",{\"1\":{\"369\":1}}],[\"同时什么时候释放\",{\"1\":{\"358\":1}}],[\"同时当你建立了\",{\"1\":{\"264\":1}}],[\"同时更新数据的时间复杂度是\",{\"1\":{\"205\":1}}],[\"同时带来的好处是从程序开发的角度明确地知道每个语句是否处于事务中\",{\"1\":{\"179\":1}}],[\"同时系统会定期做整库备份\",{\"1\":{\"125\":1}}],[\"准备发送第三次\",{\"1\":{\"822\":1}}],[\"避免增长过快导致网络拥塞\",{\"1\":{\"980\":1}}],[\"避免资源浪费\",{\"1\":{\"831\":1}}],[\"避免历史连接\",{\"1\":{\"813\":1}}],[\"避免并行访问\",{\"1\":{\"163\":1}}],[\"面向对象编程\",{\"0\":{\"3070\":1}}],[\"面向对象部分会进行详细讲解\",{\"1\":{\"3062\":1}}],[\"面向连接的\",{\"1\":{\"734\":1}}],[\"面试官不愿听\",{\"1\":{\"808\":1}}],[\"温馨提示\",{\"1\":{\"799\":1}}],[\"服务注册\",{\"1\":{\"3325\":1,\"3342\":1}}],[\"服务不可以等因素影响\",{\"1\":{\"3265\":1}}],[\"服务的软件名称和版本号\",{\"1\":{\"1571\":1}}],[\"服务\",{\"1\":{\"1176\":1}}],[\"服务器将方法的执行结果打包成网络可传输的格式\",{\"1\":{\"3279\":1}}],[\"服务器使用解包后的参数调用相应的方法\",{\"1\":{\"3278\":1}}],[\"服务器调用\",{\"1\":{\"3278\":1}}],[\"服务器解析接收到的请求\",{\"1\":{\"3277\":1}}],[\"服务器接收到请求后\",{\"1\":{\"3276\":1}}],[\"服务器接收\",{\"1\":{\"3276\":1}}],[\"服务器可以依据它来返回最合适此浏览器显示的页面\",{\"1\":{\"1569\":1}}],[\"服务器向发送地报文格式好像和这个对不上啊\",{\"1\":{\"1547\":1}}],[\"服务器都不允许过大的请求头\",{\"1\":{\"1534\":1}}],[\"服务器收到报文后处理请求\",{\"1\":{\"1519\":1}}],[\"服务器收到报文后\",{\"1\":{\"1500\":1}}],[\"服务器收到客户端请求后\",{\"1\":{\"1223\":1}}],[\"服务器收到客户端的应答报文后\",{\"1\":{\"798\":1}}],[\"服务器就会回复第五个包\",{\"1\":{\"1499\":1}}],[\"服务器监听的端口\",{\"1\":{\"1301\":1}}],[\"服务器域名与ip\",{\"1\":{\"1260\":1}}],[\"服务器域名对应的ip地址呢\",{\"1\":{\"1259\":1}}],[\"服务器专门保存了web\",{\"1\":{\"1260\":1}}],[\"服务器\",{\"1\":{\"1259\":1,\"1265\":1,\"1266\":1,\"1267\":1,\"1308\":1,\"1472\":1}}],[\"服务器握手结束通知\",{\"1\":{\"1238\":1}}],[\"服务器的端口是\",{\"1\":{\"1496\":1}}],[\"服务器的目标地址是\",{\"1\":{\"1317\":1}}],[\"服务器的回应\",{\"1\":{\"1235\":1}}],[\"服务器的数字证书\",{\"1\":{\"1227\":1}}],[\"服务器的限制\",{\"1\":{\"1177\":1}}],[\"服务器生产的随机数server\",{\"1\":{\"1225\":1,\"1242\":1}}],[\"服务器不会记忆http状态\",{\"1\":{\"1187\":1}}],[\"服务器不支持请求的功能\",{\"1\":{\"1142\":1}}],[\"服务器最多处理\",{\"1\":{\"1176\":1}}],[\"服务器暂时的无法处理客户端的请求\",{\"1\":{\"1148\":1}}],[\"服务器内部错误\",{\"1\":{\"1139\":1}}],[\"服务器无法根据客户端的请求找到资源\",{\"1\":{\"1133\":1}}],[\"服务器无法理解\",{\"1\":{\"1124\":1}}],[\"服务器理解请求客户端的请求\",{\"1\":{\"1130\":1}}],[\"服务器返回此状态码时\",{\"1\":{\"1112\":1}}],[\"服务器处理成功\",{\"1\":{\"1094\":1}}],[\"服务器成功处理了部分get请求\",{\"1\":{\"1097\":1}}],[\"服务器成功处理\",{\"1\":{\"1091\":1}}],[\"服务器势必会消耗更多的时间和内存空间去处理这些数据\",{\"1\":{\"802\":1}}],[\"服务端流模式\",{\"1\":{\"3340\":1,\"3341\":1}}],[\"服务端就把该股票的实时数据源源不断的返回给客户端\",{\"1\":{\"3333\":1}}],[\"服务端返回一段连续的数据流\",{\"1\":{\"3333\":1}}],[\"服务端返回一个syn+ack报文到客户端\",{\"1\":{\"818\":1}}],[\"服务端数据流\",{\"1\":{\"3332\":1}}],[\"服务端代码\",{\"1\":{\"3324\":1}}],[\"服务端写法\",{\"1\":{\"3310\":1}}],[\"服务端写起来更加简单点\",{\"1\":{\"3291\":1}}],[\"服务端可以继续发送了\",{\"1\":{\"1040\":1}}],[\"服务端无法再继续发送数据\",{\"1\":{\"1036\":1}}],[\"服务端再次发送了\",{\"1\":{\"1036\":1}}],[\"服务端是发送方\",{\"1\":{\"1028\":1}}],[\"服务端处于last\",{\"1\":{\"872\":1}}],[\"服务端需要将未处理完的数据\",{\"1\":{\"859\":1}}],[\"服务端接受后\",{\"1\":{\"858\":1}}],[\"服务端收到\",{\"1\":{\"1290\":1}}],[\"服务端收到发起的连接\",{\"1\":{\"1288\":1}}],[\"服务端收到对\",{\"1\":{\"1038\":1,\"1039\":1,\"1042\":1}}],[\"服务端收到请求报文后\",{\"1\":{\"1034\":1}}],[\"服务端收到客户端发送的ack确认应答报文后\",{\"1\":{\"854\":1,\"1398\":1}}],[\"服务端收到此报文后\",{\"1\":{\"850\":1,\"1394\":1}}],[\"服务端收到报文后\",{\"1\":{\"796\":1}}],[\"服务端随机初始化序列号\",{\"1\":{\"796\":1}}],[\"服务对象\",{\"1\":{\"768\":1}}],[\"客户端流模式\",{\"1\":{\"3340\":1,\"3341\":1}}],[\"客户端数据流\",{\"1\":{\"3334\":1}}],[\"客户端代码\",{\"1\":{\"3326\":1}}],[\"客户端代理对象将解包后的结果返回给调用方\",{\"1\":{\"3282\":1}}],[\"客户端代理对象将调用信息和参数打包成网络可传输的格式\",{\"1\":{\"3274\":1}}],[\"客户端接收到结果后\",{\"1\":{\"3281\":1}}],[\"客户端接收\",{\"1\":{\"3281\":1}}],[\"客户端应用程序调用本地的代理对象\",{\"1\":{\"3273\":1}}],[\"客户端应继续使用原有uri\",{\"1\":{\"1106\":1}}],[\"客户端调用在proto中定义的sayhello\",{\"1\":{\"3327\":1}}],[\"客户端调用\",{\"1\":{\"3273\":1}}],[\"客户端可以使用这个时间再搭配其他字段决定缓存策略\",{\"1\":{\"1570\":1}}],[\"客户端将会如何操作服务端地资源\",{\"1\":{\"1536\":1}}],[\"客户端的\",{\"1\":{\"1288\":1}}],[\"客户端的syn\",{\"1\":{\"833\":1}}],[\"客户端\",{\"1\":{\"1280\":1}}],[\"客户端生产的随机数client\",{\"1\":{\"1241\":1}}],[\"客户端生产的随机数clinet\",{\"1\":{\"1220\":1}}],[\"客户端与服务器进入加密通信\",{\"1\":{\"1239\":1}}],[\"客户端与服务端的\",{\"1\":{\"64\":1}}],[\"客户端握手结束通知\",{\"1\":{\"1234\":1}}],[\"客户端验证\",{\"1\":{\"1228\":1}}],[\"客户端支持的密码套件列表\",{\"1\":{\"1221\":1}}],[\"客户端支持的ssl\",{\"1\":{\"1219\":1}}],[\"客户端向服务器索要并验证服务器的公钥\",{\"1\":{\"1211\":1}}],[\"客户端向服务端发送请求数据报文\",{\"1\":{\"1033\":1}}],[\"客户端和服务端都处于\",{\"1\":{\"1286\":1}}],[\"客户端和服务端都处于closed\",{\"1\":{\"793\":1}}],[\"客户端和服务器需要交换\",{\"1\":{\"1202\":1}}],[\"客户端请求中的方法被禁止\",{\"1\":{\"1136\":1}}],[\"客户端请求的语法错误\",{\"1\":{\"1124\":1}}],[\"客户端通常会缓存访问过的资源\",{\"1\":{\"1112\":1}}],[\"客户端通过自身的上下文\",{\"1\":{\"819\":1}}],[\"客户端是接收方\",{\"1\":{\"1028\":1}}],[\"客户端会取出数字证书中的公钥\",{\"1\":{\"1231\":1}}],[\"客户端会死等\",{\"1\":{\"898\":1}}],[\"客户端会发送一个fin报文\",{\"1\":{\"857\":1}}],[\"客户端完成连接关闭\",{\"1\":{\"855\":1,\"1399\":1}}],[\"客户端经过2msl一段时间后\",{\"1\":{\"855\":1,\"1399\":1}}],[\"客户端收到了客户端的第三个随机数pre\",{\"1\":{\"1236\":1}}],[\"客户端收到服务器发送的报文后\",{\"1\":{\"1229\":1}}],[\"客户端收到服务端发送的\",{\"1\":{\"1289\":1}}],[\"客户端收到服务端发过来的ack应答报文\",{\"1\":{\"851\":1,\"1395\":1}}],[\"客户端收到服务端的fin报文后\",{\"1\":{\"853\":1,\"1397\":1}}],[\"客户端收到\",{\"1\":{\"1035\":1,\"1037\":1,\"1041\":1}}],[\"客户端收到报文后\",{\"1\":{\"797\":1}}],[\"客户端打算关闭连接\",{\"1\":{\"849\":1,\"1393\":1}}],[\"客户端因有足够的上下文来判断当前连接是否是历史连接\",{\"1\":{\"822\":1}}],[\"客户端返回一个ret报文\",{\"1\":{\"820\":1}}],[\"客户端已经处于established状态\",{\"1\":{\"803\":1}}],[\"客户端随机初始化序列号\",{\"1\":{\"795\":1}}],[\"游戏网络通信\",{\"1\":{\"787\":1}}],[\"音频等多媒体通信\",{\"1\":{\"786\":1}}],[\"经受住特定次数的垃圾回收而依然存活的对象\",{\"1\":{\"2659\":1}}],[\"经过计算\",{\"1\":{\"2573\":1,\"2574\":1}}],[\"经过recover返回时r为1\",{\"1\":{\"2337\":1}}],[\"经过初始化赋值后\",{\"1\":{\"2136\":1}}],[\"经过层层转发之后\",{\"1\":{\"1386\":1}}],[\"经常用于\",{\"1\":{\"781\":1,\"785\":1}}],[\"经历了两次回表\",{\"1\":{\"244\":1}}],[\"固定不变\",{\"1\":{\"776\":1}}],[\"首地址\",{\"1\":{\"1769\":1}}],[\"首部开销\",{\"1\":{\"774\":1}}],[\"首先会在\",{\"1\":{\"2906\":1}}],[\"首先分析\",{\"1\":{\"2295\":1}}],[\"首先从\",{\"1\":{\"1463\":1}}],[\"首先路由器端口会接收发给自己的以太网包\",{\"1\":{\"1358\":1}}],[\"首先先和第一条目的子网掩码\",{\"1\":{\"1315\":1}}],[\"首先需要tcp建立连接\",{\"1\":{\"1285\":1}}],[\"首先需要知道\",{\"1\":{\"146\":1}}],[\"首先客户端向服务器发起加密通信请求\",{\"1\":{\"1217\":1}}],[\"首先在\",{\"1\":{\"240\":1}}],[\"首先将堆内存划分成两个相等的空间\",{\"1\":{\"2648\":1}}],[\"首先将\",{\"1\":{\"192\":1}}],[\"首先不允许发生错误\",{\"1\":{\"138\":1}}],[\"首先\",{\"1\":{\"127\":1,\"368\":1,\"1346\":1,\"1360\":1,\"1377\":1,\"1472\":1,\"1968\":1,\"3109\":1,\"3285\":1,\"3320\":1}}],[\"首先第一件事就是连接\",{\"1\":{\"62\":1}}],[\"源码解析\",{\"1\":{\"1622\":1}}],[\"源\",{\"1\":{\"1387\":1}}],[\"源端口\",{\"1\":{\"760\":1}}],[\"源地址ip\",{\"1\":{\"1307\":1}}],[\"源地址\",{\"1\":{\"757\":1}}],[\"段\",{\"1\":{\"753\":1,\"2492\":1,\"2532\":1}}],[\"须设置为\",{\"1\":{\"750\":1}}],[\"据都已经被正常接收\",{\"1\":{\"747\":1}}],[\"期望\",{\"1\":{\"747\":1}}],[\"指的是传入的对象\",{\"1\":{\"3075\":1}}],[\"指数\",{\"1\":{\"2988\":1}}],[\"指令执行中断\",{\"1\":{\"2755\":1}}],[\"指令入口的\",{\"1\":{\"2356\":1}}],[\"指令相关的有两个部分\",{\"1\":{\"2339\":1}}],[\"指令存入的返回地址\",{\"1\":{\"2298\":1}}],[\"指令就会将栈恢复到\",{\"1\":{\"2285\":1}}],[\"指令实现跳转\",{\"1\":{\"2285\":1}}],[\"指令压栈的返回地址\",{\"1\":{\"2283\":1}}],[\"指令也会干两件事\",{\"1\":{\"2282\":1}}],[\"指令了\",{\"1\":{\"2282\":1}}],[\"指令只做两件事情\",{\"1\":{\"2278\":1}}],[\"指令\",{\"1\":{\"2278\":1}}],[\"指纹用于校验数据的完整性\",{\"1\":{\"1207\":1}}],[\"指纹\",{\"1\":{\"1207\":1}}],[\"指定只能\",{\"1\":{\"3388\":1}}],[\"指定数组的元素之间要以空格隔开\",{\"1\":{\"3388\":1}}],[\"指定vscode的eslint所处理的文件的后缀\",{\"1\":{\"3380\":1}}],[\"指定的文件无法打开\",{\"1\":{\"3177\":1}}],[\"指定的资源提交数据\",{\"1\":{\"1172\":1}}],[\"指定了未知的编码\",{\"1\":{\"3175\":1}}],[\"指定为\",{\"1\":{\"2803\":1}}],[\"指定为这个协程的启动方法\",{\"1\":{\"2793\":1}}],[\"指定服务器的域名\",{\"1\":{\"1154\":1}}],[\"指针传递\",{\"1\":{\"2300\":1}}],[\"指针接收者\",{\"0\":{\"2171\":1}}],[\"指针\",{\"1\":{\"2049\":1,\"2062\":1,\"2078\":1,\"2225\":1}}],[\"指针类型指向的类型元数据\",{\"1\":{\"2012\":1}}],[\"指针类型也是如此\",{\"1\":{\"2011\":1}}],[\"指针就直接拿来用\",{\"1\":{\"1918\":1}}],[\"指针偏移了\",{\"1\":{\"1042\":1}}],[\"指针往右偏移后指向\",{\"1\":{\"1038\":1,\"1039\":1}}],[\"指针也向右偏移\",{\"1\":{\"1034\":1}}],[\"指向当前执行的\",{\"1\":{\"2908\":1,\"2914\":1}}],[\"指向不同类型数据的指针是无法互相转换的\",{\"1\":{\"2891\":1}}],[\"指向函数入口\",{\"1\":{\"2342\":1}}],[\"指向是\",{\"1\":{\"2249\":1}}],[\"指向得变量\",{\"1\":{\"2237\":1}}],[\"指向闭包函数入口\",{\"1\":{\"2139\":1,\"2372\":1}}],[\"指向的\",{\"1\":{\"2071\":1}}],[\"指向存储元素的类型元数据\",{\"1\":{\"2010\":1}}],[\"指向其存储元素的类型元数据\",{\"1\":{\"2009\":1}}],[\"指向一个函数指针表\",{\"1\":{\"2008\":1}}],[\"指向接口的动态值\",{\"1\":{\"1890\":1,\"1892\":1,\"1895\":1,\"2213\":1,\"2236\":1}}],[\"指向接口的动态类型元数据\",{\"1\":{\"1890\":1,\"1892\":1,\"1895\":1,\"1900\":1,\"2213\":1,\"2224\":1,\"2236\":1}}],[\"指向连在一起桶\",{\"1\":{\"1817\":1}}],[\"指向开始元素的地址\",{\"1\":{\"1686\":1}}],[\"指向\",{\"1\":{\"1034\":1,\"1040\":1,\"2012\":1,\"2225\":1}}],[\"指下⼀次\",{\"1\":{\"747\":1}}],[\"指本地主机与远程主机正在进行的会话\",{\"1\":{\"715\":1}}],[\"累加\",{\"1\":{\"744\":1}}],[\"累计到\",{\"1\":{\"656\":1}}],[\"包名\",{\"1\":{\"3321\":1}}],[\"包含了go运行时的操作\",{\"1\":{\"2891\":1}}],[\"包含属性和方法的对象\",{\"1\":{\"1403\":1}}],[\"包嵌入提供了对正在运行的\",{\"1\":{\"2891\":1}}],[\"包初始化等\",{\"1\":{\"2850\":1}}],[\"包装器\",{\"1\":{\"2763\":1}}],[\"包装成高内聚低耦合的功能单元模块\",{\"1\":{\"3261\":1}}],[\"包装成\",{\"1\":{\"2221\":1}}],[\"包里面\",{\"1\":{\"2740\":1}}],[\"包操作内部元素\",{\"1\":{\"2219\":1}}],[\"包路径\",{\"1\":{\"2206\":1}}],[\"包括子模块\",{\"1\":{\"3428\":1}}],[\"包括调度器\",{\"1\":{\"2772\":1}}],[\"包括\",{\"1\":{\"2581\":1,\"2608\":1,\"2758\":1}}],[\"包括<video>和<canvas>\",{\"1\":{\"1442\":1}}],[\"包括文本\",{\"1\":{\"1439\":1}}],[\"包括建表\",{\"1\":{\"293\":1}}],[\"包头里的目标地址了\",{\"1\":{\"1379\":1}}],[\"包头里需要发送方\",{\"1\":{\"1324\":1}}],[\"包头的协议类型只使用\",{\"1\":{\"1325\":1}}],[\"包头的源地址\",{\"1\":{\"1316\":1}}],[\"包头格式\",{\"1\":{\"1323\":1}}],[\"包呢\",{\"1\":{\"910\":1}}],[\"包之外该位必\",{\"1\":{\"750\":1}}],[\"包传给接收端主机\",{\"1\":{\"744\":1}}],[\"序列号是\",{\"1\":{\"1034\":1}}],[\"序列号是可靠传输的一个关键因素\",{\"1\":{\"824\":1}}],[\"序列号能够保证数据包不重复\",{\"1\":{\"836\":1}}],[\"序列号可以填入应用层的数据\",{\"1\":{\"797\":1}}],[\"序列号\",{\"1\":{\"743\":1,\"752\":1}}],[\"​\",{\"1\":{\"741\":1}}],[\"⼀次该\",{\"1\":{\"744\":1}}],[\"⼀对⼀\",{\"1\":{\"735\":1}}],[\"⼀定是\",{\"1\":{\"735\":1}}],[\"物流系统\",{\"1\":{\"730\":1}}],[\"物理层数据包\",{\"1\":{\"1340\":1}}],[\"物理层\",{\"1\":{\"706\":1}}],[\"能节省多少多少纳秒\",{\"1\":{\"2392\":1}}],[\"能使用的方法只是接口类型已经注册的\",{\"1\":{\"1908\":1}}],[\"能够在一行内表示的函数\",{\"1\":{\"3225\":1}}],[\"能够直接追踪到的\",{\"1\":{\"2623\":1}}],[\"能够把某些函数调用推迟到当前函数返回前才实际执行\",{\"1\":{\"2332\":1}}],[\"能够存储键值对的数据结构有很多种\",{\"1\":{\"1795\":1}}],[\"能够充分利用局部性原理\",{\"1\":{\"485\":1}}],[\"能做的事情是一样一样的\",{\"1\":{\"1175\":1}}],[\"能帮助双方同步初始化序\",{\"1\":{\"836\":1}}],[\"能减少双方不必要的资源开销\",{\"1\":{\"836\":1}}],[\"能防止历史连接的建立\",{\"1\":{\"836\":1}}],[\"能促进标准化工作\",{\"1\":{\"729\":1}}],[\"易于实现和维护\",{\"1\":{\"728\":1}}],[\"易导致死锁\",{\"1\":{\"354\":1}}],[\"结束了\",{\"1\":{\"2388\":1,\"2942\":1,\"2956\":1}}],[\"结束\",{\"1\":{\"2315\":1,\"2389\":1,\"3020\":1}}],[\"结束前就会释放自己的栈帧\",{\"1\":{\"2285\":1}}],[\"结束后再将其恢复\",{\"1\":{\"2495\":1}}],[\"结束后\",{\"1\":{\"2113\":1,\"2942\":1}}],[\"结构\",{\"1\":{\"2404\":1,\"2428\":1}}],[\"结构差不多\",{\"1\":{\"2225\":1}}],[\"结构体声明和函数的参数类型具有很强的耦合\",{\"1\":{\"3307\":1}}],[\"结构体字段\",{\"1\":{\"2944\":1}}],[\"结构体会将\",{\"1\":{\"2914\":1}}],[\"结构体会被添加到\",{\"1\":{\"2374\":1}}],[\"结构体又增加了几个字段\",{\"1\":{\"2458\":1}}],[\"结构体然后找到函数入口地址\",{\"1\":{\"2445\":1}}],[\"结构体了\",{\"1\":{\"2435\":1}}],[\"结构体增加了一个字段\",{\"1\":{\"2419\":1}}],[\"结构体存储的位置\",{\"1\":{\"2419\":1}}],[\"结构体注册到\",{\"1\":{\"2415\":1,\"2442\":1}}],[\"结构体后\",{\"1\":{\"2414\":1,\"2441\":1}}],[\"结构体后面的参数和返回值空间\",{\"1\":{\"2421\":1}}],[\"结构体后面的参数与返回值会拷贝到\",{\"1\":{\"2367\":1}}],[\"结构体后面的空间\",{\"1\":{\"2411\":1,\"2437\":1}}],[\"结构体后面\",{\"1\":{\"2133\":1,\"2359\":1}}],[\"结构体后面记录了一个\",{\"1\":{\"2009\":1}}],[\"结构体添加到\",{\"1\":{\"2413\":1,\"2440\":1}}],[\"结构体相关字段\",{\"1\":{\"2409\":1,\"2434\":1}}],[\"结构体堆分配\",{\"1\":{\"2394\":1,\"2399\":1}}],[\"结构体记录的\",{\"1\":{\"2386\":1}}],[\"结构体就会被添加到\",{\"1\":{\"2363\":1}}],[\"结构体以及\",{\"1\":{\"2361\":1}}],[\"结构体地址为\",{\"1\":{\"2356\":1}}],[\"结构体地址存入特定寄存器\",{\"1\":{\"2118\":1}}],[\"结构体包装函数入口地址\",{\"1\":{\"2105\":1}}],[\"结构体指针\",{\"1\":{\"2862\":2}}],[\"结构体指针会被缓存到哈希表中\",{\"1\":{\"2083\":1}}],[\"结构体指针不相等\",{\"1\":{\"2055\":1}}],[\"结构体也会缓存进行哈希表中\",{\"1\":{\"2072\":1}}],[\"结构体找到\",{\"1\":{\"2024\":1}}],[\"结构体中\",{\"1\":{\"2007\":1}}],[\"结构体的\",{\"1\":{\"2934\":1}}],[\"结构体的字段\",{\"1\":{\"2908\":1}}],[\"结构体的堆分配\",{\"1\":{\"2422\":1}}],[\"结构体的构成\",{\"1\":{\"2372\":1}}],[\"结构体的指针\",{\"1\":{\"2342\":1}}],[\"结构体的值\",{\"1\":{\"2176\":1}}],[\"结构体的地址\",{\"1\":{\"2141\":1}}],[\"结构体的后面\",{\"1\":{\"2115\":1}}],[\"结构体的每一个字段都要把起始地址当作地址0\",{\"1\":{\"1968\":1}}],[\"结构体的起始地址需要是对齐系数的倍数\",{\"1\":{\"1968\":1}}],[\"结构体内存对齐规则\",{\"0\":{\"1963\":1}}],[\"结构体\",{\"0\":{\"1920\":1},\"1\":{\"2017\":1,\"2023\":1,\"2068\":1,\"2071\":1,\"2088\":1,\"2098\":1,\"2104\":1,\"2139\":1,\"2345\":1,\"2349\":1,\"2356\":1,\"2366\":2,\"2372\":1,\"2408\":1,\"2416\":1,\"2433\":1,\"2449\":1,\"2455\":1}}],[\"结构体缓存起来\",{\"1\":{\"1913\":1,\"2066\":1}}],[\"结构设计更为简便\",{\"1\":{\"1915\":1}}],[\"结构如下\",{\"1\":{\"1902\":1}}],[\"结构上可分割开\",{\"1\":{\"727\":1}}],[\"结果\",{\"1\":{\"3286\":1}}],[\"结果相对于上面一种较好\",{\"1\":{\"44\":1}}],[\"结果比较不理想\",{\"1\":{\"25\":1}}],[\"结果如下\",{\"1\":{\"23\":1,\"44\":1,\"1467\":1}}],[\"某一层可以使用其下一层提供的服务而不需要知道服务是如何实现的\",{\"1\":{\"725\":1}}],[\"某个表上的查询语句频繁\",{\"1\":{\"339\":1}}],[\"各种锁的实现\",{\"1\":{\"2891\":1}}],[\"各层可以采用最合适的技术来实现\",{\"1\":{\"727\":1}}],[\"各层之间是独立的\",{\"1\":{\"725\":1}}],[\"各并发事务之间数据库是独立的\",{\"1\":{\"558\":1}}],[\"远程登录\",{\"1\":{\"719\":1}}],[\"管理源代码工具\",{\"1\":{\"2893\":1}}],[\"管理一种\",{\"1\":{\"2526\":1}}],[\"管理着虚拟地址空间中一大段连续的内存\",{\"1\":{\"2521\":1}}],[\"管理\",{\"1\":{\"715\":1}}],[\"帧校验序列\",{\"1\":{\"1342\":1}}],[\"帧\",{\"1\":{\"709\":1}}],[\"尽量多的信用来抵消自己欠下的债务\",{\"1\":{\"2584\":1}}],[\"尽量使用长连接\",{\"1\":{\"69\":1}}],[\"尽管浏览器的预加载扫描器加速了这个过程\",{\"1\":{\"1408\":1}}],[\"尽可能地保证网络流畅\",{\"1\":{\"924\":1}}],[\"尽可能屏蔽掉具体传输介质和物理设备的差异\",{\"1\":{\"707\":1}}],[\"尽最大努力交付的\",{\"1\":{\"785\":1}}],[\"预定义的全局变量\",{\"1\":{\"3388\":1}}],[\"预分配的\",{\"1\":{\"2789\":1}}],[\"预估容量\",{\"1\":{\"1721\":1}}],[\"预估规则\",{\"1\":{\"1712\":1}}],[\"预估扩容后的容量\",{\"1\":{\"1711\":1}}],[\"预加载扫描仪提供的优化减少了阻塞\",{\"1\":{\"1410\":1}}],[\"预加载扫描仪将解析可用的内容并请求高优先级资源\",{\"1\":{\"1410\":1}}],[\"预加载扫描器将找到脚本和图像\",{\"1\":{\"1412\":1}}],[\"预加载扫描器\",{\"0\":{\"1409\":1}}],[\"预处理阶段\",{\"1\":{\"699\":1}}],[\"预读的长度一般为页\",{\"1\":{\"496\":1}}],[\"架构的指令集\",{\"1\":{\"2745\":1}}],[\"架构上的\",{\"1\":{\"2741\":1}}],[\"架构模式是插件式\",{\"1\":{\"695\":1}}],[\"架构示意图\",{\"1\":{\"56\":1}}],[\"版本后\",{\"1\":{\"2963\":1}}],[\"版本后移除\",{\"1\":{\"691\":1}}],[\"版本发布后就归档不再改动\",{\"1\":{\"2888\":1}}],[\"版本里面并没有注册链表啊\",{\"1\":{\"2457\":1}}],[\"版本\",{\"1\":{\"2455\":1,\"3193\":1,\"3354\":1}}],[\"版本又会又怎么样的优化呢\",{\"1\":{\"2422\":1}}],[\"版本的\",{\"1\":{\"2422\":1,\"2458\":1}}],[\"版本中的处理方式在堆上分配\",{\"1\":{\"2417\":1}}],[\"版本并不是所有的\",{\"1\":{\"2417\":1}}],[\"版本是\",{\"1\":{\"1541\":1}}],[\"版本号\",{\"1\":{\"1540\":1,\"1550\":1,\"3321\":1}}],[\"版本直接将查询缓存的整块功能删掉了\",{\"1\":{\"74\":1}}],[\"恢复后\",{\"1\":{\"2945\":1}}],[\"恢复\",{\"1\":{\"2575\":1}}],[\"恢复数据会对\",{\"1\":{\"680\":1}}],[\"恢复数据\",{\"1\":{\"676\":1}}],[\"恢复数据时候\",{\"1\":{\"676\":1}}],[\"恢复的数据为\",{\"1\":{\"674\":1}}],[\"恢复出来的这一行\",{\"1\":{\"134\":1,\"135\":1}}],[\"例子\",{\"1\":{\"1723\":1}}],[\"例子依旧是上面的更新语句\",{\"1\":{\"672\":1}}],[\"例如当有人在仓库中提交文件\",{\"1\":{\"3410\":1}}],[\"例如运行测试\",{\"1\":{\"3403\":1}}],[\"例如跨语言调用等\",{\"1\":{\"3313\":1}}],[\"例如将它们序列化为二进制数据\",{\"1\":{\"3274\":1}}],[\"例如订单服务\",{\"1\":{\"3261\":1}}],[\"例如range\",{\"1\":{\"3019\":1}}],[\"例如虽然像标记\",{\"1\":{\"2716\":1}}],[\"例如在删除灰色对象对白色对象的引用时候\",{\"1\":{\"2701\":1}}],[\"例如反射\",{\"1\":{\"2597\":1}}],[\"例如闭包的可变变量\",{\"1\":{\"2597\":1}}],[\"例如类型掩码\",{\"1\":{\"2229\":1,\"2241\":1}}],[\"例如amd64\",{\"1\":{\"2118\":1}}],[\"例如set\",{\"1\":{\"1566\":1}}],[\"例如图像\",{\"1\":{\"1436\":1}}],[\"例如一张图片\",{\"1\":{\"1408\":1}}],[\"例如怎么去选择索引\",{\"1\":{\"693\":1}}],[\"例如转账业务中\",{\"1\":{\"557\":1}}],[\"例如上面的34\",{\"1\":{\"480\":1}}],[\"例如\",{\"1\":{\"310\":1,\"379\":1,\"1094\":1,\"1100\":1,\"1255\":1,\"1263\":1,\"1562\":1,\"1563\":1,\"1850\":1,\"2009\":1,\"2012\":1,\"2013\":1,\"2293\":1,\"2604\":1,\"2704\":1,\"2745\":1,\"2787\":1,\"3020\":1,\"3021\":1}}],[\"例如银行的数据库\",{\"1\":{\"138\":1}}],[\"例如以下语句\",{\"1\":{\"82\":1}}],[\"关键字出现在类和类对象之外\",{\"1\":{\"3388\":1}}],[\"关键点\",{\"1\":{\"2923\":1,\"2943\":1}}],[\"关键函数\",{\"1\":{\"2793\":1}}],[\"关联的\",{\"1\":{\"2862\":2}}],[\"关联到一个\",{\"1\":{\"2838\":1}}],[\"关闭规则\",{\"1\":{\"3388\":1}}],[\"关闭服务\",{\"1\":{\"3327\":1}}],[\"关闭写屏障\",{\"1\":{\"2503\":1}}],[\"关闭浏览器或者服务器就会\",{\"1\":{\"1521\":1}}],[\"关闭连接时\",{\"1\":{\"857\":1}}],[\"关于权限的选择\",{\"1\":{\"3430\":1}}],[\"关于环境搭建\",{\"1\":{\"3319\":1}}],[\"关于实现\",{\"1\":{\"3283\":1}}],[\"关于newg的属性配置\",{\"1\":{\"2793\":1}}],[\"关于\",{\"1\":{\"2475\":1}}],[\"关于扩容\",{\"1\":{\"1822\":1}}],[\"关于slice建议去看slice讲解\",{\"1\":{\"1779\":1}}],[\"关于tcp的一些知识可以看下面这篇文章\",{\"1\":{\"1283\":1}}],[\"关于内存的流程\",{\"1\":{\"668\":1}}],[\"关注的是用户账户余额表和用户课程表\",{\"1\":{\"301\":1}}],[\"行的代码\",{\"1\":{\"3312\":1}}],[\"行为\",{\"1\":{\"3073\":1}}],[\"行数据\",{\"1\":{\"662\":1}}],[\"行锁就是针对数据表中行记录的锁\",{\"1\":{\"351\":1}}],[\"行锁\",{\"0\":{\"350\":1}}],[\"允许指定模块加载时的进口\",{\"1\":{\"3388\":1}}],[\"允许调用首字母大写的函数时没有\",{\"1\":{\"3388\":1}}],[\"允许使用\",{\"1\":{\"3388\":1}}],[\"允许出现黑色对象对白色对象的引用\",{\"1\":{\"2691\":1}}],[\"允许\",{\"1\":{\"1477\":1}}],[\"允许值\",{\"1\":{\"654\":1}}],[\"允许读取已经事务提交的数据\",{\"1\":{\"573\":1}}],[\"允许读取尚未提交的数据变更\",{\"1\":{\"572\":1}}],[\"让客户端使用更加贴近本地调用方式\",{\"1\":{\"3294\":1}}],[\"让你开心的语法\",{\"1\":{\"3238\":1}}],[\"让他们都共用一个\",{\"1\":{\"2104\":1}}],[\"让innodb存储引擎拥有了崩溃恢复能力\",{\"1\":{\"651\":1}}],[\"让其他事务得以继续执行\",{\"1\":{\"377\":1}}],[\"功能层面的事情\",{\"1\":{\"637\":1}}],[\"与外层作用域的变量同名\",{\"1\":{\"3388\":1}}],[\"与find类似但找不到子串时会引发异常\",{\"1\":{\"3048\":1}}],[\"与其他协程不同\",{\"1\":{\"2829\":1}}],[\"与第一个字符串为路径\",{\"1\":{\"2783\":1}}],[\"与第二条目的\",{\"1\":{\"1316\":1}}],[\"与用户程序交互时候\",{\"1\":{\"2704\":1}}],[\"与指向\",{\"1\":{\"2055\":1}}],[\"与运算后\",{\"1\":{\"1371\":1,\"1373\":1}}],[\"与运算\",{\"1\":{\"1315\":1,\"1316\":1}}],[\"与mss\",{\"1\":{\"1296\":1}}],[\"与302类似\",{\"1\":{\"1121\":1}}],[\"与301类似\",{\"1\":{\"1106\":1,\"1109\":1}}],[\"与分层体系结构的思想相似的日常生活有邮政系统\",{\"1\":{\"730\":1}}],[\"与原库值不一致\",{\"1\":{\"674\":1,\"676\":1}}],[\"与原库的值不同\",{\"1\":{\"134\":1,\"135\":1}}],[\"与\",{\"0\":{\"703\":1},\"1\":{\"628\":1,\"654\":1,\"1295\":1,\"1373\":1,\"1464\":1,\"2212\":1,\"2299\":2,\"2446\":1,\"2528\":1,\"2827\":1,\"2831\":1,\"3247\":1}}],[\"小一点\",{\"1\":{\"3023\":1}}],[\"小于\",{\"1\":{\"3002\":1}}],[\"小于等于\",{\"1\":{\"3002\":1}}],[\"小于1024时\",{\"1\":{\"1714\":1}}],[\"小对象分配时先从本地\",{\"1\":{\"2528\":1}}],[\"小白debug\",{\"1\":{\"1596\":1}}],[\"小结\",{\"1\":{\"834\":1}}],[\"小贴士\",{\"1\":{\"617\":1}}],[\"小时\",{\"1\":{\"67\":1}}],[\"意为运行时的创生\",{\"1\":{\"2746\":1}}],[\"意向排他锁\",{\"1\":{\"609\":1}}],[\"意向共享锁\",{\"1\":{\"608\":1}}],[\"意向锁\",{\"1\":{\"606\":1}}],[\"意味着扇出\",{\"1\":{\"488\":1}}],[\"意味着如果采用第一个策略\",{\"1\":{\"378\":1}}],[\"意味着如果你只执行一个\",{\"1\":{\"175\":1}}],[\"意味着不需要建立a的索引了\",{\"1\":{\"266\":1}}],[\"应重置文档视图\",{\"1\":{\"1094\":1}}],[\"应用的是标记\",{\"1\":{\"2508\":1}}],[\"应用广泛\",{\"1\":{\"1184\":1}}],[\"应用层\",{\"1\":{\"718\":1,\"1044\":1}}],[\"应用于数据更新比较频繁的场景\",{\"1\":{\"602\":1}}],[\"应该写数字而不是error\",{\"1\":{\"3395\":1}}],[\"应该没卵用了\",{\"1\":{\"3388\":1}}],[\"应该可以弥补这一点\",{\"1\":{\"2795\":1}}],[\"应该永不返回\",{\"1\":{\"2761\":1}}],[\"应该引用\",{\"1\":{\"2707\":1}}],[\"应该会显示已经抓到了一些数据\",{\"1\":{\"1485\":1}}],[\"应该会有两个nginx\",{\"1\":{\"1478\":1}}],[\"应该是一个动态变化的值\",{\"1\":{\"897\":1}}],[\"应该也可以使全库处于只读状态\",{\"1\":{\"311\":1}}],[\"应该如何安排索引内字段顺序\",{\"1\":{\"265\":1}}],[\"认为最优的方案去执行\",{\"1\":{\"693\":1}}],[\"认为数据随时会被修改\",{\"1\":{\"602\":1}}],[\"认为扫描的行数是\",{\"1\":{\"248\":1}}],[\"悲观锁\",{\"1\":{\"602\":1}}],[\"若\",{\"1\":{\"3211\":1}}],[\"若存在尚未清扫的可用\",{\"1\":{\"2589\":1}}],[\"若被更新过\",{\"1\":{\"601\":1}}],[\"若隔离级别是\",{\"1\":{\"155\":1,\"156\":1,\"157\":1,\"158\":1,\"160\":1,\"161\":1,\"162\":1,\"163\":1}}],[\"乐观锁\",{\"1\":{\"601\":1}}],[\"×\",{\"1\":{\"585\":1,\"589\":1,\"590\":1,\"593\":1,\"594\":1,\"595\":1}}],[\"√\",{\"1\":{\"581\":1,\"582\":1,\"583\":1,\"586\":1,\"587\":1,\"591\":1}}],[\"幻影读\",{\"1\":{\"579\":1}}],[\"幻读的重点是数据的新增和删除\",{\"1\":{\"569\":1}}],[\"幻读\",{\"1\":{\"145\":1,\"565\":1}}],[\"前后腰需要\",{\"1\":{\"3388\":1}}],[\"前后数据不一致\",{\"1\":{\"568\":1}}],[\"前缀的都是系统协程\",{\"1\":{\"2793\":1}}],[\"前缀索引是对文本的前几个字符创建索引\",{\"1\":{\"511\":1}}],[\"前缀索引只适用于字符串类型的数据\",{\"1\":{\"511\":1}}],[\"前缀索引\",{\"1\":{\"511\":1}}],[\"前缀索引等都是属于二级索引\",{\"1\":{\"508\":1}}],[\"前\",{\"1\":{\"2447\":1}}],[\"前言\",{\"0\":{\"1991\":1,\"2201\":1,\"2734\":1,\"2899\":1,\"3372\":1}}],[\"前言知识\",{\"0\":{\"1926\":1}}],[\"前面是否需要空格\",{\"1\":{\"3388\":1}}],[\"前面我们介绍过\",{\"1\":{\"2356\":1}}],[\"前面所提到的\",{\"1\":{\"1683\":1}}],[\"前面两次的序列号都随机生成\",{\"1\":{\"800\":1}}],[\"前两个包可能是告知对方\",{\"1\":{\"1509\":1}}],[\"前者是\",{\"1\":{\"1203\":1}}],[\"前⼀个\",{\"1\":{\"739\":1}}],[\"访问器\",{\"1\":{\"3083\":1,\"3084\":2}}],[\"访问可见性问题\",{\"1\":{\"3079\":1}}],[\"访问内存的次数\",{\"1\":{\"1935\":1}}],[\"访问内存的单位也是\",{\"1\":{\"1932\":1}}],[\"访问内存时\",{\"1\":{\"1932\":1}}],[\"访问刚才启动的openresty服务器\",{\"1\":{\"1483\":1}}],[\"访问假的淘宝\",{\"1\":{\"1196\":1}}],[\"访问表里面一些数据\",{\"1\":{\"566\":1}}],[\"访问了数据\",{\"1\":{\"564\":1}}],[\"访问了并使用了修改后的数据\",{\"1\":{\"562\":1}}],[\"正则表达式\",{\"0\":{\"3178\":1}}],[\"正负号\",{\"1\":{\"2990\":1}}],[\"正处于自旋状态的m数量\",{\"1\":{\"2872\":1}}],[\"正等待运行\",{\"1\":{\"2868\":1}}],[\"正在被阻塞\",{\"1\":{\"2868\":1}}],[\"正在执行系统调用\",{\"1\":{\"2868\":1}}],[\"正在运行中\",{\"1\":{\"2868\":1}}],[\"正在可运行队列等待运行\",{\"1\":{\"2868\":1}}],[\"正在寻找可执行的\",{\"1\":{\"2862\":1}}],[\"正在等待执行\",{\"1\":{\"2849\":1}}],[\"正在访问数据\",{\"1\":{\"562\":1}}],[\"正常流程执行defer时它就是nil\",{\"1\":{\"2350\":1,\"2362\":1,\"2373\":1,\"2420\":1}}],[\"正常情况下我们还是要采用第二种策略\",{\"1\":{\"381\":1}}],[\"正是因为扩容过程中会发生键值对迁移\",{\"1\":{\"1873\":1}}],[\"脏读\",{\"1\":{\"561\":1,\"577\":1}}],[\"转化成\",{\"1\":{\"2219\":1}}],[\"转发过程如下\",{\"1\":{\"1367\":1}}],[\"转账者和收款人的总额应该是不变的\",{\"1\":{\"557\":1}}],[\"转换以后方便\",{\"1\":{\"2219\":1}}],[\"转换成十六进制就是e4b8a5\",{\"1\":{\"1755\":1}}],[\"转换\",{\"1\":{\"553\":1}}],[\"无需再次进行追踪\",{\"1\":{\"2624\":1}}],[\"无状态双刃剑\",{\"1\":{\"1186\":1}}],[\"无内容\",{\"1\":{\"1091\":1}}],[\"无论有没有该属性\",{\"1\":{\"3212\":1}}],[\"无论异常是否发生都会执行\",{\"1\":{\"3119\":1}}],[\"无论如何不允许出现黑色对象到白色对象的引用\",{\"1\":{\"2698\":1}}],[\"无论是显示的\",{\"1\":{\"2417\":1}}],[\"无论是空接口还是非空接口\",{\"1\":{\"2087\":1}}],[\"无论对参数做怎么样的修改\",{\"1\":{\"2215\":1}}],[\"无论做什么处理\",{\"1\":{\"2125\":1}}],[\"无论什么数与m\",{\"1\":{\"1805\":1}}],[\"无论该设备连接在哪个端口上都能收到这个包\",{\"1\":{\"1350\":1}}],[\"无论的网络链路中出现了怎样的链路变化\",{\"1\":{\"737\":1}}],[\"无论事务是否成功\",{\"1\":{\"557\":1}}],[\"无效就会回滚事务\",{\"1\":{\"683\":1}}],[\"无法打开指定的文件\",{\"1\":{\"3175\":1}}],[\"无法构成三角形\",{\"1\":{\"3090\":1}}],[\"无法为数组添加和删除元素\",{\"1\":{\"1646\":1}}],[\"无法证明报文的完整性\",{\"1\":{\"1197\":1}}],[\"无法完成请求\",{\"1\":{\"1139\":1,\"1142\":1}}],[\"无法防止历史连接的建立\",{\"1\":{\"838\":1}}],[\"无法解决问题\",{\"1\":{\"572\":1}}],[\"无法直接干预\",{\"1\":{\"324\":1}}],[\"向文件里面写数据\",{\"1\":{\"3176\":1}}],[\"向下一阶段过度的信息等等\",{\"1\":{\"2481\":1}}],[\"向这样去收录很多字符进行统一编号\",{\"1\":{\"1738\":1}}],[\"向资源提交数据\",{\"1\":{\"1576\":1}}],[\"向服务端发送ack确认应答报文\",{\"1\":{\"853\":1,\"1397\":1}}],[\"向\",{\"1\":{\"553\":1}}],[\"9a\",{\"1\":{\"3205\":1}}],[\"95\",{\"1\":{\"3069\":1}}],[\"9b9438dff7a2\",{\"1\":{\"1046\":1}}],[\"967\",{\"1\":{\"654\":1}}],[\"9\",{\"0\":{\"548\":1,\"660\":1,\"847\":1,\"1209\":1},\"1\":{\"1202\":1,\"1631\":1,\"1638\":1,\"1687\":1,\"1702\":1,\"2795\":1,\"2885\":1,\"3054\":1,\"3205\":1,\"3256\":1,\"3388\":1}}],[\"解包参数\",{\"1\":{\"3277\":1}}],[\"解压工具\",{\"1\":{\"2891\":1}}],[\"解析处理命令行参数的工具\",{\"1\":{\"2891\":1}}],[\"解析所有步骤\",{\"0\":{\"1444\":1}}],[\"解析步骤\",{\"1\":{\"1426\":1}}],[\"解析和执行\",{\"1\":{\"1421\":1}}],[\"解析也可以继续进行\",{\"1\":{\"1408\":1}}],[\"解析器将标记化的输入解析到文档中\",{\"1\":{\"1404\":1}}],[\"解析\",{\"1\":{\"1254\":1,\"1401\":1}}],[\"解析阶段\",{\"1\":{\"698\":1}}],[\"解释\",{\"1\":{\"539\":1,\"2688\":1,\"3255\":1}}],[\"解决这一问题的办法主要是使用多个链表\",{\"1\":{\"2512\":1}}],[\"解决了碎片化问题\",{\"1\":{\"2653\":1}}],[\"解决了内存碎片化的问题\",{\"1\":{\"2641\":1}}],[\"解决了冒充的风险\",{\"1\":{\"1208\":1}}],[\"解决了篡改的风险\",{\"1\":{\"1207\":1}}],[\"解决了窃听的风险\",{\"1\":{\"1206\":1}}],[\"解决方案\",{\"1\":{\"3435\":1,\"3442\":1}}],[\"解决方案之一\",{\"1\":{\"1645\":1}}],[\"解决方式\",{\"1\":{\"1188\":1,\"1193\":1,\"1198\":1,\"3308\":1}}],[\"解决方法\",{\"1\":{\"466\":1,\"3347\":1}}],[\"解决的策略有以下几种\",{\"1\":{\"386\":1}}],[\"解决死锁的有两种策略\",{\"1\":{\"375\":1}}],[\"解决长事务\",{\"1\":{\"341\":1}}],[\"账号信息容易泄漏\",{\"1\":{\"1195\":1}}],[\"账单\",{\"1\":{\"537\":1}}],[\"账户余额中扣除电影票价\",{\"1\":{\"364\":1}}],[\"分工开发易冲突等问题\",{\"1\":{\"3261\":1}}],[\"分类一共有\",{\"1\":{\"2525\":1}}],[\"分配到堆上的数据\",{\"1\":{\"2601\":1,\"2604\":1}}],[\"分配到栈上的数据\",{\"1\":{\"2600\":1}}],[\"分配大对象时\",{\"1\":{\"2588\":1}}],[\"分配给函数的栈空间被称为函数栈帧\",{\"1\":{\"2268\":1}}],[\"分配新桶数目是旧桶的2倍\",{\"1\":{\"1848\":1}}],[\"分支\",{\"1\":{\"2091\":1,\"3388\":1,\"3428\":1}}],[\"分隔符\",{\"1\":{\"2783\":1}}],[\"分隔\",{\"1\":{\"1559\":1}}],[\"分割数据包\",{\"0\":{\"1293\":1}}],[\"分割得每一部分都代表不同得层次\",{\"1\":{\"1263\":1}}],[\"分层有什么意义\",{\"0\":{\"724\":1}}],[\"分组或者包\",{\"1\":{\"711\":1}}],[\"分别存储参数的数量和具体的参数的值\",{\"1\":{\"2747\":1}}],[\"分别位于\",{\"1\":{\"2741\":1}}],[\"分别管理\",{\"1\":{\"2526\":1}}],[\"分别执行了多长时间等信息\",{\"1\":{\"2478\":1}}],[\"分别注册了两个\",{\"1\":{\"2384\":1}}],[\"分别是局部变量\",{\"1\":{\"2273\":1}}],[\"分别是\",{\"1\":{\"1472\":1,\"2555\":1}}],[\"分别应用的场景是哪儿\",{\"0\":{\"763\":1}}],[\"分别会在哪一个部分报错\",{\"0\":{\"696\":1}}],[\"分别说明每个模式的优缺点\",{\"1\":{\"632\":1}}],[\"分析\",{\"1\":{\"692\":2}}],[\"分析器会做两件事情\",{\"1\":{\"697\":1}}],[\"分析器先会作词法分析\",{\"1\":{\"77\":1}}],[\"分析器\",{\"0\":{\"75\":1},\"1\":{\"59\":1,\"692\":1}}],[\"分场景去选择\",{\"1\":{\"536\":1}}],[\"年龄是联合索引\",{\"1\":{\"524\":1,\"532\":1}}],[\"全局安装eslint\",{\"1\":{\"3381\":1}}],[\"全局g队列大小\",{\"1\":{\"2872\":1}}],[\"全局的g队列\",{\"1\":{\"2872\":1}}],[\"全局唯一id\",{\"1\":{\"2872\":1}}],[\"全局变量\",{\"1\":{\"2839\":1}}],[\"全局\",{\"1\":{\"2839\":1}}],[\"全局锁主要用在逻辑备份过程中\",{\"1\":{\"345\":1}}],[\"全局锁的经典使用场景是\",{\"1\":{\"294\":1}}],[\"全局锁就是对整个数据库实例加锁\",{\"1\":{\"293\":1}}],[\"全局锁\",{\"0\":{\"292\":1}}],[\"全局锁和表锁\",{\"0\":{\"290\":1}}],[\"全部为这个符号的\",{\"1\":{\"1752\":1}}],[\"全文索引主要是为了检索大文本数据中的关键字的信息\",{\"1\":{\"512\":1}}],[\"全文索引\",{\"1\":{\"512\":1}}],[\"唯一不同的是虚部的i换成了j\",{\"1\":{\"2972\":1}}],[\"唯一索引和普通索引在查询上面性能上是差不多的\",{\"1\":{\"540\":1}}],[\"唯一索引的属性列不能出现重复的数据\",{\"1\":{\"509\":1}}],[\"唯一索引也是一种约束\",{\"1\":{\"509\":1}}],[\"唯一索引\",{\"1\":{\"508\":1,\"509\":1,\"542\":1}}],[\"唯一性索引\",{\"1\":{\"446\":1}}],[\"字典的每个元素都是由一个键和一个值组成的\",{\"1\":{\"3067\":1}}],[\"字典\",{\"0\":{\"3066\":1}}],[\"字的长度\",{\"1\":{\"1928\":1}}],[\"字长为\",{\"1\":{\"1932\":1}}],[\"字长\",{\"1\":{\"1928\":1}}],[\"字是电脑用来一次性处理事务的一个固定长度\",{\"1\":{\"1927\":1}}],[\"字\",{\"1\":{\"1927\":1}}],[\"字符编码笔记\",{\"1\":{\"1781\":1}}],[\"字符输出\",{\"1\":{\"1774\":1}}],[\"字符串通过变量去使用\",{\"1\":{\"3304\":1}}],[\"字符串和实体一一对应很容易出现错误\",{\"1\":{\"3291\":1}}],[\"字符串和数字比较\",{\"1\":{\"552\":1}}],[\"字符串切片\",{\"1\":{\"3048\":1}}],[\"字符串是以单引号或双引号括起来的任意文本\",{\"1\":{\"2970\":1}}],[\"字符串型\",{\"1\":{\"2970\":1}}],[\"字符串格式化的利器\",{\"1\":{\"1783\":1}}],[\"字符串并没有修改原本的内存对应内容\",{\"1\":{\"1778\":1}}],[\"字符串变量是可以共用底层字符串实现的\",{\"1\":{\"1777\":1}}],[\"字符串在编程中经常会被使用到\",{\"1\":{\"1777\":1}}],[\"字符串一般是由char\",{\"1\":{\"1770\":1}}],[\"字符串\",{\"0\":{\"1756\":1,\"3045\":1},\"1\":{\"3245\":1}}],[\"字符如何表示\",{\"1\":{\"1737\":1}}],[\"字符集\",{\"0\":{\"1735\":1}}],[\"字节流性质的格式\",{\"1\":{\"2891\":1}}],[\"字节byte\",{\"1\":{\"1929\":1}}],[\"字节输出\",{\"1\":{\"1774\":1}}],[\"字节的第一位设为0\",{\"1\":{\"1751\":1}}],[\"字节的数据后\",{\"1\":{\"1037\":1,\"1040\":1}}],[\"字节的数据\",{\"1\":{\"1034\":1}}],[\"字节数据的确认报文后\",{\"1\":{\"1038\":1,\"1039\":1,\"1042\":1}}],[\"字节数据\",{\"1\":{\"1036\":1}}],[\"字节数据后\",{\"1\":{\"1035\":1}}],[\"字节后\",{\"1\":{\"1034\":1,\"1041\":1}}],[\"字节已确认\",{\"1\":{\"1018\":1}}],[\"字节\",{\"1\":{\"503\":1,\"1011\":1,\"1012\":1,\"1034\":1,\"1035\":1,\"1037\":1,\"1041\":1,\"1042\":1,\"1158\":1,\"1297\":1,\"1644\":1,\"1932\":2,\"1954\":1,\"1957\":1,\"1977\":1}}],[\"字段通过判断恢复到\",{\"1\":{\"2945\":1}}],[\"字段去判断的\",{\"1\":{\"2941\":1}}],[\"字段可以通过返回地址的值\",{\"1\":{\"2940\":1}}],[\"字段能够回到函数\",{\"1\":{\"2940\":1}}],[\"字段取出来\",{\"1\":{\"2221\":1}}],[\"字段接受的是\",{\"1\":{\"2214\":1}}],[\"字段是响应字段\",{\"1\":{\"1571\":1}}],[\"字段是一个通用字段\",{\"1\":{\"1570\":1}}],[\"字段原则上不能重复\",{\"1\":{\"1566\":1}}],[\"字段的顺序是没有意义的\",{\"1\":{\"1565\":1}}],[\"字段名后面必须紧接着\",{\"1\":{\"1564\":1}}],[\"字段名里不允许出现空格\",{\"1\":{\"1563\":1}}],[\"字段名不区分大小写\",{\"1\":{\"1562\":1}}],[\"字段加\",{\"1\":{\"637\":1,\"646\":1}}],[\"字段上有索引树\",{\"0\":{\"548\":1}}],[\"字段普通索引\",{\"1\":{\"269\":1}}],[\"字段放在左边\",{\"1\":{\"269\":1}}],[\"字段\",{\"1\":{\"133\":1,\"867\":1,\"1568\":1,\"2241\":1,\"2244\":1,\"2345\":1,\"2537\":1,\"2932\":1}}],[\"聊一聊索引类型\",{\"0\":{\"498\":1}}],[\"相加\",{\"1\":{\"3104\":1}}],[\"相比生成式生成器不占用存储数据的空间\",{\"1\":{\"3052\":1}}],[\"相比普通索引建立的数据更小\",{\"1\":{\"511\":1}}],[\"相信大家在学校里面学过编译原理\",{\"1\":{\"2824\":1}}],[\"相反\",{\"1\":{\"2771\":1}}],[\"相等则选择这个分支\",{\"1\":{\"2091\":1}}],[\"相对或者绝对路径\",{\"1\":{\"3131\":1}}],[\"相对于这个uncommontype结构体偏移了多少字节\",{\"1\":{\"2018\":1}}],[\"相对安全\",{\"1\":{\"803\":1}}],[\"相当于在执行生成器函数了\",{\"1\":{\"3256\":1}}],[\"相当于执行了这句话\",{\"1\":{\"3238\":1}}],[\"相当于正常的异常报错\",{\"1\":{\"3112\":1}}],[\"相当于一个g缓存池\",{\"1\":{\"2864\":1}}],[\"相当于一个符号查找表\",{\"1\":{\"2109\":1}}],[\"相当于我们当前函数的返回值空间的已经多了一个命名好的变量\",{\"1\":{\"2325\":1}}],[\"相当于我要借东西\",{\"1\":{\"1536\":1}}],[\"相当于此时进行一个\",{\"1\":{\"2324\":1}}],[\"相当于是从右至左逐一入栈的\",{\"1\":{\"2274\":1}}],[\"相当于\",{\"1\":{\"2193\":1}}],[\"相当于写入或上传数据\",{\"1\":{\"1576\":1}}],[\"相互重叠时\",{\"1\":{\"1443\":1}}],[\"相应可返回一个资源特征与地址的列表用于用户终端\",{\"1\":{\"1100\":1}}],[\"相关配置如下\",{\"1\":{\"3427\":1}}],[\"相关的配置请参考官方文档\",{\"1\":{\"3420\":1}}],[\"相关的代码了\",{\"1\":{\"2365\":1}}],[\"相关部分\",{\"0\":{\"3405\":1}}],[\"相关业务函数\",{\"1\":{\"3325\":1}}],[\"相关操作与读写文本文件一致\",{\"1\":{\"3177\":1}}],[\"相关操作如下\",{\"1\":{\"3047\":1,\"3051\":1,\"3057\":1,\"3068\":1}}],[\"相关联\",{\"1\":{\"2862\":1}}],[\"相关\",{\"1\":{\"654\":1,\"2008\":1,\"3388\":1}}],[\"相关代码\",{\"1\":{\"33\":1}}],[\"相邻节点也能被预先载入\",{\"1\":{\"497\":1}}],[\"使那些没有注册到链表的\",{\"1\":{\"2458\":1}}],[\"使得分布式系统的开发更加方便和灵活\",{\"1\":{\"3283\":1}}],[\"使得对属性的访问既安全又方便\",{\"1\":{\"3083\":1}}],[\"使得在字符串接收时\",{\"1\":{\"1770\":1}}],[\"使得每一次\",{\"1\":{\"497\":1}}],[\"使用一致的空格\",{\"1\":{\"3388\":1}}],[\"使用一段时间\",{\"1\":{\"71\":1}}],[\"使用括号括起来\",{\"1\":{\"3388\":1}}],[\"使用基数参数\",{\"1\":{\"3388\":1}}],[\"使用保留字做属性名时\",{\"1\":{\"3388\":2}}],[\"使用错误级别的错误\",{\"1\":{\"3388\":1}}],[\"使用警告级别的错误\",{\"1\":{\"3388\":1}}],[\"使用方式\",{\"1\":{\"3296\":1}}],[\"使用方式与本地调用有差异\",{\"1\":{\"3289\":1}}],[\"使用上比较麻烦\",{\"1\":{\"3290\":1}}],[\"使用lambda保留字定义\",{\"1\":{\"3224\":1}}],[\"使用`open`函数时指定好带路径的文件名\",{\"1\":{\"3175\":1}}],[\"使用它进行存储\",{\"1\":{\"2755\":1}}],[\"使用连续的内存块\",{\"1\":{\"2654\":1}}],[\"使用率\",{\"1\":{\"2579\":1}}],[\"使用插入与删除两者写屏障结合的混合写屏障\",{\"1\":{\"2466\":1}}],[\"使用时候从栈上拷贝变量到参数空间\",{\"1\":{\"2412\":1,\"2438\":1}}],[\"使用时候需要从堆上拷贝到函数调用栈\",{\"1\":{\"2411\":1,\"2437\":1}}],[\"使用注意\",{\"0\":{\"1877\":1}}],[\"使用的是\",{\"1\":{\"2196\":1}}],[\"使用的是完全不同的连接方式\",{\"1\":{\"1203\":1}}],[\"使用的溢出桶数量\",{\"1\":{\"1834\":1}}],[\"使用的符号就更多了\",{\"1\":{\"1741\":1}}],[\"使用数组指针\",{\"1\":{\"1646\":1}}],[\"使用key\",{\"1\":{\"1527\":1}}],[\"使用鼠标双击\",{\"1\":{\"1477\":1}}],[\"使用\",{\"1\":{\"1201\":1,\"1202\":1,\"2755\":1,\"2793\":1,\"2795\":1,\"2884\":1,\"3025\":1,\"3120\":1,\"3173\":1,\"3388\":2,\"3425\":1}}],[\"使用get请求重定向\",{\"1\":{\"1121\":1}}],[\"使用get和post请求查看\",{\"1\":{\"1109\":1}}],[\"使用代理\",{\"1\":{\"1115\":1}}],[\"使用慢启动算法\",{\"1\":{\"976\":1}}],[\"使用常见的内置函数\",{\"1\":{\"551\":1}}],[\"使用限制\",{\"1\":{\"468\":1}}],[\"使用索引一定会提高查询速度\",{\"0\":{\"450\":1}}],[\"使用分组和排序语句\",{\"1\":{\"445\":1}}],[\"使用和维护数据库\",{\"1\":{\"398\":1}}],[\"使用参数\",{\"1\":{\"308\":1}}],[\"使用了b+\",{\"1\":{\"208\":1}}],[\"使用长连接\",{\"1\":{\"69\":1}}],[\"红黑树出度为2\",{\"1\":{\"493\":1}}],[\"红黑树等平均树不行吗\",{\"0\":{\"491\":1}}],[\"红黑树等\",{\"1\":{\"478\":1}}],[\"矮胖矮胖的\",{\"1\":{\"493\":1}}],[\"高频率的更新引用会带来不小的开销\",{\"1\":{\"2674\":1}}],[\"高位\",{\"1\":{\"2540\":2}}],[\"高度和位置\",{\"1\":{\"1433\":1}}],[\"高度低\",{\"1\":{\"493\":1}}],[\"高扇出\",{\"1\":{\"489\":1}}],[\"邻近键值的数据局部性更好\",{\"1\":{\"489\":1}}],[\"胖\",{\"1\":{\"488\":1}}],[\"叶子节点存储对应的主键值\",{\"1\":{\"487\":1}}],[\"叶子节点存整行数据\",{\"1\":{\"487\":1}}],[\"磁盘预读\",{\"1\":{\"485\":1}}],[\"逻辑运算符\",{\"1\":{\"3010\":1}}],[\"逻辑上挨着的节点数据会离得很远\",{\"1\":{\"480\":1}}],[\"逻辑一致的重要性\",{\"1\":{\"130\":1}}],[\"实例部署\",{\"0\":{\"3424\":1}}],[\"实例化客户端连接\",{\"1\":{\"3327\":1}}],[\"实例化grpc服务\",{\"1\":{\"3325\":1,\"3342\":1}}],[\"实例化一个server\",{\"1\":{\"3287\":1,\"3311\":1}}],[\"实参和形参不在同一个地址\",{\"1\":{\"2293\":1}}],[\"实go语言中每种类型都有对应的类型元数据\",{\"1\":{\"1868\":1}}],[\"实体\",{\"1\":{\"1529\":1}}],[\"实际的大小\",{\"1\":{\"1916\":1}}],[\"实际传输的数据\",{\"1\":{\"1528\":1}}],[\"实际上白色对象并不是垃圾\",{\"1\":{\"2688\":1}}],[\"实际上在编译阶段会增加一个临时变量作为\",{\"1\":{\"2216\":1}}],[\"实际上这两种写法会生成同样的机器码\",{\"1\":{\"2159\":1}}],[\"实际上\",{\"1\":{\"897\":1,\"1913\":1,\"2030\":1}}],[\"实际上事务\",{\"1\":{\"359\":1}}],[\"实际上大多数的数据库存储却并不会使用二叉树\",{\"1\":{\"206\":1}}],[\"实际上每条记录在更新的时候都会同时记录一条回滚操作\",{\"1\":{\"166\":1}}],[\"实际上是01值二维矩阵\",{\"1\":{\"37\":1}}],[\"实验环境用到得应用软件\",{\"1\":{\"1456\":1}}],[\"实验环境\",{\"0\":{\"1455\":1}}],[\"实现三种数据流的业务逻辑\",{\"1\":{\"3342\":1}}],[\"实现代码\",{\"1\":{\"3338\":1}}],[\"实现sysmonwait事件通知\",{\"1\":{\"2872\":1}}],[\"实现stopwait事件通知\",{\"1\":{\"2872\":1}}],[\"实现线程间工作转移\",{\"1\":{\"2714\":1}}],[\"实现强\",{\"1\":{\"2692\":1}}],[\"实现困难\",{\"1\":{\"2673\":1}}],[\"实现简单\",{\"1\":{\"2633\":1}}],[\"实现\",{\"1\":{\"2421\":1}}],[\"实现了用于处理斜杠分隔符路径的函数\",{\"1\":{\"2891\":1}}],[\"实现了\",{\"1\":{\"2083\":1,\"2221\":1}}],[\"实现o\",{\"1\":{\"1799\":1}}],[\"实现可靠传输的方式之一\",{\"1\":{\"883\":1}}],[\"实现相邻计算机节点之间比特流的透明传送\",{\"1\":{\"707\":1}}],[\"实现原理\",{\"1\":{\"466\":1}}],[\"增量式垃圾回收\",{\"0\":{\"2678\":1}}],[\"增大到\",{\"1\":{\"1038\":1,\"1039\":1}}],[\"增删改操作多\",{\"1\":{\"460\":1}}],[\"增加或减少p的实例个数\",{\"1\":{\"2789\":1}}],[\"增加\",{\"1\":{\"1000\":1}}],[\"增加了复杂性\",{\"1\":{\"418\":1}}],[\"增加er图可读性\",{\"1\":{\"415\":1}}],[\"增加新的user时速度会很快\",{\"1\":{\"193\":1}}],[\"举例\",{\"1\":{\"676\":1,\"1372\":1,\"1754\":1,\"1953\":1}}],[\"举以下例子\",{\"1\":{\"550\":1}}],[\"举常用的例子\",{\"1\":{\"452\":1}}],[\"举个🌰\",{\"1\":{\"209\":1}}],[\"举个例子\",{\"1\":{\"2271\":1,\"3412\":1}}],[\"举个例子🌰\",{\"1\":{\"189\":1,\"197\":1,\"1891\":1,\"1901\":1,\"2019\":1,\"2102\":1,\"2110\":1,\"2157\":1,\"2209\":1,\"2231\":1,\"2252\":1}}],[\"举个例子来说明这四个事务隔离级别\",{\"1\":{\"152\":1}}],[\"场景\",{\"1\":{\"3425\":1,\"3441\":1}}],[\"场景很多\",{\"1\":{\"452\":1}}],[\"场景需求\",{\"1\":{\"230\":1}}],[\"大胆的想\",{\"1\":{\"3313\":1}}],[\"大黄\",{\"1\":{\"3099\":1}}],[\"大一点\",{\"1\":{\"3023\":1}}],[\"大写的a和小写的a是两个不同的变量\",{\"1\":{\"2976\":1}}],[\"大写字母a是65\",{\"1\":{\"1739\":1}}],[\"大写字母a如何在计算机中表示呢\",{\"1\":{\"1738\":1}}],[\"大于等于\",{\"1\":{\"3002\":1}}],[\"大于0\",{\"1\":{\"2574\":1}}],[\"大于\",{\"1\":{\"2524\":1,\"3002\":1}}],[\"大概是下图的样子\",{\"1\":{\"1478\":1}}],[\"大部分这些算法会优先考虑根据你的的搜索历史和书签\",{\"1\":{\"1250\":1}}],[\"大多数\",{\"1\":{\"1176\":2}}],[\"大量的数据\",{\"1\":{\"1024\":1}}],[\"大小写敏感\",{\"1\":{\"2976\":1}}],[\"大小的\",{\"1\":{\"1176\":1}}],[\"大小\",{\"1\":{\"992\":1,\"2008\":1}}],[\"大小缩小为当前的一半\",{\"1\":{\"991\":1}}],[\"大大加快数据的检索速度\",{\"1\":{\"444\":1}}],[\"大型网站技术架构\",{\"0\":{\"11\":1},\"1\":{\"3262\":1}}],[\"优雅的关闭tcp连接\",{\"1\":{\"862\":1}}],[\"优点\",{\"0\":{\"1179\":1},\"1\":{\"443\":1,\"2632\":1,\"2640\":1,\"2652\":1,\"2661\":1,\"2670\":1}}],[\"优化器是在表里面有多个索引的时候\",{\"1\":{\"81\":1}}],[\"优化器\",{\"0\":{\"80\":1},\"1\":{\"59\":1,\"693\":1}}],[\"常量等都会分配到数据段中\",{\"1\":{\"2597\":1}}],[\"常规桶数目没变\",{\"1\":{\"1861\":1}}],[\"常规桶起始地址\",{\"1\":{\"1834\":1}}],[\"常规桶个数等于2^b\",{\"1\":{\"1834\":1}}],[\"常见数据类型\",{\"1\":{\"2967\":1}}],[\"常见问题\",{\"0\":{\"1863\":1}}],[\"常见值\",{\"1\":{\"1152\":1}}],[\"常见字段\",{\"1\":{\"1150\":1}}],[\"常见的封锁类型有哪些\",{\"0\":{\"603\":1}}],[\"常见的实现有\",{\"1\":{\"478\":1}}],[\"常见的索引结构有\",{\"1\":{\"441\":1}}],[\"常用于构建分布式部署和微服务架构的系统\",{\"1\":{\"3269\":1}}],[\"常用于客户端要求服务器使用tcp持久连接\",{\"1\":{\"1160\":1}}],[\"常用平台默认对齐系数如下\",{\"1\":{\"1945\":1}}],[\"常用的数据结构二叉查找树\",{\"1\":{\"478\":1}}],[\"常用结构是什么\",{\"0\":{\"440\":1}}],[\"更简单点理解生成器就是一个迭代器\",{\"1\":{\"3252\":1}}],[\"更多的时候它是一种暗示或隐喻\",{\"1\":{\"3081\":1}}],[\"更多的超时导致更多的重发\",{\"1\":{\"895\":1}}],[\"更贴近于原始\",{\"1\":{\"2161\":1}}],[\"更贴近真实实现的写法\",{\"1\":{\"2158\":1,\"2166\":1}}],[\"更可靠的到达接收方\",{\"1\":{\"963\":1}}],[\"更长的时延\",{\"1\":{\"957\":1}}],[\"更少的查找次数\",{\"1\":{\"492\":1}}],[\"更好\",{\"1\":{\"432\":1}}],[\"更新字典中的元素\",{\"1\":{\"3069\":1}}],[\"更新或者删除\",{\"1\":{\"1796\":1}}],[\"更新记录写入\",{\"1\":{\"543\":1}}],[\"更新完成\",{\"1\":{\"121\":1,\"667\":1}}],[\"更新流程还涉及到两个重要的日志模块\",{\"1\":{\"98\":1}}],[\"讲讲常用\",{\"0\":{\"426\":1}}],[\"换句话说\",{\"1\":{\"1417\":1}}],[\"换句话说非主属性对码完全函数依赖\",{\"1\":{\"424\":1}}],[\"换算成一个确定的位置\",{\"1\":{\"187\":1}}],[\"消息正文又称为\",{\"1\":{\"1529\":1}}],[\"消息正文\",{\"1\":{\"1528\":1}}],[\"消息没有收到的时候\",{\"1\":{\"739\":1}}],[\"消息是\",{\"1\":{\"739\":1}}],[\"消除了非主属性对于码的传递函数依赖\",{\"1\":{\"425\":1}}],[\"消除了非主属性对于码的部分函数依赖\",{\"1\":{\"424\":1}}],[\"消耗\",{\"1\":{\"389\":1}}],[\"既满足了空接口类型的参数也符合传参值拷贝的语义\",{\"1\":{\"2216\":1}}],[\"既可以满足大部分内存分配需求\",{\"1\":{\"2513\":1}}],[\"既可以达到节约内存的目的\",{\"1\":{\"1651\":1}}],[\"既可以先从表t1里面取出c=10的记录的id值\",{\"1\":{\"84\":1}}],[\"既然\",{\"1\":{\"2963\":1}}],[\"既然一份任务多个线程来完成\",{\"1\":{\"2712\":1}}],[\"既然是一个非空接口\",{\"1\":{\"2223\":1}}],[\"既然拷贝不了值\",{\"1\":{\"2216\":1}}],[\"既然和普通函数一致\",{\"1\":{\"2167\":1}}],[\"既然每个桶里可以存储8个元素\",{\"1\":{\"1838\":1}}],[\"既然拿到了对方的mac地址\",{\"1\":{\"1382\":1}}],[\"既然要发送数据\",{\"1\":{\"1376\":1}}],[\"既然说到了窗口\",{\"0\":{\"927\":1}}],[\"既然谈到了\",{\"0\":{\"639\":1}}],[\"既然有外键\",{\"1\":{\"421\":1}}],[\"影响程序的并发性能\",{\"1\":{\"2837\":1}}],[\"影响内存管理的相关常量的初始化\",{\"1\":{\"2759\":1,\"2767\":1}}],[\"影响运行效率\",{\"1\":{\"1534\":1}}],[\"影响性能\",{\"1\":{\"420\":1,\"1935\":1}}],[\"影院的账户总额等于这\",{\"1\":{\"389\":1}}],[\"维基百科\",{\"1\":{\"2108\":1}}],[\"维护工作复杂\",{\"1\":{\"419\":1}}],[\"维持和管理连接\",{\"1\":{\"62\":1,\"690\":1}}],[\"联级操作方便\",{\"1\":{\"416\":1}}],[\"联合索引的最左\",{\"1\":{\"287\":1}}],[\"联合索引可以解决根据身份证号查询姓名高频请求\",{\"1\":{\"267\":1}}],[\"联合索引\",{\"1\":{\"266\":1,\"288\":1}}],[\"联合索引举例\",{\"1\":{\"259\":1}}],[\"联合索引呢\",{\"1\":{\"252\":1}}],[\"说明文件\",{\"1\":{\"2882\":1,\"2886\":1}}],[\"说明此对象是垃圾对象\",{\"1\":{\"2630\":1}}],[\"说明此网站已经缓存了\",{\"1\":{\"1493\":1}}],[\"说明\",{\"1\":{\"2164\":1,\"3076\":1,\"3181\":1}}],[\"说明已抵达终点\",{\"1\":{\"1379\":1}}],[\"说明下每个过程\",{\"1\":{\"1032\":1}}],[\"说明从\",{\"1\":{\"1001\":1}}],[\"说明被网络延迟了\",{\"1\":{\"920\":1}}],[\"说明了业务逻辑\",{\"1\":{\"415\":1}}],[\"说到这了\",{\"0\":{\"657\":1}}],[\"说到视图\",{\"1\":{\"306\":1}}],[\"说到一个问题\",{\"1\":{\"271\":1}}],[\"完成一定量的标记任务就会在全局\",{\"1\":{\"2584\":1}}],[\"完成上一轮\",{\"1\":{\"2486\":1}}],[\"完成工作\",{\"1\":{\"1510\":1}}],[\"完成英语六级考试\",{\"1\":{\"4\":1}}],[\"完全服从acid的隔离级别\",{\"1\":{\"575\":1}}],[\"完整性\",{\"1\":{\"414\":1}}],[\"由服务端返回一个响应\",{\"1\":{\"3335\":1}}],[\"由零个或多个字符组成的有限序列\",{\"1\":{\"3046\":1}}],[\"由lo及hi两个内存指针组成\",{\"1\":{\"2868\":1}}],[\"由deferproc的第二个参数传入\",{\"1\":{\"2350\":1,\"2362\":1,\"2373\":1,\"2420\":1}}],[\"由浅到深\",{\"1\":{\"1882\":1}}],[\"由三大部分组成\",{\"1\":{\"1525\":1}}],[\"由数据库自身最大限度保证数据一致性\",{\"1\":{\"414\":1}}],[\"由于python没有函数重载的概念\",{\"1\":{\"3030\":1}}],[\"由于在gc扫描的过程中肯定会处于某个前置状态\",{\"1\":{\"2868\":1}}],[\"由于数组长度不可变的特性等原因\",{\"1\":{\"1647\":1}}],[\"由于超载或系统维护\",{\"1\":{\"1148\":1}}],[\"由于语句的丢失\",{\"1\":{\"674\":1}}],[\"由于没有写入这一条记录\",{\"1\":{\"674\":1}}],[\"由于是\",{\"1\":{\"533\":1}}],[\"由于覆盖索引可以减少树的搜索次数\",{\"1\":{\"247\":1,\"520\":1}}],[\"由于这类型的树是平衡的\",{\"1\":{\"478\":1}}],[\"由于这些事务随时可能访问数据库里面的任何数据\",{\"1\":{\"171\":1}}],[\"由于这个语句的\",{\"1\":{\"134\":1}}],[\"由于\",{\"1\":{\"135\":1,\"335\":1,\"662\":1}}],[\"由于我们前面说过的\",{\"1\":{\"134\":1}}],[\"作为唯一的语句出现在\",{\"1\":{\"3388\":1}}],[\"作为标识符\",{\"1\":{\"3388\":1}}],[\"作为函数调用\",{\"1\":{\"3388\":1}}],[\"作为函数第一个参数引入\",{\"1\":{\"2164\":1}}],[\"作为一个关键的语言特性\",{\"1\":{\"2396\":1}}],[\"作为一个参数\",{\"1\":{\"2164\":1}}],[\"作为结构体字段的对齐边界\",{\"1\":{\"2206\":1}}],[\"作为返回值\",{\"1\":{\"2194\":1}}],[\"作为整体变量存放时的对齐字节数\",{\"1\":{\"2008\":1}}],[\"作为每个类型元数据的\",{\"1\":{\"2007\":1}}],[\"作为其他的结构体字段时候\",{\"1\":{\"1984\":1}}],[\"作为数字状态码补充\",{\"1\":{\"1552\":1}}],[\"作为网关或者代理工作的服务器尝试执行请求时\",{\"1\":{\"1145\":1}}],[\"作为mysql的索引\",{\"0\":{\"491\":1}}],[\"作为下一条记录的\",{\"1\":{\"226\":1}}],[\"作用是实现helloworld中的greeterserver\",{\"1\":{\"3325\":1}}],[\"作用\",{\"1\":{\"407\":1}}],[\"定长编码\",{\"1\":{\"1745\":1}}],[\"定义中最多允许的参数数量\",{\"1\":{\"3388\":1}}],[\"定义中出现重名参数\",{\"1\":{\"3388\":1}}],[\"定义对象的set存取器属性时\",{\"1\":{\"3388\":1}}],[\"定义一个结构体\",{\"1\":{\"3325\":1,\"3342\":1}}],[\"定义一个函数\",{\"1\":{\"3234\":1}}],[\"定义消息体\",{\"1\":{\"3321\":2}}],[\"定义消息服务\",{\"1\":{\"3321\":1}}],[\"定义proto\",{\"1\":{\"3321\":1}}],[\"定义接口\",{\"1\":{\"3272\":1}}],[\"定义类\",{\"1\":{\"3074\":1}}],[\"定义元组\",{\"1\":{\"3058\":1}}],[\"定义列表可以将列表的元素放在\",{\"1\":{\"3050\":1}}],[\"定义的伪指令会是怎么样的\",{\"1\":{\"2426\":1}}],[\"定义的两个方法\",{\"1\":{\"2020\":1}}],[\"定义了用来操作字节的函数\",{\"1\":{\"2891\":1}}],[\"定义了常用了内置类型\",{\"1\":{\"2891\":1}}],[\"定义了一系列方法获取类型各方面的信息\",{\"1\":{\"2205\":1}}],[\"定义了一个新的类型\",{\"1\":{\"2020\":1}}],[\"定义了一个拥有10个元素的数组d\",{\"1\":{\"1638\":1}}],[\"定义了一个叫做\",{\"1\":{\"959\":1}}],[\"定义了rune类型\",{\"1\":{\"1770\":1}}],[\"定义是int类型\",{\"1\":{\"1724\":1}}],[\"定义string类型的slice\",{\"1\":{\"1685\":1}}],[\"定义int类型的slice\",{\"1\":{\"1684\":1}}],[\"定义\",{\"1\":{\"404\":1,\"3321\":1}}],[\"定期merge\",{\"1\":{\"546\":1}}],[\"定期\",{\"1\":{\"125\":1}}],[\"定期断开长连接\",{\"1\":{\"71\":1}}],[\"外键弊大于利\",{\"1\":{\"421\":1}}],[\"外键的优点\",{\"1\":{\"413\":1}}],[\"外键可以有重复的\",{\"1\":{\"406\":1}}],[\"外键\",{\"1\":{\"403\":1}}],[\"外键有什么区别\",{\"0\":{\"401\":1}}],[\"通用换行模式\",{\"1\":{\"3148\":1}}],[\"通信里\",{\"1\":{\"1325\":1}}],[\"通信使用明文\",{\"1\":{\"1195\":1}}],[\"通信双⽅的主机之间就可以相互交换\",{\"1\":{\"753\":1}}],[\"通常在goroutine切换执行时\",{\"1\":{\"2891\":1}}],[\"通常因为gc带来的stw\",{\"1\":{\"2872\":1}}],[\"通常不会频繁申请大块内存\",{\"1\":{\"2513\":1}}],[\"通常\",{\"1\":{\"2276\":1,\"2307\":1}}],[\"通常被称之为\",{\"1\":{\"2114\":1}}],[\"通常需要设定一个触发扩容的最大负载因子\",{\"1\":{\"1826\":1}}],[\"通常有两个思路来解决\",{\"1\":{\"1811\":1}}],[\"通常是其入口地址\",{\"1\":{\"2109\":1}}],[\"通常是一个\",{\"1\":{\"1539\":1}}],[\"通常是随机生成的\",{\"1\":{\"1301\":1}}],[\"通常由软件\",{\"1\":{\"399\":1}}],[\"通常用于建立\",{\"1\":{\"398\":1}}],[\"通过生成\",{\"1\":{\"3344\":1}}],[\"通过生成器可以获取到数据但它不占用额外的空间存储数据\",{\"1\":{\"3052\":1}}],[\"通过网站或者口头告知\",{\"1\":{\"3280\":1}}],[\"通过object产生的空对象自动调用\",{\"1\":{\"3209\":1}}],[\"通过for\",{\"1\":{\"3175\":1}}],[\"通过for循环遍历列表元素\",{\"1\":{\"3054\":1}}],[\"通过python内置的open函数\",{\"1\":{\"3126\":1}}],[\"通过方法重写我们可以让父类的同一个行为在子类中拥有不同的实现版本\",{\"1\":{\"3098\":1}}],[\"通过方法变量执行方法时\",{\"1\":{\"2193\":1}}],[\"通过类方法创建对象并获取系统时间\",{\"1\":{\"3093\":1}}],[\"通过这个参数我们可以获取和类相关的信息并且可以创建出类的对象\",{\"1\":{\"3092\":1}}],[\"通过这个方法我们可以为学生对象绑定name和age两个属性\",{\"1\":{\"3075\":1}}],[\"通过这种方式来暗示属性是受保护的\",{\"1\":{\"3083\":1}}],[\"通过这样区分本地工作队列与全局工作缓存\",{\"1\":{\"2565\":1}}],[\"通过这样的方式\",{\"1\":{\"2120\":1}}],[\"通过键可以获取字典中对应的值\",{\"1\":{\"3069\":1}}],[\"通过zip函数将两个序列压成字典\",{\"1\":{\"3069\":1}}],[\"通过enumerate函数处理列表之后再遍历可以同时获得元素索引和值\",{\"1\":{\"3054\":1}}],[\"通过内置函数len计算字符串的长度\",{\"1\":{\"3048\":1}}],[\"通过判断回到\",{\"1\":{\"2940\":1}}],[\"通过查看测试程序可以学习到golang的用法和特性\",{\"1\":{\"2882\":1}}],[\"通过m\",{\"1\":{\"2872\":1}}],[\"通过把一个\",{\"1\":{\"2838\":1}}],[\"通过指针进行相互关联\",{\"1\":{\"2756\":1,\"2757\":1}}],[\"通过以上方式有效控制\",{\"1\":{\"2579\":1}}],[\"通过以下方式找到函数入口\",{\"1\":{\"2101\":1}}],[\"通过工作队列获取不到任务时\",{\"1\":{\"2564\":1}}],[\"通过一个对象的地址\",{\"1\":{\"2544\":1}}],[\"通过对应元数据可以知道栈上的局部变量\",{\"1\":{\"2533\":1}}],[\"通过对应自己的\",{\"1\":{\"2532\":1}}],[\"通过灰色节点可能发现更多灰色节点加入工作队列\",{\"1\":{\"2496\":1}}],[\"通过增加一个标识变量\",{\"1\":{\"2452\":1}}],[\"通过增加偏移量的方式\",{\"1\":{\"2275\":1}}],[\"通过调用\",{\"1\":{\"2257\":1}}],[\"通过反射来验证\",{\"1\":{\"2163\":1}}],[\"通过反证法来证明\",{\"1\":{\"131\":1}}],[\"通过多次地址指向\",{\"1\":{\"2143\":1}}],[\"通过比较key的值来锁定键值对\",{\"1\":{\"1818\":1}}],[\"通过hash值与桶的个数进行取模得到编号\",{\"1\":{\"1801\":1}}],[\"通过hash从桶的编号进行选择\",{\"1\":{\"1799\":1}}],[\"通过hash函数将k转换成hash值\",{\"1\":{\"1799\":1}}],[\"通过append\",{\"1\":{\"1707\":1}}],[\"通过渲染器把dom和cssom在屏幕上绘制成页面\",{\"1\":{\"1401\":1}}],[\"通过端口送去\",{\"1\":{\"1383\":1}}],[\"通过包末尾的fcs校验错误\",{\"1\":{\"1346\":1}}],[\"通过协商的加密算法\",{\"1\":{\"1236\":1}}],[\"通过浏览器或操作系统的ca密钥\",{\"1\":{\"1230\":1}}],[\"通过此代码\",{\"1\":{\"1133\":1}}],[\"通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源\",{\"1\":{\"1112\":1}}],[\"通过三次握手的原因\",{\"1\":{\"835\":1}}],[\"通过三次握手来建立连接\",{\"1\":{\"790\":1}}],[\"通过ip协议发送报文给对方主机\",{\"1\":{\"759\":1}}],[\"通过应用进程间的交互来完成特定网络应用\",{\"1\":{\"719\":1}}],[\"通过索引树可以直接找到\",{\"1\":{\"662\":1}}],[\"通过索引下推然后再内部进行对age的判断\",{\"1\":{\"533\":1}}],[\"通过使用\",{\"1\":{\"311\":1}}],[\"通过哈希算法算出\",{\"1\":{\"192\":1}}],[\"通过显式语句的方式来启动事务\",{\"1\":{\"177\":1}}],[\"通过回滚操作\",{\"1\":{\"166\":1}}],[\"通过加锁方式进行访问数据\",{\"1\":{\"163\":1}}],[\"通过执行\",{\"1\":{\"72\":1}}],[\"通过\",{\"1\":{\"64\":1,\"744\":1,\"2193\":1,\"2366\":1,\"2448\":1,\"2495\":1,\"2789\":1,\"2856\":1,\"2862\":1}}],[\"简要地描述了\",{\"1\":{\"1536\":1}}],[\"简言之\",{\"1\":{\"1403\":1}}],[\"简述tcp的四次挥手的过程\",{\"0\":{\"847\":1}}],[\"简述tcp三次握手的过程\",{\"0\":{\"789\":1}}],[\"简称bst\",{\"1\":{\"478\":1}}],[\"简称\",{\"1\":{\"397\":1,\"398\":1,\"399\":1,\"400\":1}}],[\"简写分别是什么\",{\"0\":{\"396\":1}}],[\"简单的流程如下\",{\"1\":{\"2846\":1}}],[\"简单的网络模型\",{\"1\":{\"1249\":1}}],[\"简单讲就是多台机器同时工作就是处理一件事情\",{\"1\":{\"2711\":1}}],[\"简单讲讲tcp常见的重传机制\",{\"0\":{\"882\":1}}],[\"简单看这个函数逻辑\",{\"1\":{\"2240\":1}}],[\"简单文本的形式\",{\"1\":{\"1181\":1}}],[\"简单\",{\"1\":{\"1180\":1}}],[\"简单描述下\",{\"0\":{\"931\":1}}],[\"简单来讲就是负责的功能进行了交换\",{\"1\":{\"2650\":1}}],[\"简单来讲\",{\"1\":{\"372\":1}}],[\"简单来说\",{\"1\":{\"142\":1}}],[\"简单说\",{\"1\":{\"139\":1}}],[\"什么是装饰器\",{\"1\":{\"3234\":1}}],[\"什么是垃圾\",{\"0\":{\"2611\":1}}],[\"什么是内存对齐\",{\"0\":{\"1931\":1}}],[\"什么是tcp\",{\"0\":{\"732\":1}}],[\"什么是乐观锁和悲观锁\",{\"0\":{\"600\":1}}],[\"什么是索引\",{\"0\":{\"440\":1}}],[\"什么是数据库\",{\"0\":{\"396\":1}}],[\"什么情况下我需要建立一个\",{\"1\":{\"252\":1}}],[\"juejin\",{\"1\":{\"3317\":1}}],[\"jackfrued\",{\"1\":{\"3048\":1}}],[\"java风格\",{\"1\":{\"3388\":1}}],[\"javascript\",{\"1\":{\"3388\":3}}],[\"javascript被解释\",{\"1\":{\"1421\":1}}],[\"javascript编译\",{\"0\":{\"1420\":1}}],[\"javascript和web字体\",{\"1\":{\"1410\":1}}],[\"javaguide\",{\"1\":{\"394\":1,\"1044\":1}}],[\"jne\",{\"1\":{\"2753\":3}}],[\"jeq\",{\"1\":{\"2755\":1}}],[\"je\",{\"1\":{\"2753\":1}}],[\"jmp\",{\"1\":{\"2743\":1,\"2744\":1,\"2748\":1,\"2755\":1}}],[\"jobs\",{\"1\":{\"2480\":1,\"3419\":1,\"3428\":1}}],[\"job\",{\"0\":{\"3416\":1},\"1\":{\"2480\":1,\"3419\":2}}],[\"join\",{\"1\":{\"81\":1,\"83\":1}}],[\"jpg\",{\"1\":{\"1411\":1,\"3177\":2}}],[\"jpeg\",{\"1\":{\"717\":1}}],[\"jsx\",{\"1\":{\"3388\":2}}],[\"jsdoc\",{\"1\":{\"3388\":4}}],[\"jsdelivr\",{\"1\":{\"1292\":1}}],[\"js文件\",{\"1\":{\"3384\":1}}],[\"json文件里面\",{\"1\":{\"3379\":1}}],[\"json\",{\"1\":{\"2891\":1,\"3388\":1}}],[\"js\",{\"1\":{\"1411\":2,\"3380\":1,\"3388\":1,\"3394\":4,\"3428\":2}}],[\"jianshu\",{\"1\":{\"1046\":1}}],[\"八股文进阶篇\",{\"0\":{\"391\":1}}],[\"八股文基础篇\",{\"0\":{\"51\":1}}],[\"计数到\",{\"1\":{\"3020\":1}}],[\"计数从\",{\"1\":{\"3019\":1}}],[\"计算列表长度\",{\"1\":{\"3053\":1}}],[\"计算时间差等\",{\"1\":{\"2891\":1}}],[\"计算结果不为整数的情况\",{\"1\":{\"2568\":1}}],[\"计算哈希值时会用到接口类型\",{\"1\":{\"1917\":1}}],[\"计算需要的内存大小\",{\"1\":{\"1720\":1}}],[\"计算样式树或渲染树从dom树的根开始构建\",{\"1\":{\"1427\":1,\"1447\":1}}],[\"计算本次的会话密钥\",{\"1\":{\"1236\":1}}],[\"计算机进行一次整数运算所能处理的二进制数据的位数\",{\"1\":{\"1928\":1}}],[\"计算机无法知道一串二进制数中三个字节表示的是一个字符而不是表示三个字符\",{\"1\":{\"1745\":1}}],[\"计算机网络面试题汇总之tcp篇\",{\"1\":{\"1283\":1}}],[\"计算机网络\",{\"1\":{\"1044\":1},\"2\":{\"1061\":1,\"1244\":1,\"1452\":1,\"1582\":1}}],[\"计算机系统一般采取预读的方式\",{\"1\":{\"496\":1}}],[\"计算机基础\",{\"2\":{\"390\":1,\"701\":1,\"1061\":1,\"1244\":1,\"1452\":1,\"1582\":1}}],[\"计划完成一个\",{\"1\":{\"7\":1}}],[\"计划\",{\"0\":{\"2\":1}}],[\"随机数初始化\",{\"1\":{\"2789\":1}}],[\"随机选其中一条记录来加\",{\"1\":{\"389\":1}}],[\"随后会转到\",{\"1\":{\"2771\":1}}],[\"随后所有创建的都是\",{\"1\":{\"2746\":1}}],[\"随后就会输出\",{\"1\":{\"2365\":1}}],[\"随着网站需要增加的服务增多\",{\"1\":{\"3261\":1}}],[\"随着程序的运行\",{\"1\":{\"2598\":1}}],[\"随着数据量变大\",{\"1\":{\"448\":1}}],[\"随时可以提交事务\",{\"1\":{\"119\":1}}],[\"拆行处理\",{\"1\":{\"389\":1}}],[\"毕竟操作系统要根据ip地址才能发送消息的\",{\"1\":{\"1259\":1}}],[\"毕竟b树是多路平衡树\",{\"1\":{\"480\":1}}],[\"毕竟出现死锁了\",{\"1\":{\"387\":1}}],[\"毕竟锁住整个表的影响面还是太大\",{\"1\":{\"321\":1}}],[\"视觉污染\",{\"1\":{\"1197\":1}}],[\"视频等二进制数据\",{\"1\":{\"1528\":1}}],[\"视频等超文本数据的约定和规范\",{\"1\":{\"1074\":1}}],[\"视频等的混合体\",{\"1\":{\"1068\":1}}],[\"视频\",{\"1\":{\"786\":1,\"1600\":1}}],[\"视而不见\",{\"1\":{\"387\":1}}],[\"视图等\",{\"1\":{\"59\":1,\"689\":1}}],[\"资源\",{\"1\":{\"384\":1,\"385\":1}}],[\"万这个量级的\",{\"1\":{\"384\":1}}],[\"死锁现象怎么解决\",{\"0\":{\"939\":1}}],[\"死锁检测会耗费大量的\",{\"1\":{\"385\":1}}],[\"死锁检测\",{\"1\":{\"382\":1}}],[\"死锁和死锁检测\",{\"0\":{\"371\":1}}],[\"设置的自定义域名就是在你的项目中加入了一个\",{\"1\":{\"3443\":1}}],[\"设置成\",{\"1\":{\"3437\":1,\"3438\":1}}],[\"设置相关的期限\",{\"1\":{\"3430\":1}}],[\"设置自定义域名\",{\"1\":{\"3428\":1}}],[\"设置运行环境\",{\"1\":{\"3428\":1}}],[\"设置一些环境变量\",{\"1\":{\"3423\":1}}],[\"设置步骤\",{\"1\":{\"3419\":1}}],[\"设置条件\",{\"1\":{\"3419\":1}}],[\"设置条件或者并发运行等\",{\"1\":{\"3417\":1}}],[\"设置触发工作流运行得特定机制\",{\"1\":{\"3410\":1}}],[\"设置rpc接口服务\",{\"1\":{\"3321\":1}}],[\"设置结果\",{\"1\":{\"3286\":1}}],[\"设置缓冲\",{\"1\":{\"3133\":1}}],[\"设置g的状态从dead状态到runnable状态\",{\"1\":{\"2793\":1}}],[\"设置g的状态从idle到dead\",{\"1\":{\"2793\":1}}],[\"设置\",{\"1\":{\"2755\":1,\"2757\":1,\"2800\":1,\"3428\":1}}],[\"设置了写屏障缓冲区\",{\"1\":{\"2565\":1}}],[\"设置为第一步中的\",{\"1\":{\"1001\":1}}],[\"设置为缩小后的\",{\"1\":{\"992\":1}}],[\"设置为\",{\"1\":{\"377\":1,\"2795\":1}}],[\"设计模式\",{\"1\":{\"1610\":1}}],[\"设计更加全面\",{\"1\":{\"415\":1}}],[\"设为\",{\"1\":{\"985\":1,\"2908\":1}}],[\"设定一个定时器\",{\"1\":{\"885\":1}}],[\"设定等待时间\",{\"1\":{\"342\":1}}],[\"发出声音\",{\"1\":{\"3099\":1}}],[\"发布项目等\",{\"1\":{\"3403\":1}}],[\"发布\",{\"1\":{\"2793\":1}}],[\"发回去吧\",{\"1\":{\"1501\":1}}],[\"发送的数据包又会通过交换机到达下一个路由器\",{\"1\":{\"1384\":1}}],[\"发送\",{\"1\":{\"1289\":1}}],[\"发送给本地域名服务器\",{\"1\":{\"1279\":1}}],[\"发送窗口往右移动了\",{\"1\":{\"1042\":1}}],[\"发送窗口的值取得是拥塞窗口和接收窗口中的最小值\",{\"1\":{\"963\":1}}],[\"发送确认报文和\",{\"1\":{\"1034\":1}}],[\"发送端接受到了三个ack=2\",{\"1\":{\"906\":1}}],[\"发送端收到这个确认应答以后可以认为在这个序号以前的数\",{\"1\":{\"747\":1}}],[\"发送方的滑动窗口是怎么样的过程\",{\"0\":{\"1009\":1}}],[\"发送方发送的报文\",{\"1\":{\"962\":1}}],[\"发送方发出1\",{\"1\":{\"902\":1}}],[\"发送方不发送数据少的报文\",{\"1\":{\"954\":1}}],[\"发送方会发送一个窗口探测的报文\",{\"1\":{\"941\":1}}],[\"发送方在等待接收方告知他的窗口不为0\",{\"1\":{\"937\":1}}],[\"发送方在延迟之后会重发数据包\",{\"1\":{\"920\":1}}],[\"发送方可以知道发出去的数据包是否被网络延迟了\",{\"1\":{\"919\":1}}],[\"发送方能够知道是发出去的包丢了还是接收方发送的ack丢了\",{\"1\":{\"917\":1}}],[\"发送方收到之后\",{\"1\":{\"909\":1}}],[\"发送方\",{\"1\":{\"822\":1,\"958\":1,\"1026\":1}}],[\"发送报文到客户端\",{\"1\":{\"796\":1}}],[\"发现当前执行的\",{\"1\":{\"2934\":1}}],[\"发现变量\",{\"1\":{\"2196\":1}}],[\"发现\",{\"1\":{\"914\":1,\"2952\":1}}],[\"发现多了一些原本不存在或者少了一些数据\",{\"1\":{\"566\":1}}],[\"发现前后读取的数据不一致\",{\"1\":{\"564\":1}}],[\"发现死锁后\",{\"1\":{\"377\":1}}],[\"发起请求\",{\"1\":{\"3327\":1}}],[\"发起tcp四次挥手\",{\"1\":{\"1391\":1}}],[\"发起\",{\"1\":{\"544\":1}}],[\"发起死锁检测\",{\"1\":{\"377\":1}}],[\"发生\",{\"1\":{\"2905\":1}}],[\"发生了\",{\"1\":{\"2457\":1}}],[\"发生了错误\",{\"1\":{\"138\":1}}],[\"发生翻倍扩容\",{\"1\":{\"1876\":1}}],[\"发生哈希冲突时候\",{\"1\":{\"1876\":1}}],[\"发生哈希冲突的几率就会降低\",{\"1\":{\"1820\":1}}],[\"发生超时重传的情况如下\",{\"1\":{\"886\":1}}],[\"发生冲突的可能变小\",{\"1\":{\"370\":1}}],[\"务\",{\"1\":{\"374\":1}}],[\"才发送fin报文\",{\"1\":{\"858\":1}}],[\"才能启用\",{\"1\":{\"1511\":1}}],[\"才能在网线上传输\",{\"1\":{\"1337\":1}}],[\"才能连接\",{\"1\":{\"735\":1}}],[\"才能继续执行\",{\"1\":{\"151\":1,\"359\":1}}],[\"才会检测当前\",{\"1\":{\"2946\":1}}],[\"才会指向\",{\"1\":{\"2251\":1}}],[\"才会超时退出\",{\"1\":{\"378\":1}}],[\"才会释放\",{\"1\":{\"374\":1}}],[\"释放\",{\"1\":{\"374\":2,\"2332\":1}}],[\"称为服务器或远程服务\",{\"1\":{\"3271\":1}}],[\"称为客户端\",{\"1\":{\"3271\":1}}],[\"称为死锁\",{\"1\":{\"372\":1}}],[\"称之为\",{\"1\":{\"677\":1}}],[\"称之为回表\",{\"1\":{\"244\":1}}],[\"涉及的线程都在等待别的线程释放资源时\",{\"1\":{\"372\":1}}],[\"知道对方的\",{\"1\":{\"1380\":1}}],[\"知道这些东西可以很好得帮助tcp了解网络情况\",{\"1\":{\"921\":1}}],[\"知道seq2对方没有收到\",{\"1\":{\"906\":1}}],[\"知道把冲突的语句\",{\"1\":{\"370\":1}}],[\"知识商城\",{\"0\":{\"9\":1},\"1\":{\"7\":1}}],[\"了多长时间\",{\"1\":{\"2481\":1}}],[\"了能够让浏览器能够使用dns域名访问我们的实验环境\",{\"1\":{\"1469\":1}}],[\"了\",{\"1\":{\"369\":1,\"2851\":1}}],[\"买票\",{\"1\":{\"369\":1}}],[\"购买电影票\",{\"1\":{\"363\":1}}],[\"顾客\",{\"1\":{\"363\":1}}],[\"安装依赖\",{\"1\":{\"3428\":1}}],[\"安装步骤\",{\"0\":{\"3355\":1}}],[\"安装工作基本上就完成了\",{\"1\":{\"1471\":1}}],[\"安装顺序出错需重新安装\",{\"1\":{\"1464\":1}}],[\"安装过程比较简单\",{\"1\":{\"1464\":1}}],[\"安装\",{\"1\":{\"1464\":1,\"1467\":1,\"3356\":1,\"3358\":1,\"3367\":1,\"3369\":1,\"3428\":1}}],[\"安装相关库\",{\"1\":{\"31\":1}}],[\"安全政策\",{\"1\":{\"2882\":1}}],[\"安全性较好\",{\"1\":{\"1200\":1}}],[\"安全性较差\",{\"1\":{\"1200\":1}}],[\"安全性也就越低\",{\"1\":{\"354\":1}}],[\"安全性也就越高\",{\"1\":{\"353\":1}}],[\"安全\",{\"1\":{\"717\":1}}],[\"安排到最后\",{\"1\":{\"370\":1}}],[\"开源的远程过程调用框架\",{\"1\":{\"3269\":1}}],[\"开启规则\",{\"1\":{\"3388\":2}}],[\"开启一个新一轮\",{\"1\":{\"2490\":1}}],[\"开启写屏障\",{\"1\":{\"2489\":1,\"2491\":1}}],[\"开放地址法\",{\"1\":{\"1812\":1}}],[\"开销小\",{\"1\":{\"776\":1}}],[\"开销也就越大\",{\"1\":{\"354\":1}}],[\"开销越小\",{\"1\":{\"353\":1}}],[\"开始启动调度器的调度循环\",{\"1\":{\"2770\":1}}],[\"开始之前\",{\"1\":{\"2506\":1}}],[\"开始注册\",{\"1\":{\"2354\":1}}],[\"开始分析\",{\"1\":{\"2353\":1}}],[\"开始执行\",{\"1\":{\"2321\":1,\"2367\":1,\"2374\":1,\"2916\":1}}],[\"开始执行前\",{\"1\":{\"88\":1}}],[\"开始位置需要时\",{\"1\":{\"1971\":1}}],[\"开始\",{\"1\":{\"1971\":1,\"3019\":2,\"3257\":1}}],[\"开始抓包\",{\"1\":{\"1480\":1}}],[\"开始接受第一个报文\",{\"1\":{\"794\":1}}],[\"开始一个个回表\",{\"1\":{\"278\":1}}],[\"开始彻底没有这个功能了\",{\"1\":{\"74\":1}}],[\"比pprof更加细粒度\",{\"1\":{\"2893\":1}}],[\"比\",{\"1\":{\"1204\":1}}],[\"比较常规\",{\"1\":{\"2160\":1}}],[\"比较常回答的是\",{\"1\":{\"807\":1}}],[\"比较偏向底层解释go语言相关内容\",{\"1\":{\"1601\":1}}],[\"比较可能的情况是\",{\"1\":{\"346\":1}}],[\"比特流\",{\"1\":{\"707\":1}}],[\"比其他平衡树更加合适\",{\"1\":{\"497\":1}}],[\"比如聊天机器人\",{\"1\":{\"3331\":1}}],[\"比如正常情况下\",{\"1\":{\"2891\":1}}],[\"比如获取当前时间\",{\"1\":{\"2891\":1}}],[\"比如文本扫描或文本标签过滤器等\",{\"1\":{\"2891\":1}}],[\"比如文档\",{\"1\":{\"2891\":1}}],[\"比如int转string\",{\"1\":{\"2891\":1}}],[\"比如读取结构体的方法\",{\"1\":{\"2891\":1}}],[\"比如调用exec可以执行shell脚本等\",{\"1\":{\"2891\":1}}],[\"比如tcp\",{\"1\":{\"2891\":1}}],[\"比如log\",{\"1\":{\"2891\":1}}],[\"比如base64\",{\"1\":{\"2891\":1}}],[\"比如sqlite\",{\"1\":{\"2891\":1}}],[\"比如rsa\",{\"1\":{\"2891\":1}}],[\"比如我们常用的代码格式化工具gofmt\",{\"1\":{\"2891\":1}}],[\"比如make\",{\"1\":{\"2891\":1}}],[\"比如页大小\",{\"1\":{\"2801\":1}}],[\"比如在\",{\"1\":{\"1559\":1}}],[\"比如数据表和数据列是否存在等\",{\"1\":{\"699\":1}}],[\"比如比如可以配置为一组\",{\"1\":{\"619\":1}}],[\"比如用来判断一个库是主库还是备库\",{\"1\":{\"313\":1}}],[\"比如上面这个市民表的情况\",{\"1\":{\"269\":1}}],[\"比如字符串类型的身份证号\",{\"1\":{\"228\":1}}],[\"比如你要保存的是2017年某个城市的所有人口信息\",{\"1\":{\"203\":1}}],[\"比如下面这个语句\",{\"1\":{\"180\":1}}],[\"比如某天下午两点发现中午十二点有一次误删表\",{\"1\":{\"126\":1}}],[\"比如原来是\",{\"1\":{\"118\":1}}],[\"比如\",{\"1\":{\"112\":1,\"195\":1,\"288\":1,\"351\":1,\"389\":1,\"637\":1,\"646\":1,\"1195\":1,\"1196\":1,\"1197\":1,\"1551\":1,\"1932\":1}}],[\"比如存储过程\",{\"1\":{\"59\":1,\"689\":1}}],[\"参考\",{\"0\":{\"3450\":1}}],[\"参考如下\",{\"1\":{\"3359\":1}}],[\"参考文档\",{\"1\":{\"3351\":1}}],[\"参考文章\",{\"0\":{\"1727\":1,\"1780\":1,\"1879\":1,\"2326\":1,\"2894\":1},\"1\":{\"658\":1}}],[\"参考阅读\",{\"1\":{\"2154\":1}}],[\"参考图\",{\"1\":{\"845\":1}}],[\"参考博客\",{\"1\":{\"804\":1,\"1043\":1,\"1400\":1}}],[\"参考以及推荐文章\",{\"1\":{\"392\":1}}],[\"参考网址\",{\"1\":{\"28\":1}}],[\"参数往往在后面的expression中体现\",{\"1\":{\"3229\":1}}],[\"参数说明\",{\"1\":{\"3130\":1}}],[\"参数放到argslice变量中\",{\"1\":{\"2789\":1}}],[\"参数则存储在函数的局部变量空间\",{\"1\":{\"2412\":1,\"2438\":1}}],[\"参数和返回值这段空间会直接分配在\",{\"1\":{\"2350\":1,\"2420\":1}}],[\"参数和返回值时\",{\"1\":{\"2186\":1}}],[\"参数是可选的\",{\"1\":{\"3229\":1}}],[\"参数是\",{\"1\":{\"2301\":1}}],[\"参数入栈顺序\",{\"1\":{\"2296\":1}}],[\"参数等数据\",{\"1\":{\"2267\":1}}],[\"参数的\",{\"1\":{\"2241\":1}}],[\"参数都设置为1\",{\"1\":{\"659\":1}}],[\"参数\",{\"1\":{\"345\":1,\"1175\":1,\"2321\":2,\"2376\":1,\"2410\":1,\"2436\":1,\"2533\":1,\"2597\":1,\"3320\":1,\"3388\":3}}],[\"掉这个长事务\",{\"1\":{\"341\":1}}],[\"变为可运行时调用\",{\"1\":{\"2793\":1}}],[\"变得只是动态值\",{\"1\":{\"1912\":1}}],[\"变量声明\",{\"1\":{\"3388\":1}}],[\"变量来进行限定\",{\"1\":{\"3086\":1}}],[\"变量t重新引用了新的元组原来的元组将被垃圾回收\",{\"1\":{\"3058\":1}}],[\"变量名由字母\",{\"1\":{\"2975\":1}}],[\"变量命名\",{\"1\":{\"2973\":1}}],[\"变量每一位对应当前函数的一个\",{\"1\":{\"2452\":1}}],[\"变量\",{\"0\":{\"2966\":1},\"1\":{\"2237\":1}}],[\"变量存储的\",{\"1\":{\"2041\":1}}],[\"变量强制类型转换成字节slice\",{\"1\":{\"1778\":1}}],[\"变量的方式影响面更大\",{\"1\":{\"313\":1}}],[\"变更的表刚好有长事务在执行\",{\"1\":{\"341\":1}}],[\"具有通常函数return的功能\",{\"1\":{\"3230\":1}}],[\"具有visibility\",{\"1\":{\"1429\":1}}],[\"具有可靠性的\",{\"1\":{\"781\":1}}],[\"具有三种值\",{\"1\":{\"628\":1}}],[\"具有提交\",{\"1\":{\"435\":1}}],[\"具有严重威胁并发性\",{\"1\":{\"341\":1}}],[\"具体类型\",{\"0\":{\"2039\":1,\"2046\":1},\"1\":{\"2037\":1}}],[\"具体流程\",{\"1\":{\"239\":1}}],[\"具体的过程\",{\"1\":{\"101\":1}}],[\"阻塞了\",{\"1\":{\"833\":1}}],[\"阻塞\",{\"1\":{\"338\":1}}],[\"上执行的协程正是\",{\"1\":{\"2831\":1}}],[\"上的\",{\"1\":{\"2755\":1}}],[\"上图空缺的地方就是放参数与返回值的\",{\"1\":{\"2359\":1}}],[\"上面两个代码已经实现了远程调用\",{\"1\":{\"3288\":1}}],[\"上面两个查询语句都可以使用索引\",{\"1\":{\"525\":1}}],[\"上面的代码中\",{\"1\":{\"3101\":1}}],[\"上面的代码可以等价于\",{\"1\":{\"2222\":1}}],[\"上面的流程的目的只有一个\",{\"1\":{\"2144\":1}}],[\"上面有两种写法\",{\"1\":{\"2159\":1}}],[\"上个世纪60年代\",{\"1\":{\"1739\":1}}],[\"上层交付的数据包时放在内存的一串二进制数字信息\",{\"1\":{\"1337\":1}}],[\"上一秒钟所有事务数据才可能丢失\",{\"1\":{\"635\":1}}],[\"上\",{\"1\":{\"393\":1,\"2321\":1}}],[\"上新申请\",{\"1\":{\"338\":1}}],[\"上有索引\",{\"1\":{\"210\":1}}],[\"先通过成员运算判断元素是否在列表中\",{\"1\":{\"3054\":1}}],[\"先说明这两个字段的作用\",{\"1\":{\"2936\":1}}],[\"先执行\",{\"1\":{\"2930\":1}}],[\"先标记\",{\"1\":{\"2924\":1}}],[\"先注册后调用\",{\"1\":{\"2343\":1}}],[\"先会将\",{\"1\":{\"2315\":1}}],[\"先返回值\",{\"1\":{\"2313\":1}}],[\"先分配局部变量\",{\"1\":{\"2301\":1}}],[\"先分配局部变量存储空间\",{\"1\":{\"2296\":1}}],[\"先是局部变量\",{\"1\":{\"2310\":1}}],[\"先是调用者栈基地址\",{\"1\":{\"2268\":1}}],[\"先是服务端主动监听某个端口\",{\"1\":{\"794\":1,\"1286\":1}}],[\"先查表找到\",{\"1\":{\"2088\":1}}],[\"先查询\",{\"1\":{\"1333\":1}}],[\"先查询本地域名服务器的缓存里面\",{\"1\":{\"1274\":1}}],[\"先确定结构体中每一个成员的值\",{\"1\":{\"1966\":1}}],[\"先安装\",{\"1\":{\"1464\":1}}],[\"先发送确定响应报文\",{\"1\":{\"1223\":1}}],[\"先开始发送的数量是1\",{\"1\":{\"973\":1}}],[\"先送到了\",{\"1\":{\"903\":1}}],[\"先用反证法去进行证明\",{\"1\":{\"672\":1}}],[\"先放弃\",{\"1\":{\"342\":1}}],[\"先启动\",{\"1\":{\"335\":1}}],[\"先写\",{\"1\":{\"673\":1,\"675\":1}}],[\"先写binlog后写redo\",{\"1\":{\"135\":1}}],[\"先写redo\",{\"1\":{\"134\":1}}],[\"加入以下代码即可实现\",{\"1\":{\"3448\":1}}],[\"加入贡献者队列的指导文件\",{\"1\":{\"2882\":1}}],[\"加载的模块\",{\"1\":{\"3388\":1}}],[\"加\",{\"1\":{\"2994\":1}}],[\"加了\",{\"1\":{\"2929\":1}}],[\"加了s锁后\",{\"1\":{\"605\":1}}],[\"加油团子\",{\"1\":{\"2811\":1}}],[\"加密通信算法改变通知\",{\"1\":{\"1233\":1,\"1237\":1}}],[\"加密性\",{\"1\":{\"1200\":1}}],[\"加密格式等\",{\"1\":{\"717\":1}}],[\"加上\",{\"1\":{\"1175\":1}}],[\"加一个\",{\"1\":{\"335\":1}}],[\"加字段或修改字段\",{\"1\":{\"331\":1}}],[\"加速\",{\"0\":{\"27\":1}}],[\"导入module3时\",{\"1\":{\"3043\":1}}],[\"导致他们在应用过程中体现出一些不同\",{\"1\":{\"1177\":1}}],[\"导致丢包\",{\"1\":{\"923\":1}}],[\"导致更多的超时\",{\"1\":{\"895\":1}}],[\"导致\",{\"1\":{\"676\":1}}],[\"导致表更多等问题\",{\"1\":{\"418\":1}}],[\"导致整个表不可读写了\",{\"1\":{\"338\":1}}],[\"导致整个库挂了\",{\"1\":{\"328\":1}}],[\"导数据之前就会启动一个事务\",{\"1\":{\"308\":1}}],[\"给对象发watch\",{\"1\":{\"3078\":1}}],[\"给对象发study消息\",{\"1\":{\"3078\":1}}],[\"给他指定一个数字编号01000001\",{\"1\":{\"1738\":1}}],[\"给出最适合的建议\",{\"1\":{\"1250\":1}}],[\"给\",{\"1\":{\"637\":1,\"646\":1,\"1175\":1}}],[\"给影院\",{\"1\":{\"365\":1}}],[\"给一个表加字段\",{\"1\":{\"329\":1}}],[\"给一个小表加个字段\",{\"1\":{\"328\":1}}],[\"给id=2这一行的c字段加1\",{\"1\":{\"112\":1}}],[\"操作就会运行该工作流\",{\"1\":{\"3412\":1}}],[\"操作符时有首字母大小的函数\",{\"1\":{\"3388\":1}}],[\"操作符\",{\"1\":{\"3388\":6}}],[\"操作完成\",{\"1\":{\"3176\":1}}],[\"操作模式\",{\"1\":{\"3126\":1}}],[\"操作系统相关的\",{\"1\":{\"2801\":1}}],[\"操作系统\",{\"1\":{\"2753\":1}}],[\"操作系统通过入口参数的约定与应用程序进行沟通\",{\"1\":{\"2747\":1}}],[\"操作同上\",{\"1\":{\"2140\":1}}],[\"操作数据时不会上锁\",{\"1\":{\"601\":1}}],[\"操作\",{\"1\":{\"497\":1,\"3410\":1}}],[\"操作不慎也会出问题\",{\"1\":{\"332\":1}}],[\"操作需要\",{\"1\":{\"324\":2}}],[\"操作之间的干扰\",{\"1\":{\"323\":1}}],[\"锁定后\",{\"1\":{\"2862\":1}}],[\"锁之间都是兼容的\",{\"1\":{\"610\":1}}],[\"锁之前\",{\"1\":{\"608\":1,\"609\":1}}],[\"锁的添加与释放分到两个阶段进行\",{\"1\":{\"360\":1}}],[\"锁冲突的概率越大\",{\"1\":{\"354\":1}}],[\"锁冲突的概率越小\",{\"1\":{\"353\":1}}],[\"锁粒度越大\",{\"1\":{\"353\":1}}],[\"锁\",{\"0\":{\"599\":1},\"1\":{\"324\":1,\"341\":1,\"608\":1,\"609\":1}}],[\"自定义域名\",{\"1\":{\"3437\":1,\"3440\":1}}],[\"自定义域名后\",{\"1\":{\"3433\":1}}],[\"自定义类型元数据\",{\"0\":{\"2016\":1}}],[\"自然是链到上一个\",{\"1\":{\"2919\":1}}],[\"自然是链到之前注册的那个\",{\"1\":{\"2350\":1,\"2362\":1,\"2373\":1,\"2420\":1}}],[\"自旋则代表当前\",{\"1\":{\"2862\":1}}],[\"自动触发或者手动触发\",{\"1\":{\"3407\":1}}],[\"自动生成文件\",{\"1\":{\"3322\":1}}],[\"自动垃圾回收到底是怎么样的\",{\"1\":{\"2610\":1}}],[\"自动垃圾回收\",{\"1\":{\"2608\":1}}],[\"自动回收\",{\"0\":{\"2607\":1}}],[\"自动进入closed状态\",{\"1\":{\"855\":1,\"1399\":1}}],[\"自增\",{\"1\":{\"2321\":1}}],[\"自增加一\",{\"1\":{\"2139\":1}}],[\"自增主键往往是更合理的选择\",{\"1\":{\"229\":1}}],[\"自增主键插入数据\",{\"1\":{\"227\":1}}],[\"自增主键是指自增列上定义的主键\",{\"1\":{\"226\":1}}],[\"自己整体流程过了一遍后\",{\"1\":{\"2811\":1}}],[\"自己被阻塞还没什么关系\",{\"1\":{\"338\":1}}],[\"自己和其他线程只能读取该表\",{\"1\":{\"318\":1}}],[\"自己也不能对其进行修改\",{\"1\":{\"318\":1}}],[\"主线程\",{\"1\":{\"2827\":1}}],[\"主协程对应的\",{\"1\":{\"2862\":1}}],[\"主协程\",{\"1\":{\"2827\":1}}],[\"主体增量式回收\",{\"0\":{\"2720\":1}}],[\"主体式并发回收\",{\"0\":{\"2720\":1}}],[\"主函数运行会自动启一个\",{\"1\":{\"2345\":1}}],[\"主要初始化activemodules的typemap\",{\"1\":{\"2789\":1}}],[\"主要初始化哈希算法的值\",{\"1\":{\"2789\":1}}],[\"主要是为了应对\",{\"1\":{\"2910\":1}}],[\"主要是启动\",{\"1\":{\"2794\":1}}],[\"主要是用于gc的数据\",{\"1\":{\"2789\":1}}],[\"主要是因为\",{\"1\":{\"1202\":1}}],[\"主要用于传输一些大数据\",{\"1\":{\"3331\":1}}],[\"主要用于文本的读取写入\",{\"1\":{\"2891\":1}}],[\"主要用于支持标记工作顺利执行\",{\"1\":{\"2476\":1}}],[\"主要用于隔离\",{\"1\":{\"323\":1}}],[\"主要通过减少了\",{\"1\":{\"2422\":1}}],[\"主要集中在减少\",{\"1\":{\"2399\":1}}],[\"主要分析\",{\"1\":{\"1490\":1}}],[\"主要分为\",{\"1\":{\"688\":1}}],[\"主要发送以下信息\",{\"1\":{\"1218\":1}}],[\"主要使用sack告诉发送方有哪些数据被重复接受了\",{\"1\":{\"916\":1}}],[\"主要原因\",{\"1\":{\"810\":1}}],[\"主要有三点不同\",{\"1\":{\"640\":1}}],[\"主要做的是\",{\"1\":{\"637\":1}}],[\"主要解释第二条\",{\"1\":{\"539\":1}}],[\"主动死锁检测在发生死锁的时候\",{\"1\":{\"381\":1}}],[\"主动死锁检测\",{\"1\":{\"381\":1}}],[\"主动回滚死锁链条中的某一个事务\",{\"1\":{\"377\":1}}],[\"主动释放锁\",{\"1\":{\"317\":1}}],[\"主键长度小\",{\"1\":{\"454\":1}}],[\"主键\",{\"0\":{\"401\":1},\"1\":{\"402\":1}}],[\"主键查询方式\",{\"1\":{\"217\":1}}],[\"主键索引的叶子节点存储的是整行的数据\",{\"1\":{\"506\":1}}],[\"主键索引的叶子节点存的是整行数据\",{\"1\":{\"213\":1}}],[\"主键索引又被称作聚簇索引\",{\"1\":{\"500\":1}}],[\"主键索引\",{\"0\":{\"499\":1}}],[\"主键索引也被称为聚簇索引\",{\"1\":{\"213\":1}}],[\"整除\",{\"1\":{\"2992\":1}}],[\"整型\",{\"1\":{\"2968\":1}}],[\"整个匿名函数在一行实现所有定义\",{\"1\":{\"3231\":1}}],[\"整个过程就在这里结束了\",{\"1\":{\"2367\":1}}],[\"整个\",{\"1\":{\"1239\":1,\"2561\":1}}],[\"整个库回到可以正常更新的状态\",{\"1\":{\"314\":1}}],[\"整体变化不大\",{\"1\":{\"3312\":1}}],[\"整体参考文章\",{\"1\":{\"1057\":1}}],[\"整体空间利用率降低大约\",{\"1\":{\"223\":1}}],[\"修改器\",{\"1\":{\"3083\":1,\"3084\":1}}],[\"修改时间\",{\"1\":{\"1060\":1}}],[\"修改\",{\"1\":{\"313\":1}}],[\"修改表结构等\",{\"1\":{\"293\":1}}],[\"原始字符串\",{\"1\":{\"3205\":1}}],[\"原来的空间就会被释放\",{\"1\":{\"2291\":1}}],[\"原slice的cap大于1024\",{\"1\":{\"1715\":1}}],[\"原子性\",{\"1\":{\"556\":1}}],[\"原因是该\",{\"1\":{\"1001\":1}}],[\"原因三\",{\"1\":{\"831\":1}}],[\"原因二\",{\"1\":{\"823\":1}}],[\"原因一\",{\"1\":{\"813\":1}}],[\"原因\",{\"0\":{\"2683\":1},\"1\":{\"312\":1,\"1552\":1}}],[\"原本放在一个页的数据\",{\"1\":{\"223\":1}}],[\"确实变快了\",{\"1\":{\"2460\":1}}],[\"确实能够完成\",{\"1\":{\"310\":1}}],[\"确保这是你正在使用的分支名称\",{\"1\":{\"3413\":1,\"3428\":1}}],[\"确保能正常运行\",{\"1\":{\"2755\":1}}],[\"确保用户程序不会访问到已经存在副本的陈旧对象\",{\"1\":{\"2707\":1}}],[\"确保cpu访问内存次数减少\",{\"1\":{\"1933\":1}}],[\"确保数据及时发送出去\",{\"1\":{\"1305\":1}}],[\"确保数据及时传送\",{\"1\":{\"711\":1}}],[\"确定\",{\"1\":{\"2753\":1}}],[\"确定了\",{\"1\":{\"2534\":1}}],[\"确定输出端口\",{\"0\":{\"1363\":1}}],[\"确定两者的索引顺序\",{\"1\":{\"269\":1}}],[\"确立了一种计算机之间交流通信的规范\",{\"1\":{\"1072\":1}}],[\"确认访问对方方式\",{\"1\":{\"3272\":1}}],[\"确认收到了\",{\"1\":{\"1502\":1}}],[\"确认刚才报文已收到\",{\"1\":{\"1499\":1}}],[\"确认服务器发送的数字证书真实性\",{\"1\":{\"1230\":1}}],[\"确认密码套件列表\",{\"1\":{\"1226\":1}}],[\"确认ssl\",{\"1\":{\"1224\":1}}],[\"确认了新的数据\",{\"1\":{\"1001\":1}}],[\"确认应答ack丢失\",{\"1\":{\"888\":1}}],[\"确认应答报文\",{\"1\":{\"885\":1}}],[\"确认应答\",{\"1\":{\"750\":1,\"881\":1,\"900\":1}}],[\"确认应答号\",{\"1\":{\"746\":1,\"796\":1,\"797\":1}}],[\"答\",{\"1\":{\"310\":1,\"1980\":1,\"3294\":1,\"3303\":1}}],[\"答案\",{\"1\":{\"123\":1,\"2313\":1}}],[\"呢\",{\"1\":{\"309\":1,\"1310\":1,\"2451\":1}}],[\"业务要求优先\",{\"1\":{\"535\":1}}],[\"业务逻辑里就要扣掉他的余额\",{\"1\":{\"302\":1}}],[\"业务基本上就得停了\",{\"1\":{\"297\":1}}],[\"备份压缩工具\",{\"1\":{\"2893\":1}}],[\"备份系统备份的\",{\"1\":{\"305\":1}}],[\"备份系统中会保存最近半个月的所有\",{\"1\":{\"125\":1}}],[\"备份结果是\",{\"1\":{\"304\":1}}],[\"备份为什么需要加锁\",{\"1\":{\"299\":1}}],[\"听上去就很危险\",{\"1\":{\"296\":1}}],[\"做的事情很少\",{\"1\":{\"2944\":1}}],[\"做了一个普及\",{\"1\":{\"2725\":1}}],[\"做了很大的改变\",{\"1\":{\"2403\":1}}],[\"做了统一规定\",{\"1\":{\"1739\":1}}],[\"做\",{\"1\":{\"1371\":1,\"1373\":1}}],[\"做约束\",{\"1\":{\"535\":1}}],[\"做出文本\",{\"1\":{\"294\":1}}],[\"做全库逻辑备份\",{\"1\":{\"294\":1}}],[\"提醒我们关注那些到白色对象路径的破坏行为\",{\"1\":{\"2701\":1}}],[\"提醒我们关注黑色对象与白色对象之间的关系\",{\"1\":{\"2698\":1}}],[\"提升后带来的后果\",{\"0\":{\"2456\":1}}],[\"提升检索速度\",{\"1\":{\"289\":1}}],[\"提高性能\",{\"1\":{\"1959\":1}}],[\"提高内存访问效率\",{\"1\":{\"1932\":1}}],[\"提高了并发度\",{\"1\":{\"370\":1}}],[\"提前跟别人打个招呼\",{\"1\":{\"1536\":1}}],[\"提供继承信息的我们称之为父类\",{\"1\":{\"3095\":1}}],[\"提供了丰富的功能和易于使用的接口\",{\"1\":{\"3269\":1}}],[\"提供了一系列标准接口\",{\"1\":{\"2891\":1}}],[\"提供了一个加全局读锁的方法\",{\"1\":{\"293\":1}}],[\"提供了各种数据库的通用api\",{\"1\":{\"2891\":1}}],[\"提供了双向链表\",{\"1\":{\"2891\":1}}],[\"提供了go语言的基本工具\",{\"1\":{\"2891\":1}}],[\"提供了比较便利的方法操作文件\",{\"1\":{\"2891\":1}}],[\"提供全局\",{\"1\":{\"2526\":1}}],[\"提供全局工作队列缓存\",{\"1\":{\"2481\":1}}],[\"提供面向对象的语法\",{\"1\":{\"2158\":1,\"2166\":1}}],[\"提供占位符空间\",{\"1\":{\"1436\":1}}],[\"提供一种机制可以让\",{\"1\":{\"1026\":1}}],[\"提供⾯向\",{\"1\":{\"1006\":1}}],[\"提供元组的位置信息\",{\"1\":{\"408\":1}}],[\"提交存在顺序会发生什么情况呢\",{\"1\":{\"132\":1}}],[\"考虑到视区大小\",{\"1\":{\"1436\":1}}],[\"考虑到存储空间的问题\",{\"1\":{\"288\":1}}],[\"考虑两种方案\",{\"1\":{\"70\":1}}],[\"次数据对应的ack\",{\"1\":{\"909\":1}}],[\"次\",{\"1\":{\"283\":1}}],[\"第\",{\"1\":{\"1973\":1}}],[\"第n\",{\"1\":{\"1752\":1}}],[\"第六个包\",{\"1\":{\"1502\":1}}],[\"第三方贡献者清单\",{\"1\":{\"2882\":1}}],[\"第三条目比较特殊\",{\"1\":{\"1318\":1}}],[\"第三个随机数pre\",{\"1\":{\"1243\":1}}],[\"第三次握手\",{\"1\":{\"803\":1}}],[\"第三次握手是可以携带数据的\",{\"1\":{\"800\":1}}],[\"第一步应该先了解它的目录结构\",{\"1\":{\"2880\":1}}],[\"第一步是处理html标记\",{\"1\":{\"1404\":1}}],[\"第一位置为1\",{\"1\":{\"2453\":1}}],[\"第一部分是\",{\"1\":{\"2340\":1}}],[\"第一次\",{\"1\":{\"2139\":1,\"2488\":1}}],[\"第一次读取地址\",{\"1\":{\"1939\":1}}],[\"第一份\",{\"1\":{\"903\":1}}],[\"第一种方案会遇到权限问题\",{\"1\":{\"3446\":1}}],[\"第一种方式叫做类型\",{\"1\":{\"2030\":1}}],[\"第一种我们所讲的就是匿名返回值\",{\"1\":{\"2323\":1}}],[\"第一种\",{\"1\":{\"1812\":1,\"2160\":1}}],[\"第一种解答\",{\"1\":{\"671\":1}}],[\"第一种策略有很多的弊端\",{\"1\":{\"380\":1}}],[\"第一个\",{\"1\":{\"3419\":1}}],[\"第一个参数是被注册的\",{\"1\":{\"2342\":1}}],[\"第一个问题\",{\"1\":{\"1855\":1}}],[\"第一个字节的前n位都设为1\",{\"1\":{\"1752\":1}}],[\"第一个字是\",{\"1\":{\"283\":1}}],[\"第一个msl是为了等自己发出去的最后一个ack报文从网络消失\",{\"1\":{\"876\":1}}],[\"第一个报文发送到服务端\",{\"1\":{\"795\":1}}],[\"第一个报错会出现在分析器的解析阶段\",{\"1\":{\"700\":1}}],[\"第一个被锁住的线程要过\",{\"1\":{\"378\":1}}],[\"第二部分是\",{\"1\":{\"2343\":1}}],[\"第二次\",{\"1\":{\"2140\":1,\"2498\":1}}],[\"第二次读取地址\",{\"1\":{\"1939\":1}}],[\"第二条目的子网掩码\",{\"1\":{\"1373\":1}}],[\"第二个参数为\",{\"1\":{\"3388\":1}}],[\"第二个参数是要跟正则表达式做匹配的字符串对象\",{\"1\":{\"3205\":1}}],[\"第二个参数是函数\",{\"1\":{\"2356\":1}}],[\"第二个参数是一个\",{\"1\":{\"2342\":1}}],[\"第二个要求\",{\"1\":{\"1975\":1}}],[\"第二个问题\",{\"1\":{\"1858\":1}}],[\"第二个msl是对了等服务端收到ack之前的一刹那可能重传的fin报文从网络消失\",{\"1\":{\"876\":1}}],[\"第二个报错会出现在分析器的预处理阶段\",{\"1\":{\"700\":1}}],[\"第二个日志还没有写完期间发生了\",{\"1\":{\"133\":1}}],[\"第二种方案就比较简单\",{\"1\":{\"3448\":1}}],[\"第二种方式属于创建新类型\",{\"1\":{\"2032\":1}}],[\"第二种方式每个事务在开始时都不需要主动执行一次\",{\"1\":{\"178\":1}}],[\"第二种我们所讲的是命名返回值\",{\"1\":{\"2324\":1}}],[\"第二种\",{\"1\":{\"1816\":1,\"2161\":1}}],[\"第二种更加高效\",{\"1\":{\"1803\":1}}],[\"第二种解答\",{\"1\":{\"679\":1}}],[\"引导的序列\",{\"1\":{\"2789\":1}}],[\"引入滑动窗口来做网络的流控\",{\"1\":{\"924\":1}}],[\"引入的索引下推优化\",{\"1\":{\"280\":1}}],[\"引擎在将数据更新入内存中\",{\"1\":{\"664\":1}}],[\"引擎独有的\",{\"1\":{\"615\":1}}],[\"引擎支持全文索引\",{\"1\":{\"512\":1}}],[\"引擎的运行过程\",{\"0\":{\"660\":1}}],[\"引擎的\",{\"1\":{\"504\":1}}],[\"引擎的库\",{\"1\":{\"345\":1}}],[\"引擎就不支持行锁\",{\"1\":{\"351\":1}}],[\"引擎\",{\"1\":{\"195\":1}}],[\"引擎把刚刚写入的\",{\"1\":{\"121\":1,\"667\":1}}],[\"引擎将这行新数据更新到内存中\",{\"1\":{\"119\":1}}],[\"引擎直接用树搜索找到这一行\",{\"1\":{\"117\":1}}],[\"引擎特有的\",{\"1\":{\"111\":1}}],[\"引擎特有的日志\",{\"1\":{\"107\":1}}],[\"引擎会再适当时候\",{\"1\":{\"101\":1}}],[\"引擎会先把记录写在日志中\",{\"1\":{\"101\":1}}],[\"到\",{\"1\":{\"2705\":1}}],[\"到工作缓存中\",{\"1\":{\"2564\":1}}],[\"到全局工作缓存中\",{\"1\":{\"2558\":1,\"2561\":1}}],[\"到清扫阶段这个后台的\",{\"1\":{\"2506\":1}}],[\"到底每个函数具体工作是什么\",{\"1\":{\"2776\":1}}],[\"到底升级了啥\",{\"1\":{\"2398\":1}}],[\"到底是先返回值还是先执行\",{\"1\":{\"2312\":1}}],[\"到底会经历哪些过程\",{\"1\":{\"54\":1}}],[\"到了执行阶段\",{\"1\":{\"1993\":1}}],[\"到11111111\",{\"1\":{\"1737\":1}}],[\"到此\",{\"1\":{\"1507\":1}}],[\"到此为止\",{\"1\":{\"1485\":1}}],[\"到现在实验环境已经搭建成功了\",{\"1\":{\"1487\":1}}],[\"到这里\",{\"1\":{\"1471\":1,\"1504\":1}}],[\"到网页显示\",{\"1\":{\"1247\":1,\"1450\":1}}],[\"到主键索引上找出数据行\",{\"1\":{\"278\":1}}],[\"即调用\",{\"1\":{\"3173\":1}}],[\"即原有内容会被删除\",{\"1\":{\"3158\":1,\"3160\":1,\"3162\":1,\"3164\":1}}],[\"即原子性\",{\"1\":{\"144\":1}}],[\"即便\",{\"1\":{\"3103\":1}}],[\"即将要关联的m\",{\"1\":{\"2864\":1}}],[\"即格式是1110xxxx\",{\"1\":{\"1755\":1}}],[\"即可开始抓取本机上的网络数据\",{\"1\":{\"1482\":1}}],[\"即可\",{\"1\":{\"1477\":1}}],[\"即是路由器的\",{\"1\":{\"1318\":1}}],[\"即是客户端输出的\",{\"1\":{\"1307\":1}}],[\"即通过\",{\"1\":{\"1308\":1}}],[\"即fin报文\",{\"1\":{\"849\":1,\"1393\":1}}],[\"即刻传输数据\",{\"1\":{\"767\":1}}],[\"即使你改了还是不行的话\",{\"1\":{\"3398\":1}}],[\"即使他现在被恢复了\",{\"1\":{\"2954\":1}}],[\"即使用中的对象\",{\"1\":{\"2628\":1}}],[\"即使只执行一次的\",{\"1\":{\"2417\":1}}],[\"即使有预分配的\",{\"1\":{\"2394\":1}}],[\"即使发生\",{\"1\":{\"2332\":1}}],[\"即使工作完成了\",{\"1\":{\"1510\":1}}],[\"即使它先收到了后面的字节\",{\"1\":{\"739\":1}}],[\"即使数据库发生故障也不应该对其有任何影响\",{\"1\":{\"559\":1}}],[\"即使是小表\",{\"1\":{\"332\":1}}],[\"即\",{\"1\":{\"276\":1,\"381\":1,\"530\":1,\"1644\":1,\"2769\":1,\"3388\":1}}],[\"范围列可以用到索引\",{\"1\":{\"276\":1,\"530\":1}}],[\"<repo>\",{\"1\":{\"3438\":2}}],[\"<reflect\",{\"1\":{\"2225\":1}}],[\"<username>\",{\"1\":{\"3437\":1,\"3438\":1}}],[\"<class\",{\"1\":{\"3177\":1}}],[\"<module>\",{\"1\":{\"3104\":1,\"3124\":1}}],[\"<stdin>\",{\"1\":{\"3104\":3}}],[\"<script\",{\"1\":{\"1411\":2}}],[\"<io\",{\"1\":{\"2049\":1,\"2055\":1,\"2062\":1,\"2068\":1,\"2071\":1,\"2072\":1,\"2078\":1,\"2083\":1}}],[\"<img\",{\"1\":{\"1411\":1}}],[\"<接口类型\",{\"1\":{\"1913\":1,\"2088\":1}}],[\"<<\",{\"1\":{\"1866\":1,\"2783\":1}}],[\"<head>和它的子节点以及任何具有display\",{\"1\":{\"1428\":1}}],[\"<html>元素是第一个标签也是文档树的根节点\",{\"1\":{\"1405\":1}}],[\"<link\",{\"1\":{\"1411\":1}}],[\"<=<>>=\",{\"1\":{\"3001\":1}}],[\"<=\",{\"1\":{\"874\":1,\"3065\":2,\"3084\":1,\"3087\":1,\"3250\":1}}],[\"<\",{\"1\":{\"276\":1,\"471\":2,\"529\":1,\"874\":1,\"976\":1,\"1717\":1,\"2135\":2,\"3023\":1,\"3075\":1,\"3176\":2}}],[\"岁的所有男孩\",{\"1\":{\"272\":1}}],[\"又引入了一个\",{\"1\":{\"2838\":1}}],[\"又避免维护大块空闲链表而压迫到内存\",{\"1\":{\"2513\":1}}],[\"又怎会不慢呢\",{\"1\":{\"2394\":1}}],[\"又会有怎么样的优化呢\",{\"1\":{\"2461\":1}}],[\"又会回到\",{\"1\":{\"2389\":1}}],[\"又会注册两个\",{\"1\":{\"2386\":1}}],[\"又会发生什么呢\",{\"1\":{\"2369\":1}}],[\"又会怎么样呢\",{\"1\":{\"271\":1}}],[\"又称词法闭包\",{\"1\":{\"2109\":1}}],[\"又因为seq3\",{\"1\":{\"907\":1}}],[\"又是什么时候将记录写入磁盘呢\",{\"0\":{\"653\":1}}],[\"又是什么\",{\"0\":{\"636\":1}}],[\"又回到开头循环写\",{\"1\":{\"620\":1}}],[\"又有基于\",{\"1\":{\"268\":1}}],[\"选择关于\",{\"1\":{\"3430\":1}}],[\"选择合适\",{\"1\":{\"3423\":1}}],[\"选择合适的版本进行安装\",{\"1\":{\"3357\":1}}],[\"选择合适的网间路由和交换结点\",{\"1\":{\"711\":1}}],[\"选择目标函数\",{\"1\":{\"3286\":1}}],[\"选择顺序存储\",{\"1\":{\"2695\":1}}],[\"选择回收\",{\"1\":{\"2598\":1}}],[\"选择这个分支\",{\"1\":{\"2090\":1}}],[\"选择最大的作为结构体的对齐系数\",{\"1\":{\"1966\":1}}],[\"选择最新的就可\",{\"1\":{\"1464\":1}}],[\"选择桶用的是与运算\",{\"1\":{\"1834\":1}}],[\"选择性确认\",{\"1\":{\"912\":1,\"913\":1}}],[\"选择\",{\"1\":{\"269\":1,\"1100\":1,\"1477\":1}}],[\"姓名和年龄和性别的表\",{\"1\":{\"532\":1}}],[\"姓名和年龄的表\",{\"1\":{\"524\":1}}],[\"姓名是索引\",{\"1\":{\"524\":1}}],[\"姓名\",{\"1\":{\"267\":1,\"524\":1,\"532\":1}}],[\"评估标准是索引的复用能力\",{\"1\":{\"266\":1}}],[\"往这个表里面插入了几条数据之后\",{\"1\":{\"566\":1}}],[\"往后遍历\",{\"1\":{\"262\":1}}],[\"往中间插入一条记录就得挪动后面所有的记录位置\",{\"1\":{\"202\":1}}],[\"张\",{\"1\":{\"262\":2,\"264\":1,\"273\":1,\"274\":1,\"283\":1,\"524\":2,\"532\":1}}],[\"张三\",{\"1\":{\"261\":1,\"288\":2}}],[\"总是会报如下错\",{\"1\":{\"3446\":1}}],[\"总是配置失败\",{\"1\":{\"3373\":1}}],[\"总是报错\",{\"1\":{\"3344\":1}}],[\"总是system\",{\"1\":{\"2795\":1}}],[\"总是\",{\"1\":{\"1916\":1}}],[\"总是跟这个事务在启动时看到的数据是一致的\",{\"1\":{\"150\":1}}],[\"总的来说\",{\"1\":{\"1362\":1}}],[\"总不能每次都写满了再去写入把\",{\"0\":{\"627\":1}}],[\"总不能全表查询吧\",{\"1\":{\"256\":1}}],[\"总结流程\",{\"0\":{\"2796\":1}}],[\"总结一下浏览器\",{\"1\":{\"1515\":1}}],[\"总结的讲\",{\"1\":{\"1073\":1}}],[\"总结\",{\"0\":{\"1875\":1,\"2085\":1},\"1\":{\"285\":1,\"320\":1,\"344\":1,\"473\":1,\"1909\":1,\"1941\":1}}],[\"它就会停止在父级目录中寻找\",{\"1\":{\"3388\":1}}],[\"它将不会被认为有问题\",{\"1\":{\"3388\":1}}],[\"它将被当作通配符使用\",{\"1\":{\"3113\":1}}],[\"它将在后台检索资源\",{\"1\":{\"1410\":1}}],[\"它代表的是当前类相关的信息的对象\",{\"1\":{\"3092\":1}}],[\"它只是给私有的属性和方法换了一个名字来妨碍对它们的访问\",{\"1\":{\"3080\":1}}],[\"它只占据了\",{\"1\":{\"1976\":1}}],[\"它会被移除吗\",{\"1\":{\"2954\":1}}],[\"它会立刻停止执行当前函数剩余代码\",{\"1\":{\"2905\":1}}],[\"它会负责解析转义\",{\"1\":{\"2891\":1}}],[\"它会将web页面和脚本或程序语言连接起来\",{\"1\":{\"1403\":1}}],[\"它的使用在go语言中十分广泛\",{\"1\":{\"2891\":1}}],[\"它的自由变量会在捕捉时被确定\",{\"1\":{\"2109\":1}}],[\"它是用汇编编写的\",{\"1\":{\"2795\":1}}],[\"它旨在由调试器调用\",{\"1\":{\"2761\":1}}],[\"它又会一直占用内存\",{\"1\":{\"2606\":1}}],[\"它按照\",{\"1\":{\"2526\":1}}],[\"它得到调度执行时会执行清扫任务\",{\"1\":{\"2506\":1}}],[\"它由两部分组成分别是\",{\"1\":{\"2416\":1}}],[\"它被编译器被插入到了函数返回前进行调用\",{\"1\":{\"2343\":1}}],[\"它也能照常运行\",{\"1\":{\"2109\":1}}],[\"它既要包括约束变量\",{\"1\":{\"2109\":1}}],[\"它存储了一个函数\",{\"1\":{\"2109\":1}}],[\"它大到足以容纳任何指针的位模式\",{\"1\":{\"2099\":1}}],[\"它表示报文里body的长度\",{\"1\":{\"1572\":1}}],[\"它告诉客户端当前正在提供\",{\"1\":{\"1571\":1}}],[\"它使用一个字符串来描述发起\",{\"1\":{\"1569\":1}}],[\"它同时也是唯一一个\",{\"1\":{\"1568\":1}}],[\"它属于请求字段\",{\"1\":{\"1568\":1}}],[\"它不一定是纯文本\",{\"1\":{\"1528\":1}}],[\"它们就是所谓的灰色节点\",{\"1\":{\"2496\":1}}],[\"它们不会出现在render树上\",{\"1\":{\"1428\":1}}],[\"它们可能已经在运行\",{\"1\":{\"1410\":1}}],[\"它级联属性值\",{\"1\":{\"1417\":1}}],[\"它提供了对文档的结构化的表述\",{\"1\":{\"1403\":1}}],[\"它和计算机的网卡是一样的\",{\"1\":{\"1357\":1}}],[\"它目标地址和子网掩码都是\",{\"1\":{\"1318\":1}}],[\"它甚至可能会在您完成输入之前提示\",{\"1\":{\"1250\":1}}],[\"它能够为数据生成独一无二的\",{\"1\":{\"1207\":1}}],[\"它向\",{\"1\":{\"1172\":1}}],[\"它可以存储任意类型对象\",{\"1\":{\"3067\":1}}],[\"它可以将多个文件打包为一个备存文件\",{\"1\":{\"2893\":1}}],[\"它可以使用1~4个字节表示一个符号\",{\"1\":{\"1749\":1}}],[\"它可以根据sack缓冲区的记录\",{\"1\":{\"914\":1}}],[\"它可以在这个高频请求上用到覆盖索引\",{\"1\":{\"253\":1}}],[\"它对数据库中数据的改变是持久的\",{\"1\":{\"559\":1}}],[\"它带来的性能提升将非常显著\",{\"1\":{\"473\":1}}],[\"它做的变更才会被其他事务看到\",{\"1\":{\"149\":1}}],[\"它做的变更就能被别的事务看到\",{\"1\":{\"148\":1}}],[\"要求generator\",{\"1\":{\"3388\":1}}],[\"要求箭头函数的参数使用圆括号\",{\"1\":{\"3388\":1}}],[\"要求箭头函数体使用大括号\",{\"1\":{\"3388\":1}}],[\"要求正则表达式被括号括起来\",{\"1\":{\"3388\":1}}],[\"要求操作符周围有空格\",{\"1\":{\"3388\":1}}],[\"要求同一个声明块中的变量按顺序排列\",{\"1\":{\"3388\":1}}],[\"要求对象字面量属性名称用引号括起来\",{\"1\":{\"3388\":1}}],[\"要求方法链中每个调用都有一个换行符\",{\"1\":{\"3388\":1}}],[\"要求调用无参构造函数时有圆括号\",{\"1\":{\"3388\":1}}],[\"要求调用\",{\"1\":{\"3388\":1}}],[\"要求构造函数首字母大写\",{\"1\":{\"3388\":1}}],[\"要求标识符匹配一个指定的正则表达式\",{\"1\":{\"3388\":1}}],[\"要求在合适的地方使用\",{\"1\":{\"3388\":1}}],[\"要求在块级注释之前有一空行\",{\"1\":{\"3388\":1}}],[\"要求在注释周围有空行\",{\"1\":{\"3388\":1}}],[\"要求回调函数中有容错处理\",{\"1\":{\"3388\":1}}],[\"要求或禁止模板字符串中的嵌入表达式周围空格的使用\",{\"1\":{\"3388\":1}}],[\"要求或禁止对象字面量中方法和属性使用简写语法\",{\"1\":{\"3388\":1}}],[\"要求或禁止使用分号而不是\",{\"1\":{\"3388\":1}}],[\"要求或禁止使用严格模式指令\",{\"1\":{\"3388\":1}}],[\"要求或禁止块内填充\",{\"1\":{\"3388\":1}}],[\"要求或禁止在可能的情况下要求使用简化的赋值操作符\",{\"1\":{\"3388\":1}}],[\"要求或禁止在\",{\"1\":{\"3388\":1}}],[\"要求或禁止\",{\"1\":{\"3388\":4}}],[\"要求所有的\",{\"1\":{\"3388\":1}}],[\"要求使用模板字面量而非字符串连接\",{\"1\":{\"3388\":1}}],[\"要求使用扩展运算符而非\",{\"1\":{\"3388\":1}}],[\"要求使用箭头函数作为回调\",{\"1\":{\"3388\":1}}],[\"要求使用\",{\"1\":{\"3388\":4}}],[\"要求\",{\"1\":{\"3205\":1,\"3388\":5}}],[\"要执行\",{\"1\":{\"2862\":1}}],[\"要传递给\",{\"1\":{\"2763\":1}}],[\"要找到大小合适的内存块的代价会因碎片化而增加\",{\"1\":{\"2511\":1}}],[\"要交换两个参数的值\",{\"1\":{\"2299\":1}}],[\"要想去修改变量\",{\"1\":{\"2251\":1}}],[\"要想打开一个文本文件\",{\"1\":{\"1742\":1}}],[\"要读取时候\",{\"1\":{\"1738\":1}}],[\"要控制网卡还需要靠网卡驱动程序\",{\"1\":{\"1338\":1}}],[\"要更耗费服务器资源\",{\"1\":{\"1204\":1}}],[\"要比较\",{\"1\":{\"1204\":1}}],[\"要完成这次交易\",{\"1\":{\"367\":1}}],[\"要在影院\",{\"1\":{\"363\":1,\"369\":1}}],[\"要么不指定\",{\"1\":{\"3388\":1}}],[\"要么是false\",{\"1\":{\"2971\":1}}],[\"要么是true\",{\"1\":{\"2971\":1}}],[\"要么是动态类型的方法\",{\"1\":{\"1912\":1}}],[\"要么是你的引擎升级了\",{\"1\":{\"348\":1}}],[\"要么是你的系统现在还在用\",{\"1\":{\"347\":1}}],[\"要么完全不起作用\",{\"1\":{\"556\":1}}],[\"要么全部失败\",{\"1\":{\"142\":1}}],[\"要么全部成功\",{\"1\":{\"142\":1}}],[\"要考虑先暂停\",{\"1\":{\"341\":1}}],[\"要根据市民的身份证号查询他的姓名\",{\"1\":{\"253\":1}}],[\"他会做一些准备工作\",{\"1\":{\"2850\":1}}],[\"他会随着函数调用栈的销毁也会释放自己的内存\",{\"1\":{\"2600\":1}}],[\"他有一个\",{\"1\":{\"2838\":1}}],[\"他有一个潜在的死锁现象\",{\"0\":{\"931\":1}}],[\"他是如何运行起来的\",{\"1\":{\"2822\":1}}],[\"他是一种帮助变量根据自身的存储容量来更好选择存储地址的一个值\",{\"1\":{\"1960\":1}}],[\"他就要负担一定的标记工作\",{\"1\":{\"2583\":1}}],[\"他就会打出什么样子弹\",{\"1\":{\"1910\":1}}],[\"他负责保存要执行的函数信息\",{\"1\":{\"2340\":1}}],[\"他们好像没有人对他处理\",{\"1\":{\"2601\":1}}],[\"他们撑起了反射功能的基本框架\",{\"1\":{\"2203\":1}}],[\"他们有什么不同呢\",{\"1\":{\"2028\":1}}],[\"他们之间区别是什么\",{\"0\":{\"763\":1}}],[\"他只是来帮助你在一串内存中更好的选择存储地址\",{\"1\":{\"1961\":1}}],[\"他只是起到将数据原样交换到对方\",{\"1\":{\"1347\":1}}],[\"他不是以时间为驱动\",{\"1\":{\"900\":1}}],[\"他不能保证网络包的按序交付\",{\"1\":{\"755\":1}}],[\"他与超时重传不同\",{\"1\":{\"900\":1}}],[\"他的协程栈实际上是在主线程栈上分配的\",{\"1\":{\"2829\":1}}],[\"他的参数通过相对寻址找到了\",{\"1\":{\"2299\":1}}],[\"他的参数是空接口类型\",{\"1\":{\"2235\":1}}],[\"他的字段\",{\"1\":{\"2244\":1}}],[\"他的捕获变量初始化赋值后\",{\"1\":{\"2133\":1}}],[\"他的类型元数据是全局唯一的\",{\"1\":{\"2004\":1}}],[\"他的类型大小会发生改变吗\",{\"1\":{\"1979\":1}}],[\"他的对齐系数为\",{\"1\":{\"1970\":1,\"1971\":1,\"1972\":1,\"1973\":1}}],[\"他的二进制数为101\",{\"1\":{\"1805\":1}}],[\"他的作用如下\",{\"1\":{\"824\":1}}],[\"他的处理方式如下\",{\"1\":{\"39\":1}}],[\"他工作在哪一层\",{\"0\":{\"754\":1}}],[\"他在mysql起着什么作用\",{\"0\":{\"636\":1}}],[\"他购买了一门课程\",{\"1\":{\"302\":1}}],[\"他作为主键建立索引就好了\",{\"1\":{\"252\":1}}],[\"`\",{\"1\":{\"2999\":1,\"3000\":1,\"3011\":1,\"3175\":2}}],[\"``\",{\"1\":{\"2828\":1}}],[\"`name\",{\"1\":{\"251\":1}}],[\"`name`\",{\"1\":{\"251\":2}}],[\"`ismale`\",{\"1\":{\"251\":1}}],[\"`id\",{\"1\":{\"251\":3}}],[\"`id`\",{\"1\":{\"251\":2}}],[\"`age`\",{\"1\":{\"251\":2}}],[\"`tuser`\",{\"1\":{\"251\":1}}],[\"市民表定义\",{\"1\":{\"250\":1}}],[\"接受的是\",{\"1\":{\"2214\":1}}],[\"接受发过来的电信号\",{\"1\":{\"1346\":1}}],[\"接口值\",{\"1\":{\"2208\":1}}],[\"接口类型是无效的方法接收者\",{\"1\":{\"2003\":1}}],[\"接口动态派发\",{\"1\":{\"1993\":1}}],[\"接口\",{\"1\":{\"1910\":1,\"2221\":1}}],[\"接口要求的方法列表\",{\"1\":{\"1900\":1}}],[\"接口的方法\",{\"1\":{\"1906\":1,\"2060\":1,\"2071\":1,\"2076\":1}}],[\"接口的类型元数据\",{\"1\":{\"1900\":1,\"2224\":1}}],[\"接口的动态值\",{\"1\":{\"1900\":1,\"1903\":1,\"2224\":1}}],[\"接收服务端响应\",{\"1\":{\"3327\":1}}],[\"接收者作为第一个参数传入\",{\"1\":{\"1992\":1}}],[\"接收端就会跟拆快递一样\",{\"1\":{\"1388\":1}}],[\"接收到数据包后\",{\"1\":{\"1364\":1}}],[\"接收窗口往右移动了\",{\"1\":{\"1041\":1}}],[\"接收窗口\",{\"1\":{\"1020\":1}}],[\"接收方\",{\"1\":{\"1026\":1,\"1385\":1}}],[\"接收方的滑动窗口\",{\"0\":{\"1019\":1}}],[\"接收方没有空间\",{\"1\":{\"1014\":1}}],[\"接收方还有空间\",{\"1\":{\"1013\":1}}],[\"接收方还是会收到三次的第\",{\"1\":{\"909\":1}}],[\"接收方不告知小窗口\",{\"1\":{\"952\":1}}],[\"接收方收到这个报文后\",{\"1\":{\"941\":1}}],[\"接收方收到seq2\",{\"1\":{\"907\":1}}],[\"接收方在等待发送方发送数据\",{\"1\":{\"936\":1}}],[\"接收方返回的应答报文中能看到该数据包已经被接收了\",{\"1\":{\"920\":1}}],[\"接收方对于第三次数据怎么去发送三个\",{\"1\":{\"910\":1}}],[\"接收方可以去除重复数据\",{\"1\":{\"825\":1}}],[\"接送方可以根据数据包的序列号\",{\"1\":{\"826\":1}}],[\"接着往下看\",{\"1\":{\"2954\":1}}],[\"接着就会递归执行\",{\"1\":{\"2930\":1}}],[\"接着就跳转到了\",{\"1\":{\"2744\":1}}],[\"接着进入调度\",{\"1\":{\"2804\":1}}],[\"接着继续跳转到\",{\"1\":{\"2750\":1}}],[\"接着是被调用函数\",{\"1\":{\"2310\":1}}],[\"接着会在其开头加上报头和起始帧分界符\",{\"1\":{\"1339\":1}}],[\"接着发送确认报文给服务端\",{\"1\":{\"1035\":1,\"1037\":1,\"1041\":1}}],[\"接着syn和ack\",{\"1\":{\"796\":1}}],[\"接着做语法分析\",{\"1\":{\"78\":1}}],[\"接下来的步骤\",{\"1\":{\"3428\":1}}],[\"接下来的位置\",{\"1\":{\"1972\":1}}],[\"接下来你需要在系统变量中添加环境变量\",{\"1\":{\"3362\":1}}],[\"接下来写函数名称\",{\"1\":{\"3025\":1}}],[\"接下来看看\",{\"1\":{\"2902\":1}}],[\"接下来是\",{\"1\":{\"2376\":1}}],[\"接下来是堆上的\",{\"1\":{\"2372\":1}}],[\"接下来就可以对文件进行读写操作了\",{\"1\":{\"3126\":1}}],[\"接下来就要看是否需要\",{\"1\":{\"2577\":1}}],[\"接下来就会创建闭包对象\",{\"1\":{\"2372\":1}}],[\"接下来就会把\",{\"1\":{\"616\":1}}],[\"接下来就是调用\",{\"1\":{\"2366\":1}}],[\"接下来就是返回地址以及\",{\"1\":{\"2301\":1}}],[\"接下来就是常规的函数栈帧的分配问题\",{\"1\":{\"2298\":1}}],[\"接下来就是\",{\"1\":{\"2298\":1}}],[\"接下来时被调用函数传入的参数\",{\"1\":{\"2296\":1}}],[\"接下来时被调用函数的返回值\",{\"1\":{\"2296\":1}}],[\"接下来通过非空接口类型\",{\"1\":{\"2226\":1}}],[\"接下来我们逐一看看\",{\"1\":{\"2038\":1}}],[\"接下来浏览器还会自动去请求网站图标\",{\"1\":{\"1506\":1}}],[\"接下来运行\",{\"1\":{\"1480\":1}}],[\"接下来需要通过\",{\"1\":{\"1380\":1}}],[\"接下来需要查询一下这个包的接收方\",{\"1\":{\"1348\":1}}],[\"接下来会有一部分数据变成可发送的窗口\",{\"1\":{\"1017\":1}}],[\"接下来两边就不会再发送数据了\",{\"1\":{\"909\":1}}],[\"接下来以三个方面分析三次握手的原因\",{\"1\":{\"809\":1}}],[\"接下来\",{\"1\":{\"339\":1,\"1239\":1,\"1386\":1,\"1499\":1,\"1969\":1,\"2219\":1}}],[\"接下来根据覆盖索引讨论一个问题\",{\"1\":{\"249\":1}}],[\"个人仓库\",{\"1\":{\"3431\":1}}],[\"个人账号\",{\"1\":{\"3430\":1}}],[\"个\",{\"1\":{\"2526\":1}}],[\"个位置满足\",{\"1\":{\"1973\":1}}],[\"个位置开始占据\",{\"1\":{\"1970\":1,\"1971\":1,\"1972\":1,\"1973\":1}}],[\"个溢出桶备用\",{\"1\":{\"1838\":1}}],[\"个包\",{\"1\":{\"1202\":3,\"1493\":1}}],[\"个包已经发送完了啊\",{\"1\":{\"910\":1}}],[\"个报文呢\",{\"1\":{\"909\":1}}],[\"个事务时候\",{\"1\":{\"656\":1}}],[\"个文件\",{\"1\":{\"619\":1}}],[\"个数\",{\"1\":{\"410\":1}}],[\"个数据包被收到了\",{\"1\":{\"998\":1}}],[\"个数据\",{\"1\":{\"248\":1}}],[\"个记录的值的总和\",{\"1\":{\"389\":1}}],[\"个记录\",{\"1\":{\"389\":1}}],[\"个并发线程要同时更新同一行\",{\"1\":{\"384\":1}}],[\"个字符\",{\"1\":{\"263\":1,\"287\":1,\"526\":1}}],[\"个字段\",{\"1\":{\"263\":1,\"287\":1,\"526\":1}}],[\"个字节用于保存传递给\",{\"1\":{\"2362\":1,\"2373\":1}}],[\"个字节\",{\"1\":{\"228\":2,\"1176\":1,\"1970\":1,\"1971\":1,\"1972\":1,\"1973\":1,\"1976\":2,\"2355\":1}}],[\"显示时间\",{\"1\":{\"3093\":1}}],[\"显示循环\",{\"1\":{\"2418\":1}}],[\"显著提升查询性能\",{\"1\":{\"247\":1,\"520\":1}}],[\"显式启动的事务\",{\"1\":{\"179\":1}}],[\"显式启动事务语句\",{\"1\":{\"174\":1}}],[\"覆盖索引的目的仅仅是不回表\",{\"1\":{\"254\":1}}],[\"覆盖索引\",{\"0\":{\"245\":1,\"514\":1},\"1\":{\"286\":1}}],[\"取消注释下一行\",{\"1\":{\"3428\":1}}],[\"取别名\",{\"1\":{\"2030\":1}}],[\"取\",{\"1\":{\"1939\":2}}],[\"取模运算\",{\"1\":{\"1801\":1}}],[\"取得\",{\"1\":{\"240\":1}}],[\"取决于数据块的大小\",{\"1\":{\"206\":1}}],[\"取决于系统的重要性\",{\"1\":{\"125\":1}}],[\"该函数是用来为其他函数添加额外的功能\",{\"1\":{\"3234\":1}}],[\"该函数不需要实例化就可以调用\",{\"1\":{\"3093\":1}}],[\"该函数内部绑定的符号\",{\"1\":{\"2109\":1}}],[\"该目录中的每个文件都是\",{\"1\":{\"2884\":1}}],[\"该\",{\"1\":{\"2862\":1}}],[\"该线程保存在\",{\"1\":{\"2757\":1}}],[\"该线程可以对这个表进行读写\",{\"1\":{\"319\":1}}],[\"该类型是否实现了接口u\",{\"1\":{\"2206\":1}}],[\"该类型变量占用字节数\",{\"1\":{\"2206\":1}}],[\"该表有两个函数\",{\"1\":{\"2008\":1}}],[\"该内存不因结构体释放而释放\",{\"1\":{\"1984\":1}}],[\"该第二条目记录就会被作为转发目标\",{\"1\":{\"1373\":1}}],[\"该恢复过程已经结束\",{\"1\":{\"1002\":1}}],[\"该报文不包含应用层数据\",{\"1\":{\"796\":1}}],[\"该位为\",{\"1\":{\"750\":1,\"751\":1,\"752\":1,\"753\":1}}],[\"该模式速度较快\",{\"1\":{\"635\":1}}],[\"该模式速度最快\",{\"1\":{\"633\":1}}],[\"该模式是最安全的\",{\"1\":{\"634\":1}}],[\"该模式下\",{\"1\":{\"631\":1}}],[\"该模式下在事务提交时不会主动触发写入磁盘的操作\",{\"1\":{\"629\":1}}],[\"该模式为系统默认\",{\"1\":{\"630\":1}}],[\"该事务只能对数据进行读取而不能修改\",{\"1\":{\"605\":1}}],[\"该索引必须是唯一索引\",{\"1\":{\"232\":1}}],[\"该篇论文的复现核心就是对五个模态数据进行标记\",{\"1\":{\"36\":1}}],[\"只传入实体就可\",{\"1\":{\"3305\":1}}],[\"只针对对应的\",{\"1\":{\"3113\":1}}],[\"只负责执行函数\",{\"1\":{\"2941\":1}}],[\"只可由该\",{\"1\":{\"2862\":1}}],[\"只会暂停对应协程\",{\"1\":{\"2495\":1}}],[\"只会存储他的地址\",{\"1\":{\"2372\":1}}],[\"只在清扫阶段支持并发\",{\"1\":{\"2471\":1}}],[\"只不过他交换的是\",{\"1\":{\"2304\":1}}],[\"只不过会将定义的变量\",{\"1\":{\"2164\":1}}],[\"只读可以保证数据的安全\",{\"1\":{\"1777\":1}}],[\"只出现在请求头里\",{\"1\":{\"1569\":1}}],[\"只接收与自身地址匹配的包\",{\"1\":{\"1362\":1}}],[\"只需要检测整个表是否存在ix\",{\"1\":{\"611\":1}}],[\"只需要往后追加\",{\"1\":{\"193\":1}}],[\"只允许此事务读取和修改此数据\",{\"1\":{\"604\":1}}],[\"只允许同时处理并发5个程序\",{\"1\":{\"388\":1}}],[\"只要你接触过面对对象思想的语言\",{\"1\":{\"2156\":1}}],[\"只要其接口关系不变\",{\"1\":{\"726\":1}}],[\"只要发生了表数据更新\",{\"1\":{\"638\":1}}],[\"只要对索引字段使用函数操作\",{\"1\":{\"549\":1}}],[\"只要满足最左前缀\",{\"1\":{\"263\":1}}],[\"只适用于一定的场合\",{\"1\":{\"473\":1}}],[\"只有被python解释器直接执行的模块的名字才是\",{\"1\":{\"3041\":1}}],[\"只有正常返回才会移除\",{\"1\":{\"2951\":1}}],[\"只有一半的堆内存可以使用\",{\"1\":{\"2656\":1}}],[\"只有一个目的\",{\"1\":{\"2125\":1}}],[\"只有一个索引\",{\"1\":{\"231\":1}}],[\"只有这样\",{\"1\":{\"2251\":1}}],[\"只有值发生了变化\",{\"1\":{\"1674\":1}}],[\"只有在操作系统崩溃或者系统断电的情况下\",{\"1\":{\"635\":1}}],[\"只有memory存储引擎显示支持hash索引\",{\"1\":{\"465\":1}}],[\"只是改了第\",{\"1\":{\"3312\":1}}],[\"只是名字的改变罢了\",{\"1\":{\"2743\":1}}],[\"只是前2^b个用作常规桶\",{\"1\":{\"1838\":1}}],[\"只是简单锁等待\",{\"1\":{\"379\":1}}],[\"只是拿到了两条数据\",{\"1\":{\"248\":1}}],[\"只能使用\",{\"1\":{\"3388\":2}}],[\"只能应用于某些kind的方法\",{\"1\":{\"2206\":1}}],[\"只能并发读\",{\"1\":{\"1874\":1}}],[\"只能出现在响应头里\",{\"1\":{\"1571\":1}}],[\"只能出现在请求头里\",{\"1\":{\"1568\":1}}],[\"只能从\",{\"1\":{\"278\":1}}],[\"只能用于迭代操作\",{\"1\":{\"3252\":1}}],[\"只能用\",{\"1\":{\"274\":1}}],[\"虽然create函数的返回值函数形成闭包\",{\"1\":{\"2115\":1}}],[\"虽然哈希值没变\",{\"1\":{\"1861\":1}}],[\"虽然用的java解题\",{\"1\":{\"1615\":1}}],[\"虽然方便阅读报文信息\",{\"1\":{\"1192\":1}}],[\"虽然\",{\"1\":{\"1176\":1,\"1534\":1}}],[\"虽然说维持time\",{\"1\":{\"877\":1}}],[\"虽然最终检测的结果是没有死锁\",{\"1\":{\"384\":1}}],[\"虽然身份证可以作为主键使用\",{\"1\":{\"228\":1}}],[\"虽然之前版本存在但是使用频率很小\",{\"1\":{\"74\":1}}],[\"性能和容错问题\",{\"1\":{\"3265\":1}}],[\"性能也会提升\",{\"1\":{\"2838\":1}}],[\"性能的优化点\",{\"1\":{\"2399\":1}}],[\"性能\",{\"1\":{\"1400\":1}}],[\"性能差\",{\"1\":{\"894\":1}}],[\"性能会有显著的提高\",{\"1\":{\"445\":1}}],[\"性能上会高出一些\",{\"1\":{\"227\":1}}],[\"性能自然会受影响\",{\"1\":{\"222\":1}}],[\"哪些情况下\",{\"0\":{\"548\":1}}],[\"哪些常见不使用呢\",{\"1\":{\"225\":1}}],[\"哪些场景下使用自增主键呢\",{\"1\":{\"225\":1}}],[\"现在他是当前执行的\",{\"1\":{\"2951\":1}}],[\"现在要开始去执行\",{\"1\":{\"2917\":1}}],[\"现在只是再初始化一些\",{\"1\":{\"2792\":1}}],[\"现在有用的数据都是黑色了\",{\"1\":{\"2626\":1}}],[\"现在有一个问题\",{\"1\":{\"2312\":1}}],[\"现在有一个键值对\",{\"1\":{\"1799\":1}}],[\"现在有一个存储了id\",{\"1\":{\"524\":1,\"532\":1}}],[\"现在看看这个堆空间的构成\",{\"1\":{\"2361\":1}}],[\"现在我们来简单看看里面的逻辑\",{\"1\":{\"2776\":1}}],[\"现在我们抛开细节\",{\"1\":{\"2382\":1}}],[\"现在我们想要交换的是局部变量里面的\",{\"1\":{\"2299\":1}}],[\"现在我们通过函数调用栈\",{\"1\":{\"2293\":1}}],[\"现在是指针接收者\",{\"1\":{\"2173\":1}}],[\"现在\",{\"1\":{\"2071\":1,\"2083\":1,\"2321\":2}}],[\"现在的规模可以容纳100多万个符号\",{\"1\":{\"1743\":1}}],[\"现在的tcp控制算法就是当收到三个重复确认ack时\",{\"1\":{\"990\":1}}],[\"现在举例一个场景\",{\"1\":{\"674\":1}}],[\"现在项目越来越复杂\",{\"1\":{\"421\":1}}],[\"现在发起一个逻辑备份\",{\"1\":{\"302\":1}}],[\"现在就可以将前面两个问题做一个综合\",{\"1\":{\"267\":1}}],[\"现在就是\",{\"1\":{\"118\":1}}],[\"现在分到两个页中\",{\"1\":{\"223\":1}}],[\"里的第六个包\",{\"1\":{\"1501\":1}}],[\"里的第四个包\",{\"1\":{\"1498\":1}}],[\"里\",{\"1\":{\"213\":1,\"214\":1,\"1172\":1}}],[\"里面填写刚才的\",{\"1\":{\"3431\":1}}],[\"里面进行创建\",{\"1\":{\"3430\":1}}],[\"里面有对该目录下文件作用的说明\",{\"1\":{\"2886\":1}}],[\"里面有两个\",{\"1\":{\"2555\":1}}],[\"里面列举了time包的说明\",{\"1\":{\"2882\":1}}],[\"里面都是待执行的\",{\"1\":{\"2837\":1}}],[\"里面的函数\",{\"1\":{\"2321\":1}}],[\"里面的锁大致分为全局锁\",{\"1\":{\"291\":1}}],[\"里面查找对应的\",{\"1\":{\"2062\":1,\"2078\":1}}],[\"里面查找\",{\"1\":{\"1917\":1}}],[\"里面记录的都是溢出桶相关的信息\",{\"1\":{\"1834\":1}}],[\"里面表级别的锁有两种\",{\"1\":{\"316\":1}}],[\"里面对应一棵\",{\"1\":{\"208\":1}}],[\"里面已经记录了\",{\"1\":{\"135\":1}}],[\"里面就没有这条语句\",{\"1\":{\"134\":1}}],[\"里面就没有记录这个语句\",{\"1\":{\"134\":1}}],[\"里面\",{\"1\":{\"119\":1}}],[\"625\",{\"1\":{\"3233\":1}}],[\"65\",{\"1\":{\"3069\":1}}],[\"654321cba\",{\"1\":{\"3048\":1}}],[\"65535\",{\"1\":{\"1753\":1}}],[\"67\",{\"1\":{\"2524\":1}}],[\"66\",{\"1\":{\"2524\":1}}],[\"64位系统对齐系数是8\",{\"1\":{\"1947\":1}}],[\"64\",{\"1\":{\"1932\":1,\"1953\":1,\"2355\":1,\"2753\":1}}],[\"64k\",{\"1\":{\"1176\":1}}],[\"6版本后\",{\"1\":{\"289\":1}}],[\"6版本之前\",{\"1\":{\"289\":1}}],[\"6\",{\"0\":{\"498\":1,\"639\":1,\"789\":1,\"1178\":1,\"3070\":1,\"3071\":1,\"3094\":1,\"3097\":1},\"1\":{\"210\":1,\"237\":1,\"278\":1,\"280\":1,\"283\":1,\"284\":1,\"503\":1,\"512\":2,\"1687\":1,\"1702\":1,\"1847\":1,\"2568\":1,\"2574\":1,\"2885\":1,\"3205\":1,\"3256\":1}}],[\"60\",{\"1\":{\"3069\":1,\"3093\":2}}],[\"601\",{\"1\":{\"1040\":1,\"1041\":1,\"1042\":1}}],[\"600\",{\"1\":{\"210\":1,\"237\":1}}],[\"60s\",{\"1\":{\"180\":1}}],[\"2和\",{\"1\":{\"3269\":1}}],[\"2f\",{\"1\":{\"3015\":2}}],[\"28\",{\"1\":{\"2783\":1}}],[\"2auto\",{\"1\":{\"2753\":1}}],[\"2args\",{\"1\":{\"2753\":1}}],[\"24\",{\"1\":{\"1965\":1,\"1977\":1,\"2753\":1,\"2759\":1,\"3093\":1}}],[\"2^hmap\",{\"1\":{\"1847\":1}}],[\"2️⃣\",{\"1\":{\"1720\":1}}],[\"256\",{\"1\":{\"2838\":1,\"2864\":1}}],[\"25\",{\"1\":{\"2567\":1,\"2568\":1,\"2573\":1,\"2574\":1,\"3058\":1}}],[\"25倍呢\",{\"1\":{\"1731\":1}}],[\"25倍\",{\"1\":{\"1715\":1}}],[\"255\",{\"1\":{\"1373\":3}}],[\"2<cap\",{\"1\":{\"1713\":1}}],[\"2k\",{\"1\":{\"1176\":1}}],[\"22\",{\"0\":{\"964\":1},\"1\":{\"1976\":1,\"3084\":1,\"3087\":1}}],[\"21\",{\"0\":{\"961\":1},\"1\":{\"3312\":1}}],[\"2状态\",{\"1\":{\"851\":1,\"1395\":1}}],[\"299\",{\"1\":{\"914\":1}}],[\"295\",{\"1\":{\"654\":1}}],[\"294\",{\"1\":{\"654\":1}}],[\"2nf\",{\"1\":{\"424\":1,\"425\":1}}],[\"2\",{\"0\":{\"401\":1,\"442\":1,\"560\":1,\"603\":1,\"618\":1,\"696\":1,\"724\":1,\"740\":1,\"1065\":1,\"3013\":1,\"3049\":1,\"3094\":1},\"1\":{\"210\":1,\"237\":1,\"248\":1,\"369\":1,\"370\":1,\"631\":1,\"861\":1,\"902\":1,\"909\":1,\"985\":1,\"995\":1,\"1012\":1,\"1021\":1,\"1631\":2,\"1634\":1,\"1635\":1,\"1640\":3,\"1656\":2,\"1670\":1,\"1673\":1,\"1687\":1,\"1702\":1,\"1717\":1,\"1916\":2,\"1965\":1,\"1973\":3,\"1976\":1,\"2111\":1,\"2132\":1,\"2135\":2,\"2143\":1,\"2158\":1,\"2166\":1,\"2272\":1,\"2294\":2,\"2300\":2,\"2303\":1,\"2320\":1,\"2321\":1,\"2333\":2,\"2352\":2,\"2370\":3,\"2378\":1,\"2380\":1,\"2400\":2,\"2402\":1,\"2425\":1,\"2427\":1,\"2454\":3,\"2459\":1,\"2574\":1,\"2730\":1,\"2755\":1,\"2783\":1,\"2885\":1,\"3015\":1,\"3017\":1,\"3020\":1,\"3048\":7,\"3052\":2,\"3062\":4,\"3069\":1,\"3090\":1,\"3104\":2,\"3176\":2,\"3238\":1,\"3240\":1,\"3246\":2,\"3256\":1,\"3286\":1,\"3287\":1,\"3311\":1,\"3325\":1,\"3327\":1,\"3341\":1,\"3342\":1,\"3388\":122}}],[\"206\",{\"1\":{\"1095\":1}}],[\"205\",{\"1\":{\"1092\":1}}],[\"2048\",{\"1\":{\"1753\":1}}],[\"2047\",{\"1\":{\"1753\":1}}],[\"204\",{\"1\":{\"1089\":1}}],[\"203\",{\"1\":{\"1086\":1}}],[\"2019\",{\"1\":{\"3451\":1}}],[\"201\",{\"1\":{\"1080\":1}}],[\"20211204193223832\",{\"1\":{\"2852\":1}}],[\"20211204194241881\",{\"1\":{\"2844\":1}}],[\"20211206191645379\",{\"1\":{\"2774\":1}}],[\"20211124171504432\",{\"1\":{\"2318\":1}}],[\"20211124171454627\",{\"1\":{\"2316\":1}}],[\"20211124170542833\",{\"1\":{\"2314\":1}}],[\"20211124170446035\",{\"1\":{\"2311\":1}}],[\"20211124163347572\",{\"1\":{\"2305\":1}}],[\"20211124163255158\",{\"1\":{\"2302\":1}}],[\"20211124160403622\",{\"1\":{\"2297\":1}}],[\"20211123210314416\",{\"1\":{\"2290\":1}}],[\"20211123205624277\",{\"1\":{\"2287\":1}}],[\"20211123203550591\",{\"1\":{\"2269\":1}}],[\"20211116125055315\",{\"1\":{\"1978\":1}}],[\"20211115212145440\",{\"1\":{\"1958\":1}}],[\"20211115210832404\",{\"1\":{\"1955\":1}}],[\"20211115203810278\",{\"1\":{\"1949\":1}}],[\"20211018193708076\",{\"1\":{\"3385\":1}}],[\"20211018193342775\",{\"1\":{\"3378\":1}}],[\"20211030154206313\",{\"1\":{\"1775\":1}}],[\"20211030162201466\",{\"1\":{\"1768\":1}}],[\"20211028143533945\",{\"1\":{\"1806\":1}}],[\"20211026152707948\",{\"1\":{\"1719\":1}}],[\"20211026153502610\",{\"1\":{\"1718\":1}}],[\"20211026150032973\",{\"1\":{\"1703\":1}}],[\"20211026144659145\",{\"1\":{\"1688\":1}}],[\"20211026142501669\",{\"1\":{\"1681\":1}}],[\"20211026141749149\",{\"1\":{\"1678\":1}}],[\"20211026141521651\",{\"1\":{\"1675\":1}}],[\"20211026141230400\",{\"1\":{\"1672\":1}}],[\"20211025220435472\",{\"1\":{\"1664\":1}}],[\"20211025220403035\",{\"1\":{\"1662\":1}}],[\"20211024194617478\",{\"1\":{\"1641\":1}}],[\"20211024192051643\",{\"1\":{\"1632\":1}}],[\"20210911145410\",{\"1\":{\"1292\":1}}],[\"20210911144021592\",{\"1\":{\"1008\":1}}],[\"20210911140927364\",{\"1\":{\"742\":1}}],[\"20220706111706280\",{\"1\":{\"3061\":1}}],[\"20220112161630664\",{\"1\":{\"1533\":1}}],[\"20220112155819902\",{\"1\":{\"1513\":1}}],[\"20220112155233973\",{\"1\":{\"1508\":1}}],[\"20220112154307779\",{\"1\":{\"1505\":1}}],[\"20220112153830990\",{\"1\":{\"1497\":1}}],[\"20220105220846593\",{\"1\":{\"1495\":1}}],[\"20220105215520494\",{\"1\":{\"1492\":1}}],[\"20220104223339422\",{\"1\":{\"1481\":1}}],[\"20220104222534119\",{\"1\":{\"1468\":1}}],[\"20220304212100214\",{\"1\":{\"427\":1}}],[\"202\",{\"1\":{\"1083\":1}}],[\"20230530232846985\",{\"1\":{\"3434\":1}}],[\"20230603152851954\",{\"1\":{\"3370\":1}}],[\"20230608104107433\",{\"1\":{\"3329\":1}}],[\"20230610144845761\",{\"1\":{\"45\":1}}],[\"2023\",{\"0\":{\"3\":1}}],[\"2000\",{\"1\":{\"3054\":4}}],[\"200\",{\"1\":{\"210\":1,\"237\":1,\"914\":1,\"1029\":1,\"1039\":1,\"1042\":1,\"1077\":1,\"1501\":1,\"1551\":1,\"1555\":1,\"1556\":1,\"1640\":1,\"3054\":4,\"3388\":2}}],[\"20\",{\"0\":{\"956\":1},\"1\":{\"16\":1,\"228\":1,\"909\":1,\"910\":1,\"1317\":1,\"1973\":2,\"3058\":1,\"3205\":1,\"3250\":1,\"3256\":1,\"3354\":1}}],[\"kwargs\",{\"1\":{\"3238\":2,\"3240\":2}}],[\"known\",{\"1\":{\"2868\":3}}],[\"know\",{\"1\":{\"2239\":1}}],[\"k2\",{\"1\":{\"1811\":1,\"1813\":1,\"1817\":1}}],[\"k的类型必须是可以通过操作符==来进行比较的数据类型\",{\"1\":{\"1790\":1,\"1867\":1}}],[\"kind\",{\"1\":{\"2008\":3,\"2206\":3,\"2239\":1,\"2260\":3}}],[\"king\",{\"1\":{\"805\":1}}],[\"kill\",{\"1\":{\"341\":1}}],[\"k是字段也是普通索引\",{\"1\":{\"516\":1}}],[\"k=6\",{\"1\":{\"243\":1}}],[\"k=3\",{\"1\":{\"240\":1,\"517\":1}}],[\"k=5\",{\"1\":{\"218\":1,\"242\":1}}],[\"k\",{\"0\":{\"696\":1},\"1\":{\"210\":3,\"218\":1,\"236\":1,\"237\":3,\"240\":1,\"243\":1,\"246\":2,\"248\":1,\"465\":2,\"516\":1,\"517\":1,\"518\":1,\"519\":2,\"1789\":1,\"1799\":1,\"2260\":2}}],[\"kernel\",{\"1\":{\"2748\":1}}],[\"kernel=\",{\"1\":{\"22\":1}}],[\"keep\",{\"1\":{\"1161\":1,\"1510\":2,\"1511\":2,\"1512\":1}}],[\"keyword\",{\"1\":{\"3388\":1}}],[\"keysize\",{\"1\":{\"2014\":1}}],[\"keys\",{\"1\":{\"2014\":1,\"3388\":1}}],[\"key和value的索引顺序一一对应\",{\"1\":{\"1836\":1}}],[\"keycount\",{\"1\":{\"1827\":1}}],[\"key\",{\"1\":{\"187\":3,\"188\":1,\"226\":1,\"237\":1,\"251\":3,\"597\":2,\"1181\":1,\"1232\":1,\"1236\":1,\"1243\":1,\"1559\":3,\"1799\":1,\"1913\":1,\"2014\":3,\"2206\":1,\"3069\":3,\"3216\":1,\"3217\":1,\"3388\":4}}],[\"表达式中\",{\"1\":{\"3388\":1}}],[\"表达式中出现否定的左操作数\",{\"1\":{\"3388\":1}}],[\"表达式\",{\"1\":{\"3388\":1}}],[\"表达式与有效的字符串进行比较\",{\"1\":{\"3388\":1}}],[\"表明当前正在进行gc扫描\",{\"1\":{\"2868\":1}}],[\"表明服务器返回的数据用的数据压缩的格式\",{\"1\":{\"1166\":1}}],[\"表明本次回应数据长度\",{\"1\":{\"1157\":1}}],[\"表现层\",{\"1\":{\"716\":1}}],[\"表示上述几个状态\",{\"1\":{\"2868\":1}}],[\"表示正处于\",{\"1\":{\"2868\":3}}],[\"表示当前执行的\",{\"1\":{\"2908\":1}}],[\"表示当前\",{\"1\":{\"2868\":1}}],[\"表示当前p的状态\",{\"1\":{\"2864\":1}}],[\"表示当前正在执行的\",{\"1\":{\"2862\":1}}],[\"表示当前是否正在执行\",{\"1\":{\"2862\":1}}],[\"表示当前是否正在自旋\",{\"1\":{\"2862\":1}}],[\"表示黑色对像可追踪到的\",{\"1\":{\"2629\":1}}],[\"表示对象是\",{\"1\":{\"2628\":1}}],[\"表示对资源的操作\",{\"1\":{\"1538\":1}}],[\"表示允许\",{\"1\":{\"2491\":1}}],[\"表示接下来要迁移编号为0的旧桶\",{\"1\":{\"1848\":1}}],[\"表示一个拥有相同类型元素的可边长度的序列\",{\"1\":{\"1649\":1}}],[\"表示报文使用的\",{\"1\":{\"1540\":1,\"1550\":1}}],[\"表示服务器的握手阶段已经结束\",{\"1\":{\"1238\":1}}],[\"表示客户端的握手阶段已经结束\",{\"1\":{\"1234\":1}}],[\"表示随后的信息都将用会话密钥加密通信\",{\"1\":{\"1233\":1}}],[\"表示同意关闭连接\",{\"1\":{\"858\":1}}],[\"表示向服务端发起连接请求\",{\"1\":{\"795\":1}}],[\"表示今后不会再有数据发送\",{\"1\":{\"753\":1}}],[\"表示希望建⽴连接\",{\"1\":{\"752\":1}}],[\"表示\",{\"1\":{\"751\":1,\"892\":1,\"1570\":1}}],[\"表示日志满了\",{\"1\":{\"626\":1}}],[\"表示开启这个逻辑\",{\"1\":{\"377\":1}}],[\"表空间号+数据页号+偏移量+修改数据长度+具体修改的数据\",{\"1\":{\"617\":1}}],[\"表的记录少\",{\"1\":{\"459\":1}}],[\"表的外键是另一表的主键\",{\"1\":{\"406\":1}}],[\"表锁一般是\",{\"1\":{\"346\":1}}],[\"表锁是最常用的处理并发的方式\",{\"1\":{\"321\":1}}],[\"表锁的语法是\",{\"1\":{\"317\":1}}],[\"表级锁\",{\"0\":{\"315\":1},\"1\":{\"323\":1}}],[\"表级锁和行锁三类\",{\"1\":{\"291\":1}}],[\"表中有字段\",{\"1\":{\"210\":1}}],[\"表都是根据主键顺序以索引的形式存放的\",{\"1\":{\"208\":1}}],[\"每行一个\",{\"1\":{\"2884\":1}}],[\"每进行一次系统调用则自增1\",{\"1\":{\"2864\":1}}],[\"每被调度一次则自增1\",{\"1\":{\"2864\":1}}],[\"每一轮\",{\"1\":{\"2506\":1}}],[\"每一个符号都给予一个独一无二的编码\",{\"1\":{\"1742\":1}}],[\"每一个拆分出来的数据包都会加上tcp头信息\",{\"1\":{\"1294\":1}}],[\"每一个索引还要占一定的物理空间\",{\"1\":{\"449\":1}}],[\"每一个索引在\",{\"1\":{\"208\":1}}],[\"每种规格类型对应\",{\"1\":{\"2528\":1}}],[\"每种类型的对齐值就是他的对齐系数\",{\"1\":{\"1943\":1}}],[\"每种隔离级别都是有自己的使用场景\",{\"1\":{\"164\":1}}],[\"每经过一个处理他的路由器此值就减\",{\"1\":{\"867\":1}}],[\"每发送⼀次数据\",{\"1\":{\"744\":1}}],[\"每条\",{\"1\":{\"617\":1}}],[\"每张表都会有主键索引\",{\"1\":{\"505\":1}}],[\"每个步骤按顺序执行得\",{\"1\":{\"3417\":1}}],[\"每个对象都是独一无二的\",{\"1\":{\"3073\":1}}],[\"每个值都可以通过索引进行标识\",{\"1\":{\"3050\":1}}],[\"每个\",{\"1\":{\"2524\":1,\"2526\":1,\"2528\":1,\"2554\":1,\"2837\":1}}],[\"每个函数会分配栈帧\",{\"1\":{\"2285\":1}}],[\"每个闭包对象都是一个function\",{\"1\":{\"2116\":1}}],[\"每个类型元数据基础信息都放到了\",{\"1\":{\"2007\":1}}],[\"每个特定平台上的编译器都有自己的默认\",{\"1\":{\"1945\":1}}],[\"每个键值对还是会选择与旧桶一样的新桶编号\",{\"1\":{\"1861\":1}}],[\"每个旧桶的键值对都会分流到两个新桶中\",{\"1\":{\"1850\":1}}],[\"每个桶里可以存储8个键值对\",{\"1\":{\"1836\":1}}],[\"每个符号的编码都不一样\",{\"1\":{\"1743\":1}}],[\"每个可见节点都应用了其cssom规则\",{\"1\":{\"1430\":1}}],[\"每个条目的子网掩码和\",{\"1\":{\"1371\":1}}],[\"每个文件的大小是\",{\"1\":{\"619\":1}}],[\"每个节点能容纳更多的数据\",{\"1\":{\"485\":1}}],[\"每个新来的被堵住的线程\",{\"1\":{\"384\":1}}],[\"每次工作流生成的打包文件会覆盖之前\",{\"1\":{\"3441\":1}}],[\"每次遇到\",{\"1\":{\"3253\":1}}],[\"每次需要数据的时候就通过内部的运算得到数据\",{\"1\":{\"3052\":1}}],[\"每次\",{\"1\":{\"2933\":1}}],[\"每次写\",{\"1\":{\"2735\":1}}],[\"每次读取会按照字长作为单位去读取内存数据\",{\"1\":{\"1938\":1}}],[\"每次扩容占用的时间太长就会造成性能瞬时明显抖动\",{\"1\":{\"1829\":1}}],[\"每次周赛都会有go题解发出\",{\"1\":{\"1616\":1}}],[\"每次建立连接前重新初始化⼀个序列号主要是为了通信双方能够根据序号将不属于本连接的报文段丢弃\",{\"1\":{\"843\":1}}],[\"每次事务提交时mysql都会把日志缓存区的数据写入日志文件中\",{\"1\":{\"630\":1,\"631\":1}}],[\"每次查询的次数最坏情况会等于索引树的高度\",{\"1\":{\"480\":1}}],[\"每次查询都要建立一个覆盖索引\",{\"1\":{\"256\":1}}],[\"每次比较操作都会去掉当前数据量一半的数据\",{\"1\":{\"478\":1}}],[\"每当一个事务被锁的时候\",{\"1\":{\"382\":1}}],[\"每执行一条\",{\"1\":{\"324\":1}}],[\"树反映了不同标记之间的关系和层次结构\",{\"1\":{\"1405\":1}}],[\"树状结构\",{\"1\":{\"1269\":1}}],[\"树这种索引结构\",{\"1\":{\"522\":1}}],[\"树高会比较大\",{\"1\":{\"493\":1}}],[\"树的出度大\",{\"1\":{\"493\":1}}],[\"树的算法\",{\"1\":{\"222\":1}}],[\"树为了维护索引有序性\",{\"1\":{\"221\":1}}],[\"树\",{\"1\":{\"208\":1,\"217\":1,\"441\":1,\"463\":1,\"1423\":1}}],[\"树索引模型\",{\"1\":{\"208\":1}}],[\"树中的\",{\"1\":{\"206\":1,\"208\":1}}],[\"叉树\",{\"1\":{\"206\":1}}],[\"还可以定义自己特有的属性和方法\",{\"1\":{\"3095\":1}}],[\"还可以在达到目标使用率时主动让出\",{\"1\":{\"2571\":1}}],[\"还未初始化\",{\"1\":{\"2868\":1}}],[\"还未抵达终点\",{\"1\":{\"1378\":1}}],[\"还实现了\",{\"1\":{\"2581\":1}}],[\"还记录着该\",{\"1\":{\"2525\":1}}],[\"还捕获了外层函数的局部变量\",{\"1\":{\"2371\":1}}],[\"还被修改过\",{\"1\":{\"2127\":1,\"2136\":1}}],[\"还有很多配置\",{\"1\":{\"3419\":1}}],[\"还有很多很多问题\",{\"1\":{\"3268\":1}}],[\"还有可能受到网络故障\",{\"1\":{\"3265\":1}}],[\"还有一些编译阶段不能确定大小的数据\",{\"1\":{\"2597\":1}}],[\"还有一个问题\",{\"1\":{\"265\":1}}],[\"还有额外需要描述的信息也需要存储\",{\"1\":{\"2009\":1}}],[\"还需要将\",{\"1\":{\"2756\":1}}],[\"还需要扩展\",{\"1\":{\"1976\":1}}],[\"还需继续需要路由器转发\",{\"1\":{\"1378\":1}}],[\"还会获取当前操作系统的页存大小\",{\"1\":{\"2785\":1}}],[\"还会完成整个程序运行时的初始化\",{\"1\":{\"2772\":1}}],[\"还会记录当前是第几个\",{\"1\":{\"2481\":1}}],[\"还会初始化为int类型的零值\",{\"1\":{\"1665\":1}}],[\"还会开辟一段内存作为他的底层数组\",{\"1\":{\"1665\":1}}],[\"还是只记录其所在的页\",{\"1\":{\"2696\":1}}],[\"还是哈希存储\",{\"1\":{\"2695\":1}}],[\"还是\",{\"1\":{\"1940\":1,\"2417\":1}}],[\"还是把\",{\"1\":{\"898\":1}}],[\"还是以影院账户为例\",{\"1\":{\"389\":1}}],[\"还要再进一步判断这些节点是否指向堆内存\",{\"1\":{\"2534\":1}}],[\"还要改一下本机的hosts文件\",{\"1\":{\"1469\":1}}],[\"还要加上\",{\"1\":{\"1202\":1}}],[\"还要考虑到网络环境的情况\",{\"1\":{\"962\":1}}],[\"还要向服务端回应一个应答报文\",{\"1\":{\"797\":1}}],[\"还要写在磁盘中\",{\"1\":{\"206\":1}}],[\"还请根据业务需求\",{\"1\":{\"288\":1}}],[\"还没有到达接收方\",{\"1\":{\"842\":1}}],[\"还没有写完\",{\"1\":{\"676\":1}}],[\"还没有写完的时候\",{\"1\":{\"134\":1}}],[\"还没有开始\",{\"1\":{\"674\":1}}],[\"还没写\",{\"1\":{\"135\":1}}],[\"按位与\",{\"1\":{\"2998\":1}}],[\"按位与运算\",{\"1\":{\"1802\":1}}],[\"按位取反\",{\"1\":{\"2990\":1}}],[\"按钮告诉wireshark\",{\"1\":{\"1485\":1}}],[\"按序接受\",{\"1\":{\"826\":1}}],[\"按需到达\",{\"1\":{\"772\":1}}],[\"按需要恢复到线上库去\",{\"1\":{\"129\":1}}],[\"按照他的要求去进行更改即可\",{\"1\":{\"3398\":1}}],[\"按照优先级从高到低的顺序列出了所有的运算符\",{\"1\":{\"2982\":1}}],[\"按照名称查找方法\",{\"1\":{\"2206\":1}}],[\"按照\",{\"1\":{\"693\":1}}],[\"按照图中的搜索顺序就是按照\",{\"1\":{\"205\":1}}],[\"二进制模式\",{\"1\":{\"3144\":1}}],[\"二进制\",{\"1\":{\"1753\":1}}],[\"二进制01000001\",{\"1\":{\"1739\":1}}],[\"二\",{\"1\":{\"1728\":1,\"2595\":1}}],[\"二级索引的叶子节点存储的数据是主键\",{\"1\":{\"508\":1}}],[\"二级索引\",{\"0\":{\"507\":1}}],[\"二叉搜索树的查询与更新效率都是优秀的\",{\"1\":{\"206\":1}}],[\"二叉搜索树的特点是\",{\"1\":{\"205\":1}}],[\"二叉搜索树\",{\"1\":{\"204\":1}}],[\"二维矩阵\",{\"1\":{\"40\":1}}],[\"两个代理文件确实会帮助我们去写业务逻辑代码\",{\"1\":{\"3313\":1}}],[\"两个字段的值\",{\"1\":{\"2934\":1}}],[\"两个字节\",{\"1\":{\"1939\":1}}],[\"两个参数赋值作为全局变量使用\",{\"1\":{\"2779\":1}}],[\"两个链表\",{\"1\":{\"2528\":1}}],[\"两个全局变量\",{\"1\":{\"2474\":1}}],[\"两个日志的状态逻辑上不一致\",{\"1\":{\"674\":1,\"676\":1}}],[\"两个日志一起提交呢\",{\"1\":{\"122\":1}}],[\"两者的类型是相同的\",{\"1\":{\"2163\":1}}],[\"两者不一致所以匹配失败\",{\"1\":{\"1315\":1}}],[\"两者有一定的差别\",{\"1\":{\"541\":1}}],[\"两次握手只能保证一方那个的初始序列号被对方成功接受\",{\"1\":{\"830\":1}}],[\"两次二分法分别查询左边界与右边界\",{\"1\":{\"201\":1}}],[\"两阶段的提交\",{\"1\":{\"685\":1}}],[\"两阶段提交\",{\"1\":{\"677\":1}}],[\"两阶段锁协议\",{\"1\":{\"361\":1}}],[\"两阶段锁\",{\"0\":{\"355\":1}}],[\"两条记录\",{\"1\":{\"367\":1}}],[\"等信息可以确定特定\",{\"1\":{\"2532\":1}}],[\"等价于range\",{\"1\":{\"3019\":1}}],[\"等价于\",{\"1\":{\"2195\":1,\"3021\":1}}],[\"等价得原因\",{\"1\":{\"1992\":1}}],[\"等于\",{\"1\":{\"2138\":1,\"3004\":1}}],[\"等量扩容\",{\"1\":{\"1853\":1}}],[\"等已有头\",{\"1\":{\"1560\":1}}],[\"等\",{\"1\":{\"1201\":1}}],[\"等待释放的m列表\",{\"1\":{\"2872\":1}}],[\"等待标记阶段得到调度\",{\"1\":{\"2487\":1}}],[\"等待页面的出来\",{\"1\":{\"1491\":1}}],[\"等待获取css不会阻塞html的解析或者下载\",{\"1\":{\"1413\":1}}],[\"等待处理完成后\",{\"1\":{\"1024\":1}}],[\"等待应用进程读取\",{\"1\":{\"1021\":1}}],[\"等待接收方告知的报文窗口大小达到一定的字节就发送数据\",{\"1\":{\"955\":1}}],[\"等待服务端不再发送数据时候\",{\"1\":{\"858\":1}}],[\"等待服务端处理完数据后\",{\"1\":{\"852\":1,\"1396\":1}}],[\"等待正确的syn+ack报文\",{\"1\":{\"820\":1}}],[\"等多个引擎存储\",{\"1\":{\"695\":1}}],[\"等多个存储引擎\",{\"1\":{\"60\":1}}],[\"等到最后\",{\"1\":{\"368\":1}}],[\"等值查询\",{\"1\":{\"200\":1,\"473\":1}}],[\"及其他一些\",{\"1\":{\"195\":1}}],[\"因何倒序\",{\"0\":{\"2331\":1},\"1\":{\"2344\":1}}],[\"因而需要一定费用\",{\"1\":{\"1201\":1}}],[\"因为现在项目并不是团队合作\",{\"1\":{\"3374\":1}}],[\"因为模块的名字是module3而不是\",{\"1\":{\"3043\":1}}],[\"因为linux上才支持这个命令\",{\"1\":{\"2893\":1}}],[\"因为循环引用会导致引用计数无法更新到\",{\"1\":{\"2675\":1}}],[\"因为被释放的内存可能已经被清空\",{\"1\":{\"2606\":1}}],[\"因为清扫工作也是增量进行的\",{\"1\":{\"2506\":1}}],[\"因为此阶段是注册阶段\",{\"1\":{\"2384\":1}}],[\"因为传参传的是局部变量\",{\"1\":{\"2250\":1}}],[\"因为修改这样一个连用户都不知道的临时变量是没有任何意义\",{\"1\":{\"2245\":1}}],[\"因为这会导致子类无法访问\",{\"1\":{\"3081\":1}}],[\"因为这样并不符合go\",{\"1\":{\"2215\":1}}],[\"因为这个功能不太实用\",{\"1\":{\"691\":1}}],[\"因为这个联合索引意味着建立了\",{\"1\":{\"266\":1}}],[\"因为参数拷贝的是\",{\"1\":{\"2176\":1}}],[\"因为作为值接收者去调用方法\",{\"1\":{\"2170\":1}}],[\"因为后续会更改\",{\"1\":{\"2138\":1}}],[\"因为通过方法列表确定某个具体类型没有实现指定接口\",{\"1\":{\"2066\":1}}],[\"因为如果有指针指向该字段\",{\"1\":{\"1984\":1}}],[\"因为在\",{\"1\":{\"2068\":1}}],[\"因为在初始化迭代器\",{\"1\":{\"1865\":1}}],[\"因为在b收到ack前的一刹那\",{\"1\":{\"874\":1}}],[\"因为之前ans1\",{\"1\":{\"1704\":1}}],[\"因为头部太大可能会占用大量的服务器资源\",{\"1\":{\"1534\":1}}],[\"因为javascript经常用于查询元素的css属性\",{\"1\":{\"1413\":1}}],[\"因为需要\",{\"1\":{\"1387\":1}}],[\"因为它们会占用空间\",{\"1\":{\"1429\":1}}],[\"因为它们要更新同一个影院账户的余额\",{\"1\":{\"369\":1}}],[\"因为它也一发一收了\",{\"1\":{\"1290\":1}}],[\"因为它一发一收成功了\",{\"1\":{\"1289\":1}}],[\"因为对于发送方来说\",{\"1\":{\"910\":1}}],[\"因为你会去等\",{\"1\":{\"898\":1}}],[\"因为是以时间为驱动\",{\"1\":{\"898\":1}}],[\"因为我们的网络也是时常变化的\",{\"1\":{\"897\":1}}],[\"因为a并不知道它发送出去的ack要多久对方才能收到\",{\"1\":{\"874\":1}}],[\"因为除非多次重传失败\",{\"1\":{\"873\":1}}],[\"因为tcp是可靠连接\",{\"1\":{\"873\":1}}],[\"因为\",{\"1\":{\"867\":1,\"2221\":1,\"2392\":1,\"2513\":1,\"2763\":1}}],[\"因为三次握手才能保证双方具有接收和发送的能⼒\",{\"1\":{\"807\":1}}],[\"因为只取前几个字符\",{\"1\":{\"511\":1}}],[\"因为业务设计的时候一般不会把死锁当做一个严重错误\",{\"1\":{\"387\":1}}],[\"因为锁都要等到\",{\"1\":{\"374\":1}}],[\"因为不同表之间的执行顺序不同进而备份的时间不同\",{\"1\":{\"305\":1}}],[\"因为不是有序的\",{\"1\":{\"194\":1}}],[\"因为索引不止存在内存中\",{\"1\":{\"206\":1}}],[\"因此经常被一些库设计者所诟病\",{\"1\":{\"2392\":1}}],[\"因此严的\",{\"1\":{\"1755\":1}}],[\"因此对于英语字母\",{\"1\":{\"1751\":1}}],[\"因此首先会在\",{\"1\":{\"1381\":1}}],[\"因此它就能够成为以太网的发送方和接收方\",{\"1\":{\"1357\":1}}],[\"因此有可能遭遇伪装\",{\"1\":{\"1196\":1}}],[\"因此每次读取数据之前都会上锁\",{\"1\":{\"602\":1}}],[\"因此优化器就决定放弃走树搜索功能\",{\"1\":{\"549\":1}}],[\"因此查找的时间复杂度为o\",{\"1\":{\"478\":1}}],[\"因此可以正常执行\",{\"1\":{\"335\":1}}],[\"因此你可以有多个线程同时对一张表增删改查\",{\"1\":{\"325\":1}}],[\"因此如果查询条件中有两个范围列则无法全用到索引\",{\"1\":{\"276\":1,\"530\":1}}],[\"因此第一原则是\",{\"1\":{\"266\":1}}],[\"因此\",{\"1\":{\"134\":1,\"155\":1,\"177\":1,\"219\":1,\"313\":1,\"326\":1,\"384\":1,\"1365\":1,\"1742\":1,\"2793\":1}}],[\"缺点\",{\"0\":{\"1185\":1},\"1\":{\"194\":1,\"417\":1,\"447\":1,\"2605\":1,\"2635\":1,\"2642\":1,\"2655\":1,\"2664\":1,\"2672\":1}}],[\"好像\",{\"1\":{\"2954\":1}}],[\"好像就可以正常执行程序了\",{\"1\":{\"2929\":1}}],[\"好像只解决了第一个问题\",{\"1\":{\"2422\":1}}],[\"好像并没有改变\",{\"1\":{\"2323\":1}}],[\"好像并没有直接进入到\",{\"1\":{\"1509\":1}}],[\"好像这样子去修改不符合要求啊\",{\"1\":{\"2247\":1}}],[\"好像指向的是\",{\"1\":{\"2244\":1}}],[\"好像与上面两个比起来\",{\"1\":{\"206\":1}}],[\"好像不能解释第一个问题\",{\"1\":{\"130\":1}}],[\"好处\",{\"1\":{\"193\":1,\"611\":1}}],[\"最佳实践\",{\"1\":{\"3388\":1}}],[\"最简单的异常错误处理\",{\"1\":{\"3106\":1}}],[\"最初\",{\"1\":{\"2837\":1}}],[\"最终这个结构体类型大小是\",{\"1\":{\"1977\":1}}],[\"最开始三个包\",{\"1\":{\"1496\":1}}],[\"最好是将这些执行代码放入如下所示的条件中\",{\"1\":{\"3039\":1}}],[\"最好的方式就是搭建一个小型\",{\"1\":{\"1454\":1}}],[\"最好根据存储空间\",{\"1\":{\"269\":1}}],[\"最高的隔离级别\",{\"1\":{\"575\":1}}],[\"最低的隔离级别\",{\"1\":{\"572\":1}}],[\"最大对齐系数为\",{\"1\":{\"1953\":1,\"1956\":1}}],[\"最大的一个特点\",{\"1\":{\"1749\":1}}],[\"最大程度减少了事务的锁的等待\",{\"1\":{\"370\":1}}],[\"最大值加\",{\"1\":{\"226\":1}}],[\"最可能影响并发度的锁尽量往后放\",{\"1\":{\"361\":1}}],[\"最后组成一个\",{\"1\":{\"3403\":1}}],[\"最后一个except子句可以忽略异常的名称\",{\"1\":{\"3113\":1}}],[\"最后一个元素值为\",{\"1\":{\"1638\":1}}],[\"最后通过\",{\"1\":{\"2772\":1}}],[\"最后是被调用函数的返回值和参数\",{\"1\":{\"2268\":1}}],[\"最后是参数\",{\"1\":{\"2212\":1}}],[\"最后用crlf换行表示字段结束\",{\"1\":{\"1559\":1}}],[\"最后要用crlf换行表示结束\",{\"1\":{\"1542\":1}}],[\"最后\",{\"1\":{\"907\":1}}],[\"最后回表查询进行比较\",{\"1\":{\"533\":1}}],[\"最后判断是否出现了循环等待\",{\"1\":{\"382\":1}}],[\"最后业务开发就是把\",{\"1\":{\"348\":1}}],[\"最后找到对应值\",{\"1\":{\"192\":1}}],[\"最左前缀可以是联合索引的最左\",{\"1\":{\"526\":1}}],[\"最左前缀可以用于在索引中定位记录\",{\"1\":{\"271\":1}}],[\"最左前缀\",{\"1\":{\"257\":1,\"287\":1,\"522\":1}}],[\"最左前缀原则\",{\"0\":{\"255\":1,\"521\":1}}],[\"最直接想法\",{\"1\":{\"246\":1}}],[\"最经典的例子\",{\"1\":{\"141\":1}}],[\"哈希冲突会影响哈希读写的效率\",{\"1\":{\"1820\":1}}],[\"哈希冲突会影响查询速度\",{\"1\":{\"472\":1}}],[\"哈希冲突\",{\"0\":{\"1810\":1}}],[\"哈希函数输入的范围一定会远远大于输出的范围\",{\"1\":{\"1811\":1}}],[\"哈希函数的实现有很多\",{\"1\":{\"1807\":1}}],[\"哈希函数会存在哈希冲突\",{\"1\":{\"466\":1}}],[\"哈希桶等\",{\"1\":{\"478\":1}}],[\"哈希索引限制多\",{\"1\":{\"473\":1}}],[\"哈希索引只支持等值查询\",{\"1\":{\"471\":1}}],[\"哈希索引不支持部分索引查找\",{\"1\":{\"470\":1}}],[\"哈希索引数据不是按照索引值顺序存储\",{\"1\":{\"469\":1}}],[\"哈希索引将所有的哈希值存储在索引中\",{\"1\":{\"466\":1}}],[\"哈希的思路很简单\",{\"1\":{\"187\":1}}],[\"哈希表中存储的键值对数量和桶数量的比值会作为判断哈希表是否需要扩容的依据\",{\"1\":{\"1826\":1}}],[\"哈希表通常会有一堆桶\",{\"1\":{\"1799\":1}}],[\"哈希表是\",{\"1\":{\"465\":1}}],[\"哈希表是一种以键\",{\"1\":{\"187\":1}}],[\"哈希表这种结构适用于只有等值查询的场景\",{\"1\":{\"195\":1}}],[\"哈希表\",{\"1\":{\"185\":1,\"186\":1}}],[\"值得注意的是\",{\"1\":{\"2417\":1}}],[\"值传递\",{\"1\":{\"2294\":1}}],[\"值的标头\",{\"1\":{\"2220\":1}}],[\"值接收者\",{\"0\":{\"2165\":1}}],[\"值拷贝\",{\"1\":{\"2123\":1}}],[\"值在\",{\"1\":{\"519\":1}}],[\"值然后回到主键索引树中搜索所有的数据\",{\"1\":{\"517\":1}}],[\"值为700\",{\"1\":{\"221\":1}}],[\"值分别为\",{\"1\":{\"210\":1}}],[\"值经过哈希函数换算\",{\"1\":{\"188\":1}}],[\"值\",{\"1\":{\"187\":1,\"226\":1}}],[\"索引为\",{\"1\":{\"1972\":1}}],[\"索引从0到数组长度减一\",{\"1\":{\"1630\":1}}],[\"索引会以链表方式存放多个记录指针\",{\"1\":{\"466\":1}}],[\"索引基于哈希表实现\",{\"1\":{\"465\":1}}],[\"索引常见的数据结构\",{\"1\":{\"463\":1}}],[\"索引有哪些使用场景\",{\"0\":{\"450\":1}}],[\"索引也需要动态维护\",{\"1\":{\"448\":1}}],[\"索引是一种用于快速查询和检索数据的数据结构\",{\"1\":{\"441\":1}}],[\"索引要根据表中的每一行的记录值来创建\",{\"1\":{\"330\":1}}],[\"索引最多用于一个范围列\",{\"1\":{\"276\":1,\"530\":1}}],[\"索引下推\",{\"0\":{\"270\":1,\"527\":1},\"1\":{\"289\":1,\"528\":1}}],[\"索引项是按照索引定义里面出现的字段顺序排序的\",{\"1\":{\"260\":1}}],[\"索引维护\",{\"0\":{\"220\":1}}],[\"索引树会先查询姓张的数据\",{\"1\":{\"533\":1}}],[\"索引树中的结果\",{\"1\":{\"519\":1}}],[\"索引树下查询\",{\"1\":{\"517\":1}}],[\"索引树取下一个值\",{\"1\":{\"243\":1}}],[\"索引树找到\",{\"1\":{\"240\":1}}],[\"索引树搜索一次\",{\"1\":{\"218\":1}}],[\"索引树\",{\"1\":{\"218\":1,\"241\":1,\"246\":1}}],[\"索引的底层数据结构聊一聊\",{\"0\":{\"462\":1}}],[\"索引的优缺点\",{\"0\":{\"442\":1}}],[\"索引的使用\",{\"0\":{\"234\":1}}],[\"索引的类型分为主键索引和非主键索引\",{\"1\":{\"212\":1}}],[\"索引的常见模型\",{\"0\":{\"184\":1}}],[\"索引的出现其实就是为了提高数据查询的效率\",{\"1\":{\"183\":1}}],[\"索引\",{\"0\":{\"182\":1,\"439\":1},\"1\":{\"3053\":1}}],[\"库的\",{\"1\":{\"180\":1}}],[\"用指定的字符串替换原字符串中与正则表达式匹配的模式\",{\"1\":{\"3191\":1}}],[\"用正则表达式指定的模式分隔符拆分字符串\",{\"1\":{\"3189\":1}}],[\"用正则表达式匹配字符串\",{\"1\":{\"3185\":1}}],[\"用例\",{\"1\":{\"3123\":1,\"3204\":1,\"3232\":1,\"3237\":1}}],[\"用法\",{\"1\":{\"3121\":1,\"3128\":1}}],[\"用括号把多个元素组合到一起就形成了一个元组\",{\"1\":{\"3056\":1}}],[\"用这种语法创建列表之后元素已经准备就绪所以需要耗费较多的内存空间\",{\"1\":{\"3052\":1}}],[\"用列表的生成表达式语法创建列表容器\",{\"1\":{\"3052\":1}}],[\"用小写字母拼写\",{\"1\":{\"2979\":1}}],[\"用作本地\",{\"1\":{\"2528\":1}}],[\"用不到\",{\"1\":{\"2450\":1}}],[\"用完以后\",{\"1\":{\"2364\":1}}],[\"用到反射的场景不多\",{\"1\":{\"2202\":1}}],[\"用多少溢出桶算多\",{\"1\":{\"1855\":1}}],[\"用切片传数组参数\",{\"1\":{\"1651\":1}}],[\"用切片解决上面那个问题\",{\"1\":{\"1650\":1}}],[\"用代码的形式表示处理的结果\",{\"1\":{\"1551\":1}}],[\"用每个元素的框模型属性排列所有body的子孙元素的尺寸\",{\"1\":{\"1436\":1}}],[\"用的端口也不一样\",{\"1\":{\"1203\":1}}],[\"用mac地址访问介质\",{\"1\":{\"709\":1}}],[\"用来存储panic正在执行的defer函数的参数空间地址\",{\"1\":{\"2919\":1}}],[\"用来跟踪分析goroutines运行调度状态等功能的工具\",{\"1\":{\"2893\":1}}],[\"用来支持pprof\",{\"1\":{\"2893\":1}}],[\"用来支持pprof的\",{\"1\":{\"2893\":1}}],[\"用来找到使用旧api的程序\",{\"1\":{\"2893\":1}}],[\"用来分析单元测试覆盖率的工具\",{\"1\":{\"2893\":1}}],[\"用来更新库或二进制文件中构建的标识\",{\"1\":{\"2893\":1}}],[\"用来实现字符串高速匹配查找\",{\"1\":{\"2891\":1}}],[\"用来检查包传输过程是否有损坏\",{\"1\":{\"1342\":1}}],[\"用来供客户端校验\",{\"1\":{\"1238\":1}}],[\"用来供服务端校验\",{\"1\":{\"1234\":1}}],[\"用来解决不丢包的问题\",{\"1\":{\"748\":1}}],[\"用来解决网络包乱序问题\",{\"1\":{\"745\":1}}],[\"用来和其他表建立联系用的\",{\"1\":{\"409\":1}}],[\"用来保证变更表结构操作的安全性\",{\"1\":{\"326\":1}}],[\"用于指统一在回调函数中指向this的变量名\",{\"1\":{\"3388\":1}}],[\"用于生成的\",{\"1\":{\"3321\":1}}],[\"用于生成go语言api列表\",{\"1\":{\"2893\":1}}],[\"用于移除集合中的指定元素\",{\"1\":{\"3063\":1}}],[\"用于移除指定的集合元素\",{\"1\":{\"3063\":1}}],[\"用于提取并生成go程序文档\",{\"1\":{\"2893\":1}}],[\"用于一些不安全的操作场景\",{\"1\":{\"2891\":1}}],[\"用于上下文切换\",{\"1\":{\"2868\":1}}],[\"用于被其他p再次使用\",{\"1\":{\"2864\":1}}],[\"用于lock\",{\"1\":{\"2789\":1}}],[\"用于记录当前\",{\"1\":{\"2542\":1}}],[\"用于标记是否要继续扫描\",{\"1\":{\"2540\":1}}],[\"用于标记是否为指针\",{\"1\":{\"2539\":1}}],[\"用于标识是否为堆分配\",{\"1\":{\"2419\":1}}],[\"用于存放\",{\"1\":{\"2361\":1}}],[\"用于存储全局工作信息\",{\"1\":{\"2479\":1}}],[\"用于存储\",{\"1\":{\"2359\":1}}],[\"用于存储与查询以及复用\",{\"1\":{\"1913\":1}}],[\"用于在注册时保存给defer函数传入的参数\",{\"1\":{\"2350\":1,\"2420\":1}}],[\"用于快速判断类型是否相等时使用\",{\"1\":{\"1900\":1}}],[\"用于后面的布局\",{\"1\":{\"1431\":1}}],[\"用于两点之间的传输\",{\"1\":{\"1324\":1}}],[\"用于服务器回应本次数据的格式\",{\"1\":{\"1163\":1}}],[\"用于唯一标识一个元组\",{\"1\":{\"405\":1}}],[\"用于查找持续时间超过\",{\"1\":{\"180\":1}}],[\"用户程序与垃圾回收程序不会同时执行\",{\"1\":{\"2719\":1}}],[\"用户程序与垃圾回收程序并发执行\",{\"1\":{\"2718\":1}}],[\"用户真的可以接受长时间的暂停吗\",{\"1\":{\"2676\":1}}],[\"用户认证\",{\"1\":{\"1190\":1}}],[\"用户终端\",{\"1\":{\"1094\":1}}],[\"用户\",{\"1\":{\"304\":1}}],[\"用户名必须由字母\",{\"1\":{\"3205\":1}}],[\"用户名\",{\"1\":{\"62\":1}}],[\"用一个哈希函数把\",{\"1\":{\"187\":1}}],[\"用\",{\"1\":{\"179\":1}}],[\"多次声明同一变量\",{\"1\":{\"3388\":1}}],[\"多次扫描与移动数据块的开销巨大\",{\"1\":{\"2643\":1}}],[\"多行模式必须带逗号\",{\"1\":{\"3388\":1}}],[\"多行匹配标记\",{\"1\":{\"3203\":1}}],[\"多态\",{\"0\":{\"3097\":1}}],[\"多线程并行执行垃圾回收程序的场景\",{\"1\":{\"2711\":1}}],[\"多核场景\",{\"0\":{\"2708\":1}}],[\"多链表内存管理模型\",{\"1\":{\"2514\":1}}],[\"多个元素用\",{\"1\":{\"3050\":1}}],[\"多个单词用下划线连接\",{\"1\":{\"2979\":1}}],[\"多个\",{\"1\":{\"2523\":2,\"2837\":1}}],[\"多个变量都用到一个函数\",{\"1\":{\"2104\":1}}],[\"多个字段需要被查询建立复合索引\",{\"1\":{\"457\":1}}],[\"多出的位补0\",{\"1\":{\"1755\":1}}],[\"多亏了预加载扫描器\",{\"1\":{\"1410\":1}}],[\"多种选择\",{\"1\":{\"1100\":1}}],[\"多对多的交互通信\",{\"1\":{\"770\":1}}],[\"多一次交互\",{\"1\":{\"178\":1}}],[\"多了就清理多的p\",{\"1\":{\"2789\":1}}],[\"多了\",{\"1\":{\"79\":1}}],[\"长度\",{\"1\":{\"1769\":1}}],[\"长度为3\",{\"1\":{\"1635\":1}}],[\"长度在\",{\"1\":{\"1176\":1}}],[\"长事务还占用锁资源\",{\"1\":{\"171\":1}}],[\"长事务意味着系统里面会存在很老的事务视图\",{\"1\":{\"171\":1}}],[\"长期下去\",{\"1\":{\"69\":1}}],[\"系统版本\",{\"1\":{\"3353\":1}}],[\"系统初始化\",{\"0\":{\"2876\":1}}],[\"系统所开启的协程数量\",{\"1\":{\"2872\":1}}],[\"系统参数的获取\",{\"1\":{\"2759\":1,\"2766\":1}}],[\"系统参数的获取以及影响内存管理和程序调度的相关常量的初始化\",{\"1\":{\"2758\":1}}],[\"系统的常见启动代码\",{\"1\":{\"2748\":1}}],[\"系统调用计数器\",{\"1\":{\"2864\":1}}],[\"系统调用\",{\"1\":{\"2745\":1}}],[\"系统崩溃了\",{\"1\":{\"674\":1}}],[\"系统会生成长度为\",{\"1\":{\"503\":1}}],[\"系统会获取当前\",{\"1\":{\"226\":1}}],[\"系统会判断\",{\"1\":{\"169\":1}}],[\"系统即使崩溃\",{\"1\":{\"134\":1}}],[\"回收器的相关常量的初始化\",{\"1\":{\"2768\":1}}],[\"回收过程\",{\"1\":{\"2647\":1}}],[\"回收方式\",{\"0\":{\"2602\":1}}],[\"回流是对页面的任何部分或整个文档的任何后续大小和位置的确定\",{\"1\":{\"1434\":1}}],[\"回表\",{\"1\":{\"283\":1}}],[\"回到例子中\",{\"1\":{\"2068\":1}}],[\"回到主键索引树搜索的过程\",{\"1\":{\"244\":1}}],[\"回到之前的状态\",{\"1\":{\"114\":1}}],[\"回滚语句是rollback\",{\"1\":{\"174\":1}}],[\"回滚日志\",{\"1\":{\"169\":1}}],[\"435944782\",{\"1\":{\"3318\":1}}],[\"45\",{\"1\":{\"3048\":1}}],[\"4byte\",{\"1\":{\"1956\":1}}],[\"48的内存大小可以存6个元素\",{\"1\":{\"1726\":1}}],[\"4d\",{\"1\":{\"1717\":3}}],[\"443\",{\"1\":{\"1203\":1,\"1301\":1}}],[\"441\",{\"1\":{\"1037\":1,\"1039\":1}}],[\"4690\",{\"1\":{\"1190\":1}}],[\"4626\",{\"1\":{\"1190\":1}}],[\"46~51字节\",{\"1\":{\"1013\":1}}],[\"4096\",{\"1\":{\"1717\":1}}],[\"405\",{\"1\":{\"1134\":1}}],[\"404\",{\"1\":{\"1131\":1,\"1506\":1}}],[\"403\",{\"1\":{\"1128\":1,\"3447\":1}}],[\"401\",{\"1\":{\"1125\":1}}],[\"40\",{\"1\":{\"1040\":1}}],[\"400\",{\"1\":{\"221\":1,\"1122\":1,\"3054\":4}}],[\"4g\",{\"1\":{\"619\":1}}],[\"4\",{\"0\":{\"426\":1,\"462\":1,\"596\":1,\"627\":1,\"756\":1,\"1149\":1,\"3029\":1,\"3059\":1},\"1\":{\"167\":1,\"169\":1,\"228\":1,\"261\":1,\"283\":1,\"619\":1,\"878\":1,\"898\":1,\"902\":1,\"909\":1,\"1014\":1,\"1023\":1,\"1637\":1,\"1687\":2,\"1702\":2,\"1717\":1,\"1838\":1,\"1874\":1,\"1900\":1,\"1939\":2,\"1965\":1,\"1972\":3,\"1985\":1,\"2224\":1,\"2459\":1,\"2562\":1,\"2573\":1,\"2645\":1,\"2753\":1,\"2885\":1,\"3020\":1,\"3053\":2,\"3063\":3,\"3090\":1,\"3104\":1,\"3205\":1,\"3233\":1,\"3246\":1,\"3256\":4,\"3287\":1,\"3311\":1,\"3325\":1,\"3327\":1,\"3354\":1,\"3388\":1}}],[\"38\",{\"1\":{\"3058\":1,\"3078\":1,\"3096\":1}}],[\"33\",{\"1\":{\"2574\":1}}],[\"312\",{\"1\":{\"3341\":1}}],[\"31\",{\"1\":{\"1866\":2}}],[\"3️⃣\",{\"1\":{\"1722\":1}}],[\"30\",{\"1\":{\"2422\":1}}],[\"30张图解\",{\"1\":{\"1247\":1,\"1450\":1}}],[\"307\",{\"1\":{\"1119\":1}}],[\"306\",{\"1\":{\"1116\":1}}],[\"305\",{\"1\":{\"1113\":1}}],[\"304\",{\"1\":{\"1110\":1,\"1493\":1}}],[\"303\",{\"1\":{\"1107\":1}}],[\"302\",{\"1\":{\"1104\":1}}],[\"301\",{\"1\":{\"1101\":1}}],[\"300~600\",{\"1\":{\"248\":1}}],[\"300\",{\"1\":{\"210\":1,\"237\":1,\"1098\":1}}],[\"36\",{\"1\":{\"1018\":1}}],[\"35733751\",{\"1\":{\"1050\":1}}],[\"35\",{\"1\":{\"480\":1}}],[\"3nf\",{\"1\":{\"425\":2}}],[\"32603\",{\"1\":{\"3394\":1}}],[\"32k\",{\"1\":{\"2524\":2}}],[\"32位系统对齐系数是4\",{\"1\":{\"1946\":1}}],[\"321\",{\"1\":{\"1034\":2,\"1035\":2,\"1038\":1}}],[\"32~45\",{\"1\":{\"1012\":1}}],[\"32\",{\"1\":{\"251\":2,\"1018\":1,\"1956\":1}}],[\"3\",{\"0\":{\"422\":1,\"450\":1,\"570\":1,\"754\":1,\"1075\":1,\"3024\":1,\"3055\":1,\"3097\":1},\"1\":{\"167\":1,\"210\":1,\"236\":1,\"237\":1,\"246\":1,\"248\":1,\"262\":1,\"516\":1,\"518\":1,\"898\":1,\"902\":1,\"910\":1,\"998\":3,\"1013\":1,\"1022\":1,\"1202\":1,\"1315\":1,\"1631\":4,\"1633\":1,\"1634\":2,\"1635\":1,\"1637\":1,\"1687\":1,\"1702\":1,\"1717\":1,\"1805\":1,\"1939\":2,\"2352\":1,\"2370\":1,\"2378\":1,\"2400\":1,\"2402\":1,\"2459\":1,\"2569\":1,\"2574\":1,\"2730\":1,\"2885\":1,\"3015\":2,\"3020\":1,\"3048\":2,\"3053\":5,\"3054\":4,\"3058\":1,\"3062\":6,\"3090\":1,\"3104\":1,\"3124\":1,\"3238\":1,\"3246\":1,\"3256\":1,\"3286\":1,\"3287\":1,\"3311\":1,\"3325\":1,\"3327\":1,\"3388\":1}}],[\"被恢复时候\",{\"1\":{\"2951\":1}}],[\"被恢复了\",{\"1\":{\"2944\":1}}],[\"被其他包调用\",{\"1\":{\"2893\":1}}],[\"被释放的内存如何处理等问题\",{\"1\":{\"2609\":1}}],[\"被调用函数结束后\",{\"1\":{\"2279\":1}}],[\"被调用函数是通过栈指针加上偏移量这样相对寻址的方式来定位自己的参数和返回值\",{\"1\":{\"2275\":1}}],[\"被调用函数\",{\"1\":{\"2273\":1}}],[\"被调函数\",{\"1\":{\"2273\":1}}],[\"被赋值的是类型\",{\"1\":{\"2189\":1}}],[\"被赋值前\",{\"1\":{\"1902\":1}}],[\"被闭包捕获\",{\"1\":{\"2138\":1}}],[\"被按顺序改成了2\",{\"1\":{\"167\":1}}],[\"被系统强行杀掉\",{\"1\":{\"69\":1}}],[\"中的函数\",{\"1\":{\"3271\":1}}],[\"中的协程\",{\"1\":{\"2856\":1}}],[\"中间又有一个\",{\"1\":{\"2948\":1}}],[\"中注册的\",{\"1\":{\"2941\":1}}],[\"中发挥左右\",{\"1\":{\"2927\":1}}],[\"中先注册\",{\"1\":{\"2914\":1}}],[\"中待执行的\",{\"1\":{\"2841\":1}}],[\"中保留了堆栈大小\",{\"1\":{\"2795\":1}}],[\"中引入了不同的工作模式\",{\"1\":{\"2569\":1}}],[\"中每一位用于标记一个对象是否存活\",{\"1\":{\"2548\":1}}],[\"中每一位用于标记一个对象存储单元是否已分配\",{\"1\":{\"2547\":1}}],[\"中每一页对应到哪一个\",{\"1\":{\"2542\":1}}],[\"中每个\",{\"1\":{\"2536\":1}}],[\"中连续四个指针大小的内存\",{\"1\":{\"2538\":1}}],[\"中一个\",{\"1\":{\"2538\":1}}],[\"中bitmap\",{\"1\":{\"2537\":1}}],[\"中也没有的话\",{\"1\":{\"2528\":1}}],[\"中获取\",{\"1\":{\"2528\":1}}],[\"中分配\",{\"1\":{\"2524\":1}}],[\"中记录的相关信息决定\",{\"1\":{\"2494\":1}}],[\"中记录\",{\"1\":{\"2492\":1}}],[\"中不同类型的\",{\"1\":{\"2478\":1}}],[\"中没有变化\",{\"1\":{\"2421\":1}}],[\"中做出了不同的优化\",{\"1\":{\"2396\":1}}],[\"中特别区分出来\",{\"1\":{\"2115\":1}}],[\"中数组赋值和函数传参都是值复制的\",{\"1\":{\"1642\":1}}],[\"中默认启用\",{\"1\":{\"1512\":1}}],[\"中默认是关闭的\",{\"1\":{\"1511\":1}}],[\"中\",{\"1\":{\"166\":1,\"208\":1,\"236\":1,\"248\":1,\"378\":1,\"1729\":1,\"2399\":1,\"2419\":1,\"2506\":2,\"2533\":1,\"2544\":1,\"2564\":1,\"2795\":1,\"2839\":1,\"2840\":1,\"3050\":1,\"3112\":1,\"3388\":2}}],[\"中事务支持在引擎层完成\",{\"1\":{\"142\":1}}],[\"直接引用别人写好的\",{\"1\":{\"3403\":1}}],[\"直接来到关键处\",{\"1\":{\"2950\":1}}],[\"直接启动\",{\"1\":{\"2771\":2}}],[\"直接不允许出现黑色对象到白色对象的引用\",{\"1\":{\"2690\":1}}],[\"直接从\",{\"1\":{\"2588\":1}}],[\"直接忽略这个寄存器即可\",{\"1\":{\"2120\":1}}],[\"直接使用\",{\"1\":{\"1333\":1}}],[\"直接进入等待\",{\"1\":{\"376\":1}}],[\"直接返回执行器\",{\"1\":{\"662\":1}}],[\"直接返回结果\",{\"1\":{\"286\":1}}],[\"直接返回记录上的最新值\",{\"1\":{\"160\":1}}],[\"直接过滤掉不满足条件的记录\",{\"1\":{\"280\":1,\"528\":1}}],[\"直到结束\",{\"1\":{\"2932\":1}}],[\"直到出现\",{\"1\":{\"2388\":1}}],[\"直到出现丢包或者超时的情况\",{\"1\":{\"980\":1}}],[\"直到所有的元素被访问完结束\",{\"1\":{\"3244\":1}}],[\"直到所有旧桶迁移完毕\",{\"1\":{\"1852\":1}}],[\"直到所有数据迁移成功\",{\"1\":{\"1830\":1}}],[\"直到匹配成功或者遇到空桶就代表key不存在\",{\"1\":{\"1814\":1}}],[\"直到发现匹配的键或者遍历完所有元素\",{\"1\":{\"1795\":1}}],[\"直到遇到范围查询\",{\"1\":{\"529\":1}}],[\"直到超时\",{\"1\":{\"376\":1,\"898\":1}}],[\"直到事务\",{\"1\":{\"359\":1}}],[\"直到事务a提交后\",{\"1\":{\"158\":1}}],[\"直到取到这个表的最后一行\",{\"1\":{\"91\":1}}],[\"则覆盖procs的值\",{\"1\":{\"2789\":1}}],[\"则会把栈上分配的\",{\"1\":{\"2415\":1,\"2442\":1}}],[\"则会产生数据错乱\",{\"1\":{\"842\":1}}],[\"则解析它会简单而快速\",{\"1\":{\"1404\":1}}],[\"则\",{\"1\":{\"1379\":1,\"2208\":1}}],[\"则这个ip\",{\"1\":{\"1378\":1}}],[\"则这层以上或以下的各层均不受影响\",{\"1\":{\"726\":1}}],[\"则发送\",{\"1\":{\"1334\":1}}],[\"则关闭通信\",{\"1\":{\"1224\":1}}],[\"则无法发送数据\",{\"1\":{\"1015\":1}}],[\"则有\",{\"1\":{\"874\":1}}],[\"则数据报将被丢弃\",{\"1\":{\"867\":1}}],[\"则数据库就会一直保持\",{\"1\":{\"314\":1}}],[\"则建立连接\",{\"1\":{\"821\":1}}],[\"则失败重试\",{\"1\":{\"601\":1}}],[\"则在等待事务\",{\"1\":{\"374\":1}}],[\"则在事务b执行\",{\"1\":{\"158\":1}}],[\"则只要\",{\"1\":{\"228\":1}}],[\"则只需要在\",{\"1\":{\"221\":1}}],[\"则只需要搜索\",{\"1\":{\"217\":1}}],[\"则是变量\",{\"1\":{\"2225\":1}}],[\"则是8个字节\",{\"1\":{\"228\":1}}],[\"则是提交事务并自动启动下一个事务\",{\"1\":{\"179\":1}}],[\"则是在事务启动的时候创建视图\",{\"1\":{\"162\":1}}],[\"则提交事务\",{\"1\":{\"179\":1}}],[\"则v1\",{\"1\":{\"157\":1}}],[\"则v1是1\",{\"1\":{\"156\":1}}],[\"则v1的值就是2\",{\"1\":{\"155\":1}}],[\"遵循的就是这个要求\",{\"1\":{\"157\":1}}],[\"串行化\",{\"1\":{\"151\":1,\"158\":1,\"163\":1}}],[\"读屏障\",{\"0\":{\"2703\":1}}],[\"读出数据\",{\"1\":{\"1176\":1}}],[\"读取文件按行读取到列表中\",{\"1\":{\"3175\":1}}],[\"读取文件时解码错误\",{\"1\":{\"3175\":1}}],[\"读取内存页的大小\",{\"1\":{\"2783\":1}}],[\"读取数据保持一致\",{\"1\":{\"574\":1}}],[\"读取已提交\",{\"1\":{\"573\":1}}],[\"读取未提交\",{\"1\":{\"572\":1}}],[\"读取视图中的数据\",{\"1\":{\"161\":1}}],[\"读到的数是脏数据\",{\"1\":{\"562\":1}}],[\"读写文件时出现错误\",{\"1\":{\"3177\":1}}],[\"读写文件用例\",{\"1\":{\"3174\":1}}],[\"读写磁盘的最小单位是数据页\",{\"1\":{\"484\":1}}],[\"读写磁盘数据很慢\",{\"1\":{\"483\":1}}],[\"读写锁是互斥的\",{\"1\":{\"338\":1}}],[\"读写锁之间\",{\"1\":{\"326\":1}}],[\"读写互斥\",{\"1\":{\"324\":1}}],[\"读读共享\",{\"1\":{\"324\":1}}],[\"读锁的请求也会被\",{\"1\":{\"338\":1}}],[\"读锁是可以共享的\",{\"1\":{\"335\":1}}],[\"读锁是共享的\",{\"1\":{\"320\":1}}],[\"读锁之间不互斥\",{\"1\":{\"325\":1}}],[\"读锁\",{\"1\":{\"151\":1,\"324\":1,\"335\":2}}],[\"读\",{\"1\":{\"151\":1}}],[\"读提交\",{\"1\":{\"149\":1,\"156\":1,\"161\":1}}],[\"读未提交\",{\"1\":{\"148\":1,\"155\":1,\"160\":1}}],[\"效率就会越低\",{\"1\":{\"146\":1}}],[\"隔离级别\",{\"1\":{\"576\":1}}],[\"隔离越严实\",{\"1\":{\"146\":1}}],[\"隔离性\",{\"1\":{\"144\":1,\"558\":1}}],[\"隔离性与隔离级别\",{\"0\":{\"143\":1}}],[\"银行转账\",{\"1\":{\"141\":1}}],[\"其真正的程序入口在\",{\"1\":{\"2740\":1}}],[\"其余的部分会按照\",{\"1\":{\"2281\":1}}],[\"其余的部分都没有发生改变\",{\"1\":{\"2164\":1}}],[\"其余都是0值\",{\"1\":{\"1638\":1}}],[\"其目的都是让哈希结果能够尽可能的均匀分布在0~length\",{\"1\":{\"1807\":1}}],[\"其采用\",{\"1\":{\"1770\":1}}],[\"其他时刻支持并发\",{\"1\":{\"2722\":1}}],[\"其他过程\",{\"0\":{\"1419\":1}}],[\"其他线程对该表的读和写都受到阻塞\",{\"1\":{\"319\":1}}],[\"其间发生了什么\",{\"1\":{\"1247\":1,\"1450\":1}}],[\"其中有一个\",{\"1\":{\"2345\":1}}],[\"其中k是字典的键\",{\"1\":{\"1789\":1}}],[\"其中的接收方\",{\"1\":{\"1365\":1}}],[\"其中交互了什么\",{\"0\":{\"1209\":1}}],[\"其中一个要等另一个执行完才能开始执行\",{\"1\":{\"326\":1}}],[\"其次不一定备份的使用场景在恢复数据库\",{\"1\":{\"138\":1}}],[\"其实分两部分\",{\"1\":{\"3391\":1}}],[\"其实配置可以到网上找\",{\"1\":{\"3387\":1}}],[\"其实我之前也看了很多文章\",{\"1\":{\"3373\":1}}],[\"其实都是一样逻辑\",{\"1\":{\"3313\":1}}],[\"其实都是看的接口的动态类型是否就是目标类型\",{\"1\":{\"2087\":1}}],[\"其实\",{\"1\":{\"2932\":1}}],[\"其实他也有一个\",{\"1\":{\"2900\":1}}],[\"其实他已经覆盖了我们的查询需求\",{\"1\":{\"246\":1}}],[\"其实也就是我们期待的\",{\"1\":{\"2790\":1}}],[\"其实内部实际上干的事情都是一些核心部分的初始化\",{\"1\":{\"2787\":1}}],[\"其实际的入口位于\",{\"1\":{\"2771\":1}}],[\"其实此时\",{\"1\":{\"2388\":1}}],[\"其实对于栈消耗较大的函数\",{\"1\":{\"2291\":1}}],[\"其实来自于\",{\"1\":{\"2241\":1}}],[\"其实你可以这样理解\",{\"1\":{\"2189\":1}}],[\"其实判断的方法就是先去根据\",{\"1\":{\"2088\":1}}],[\"其实还没有结束\",{\"1\":{\"1974\":1}}],[\"其实主要和go语言在创建之初并不想以ascii码为中心\",{\"1\":{\"1770\":1}}],[\"其实并没有\",{\"1\":{\"1506\":1}}],[\"其实在网络综合篇已经进行一定的分析\",{\"1\":{\"1490\":1}}],[\"其实就是要你全局安装相关的插件或者包\",{\"1\":{\"3393\":1}}],[\"其实就是建构在\",{\"1\":{\"1204\":1}}],[\"其实就没有用到索引\",{\"1\":{\"264\":1}}],[\"其实快速重传有一个问题\",{\"1\":{\"908\":1}}],[\"其实这些都可以通过grpc来实现\",{\"1\":{\"3314\":1}}],[\"其实这个挺好实现的\",{\"1\":{\"3300\":1}}],[\"其实这过程抽象成实际\",{\"1\":{\"3283\":1}}],[\"其实这两种方式都不好\",{\"1\":{\"898\":1}}],[\"其实这是分情况的\",{\"1\":{\"480\":1}}],[\"其实b树性能很不错\",{\"1\":{\"480\":1}}],[\"其实可以使用外键去简化一些过程的\",{\"1\":{\"421\":1}}],[\"其实相当于你也建立了\",{\"1\":{\"264\":1}}],[\"其实读了\",{\"1\":{\"248\":1}}],[\"其实不陌生\",{\"1\":{\"141\":1}}],[\"其实是\",{\"1\":{\"107\":1,\"2746\":1}}],[\"其实执行的连接命令如下\",{\"1\":{\"62\":1}}],[\"数学\",{\"1\":{\"3096\":1}}],[\"数学和加密函数等\",{\"1\":{\"59\":1}}],[\"数目没有达到上限\",{\"1\":{\"2576\":1}}],[\"数量\",{\"1\":{\"2567\":1}}],[\"数字或下划线构成且长度在6~20个字符之间\",{\"1\":{\"3205\":1}}],[\"数字时钟\",{\"1\":{\"3093\":1}}],[\"数字不能开头\",{\"1\":{\"2975\":1}}],[\"数字和下划线构成\",{\"1\":{\"2975\":1}}],[\"数字可以通过值来表示\",{\"1\":{\"1737\":1}}],[\"数字证书认证机构\",{\"1\":{\"1201\":1}}],[\"数组和对象键值对最后一个逗号\",{\"1\":{\"3388\":1}}],[\"数组第二个指定空几个空格\",{\"1\":{\"3388\":1}}],[\"数组第一个指定是否启用这个规则\",{\"1\":{\"3388\":1}}],[\"数组的长度\",{\"1\":{\"1916\":1}}],[\"数组的每一个元素都是通过索引去访问的\",{\"1\":{\"1630\":1}}],[\"数组定义\",{\"1\":{\"1770\":1}}],[\"数组本身是不可变的\",{\"1\":{\"1646\":1}}],[\"数组是隐式的引用传递\",{\"1\":{\"1639\":1}}],[\"数组是一个具有固定长度且拥有0个或者多个相同数据类型元素的序列\",{\"1\":{\"1629\":1,\"1683\":1}}],[\"数组长度是不可改变的\",{\"1\":{\"1704\":1}}],[\"数组长度是数组类型的一部分\",{\"1\":{\"1636\":1}}],[\"数组长度必须是常量表达式\",{\"1\":{\"1637\":1}}],[\"数组\",{\"0\":{\"1628\":1}}],[\"数组与slice\",{\"0\":{\"1627\":1}}],[\"数据结构\",{\"0\":{\"3044\":1}}],[\"数据结构与算法\",{\"1\":{\"1617\":1}}],[\"数据段上存储的数据\",{\"1\":{\"2614\":1}}],[\"数据段等对应的元数据\",{\"1\":{\"2532\":1}}],[\"数据段等需要扫描的\",{\"1\":{\"2481\":1}}],[\"数据段\",{\"1\":{\"2492\":1,\"2824\":1,\"2825\":1}}],[\"数据类型很多\",{\"1\":{\"2004\":1}}],[\"数据\",{\"1\":{\"1940\":1}}],[\"数据时候\",{\"1\":{\"1939\":1}}],[\"数据包分割\",{\"1\":{\"1299\":1}}],[\"数据包丢失\",{\"1\":{\"887\":1}}],[\"数据传输过程是加密的\",{\"1\":{\"1200\":1}}],[\"数据都是未加密的\",{\"1\":{\"1200\":1}}],[\"数据就放在报文的\",{\"1\":{\"1172\":1}}],[\"数据报可以经过的最大路由数\",{\"1\":{\"867\":1}}],[\"数据无差错\",{\"1\":{\"772\":1}}],[\"数据字节数\",{\"1\":{\"744\":1}}],[\"数据的最大长度\",{\"1\":{\"1298\":1}}],[\"数据的表示\",{\"1\":{\"717\":1}}],[\"数据的增删改\",{\"1\":{\"293\":1}}],[\"数据链路层\",{\"1\":{\"708\":1}}],[\"数据页从磁盘读入内存中\",{\"1\":{\"662\":1}}],[\"数据保持一致\",{\"1\":{\"557\":1}}],[\"数据正常关闭时候\",{\"1\":{\"547\":1}}],[\"数据重复且分布平均的表字段\",{\"1\":{\"461\":1}}],[\"数据定义语言\",{\"1\":{\"323\":1}}],[\"数据定义语句\",{\"1\":{\"293\":1}}],[\"数据操纵语言\",{\"1\":{\"323\":1}}],[\"数据更新语句\",{\"1\":{\"293\":1}}],[\"数据库三范式分别是什么\",{\"0\":{\"422\":1}}],[\"数据库和数据管理员\",{\"1\":{\"399\":1}}],[\"数据库管理员\",{\"0\":{\"396\":1},\"1\":{\"400\":2}}],[\"数据库管理系统\",{\"0\":{\"396\":1},\"1\":{\"398\":2}}],[\"数据库系统将索引的一个节点的大小设置为页的大小\",{\"1\":{\"497\":1}}],[\"数据库系统\",{\"0\":{\"396\":1},\"1\":{\"399\":2}}],[\"数据库\",{\"1\":{\"397\":2},\"2\":{\"390\":1,\"701\":1}}],[\"数据库里面它可能用到的回滚记录都必须保留\",{\"1\":{\"171\":1}}],[\"数据库行为采取的读取数据方式都是不同的\",{\"1\":{\"159\":1}}],[\"数据库存储数据的\",{\"1\":{\"138\":1}}],[\"数据库源库的状态就有可能与用日志恢复的出现不一样的\",{\"1\":{\"136\":1}}],[\"崩溃恢复以后这个事务无效\",{\"1\":{\"135\":1}}],[\"存在一个问题\",{\"1\":{\"3307\":1}}],[\"存在关联的\",{\"1\":{\"2862\":1}}],[\"存何时被释放\",{\"1\":{\"2609\":1}}],[\"存一笔信用\",{\"1\":{\"2584\":1}}],[\"存了多少个元素\",{\"1\":{\"1654\":1}}],[\"存储着状态为gdead的g\",{\"1\":{\"2864\":1}}],[\"存储在可执行文件中\",{\"1\":{\"2532\":1}}],[\"存储在全局变量\",{\"1\":{\"2506\":1}}],[\"存储元素是否含有指针\",{\"1\":{\"2525\":1}}],[\"存储反射变量值的一些描述信息\",{\"1\":{\"2229\":1,\"2241\":1}}],[\"存储反射变量的类型元数据指针\",{\"1\":{\"2229\":1,\"2241\":1}}],[\"存储数据地址\",{\"1\":{\"2229\":1,\"2241\":1}}],[\"存储数据的结构\",{\"1\":{\"187\":1}}],[\"存储地址\",{\"1\":{\"2123\":1}}],[\"存储基本信息\",{\"1\":{\"2009\":1}}],[\"存储变量\",{\"1\":{\"1961\":1}}],[\"存储类型为\",{\"1\":{\"1954\":1,\"1957\":1}}],[\"存储简体中文\",{\"1\":{\"1741\":1}}],[\"存储引擎层\",{\"1\":{\"695\":1}}],[\"存储引擎层负责数据的存储和读取\",{\"1\":{\"60\":1}}],[\"存储引擎会对索引列根据哈希函数计算一个哈希值\",{\"1\":{\"466\":1}}],[\"存起来的\",{\"1\":{\"134\":1}}],[\"没问题就会放到缓冲区\",{\"1\":{\"1346\":1}}],[\"没写完就\",{\"1\":{\"134\":1}}],[\"没有该属性\",{\"1\":{\"3211\":1}}],[\"没有5\",{\"1\":{\"3020\":1}}],[\"没有被移除\",{\"1\":{\"2954\":1}}],[\"没有需要去递归执行的\",{\"1\":{\"2921\":1}}],[\"没有的话就从全局g列表中抓取一批g对象放入p的的dead\",{\"1\":{\"2793\":1}}],[\"没有的话就去\",{\"1\":{\"2528\":1}}],[\"没有空闲的或者没有大小合适的\",{\"1\":{\"2364\":1}}],[\"没有捕获列表的\",{\"1\":{\"2356\":1}}],[\"没有返回值\",{\"1\":{\"2355\":1}}],[\"没有去给他命名\",{\"1\":{\"2323\":1}}],[\"没有匹配的则走到\",{\"1\":{\"2091\":1}}],[\"没有找到\",{\"1\":{\"2064\":1,\"2080\":1}}],[\"没有赋值前\",{\"1\":{\"1892\":1}}],[\"没有分配底层数组\",{\"1\":{\"1659\":1}}],[\"没有\",{\"1\":{\"1534\":1,\"2435\":1,\"2443\":1}}],[\"没有办法直接发送给对方\",{\"1\":{\"1337\":1}}],[\"没有送到接受方\",{\"1\":{\"904\":1}}],[\"没有效率\",{\"1\":{\"894\":1}}],[\"没有收到对方的\",{\"1\":{\"885\":1}}],[\"没有足够的上下文去判断当前连接是否是历史连接\",{\"1\":{\"822\":1}}],[\"没有说到点子上\",{\"1\":{\"808\":1}}],[\"没有边界\",{\"1\":{\"739\":1,\"778\":1}}],[\"没有记录\",{\"1\":{\"683\":1}}],[\"没有写\",{\"1\":{\"676\":1}}],[\"没有先提交\",{\"1\":{\"122\":1}}],[\"没有后续操作\",{\"1\":{\"67\":1}}],[\"进一步参考文章\",{\"0\":{\"2806\":1}}],[\"进一步提升回收效益并减少开销\",{\"1\":{\"2663\":1}}],[\"进一步检测树的合法\",{\"1\":{\"699\":1}}],[\"进而会影响程序正常执行\",{\"1\":{\"2682\":1}}],[\"进而查到存在哪一个\",{\"1\":{\"2544\":1}}],[\"进而拿到\",{\"1\":{\"2366\":1}}],[\"进而等价于\",{\"1\":{\"2195\":1}}],[\"进而减少溢出桶的使用\",{\"1\":{\"1861\":1}}],[\"进阶与算法\",{\"0\":{\"3207\":1}}],[\"进阶\",{\"0\":{\"1599\":1}}],[\"进入setting\",{\"1\":{\"3379\":1}}],[\"进入后再进行一系列检查与初始化等准备工作后\",{\"1\":{\"2847\":1}}],[\"进入调度\",{\"1\":{\"2795\":1}}],[\"进入\",{\"1\":{\"2505\":1,\"2783\":1}}],[\"进入清扫阶段\",{\"1\":{\"2504\":1}}],[\"进入并发标记阶段\",{\"1\":{\"2493\":1}}],[\"进入到\",{\"1\":{\"2312\":1}}],[\"进入到长连接状态\",{\"1\":{\"1509\":1}}],[\"进入下载页面\",{\"1\":{\"1467\":1}}],[\"进入快恢复算法\",{\"1\":{\"997\":1}}],[\"进行提交\",{\"1\":{\"3444\":1}}],[\"进行执行\",{\"1\":{\"3423\":1}}],[\"进行运行等\",{\"1\":{\"3422\":1}}],[\"进行选择使用\",{\"1\":{\"3389\":1}}],[\"进行比较\",{\"1\":{\"3388\":1}}],[\"进行简单的配置\",{\"1\":{\"3379\":1}}],[\"进行处理\",{\"1\":{\"3287\":1,\"3311\":1}}],[\"进行处理以及发送\",{\"1\":{\"859\":1}}],[\"进行绑定\",{\"1\":{\"3287\":1,\"3311\":1}}],[\"进行分隔\",{\"1\":{\"3050\":1}}],[\"进行的\",{\"1\":{\"2763\":1}}],[\"进行标记工作\",{\"1\":{\"2491\":1}}],[\"进行调用\",{\"1\":{\"2445\":1,\"3286\":1}}],[\"进行自增\",{\"1\":{\"2315\":1}}],[\"进行赋值\",{\"1\":{\"2193\":1}}],[\"进行赋值处理\",{\"1\":{\"1878\":1}}],[\"进行以下配置\",{\"1\":{\"1480\":1}}],[\"进行错误校验\",{\"1\":{\"1360\":1}}],[\"进行\",{\"1\":{\"1315\":1,\"2862\":1}}],[\"进行重发\",{\"1\":{\"914\":1}}],[\"进行硬件地址寻址\",{\"1\":{\"709\":1}}],[\"进行语法分析\",{\"1\":{\"692\":1}}],[\"进行词法分析\",{\"1\":{\"692\":1}}],[\"进行一次判断\",{\"1\":{\"680\":1}}],[\"进行两阶段提交\",{\"1\":{\"680\":1}}],[\"进行更新数据\",{\"1\":{\"663\":1}}],[\"进行备份处理\",{\"1\":{\"294\":1}}],[\"进行拆解一下\",{\"1\":{\"54\":1}}],[\"进程异常重启\",{\"1\":{\"134\":1,\"674\":1}}],[\"写多个功能函数时候\",{\"1\":{\"3313\":1}}],[\"写多读多的场景不推荐选择普通索引\",{\"1\":{\"538\":1}}],[\"写多读少的场景\",{\"1\":{\"537\":1}}],[\"写文件时发生错误\",{\"1\":{\"3176\":1}}],[\"写模式\",{\"1\":{\"3142\":1}}],[\"写在类中的函数\",{\"1\":{\"3076\":1}}],[\"写屏障会在写操作中插入指令\",{\"1\":{\"2694\":1}}],[\"写屏障\",{\"0\":{\"2693\":1},\"1\":{\"2692\":1,\"2698\":1,\"2701\":1}}],[\"写的挺好的\",{\"1\":{\"1586\":1}}],[\"写到结尾\",{\"1\":{\"620\":1}}],[\"写写互斥\",{\"1\":{\"324\":1}}],[\"写锁最好\",{\"1\":{\"342\":1}}],[\"写锁之间是互斥的\",{\"1\":{\"326\":1}}],[\"写锁是独占的\",{\"1\":{\"320\":1}}],[\"写锁\",{\"1\":{\"151\":1,\"324\":1,\"336\":1}}],[\"写\",{\"1\":{\"151\":1}}],[\"写完了\",{\"1\":{\"674\":1,\"676\":1}}],[\"写完之后\",{\"1\":{\"134\":1,\"135\":1}}],[\"写完\",{\"1\":{\"134\":1}}],[\"写入相关配置\",{\"1\":{\"3386\":1}}],[\"写入屏障会对指针更新操作带来额外的负担\",{\"1\":{\"2665\":1}}],[\"写入可执行文件\",{\"1\":{\"2264\":1}}],[\"写入磁盘\",{\"1\":{\"120\":1}}],[\"写入\",{\"1\":{\"19\":1}}],[\"可读可写\",{\"1\":{\"3146\":1}}],[\"可选参数\",{\"1\":{\"3388\":1}}],[\"可选\",{\"1\":{\"3132\":1}}],[\"可变参数\",{\"1\":{\"3028\":1}}],[\"可被再次使用\",{\"1\":{\"2868\":1}}],[\"可运行的g队列\",{\"1\":{\"2864\":1}}],[\"可运行g队列尾\",{\"1\":{\"2864\":1}}],[\"可运行g队列头\",{\"1\":{\"2864\":1}}],[\"可达的\",{\"1\":{\"2628\":1}}],[\"可达性\",{\"1\":{\"2617\":1}}],[\"可访问性对象模型\",{\"1\":{\"1423\":1}}],[\"可通过此返回码清除浏览器的表单域\",{\"1\":{\"1094\":1}}],[\"可确保浏览器继续显示当前文档\",{\"1\":{\"1091\":1}}],[\"可用窗口\",{\"1\":{\"1042\":1}}],[\"可用窗口耗尽\",{\"1\":{\"1016\":1}}],[\"可靠性\",{\"1\":{\"771\":1}}],[\"可靠的\",{\"1\":{\"733\":1,\"736\":1}}],[\"可串行化\",{\"1\":{\"575\":1}}],[\"可是这样会导致\",{\"1\":{\"2460\":1}}],[\"可是这么短的时间\",{\"1\":{\"379\":1}}],[\"可是在\",{\"1\":{\"2457\":1}}],[\"可是设置合适的阶\",{\"1\":{\"480\":1}}],[\"可能弹出的错误\",{\"1\":{\"3396\":1}}],[\"可能你的eslint会打印很多很多奇怪的错误\",{\"1\":{\"3391\":1}}],[\"可能你的项目会有很多错误\",{\"1\":{\"3389\":1}}],[\"可能你觉得这是慢启动吗\",{\"1\":{\"972\":1}}],[\"可能是因为栈的收缩或扩容\",{\"1\":{\"2868\":1}}],[\"可能是因为前面的函数为后面的函数提供一定的重要数据\",{\"1\":{\"2788\":1}}],[\"可能自己对操作系统的知识还是不够多\",{\"1\":{\"2811\":1}}],[\"可能在\",{\"1\":{\"2795\":1}}],[\"可能在上图中我知道是\",{\"1\":{\"909\":1}}],[\"可能需要执行一定量的清扫工作\",{\"1\":{\"2588\":1}}],[\"可能达到的时间复杂度为o\",{\"1\":{\"1809\":1}}],[\"可能存在的死锁现象\",{\"1\":{\"932\":1}}],[\"可能接收方收到的\",{\"1\":{\"909\":1}}],[\"可能服务端还有数据需要处理和发送\",{\"1\":{\"858\":1}}],[\"可能会更新堆栈边界\",{\"1\":{\"2795\":1}}],[\"可能会更新\",{\"1\":{\"2753\":1}}],[\"可能会有错误\",{\"1\":{\"2736\":1}}],[\"可能会导致同样的语句锁住的范围更大\",{\"1\":{\"597\":1}}],[\"可能会破坏索引值的有序性\",{\"1\":{\"549\":1}}],[\"可能导致树的高度会变高\",{\"1\":{\"480\":1}}],[\"可能就是昨天晚上的一个备份\",{\"1\":{\"127\":1}}],[\"可重复读\",{\"1\":{\"150\":1,\"157\":1,\"162\":1,\"574\":1}}],[\"可以执行一些操作\",{\"1\":{\"3403\":1}}],[\"可以自动生成吗\",{\"1\":{\"3313\":1}}],[\"可以定义成成函数\",{\"1\":{\"3235\":1}}],[\"可以对父类已有的方法给出新的实现版本\",{\"1\":{\"3098\":1}}],[\"可以对模块设置别名\",{\"1\":{\"3037\":1}}],[\"可以对运算速度有一定的提高\",{\"1\":{\"29\":1}}],[\"可以中止\",{\"1\":{\"2927\":1}}],[\"可以动态地加载动态链接库文件\",{\"1\":{\"2891\":1}}],[\"可以将代码与html混合在一起\",{\"1\":{\"2891\":1}}],[\"可以离线查看\",{\"1\":{\"2882\":1}}],[\"可以作为\",{\"1\":{\"2789\":1}}],[\"可以把白色对象着色成灰色\",{\"1\":{\"2701\":1}}],[\"可以进行回收了\",{\"1\":{\"2668\":1}}],[\"可以进行复用\",{\"1\":{\"2050\":1}}],[\"可以实现较好的负载均衡\",{\"1\":{\"2714\":1}}],[\"可以实现高速的内存分配\",{\"1\":{\"2654\":1}}],[\"可以实现索引的\",{\"1\":{\"185\":1}}],[\"可以追踪的范围一定都包含了全部有用的数据\",{\"1\":{\"2614\":1}}],[\"可以以这些地方的数据作为根节点\",{\"1\":{\"2614\":1}}],[\"可以从gccontroller这里\",{\"1\":{\"2584\":1}}],[\"可以标记\",{\"1\":{\"2538\":1}}],[\"可以标识发送出去的数据包\",{\"1\":{\"827\":1}}],[\"可以很好的应对碎片化内存\",{\"1\":{\"2514\":1}}],[\"可以很明显的看出\",{\"1\":{\"1496\":1}}],[\"可以正常执行函数\",{\"1\":{\"2113\":1}}],[\"可以来\",{\"1\":{\"2015\":1}}],[\"可以给自定义类型定义方法\",{\"1\":{\"2003\":2}}],[\"可以返回一个类型的对齐值\",{\"1\":{\"1950\":1}}],[\"可以获得开始的cell编号\",{\"1\":{\"1866\":1}}],[\"可以获得事务过程中一致的视图\",{\"1\":{\"307\":1}}],[\"可以赋新值\",{\"1\":{\"1778\":1}}],[\"可以发现4e25处在第三行的范围内\",{\"1\":{\"1755\":1}}],[\"可以利用append或者改变slice的范围\",{\"1\":{\"1700\":1}}],[\"可以利用索引的\",{\"1\":{\"257\":1,\"522\":1}}],[\"可以存多少个元素\",{\"1\":{\"1655\":1}}],[\"可以看到上面的异常类型有\",{\"1\":{\"3105\":1}}],[\"可以看到\",{\"1\":{\"1642\":1}}],[\"可以理解为读取或者下载数据\",{\"1\":{\"1574\":1}}],[\"可以任意排列不影响语义\",{\"1\":{\"1565\":1}}],[\"可以查看openresty是否已经正常启动\",{\"1\":{\"1478\":1}}],[\"可以参考截图\",{\"1\":{\"1465\":1}}],[\"可以提高绘制和重新绘制性能\",{\"1\":{\"1441\":1}}],[\"可以提交事务\",{\"1\":{\"665\":1}}],[\"可以添加async属性或defer属性\",{\"1\":{\"1412\":1}}],[\"可以带\",{\"1\":{\"1176\":1}}],[\"可以两点之间进行全双工传输数据\",{\"1\":{\"1070\":1}}],[\"可以回到恢复之前的状态了\",{\"1\":{\"1002\":1}}],[\"可以接受服务器的报文\",{\"1\":{\"803\":1}}],[\"可以记录\",{\"1\":{\"619\":1}}],[\"可以保证即使数据库发生异常重启\",{\"1\":{\"615\":1}}],[\"可以阻止脏读和不可重复读\",{\"1\":{\"574\":1}}],[\"可以解决脏读\",{\"1\":{\"573\":1}}],[\"可以通过在类中定义\",{\"1\":{\"3086\":1}}],[\"可以通过反向切片操作来获得倒转后的列表的拷贝\",{\"1\":{\"3053\":1}}],[\"可以通过完整切片操作来复制列表\",{\"1\":{\"3053\":1}}],[\"可以通过http的方式将服务器的变量以json格式打印出来\",{\"1\":{\"2891\":1}}],[\"可以通过写屏障直接把白色对象标记为灰色\",{\"1\":{\"2698\":1}}],[\"可以通过\",{\"1\":{\"571\":1}}],[\"可以通过键值\",{\"1\":{\"465\":1}}],[\"可以直接返回查询结果\",{\"1\":{\"519\":1}}],[\"可以是数组\",{\"1\":{\"1795\":1}}],[\"可以是图片\",{\"1\":{\"1528\":1}}],[\"可以是空值\",{\"1\":{\"406\":1}}],[\"可以是一天一备\",{\"1\":{\"125\":1}}],[\"可以减少锁等待个数\",{\"1\":{\"389\":1}}],[\"可以考虑放在多条记录上\",{\"1\":{\"389\":1}}],[\"可以考虑在中间件实现\",{\"1\":{\"388\":1}}],[\"可以帮助\",{\"1\":{\"361\":1}}],[\"可以用count指定替换的次数\",{\"1\":{\"3191\":1}}],[\"可以用来处理tar与zip类型文件\",{\"1\":{\"2891\":1}}],[\"可以用\",{\"1\":{\"317\":1}}],[\"可以使用相对路径或绝对路径\",{\"1\":{\"3175\":1}}],[\"可以使用连字符\",{\"1\":{\"1563\":1}}],[\"可以使用这个命令\",{\"1\":{\"293\":1}}],[\"可以使用索引\",{\"1\":{\"288\":1}}],[\"可以在新行之前使用斜线创建多行字符串\",{\"1\":{\"3388\":1}}],[\"可以在已有类的基础上创建新类\",{\"1\":{\"3095\":1}}],[\"可以在类中定义类方法\",{\"1\":{\"3092\":1}}],[\"可以在索引遍历过程中\",{\"1\":{\"280\":1,\"528\":1}}],[\"可以在每次执行一个比较大的操作后\",{\"1\":{\"72\":1}}],[\"可以少维护一个索引\",{\"1\":{\"266\":1}}],[\"可以建立一个覆盖索引很浪费啊\",{\"1\":{\"256\":1}}],[\"可以根据身份证号查询到他的相关信息\",{\"1\":{\"252\":1}}],[\"可以认为是分裂过程的逆过程\",{\"1\":{\"224\":1}}],[\"可以出现数据库扩容情况\",{\"1\":{\"138\":1}}],[\"可以恢复到半个月内任意一秒的状态\",{\"1\":{\"95\":1}}],[\"可以分为两层\",{\"1\":{\"58\":1}}],[\"那样提供对抽象类的支持\",{\"1\":{\"3101\":1}}],[\"那里分担一部分的\",{\"1\":{\"2843\":1}}],[\"那些生命周期超过当前函数的数据\",{\"1\":{\"2597\":1}}],[\"那应该怎么办\",{\"1\":{\"2216\":1}}],[\"那拷贝变量\",{\"1\":{\"2215\":1}}],[\"那就是满足了要求\",{\"1\":{\"2088\":1}}],[\"那存满了怎么办\",{\"1\":{\"1838\":1}}],[\"那这就是一个错误的报文\",{\"1\":{\"1568\":1}}],[\"那\",{\"1\":{\"1310\":1}}],[\"那你钱没了\",{\"1\":{\"1196\":1}}],[\"那你号没了\",{\"1\":{\"1195\":1}}],[\"那你可以这么做\",{\"1\":{\"126\":1}}],[\"那要安排升级换引擎\",{\"1\":{\"347\":1}}],[\"那为什么不使用呢\",{\"1\":{\"311\":1}}],[\"那为什么还需要\",{\"1\":{\"309\":1}}],[\"那么你需要将触发机制设置为\",{\"1\":{\"3410\":1}}],[\"那么你恢复的数据库就会产生偏差\",{\"1\":{\"130\":1}}],[\"那么对应的\",{\"1\":{\"3111\":1}}],[\"那么对于当前执行的\",{\"1\":{\"2921\":1}}],[\"那么对于两个个非空接口类型定义的变量\",{\"1\":{\"1912\":1}}],[\"那么对于键值对数量很多情况\",{\"1\":{\"1829\":1}}],[\"那么后面的定义会覆盖之前的定义\",{\"1\":{\"3030\":1}}],[\"那么把它从\",{\"1\":{\"2934\":1}}],[\"那么等待执行的\",{\"1\":{\"2840\":1}}],[\"那么垃圾回收开始的消息便很难准确及时的通知到所有线程\",{\"1\":{\"2721\":1}}],[\"那么读数据不会很安全了\",{\"1\":{\"2704\":1}}],[\"那么写屏障通常有一个记录集\",{\"1\":{\"2694\":1}}],[\"那么接下来调用系统特定的\",{\"1\":{\"2782\":1}}],[\"那么接下来肯定是清除白色的数据\",{\"1\":{\"2626\":1}}],[\"那么接受窗口为0\",{\"1\":{\"1024\":1}}],[\"那么既然追踪不到的的数据\",{\"1\":{\"2615\":1}}],[\"那么回收哪一部分的数据呢\",{\"1\":{\"2599\":1}}],[\"那么回到\",{\"1\":{\"2303\":1}}],[\"那么为了减少内存\",{\"1\":{\"2598\":1}}],[\"那么为什么前两次不能携带数据\",{\"1\":{\"801\":1}}],[\"那么考虑\",{\"1\":{\"2562\":1}}],[\"那么如果想访问属性可以通过属性的getter\",{\"1\":{\"3083\":1}}],[\"那么如果程序不正常执行了呢\",{\"1\":{\"2457\":1}}],[\"那么如果ans2使用append去添加元素\",{\"1\":{\"1701\":1}}],[\"那么什么时候会判断\",{\"1\":{\"2388\":1}}],[\"那么此时\",{\"1\":{\"2321\":1}}],[\"那么此记录有效\",{\"1\":{\"684\":1}}],[\"那么此记录无效\",{\"1\":{\"683\":1}}],[\"那么执行期间就会发生栈访问越界的情况\",{\"1\":{\"2289\":1}}],[\"那么函数\",{\"1\":{\"2286\":1}}],[\"那么函数调用栈又会是怎么样的呢\",{\"1\":{\"2173\":1}}],[\"那么栈上只存他的地址\",{\"1\":{\"2254\":1}}],[\"那么栈上只会留下他\",{\"1\":{\"2237\":1}}],[\"那么最后返回值的结构就与\",{\"1\":{\"2225\":1}}],[\"那么他们分别代表什么意思呢\",{\"1\":{\"2855\":1}}],[\"那么他的结构如下\",{\"1\":{\"2223\":1}}],[\"那么他就可以选择\",{\"1\":{\"914\":1}}],[\"那么数据段会重新建立一个字符串\",{\"1\":{\"2169\":1}}],[\"那么数组长度由初始化数组的元素个数决定\",{\"1\":{\"1635\":1}}],[\"那么我们分析一下他\",{\"1\":{\"2167\":1}}],[\"那么我们就可以组合成四种类型断言\",{\"1\":{\"2038\":1}}],[\"那么处理方式就又有些不同了\",{\"1\":{\"2149\":1}}],[\"那么调用者依然从栈上传递参数\",{\"1\":{\"2147\":1}}],[\"那么编译器在编译阶段就会做出一定的优化\",{\"1\":{\"2104\":1}}],[\"那么断言就会失败\",{\"1\":{\"2044\":1}}],[\"那么类型元数据的结构体后面还会有一个\",{\"1\":{\"2017\":1}}],[\"那么elem指向\",{\"1\":{\"2012\":1}}],[\"那么开始正题吧\",{\"1\":{\"2005\":1}}],[\"那么无论读取\",{\"1\":{\"1940\":1}}],[\"那么其类型必须实现该接口的要求的所有方法才行\",{\"1\":{\"1899\":1}}],[\"那么采用等量扩容\",{\"1\":{\"1876\":1}}],[\"那么使用溢出桶数目一旦超过2^15就算多了\",{\"1\":{\"1857\":1}}],[\"那么使用的溢出桶数目超过常规桶就算是多了\",{\"1\":{\"1856\":1}}],[\"那么h的二进制最低两位一定为0\",{\"1\":{\"1850\":1}}],[\"那么现在再继续存储键值对\",{\"1\":{\"1843\":1}}],[\"那么m\",{\"1\":{\"1805\":1}}],[\"那么怎么选桶\",{\"1\":{\"1799\":1}}],[\"那么怎么确认是唯一的连接\",{\"0\":{\"756\":1}}],[\"那么必然会导致英文字母前面有多个字节是0\",{\"1\":{\"1745\":1}}],[\"那么乱码问题就会消失\",{\"1\":{\"1742\":1}}],[\"那么有推出了big5\",{\"1\":{\"1741\":1}}],[\"那么新容量直接等于所需容量\",{\"1\":{\"1713\":1}}],[\"那么底层数组对应的string类型\",{\"1\":{\"1685\":1}}],[\"那么底层数组对应的int类型\",{\"1\":{\"1684\":1}}],[\"那么切片的优势也会表现出来\",{\"1\":{\"1650\":1}}],[\"那么每次数组都要被复制一遍\",{\"1\":{\"1644\":1}}],[\"那么每个二级索引的叶子节点占用约\",{\"1\":{\"228\":1}}],[\"那么只有相应的接收者才接收包\",{\"1\":{\"1350\":1}}],[\"那么依然依照上面的路由表规则判断\",{\"1\":{\"1317\":1}}],[\"那么移动就会更多点\",{\"1\":{\"1017\":1}}],[\"那么滑动窗口往右移动一定字节\",{\"1\":{\"1017\":1}}],[\"那么可用窗口大小为0\",{\"1\":{\"1015\":1}}],[\"那么网络就会出现堵塞\",{\"1\":{\"957\":1}}],[\"那么会导致发送方的窗口越来越小\",{\"1\":{\"948\":1}}],[\"那么死锁的局面就可以被打破了\",{\"1\":{\"945\":1}}],[\"那么死锁检测操作就是\",{\"1\":{\"384\":1}}],[\"那么发送方就会重新启动持续计时器\",{\"1\":{\"944\":1}}],[\"那么大小是怎么决定的\",{\"0\":{\"927\":1}}],[\"那么说明是接收方发送的ack丢了\",{\"1\":{\"918\":1}}],[\"那么是再次发送报文\",{\"1\":{\"898\":1}}],[\"那么是不是也可以完成备份数据的功能\",{\"1\":{\"306\":1}}],[\"那么客户端发送到服务端的ack报文有两种结局\",{\"1\":{\"872\":1}}],[\"那么就要开始输出异常信息了\",{\"1\":{\"2956\":1}}],[\"那么就要开始执行\",{\"1\":{\"2365\":1}}],[\"那么就在使用层面上优化\",{\"1\":{\"2679\":1}}],[\"那么就在编号为1的桶后面链接一个桶存储键值对\",{\"1\":{\"1817\":1}}],[\"那么就将\",{\"1\":{\"2561\":1}}],[\"那么就得比较方法列表\",{\"1\":{\"2088\":1}}],[\"那么就用下一个空闲桶编号3来存键值对\",{\"1\":{\"1813\":1}}],[\"那么就代表网络处于拥塞的状态\",{\"1\":{\"960\":1}}],[\"那么就无法分辨\",{\"1\":{\"842\":1}}],[\"那么就会终止\",{\"1\":{\"2952\":1}}],[\"那么就会移除\",{\"1\":{\"2933\":1}}],[\"那么就会被当成垃圾\",{\"1\":{\"2688\":1}}],[\"那么就会把当前的\",{\"1\":{\"2558\":1}}],[\"那么就会继续检测下一个桶\",{\"1\":{\"1814\":1}}],[\"那么就会选择默认路由\",{\"1\":{\"1374\":1}}],[\"那么就会出现死锁的情况\",{\"1\":{\"935\":1}}],[\"那么就会出现很多误伤\",{\"1\":{\"379\":1}}],[\"那么就会一直训练\",{\"1\":{\"48\":1}}],[\"那么服务器在收到请求后就会建立多个冗余无效的连接\",{\"1\":{\"833\":1}}],[\"那么也不能扔给应用层去处理\",{\"1\":{\"739\":1}}],[\"那么不能写入新的更新记录了\",{\"1\":{\"626\":1}}],[\"那么优先选择唯一索引\",{\"1\":{\"535\":1}}],[\"那么需要的空间就会更大\",{\"1\":{\"449\":1}}],[\"那么肯定有他存在的开发环境\",{\"1\":{\"421\":1}}],[\"那么影院账户余额这一行的锁时间就最少\",{\"1\":{\"370\":1}}],[\"那么这过程又会发生什么呢\",{\"1\":{\"2948\":1}}],[\"那么这就是\",{\"1\":{\"2221\":1}}],[\"那么这个异常将会传递给上层的\",{\"1\":{\"3112\":1}}],[\"那么这个流程又会是怎么样的呢\",{\"1\":{\"2929\":1}}],[\"那么这个捕获变量就直接拷贝值\",{\"1\":{\"2133\":1}}],[\"那么这个指针指向\",{\"1\":{\"2010\":1}}],[\"那么这个哈希表会创建溢出桶还是发生扩容呢\",{\"1\":{\"1843\":1}}],[\"那么这个顺序往往就是需要优先考虑采用的\",{\"1\":{\"266\":1}}],[\"那么这会导致什么问题\",{\"1\":{\"1643\":1}}],[\"那么这两个事务冲突的部分就是语句\",{\"1\":{\"369\":1}}],[\"那么换句话说\",{\"1\":{\"338\":1}}],[\"那么\",{\"1\":{\"314\":1,\"619\":1,\"1000\":1,\"1637\":1,\"1906\":1,\"1932\":1,\"2358\":1,\"2453\":1,\"2704\":1,\"2960\":1,\"3111\":1}}],[\"那么备份期间从库不能执行主库同步过来的\",{\"1\":{\"298\":1}}],[\"那么在读取文件时使用的是操作系统默认的编码\",{\"1\":{\"3175\":1}}],[\"那么在读取\",{\"1\":{\"1939\":1}}],[\"那么在备份期间都不能执行更新\",{\"1\":{\"297\":1}}],[\"那么在这个过程中数据都是此视图提供\",{\"1\":{\"162\":1}}],[\"那么代表当前日志已满\",{\"1\":{\"104\":1}}],[\"那么应怎么解决呢\",{\"1\":{\"69\":1}}],[\"谈到恢复文件过程\",{\"1\":{\"125\":1}}],[\"状态的\",{\"1\":{\"2793\":1}}],[\"状态行要简单一些\",{\"1\":{\"1549\":1}}],[\"状态码是\",{\"1\":{\"1556\":1}}],[\"状态码\",{\"1\":{\"1076\":1,\"1183\":1,\"1551\":1}}],[\"状态\",{\"1\":{\"121\":1,\"314\":1,\"665\":1,\"667\":1,\"681\":1,\"682\":1,\"1286\":2,\"1287\":1,\"1288\":1,\"1289\":1,\"1290\":1}}],[\"处理流程都会去检查当前执行的\",{\"1\":{\"2933\":1}}],[\"处理完字段赋值\",{\"1\":{\"2909\":1}}],[\"处理完的灰色节点成为黑色节点\",{\"1\":{\"2496\":1}}],[\"处理逻辑函数\",{\"1\":{\"2905\":1}}],[\"处理器的信息\",{\"1\":{\"2753\":1}}],[\"处理器信息\",{\"1\":{\"2752\":1}}],[\"处理css并构建cssom树\",{\"1\":{\"1446\":1}}],[\"处理html标记并构造dom树\",{\"1\":{\"1445\":1}}],[\"处理延迟的重复报文\",{\"1\":{\"864\":1}}],[\"处理这种情况的方法是拉链法\",{\"1\":{\"188\":1}}],[\"处理数据\",{\"0\":{\"35\":1}}],[\"处于gwaiting的原因\",{\"1\":{\"2868\":1}}],[\"处于空闲状态\",{\"1\":{\"2864\":1}}],[\"处于listen\",{\"1\":{\"794\":1}}],[\"处于\",{\"1\":{\"119\":1,\"665\":1,\"682\":1,\"1286\":1,\"1290\":1}}],[\"否则只能用\",{\"1\":{\"3388\":1}}],[\"否则返回none\",{\"1\":{\"3185\":1,\"3187\":1}}],[\"否则为0\",{\"1\":{\"2337\":1}}],[\"否则用错误的编码方式解读\",{\"1\":{\"1742\":1}}],[\"否则就丢弃这个包\",{\"1\":{\"1361\":1}}],[\"否则ab两端的状态不会发生变化直至最后一个ack不再丢失\",{\"1\":{\"873\":1}}],[\"否则\",{\"1\":{\"117\":1}}],[\"并执行实际的操作\",{\"1\":{\"3278\":1}}],[\"并传递参数\",{\"1\":{\"3273\":1}}],[\"并返回操作结果\",{\"1\":{\"3230\":1}}],[\"并从开头开始编辑\",{\"1\":{\"3158\":1,\"3160\":1,\"3162\":1,\"3164\":1}}],[\"并集\",{\"1\":{\"3060\":1,\"3064\":1,\"3065\":1}}],[\"并移除\",{\"1\":{\"2920\":1}}],[\"并调用函数\",{\"1\":{\"3287\":1,\"3311\":1}}],[\"并调用\",{\"1\":{\"2795\":1}}],[\"并行垃圾回收指的是暂停用户程序\",{\"1\":{\"2711\":1}}],[\"并行垃圾回收\",{\"0\":{\"2710\":1}}],[\"并为每个\",{\"1\":{\"2565\":1}}],[\"并加入工作队列中\",{\"1\":{\"2550\":1}}],[\"并记录栈\",{\"1\":{\"2481\":1}}],[\"并在下一次执行\",{\"1\":{\"3253\":1}}],[\"并在执行时直接拷贝到defer函数的调用者栈上\",{\"1\":{\"2350\":1,\"2420\":1}}],[\"并在其\",{\"1\":{\"752\":1}}],[\"并没有发生改变\",{\"1\":{\"2170\":1}}],[\"并正确显示内容\",{\"1\":{\"1443\":1}}],[\"并根据css级联确定每个节点的计算样式\",{\"1\":{\"1431\":1}}],[\"并将文件模式设置为`\",{\"1\":{\"3175\":1}}],[\"并将字段\",{\"1\":{\"2908\":1}}],[\"并将其传递到解释器中\",{\"1\":{\"1421\":1}}],[\"并将查询的结果作为接收方\",{\"1\":{\"1380\":1}}],[\"并通过应用更具体的规则递归地优化计算的样式\",{\"1\":{\"1417\":1}}],[\"并开始下载它们\",{\"1\":{\"1412\":1}}],[\"并定义了一种方式可以使从程序中对该结构进行访问\",{\"1\":{\"1403\":1}}],[\"并无差别\",{\"1\":{\"1177\":1}}],[\"并写入磁盘\",{\"1\":{\"666\":1}}],[\"并且正在运行g代码\",{\"1\":{\"2864\":1}}],[\"并且开启调度\",{\"1\":{\"2794\":1}}],[\"并且导致老年代\",{\"1\":{\"2666\":1}}],[\"并且会将有空闲空间和没有空闲空间的\",{\"1\":{\"2526\":1}}],[\"并且与闭包函数都使用堆上这一个\",{\"1\":{\"2149\":1}}],[\"并且便于实现变量操作的原子性\",{\"1\":{\"1941\":1}}],[\"并且以\",{\"1\":{\"1913\":1}}],[\"并且为了内存使用更加紧凑\",{\"1\":{\"1836\":1}}],[\"并且进行校验\",{\"1\":{\"1388\":1}}],[\"并且后续就把包发给路由器\",{\"1\":{\"1318\":1}}],[\"并且\",{\"1\":{\"1288\":1}}],[\"并且每次按键都会改进建议\",{\"1\":{\"1250\":1}}],[\"并且按下回车之后发生了什么\",{\"1\":{\"1248\":1}}],[\"并且消息是\",{\"1\":{\"739\":1}}],[\"并且是顺序写\",{\"1\":{\"638\":1}}],[\"并且刷新到磁盘中\",{\"1\":{\"630\":1}}],[\"并且将日志文件的数据刷新到磁盘上\",{\"1\":{\"629\":1}}],[\"并且其它事务只能加s锁\",{\"1\":{\"605\":1}}],[\"并且其它事务不能对该数据加任何锁\",{\"1\":{\"604\":1}}],[\"并且在\",{\"1\":{\"210\":1}}],[\"并对其进行更新操作之后\",{\"1\":{\"564\":1}}],[\"并对其进行了修改\",{\"1\":{\"562\":1}}],[\"并发场景下\",{\"1\":{\"2719\":1}}],[\"并发垃圾回收指的是在某时刻\",{\"1\":{\"2718\":1}}],[\"并发垃圾回收\",{\"0\":{\"2717\":1}}],[\"并发gc如何缓解内存分配压力\",{\"0\":{\"2580\":1}}],[\"并发标志的分工问题与写屏障记录集竞争问题\",{\"0\":{\"2553\":1}}],[\"并发\",{\"0\":{\"2482\":1}}],[\"并发带来的问题怎么解决\",{\"0\":{\"570\":1}}],[\"并发事务会带来哪些问题\",{\"0\":{\"560\":1}}],[\"并发访问数据库时\",{\"1\":{\"558\":1}}],[\"并发上比\",{\"1\":{\"432\":1}}],[\"并允许数据重复和\",{\"1\":{\"510\":1}}],[\"并\",{\"1\":{\"367\":1}}],[\"并不能完成当前数据对象的扫描\",{\"1\":{\"2540\":1}}],[\"并不关心\",{\"1\":{\"2525\":1}}],[\"并不是逐个字节访问\",{\"1\":{\"1932\":1}}],[\"并不是一次性把所有行锁都持有\",{\"1\":{\"368\":1}}],[\"并不是所有引擎都支持行锁\",{\"1\":{\"351\":1}}],[\"并不会覆盖以前的日志\",{\"1\":{\"113\":1,\"649\":1}}],[\"并把\",{\"1\":{\"120\":1}}],[\"并更新内存\",{\"1\":{\"101\":1}}],[\"追踪请求\",{\"1\":{\"1581\":1}}],[\"追上\",{\"1\":{\"626\":1}}],[\"追上了\",{\"1\":{\"104\":1}}],[\"追加写\",{\"1\":{\"113\":1,\"649\":1}}],[\"空闲p列表\",{\"1\":{\"2872\":1}}],[\"空闲g列表\",{\"1\":{\"2864\":1}}],[\"空闲的p数量\",{\"1\":{\"2872\":1}}],[\"空闲的\",{\"1\":{\"2839\":1}}],[\"空闲状态\",{\"1\":{\"101\":1}}],[\"空间的新副本\",{\"1\":{\"2707\":1}}],[\"空间的数据整体被回收\",{\"1\":{\"2705\":1}}],[\"空间的陈旧对象\",{\"1\":{\"2705\":1}}],[\"空间去了\",{\"1\":{\"2705\":1}}],[\"空间进行交换\",{\"1\":{\"2650\":1}}],[\"空间时候\",{\"1\":{\"2650\":1,\"2705\":1}}],[\"空间\",{\"1\":{\"2648\":1,\"2649\":2}}],[\"空间对应的函数\",{\"1\":{\"2143\":1}}],[\"空间固定会用完\",{\"1\":{\"113\":1,\"648\":1}}],[\"空的结构体大小为\",{\"1\":{\"1984\":1}}],[\"空的结构体会怎么对齐\",{\"1\":{\"1983\":1}}],[\"空接口类型如下\",{\"1\":{\"1889\":1}}],[\"空接口类型可以接受任意类型的数据\",{\"1\":{\"1889\":1}}],[\"空接口\",{\"0\":{\"1888\":1,\"2039\":1,\"2057\":1}}],[\"空行\",{\"1\":{\"1530\":1}}],[\"空出位置\",{\"1\":{\"221\":1}}],[\"在部署时候\",{\"1\":{\"3441\":1}}],[\"在那里他们可以混淆的比较\",{\"1\":{\"3388\":1}}],[\"在命令窗口中输入以下命令\",{\"1\":{\"3364\":1}}],[\"在客户端使用远程服务方式已经实现了\",{\"1\":{\"3298\":1}}],[\"在使用时候需要做到兼容性处理\",{\"1\":{\"3264\":1}}],[\"在使用过程中\",{\"1\":{\"69\":1}}],[\"在构建分布式部署和微服务架构的系统时候\",{\"1\":{\"3263\":1}}],[\"在被装饰对象正上方的单独一行写\",{\"1\":{\"3238\":1}}],[\"在对象通过\",{\"1\":{\"3216\":1,\"3217\":1}}],[\"在对大表操作的时候\",{\"1\":{\"332\":1}}],[\"在调用\",{\"1\":{\"3388\":1}}],[\"在调用生成器运行的过程中\",{\"1\":{\"3253\":1}}],[\"在调用对象\",{\"1\":{\"3214\":1}}],[\"在调用类时自动触发\",{\"1\":{\"3209\":1}}],[\"在字符串前面加上了r\",{\"1\":{\"3205\":1}}],[\"在关键字\",{\"1\":{\"3109\":1}}],[\"在运行它的时候\",{\"1\":{\"3103\":1}}],[\"在运行时都对应一个\",{\"1\":{\"2345\":1}}],[\"在实际开发中\",{\"1\":{\"3081\":1,\"3095\":1}}],[\"在给属性命名时可以用两个下划线作为开头\",{\"1\":{\"3080\":1}}],[\"在面向对象编程的世界中\",{\"1\":{\"3073\":1}}],[\"在同一个\",{\"1\":{\"3030\":1}}],[\"在python中实现文件的读写操作其实非常简单\",{\"1\":{\"3126\":1}}],[\"在python中\",{\"1\":{\"3027\":1,\"3080\":1}}],[\"在发生\",{\"1\":{\"2946\":1}}],[\"在发包时\",{\"1\":{\"1332\":1}}],[\"在其他作用域中调用不会起作用\",{\"1\":{\"2927\":1}}],[\"在函数\",{\"1\":{\"2914\":1}}],[\"在函数外部定义但在函数内被引用\",{\"1\":{\"2109\":1}}],[\"在队列中争抢任务了\",{\"1\":{\"2838\":1}}],[\"在数据段中被定义为\",{\"1\":{\"2762\":1}}],[\"在数据库引擎不支持行锁的时候才会被用到的\",{\"1\":{\"346\":1}}],[\"在英特尔处理器上\",{\"1\":{\"2753\":1}}],[\"在程序编译为机器码之后\",{\"1\":{\"2745\":1}}],[\"在程序初始化时会创建用于清扫的协程\",{\"1\":{\"2506\":1}}],[\"在多核场景下\",{\"1\":{\"2709\":1}}],[\"在以上情况下就需要建立读屏障\",{\"1\":{\"2707\":1}}],[\"在扫描过程中\",{\"1\":{\"2690\":1}}],[\"在交替执行的过程中\",{\"1\":{\"2682\":1}}],[\"在栈上使用其堆上的地址\",{\"1\":{\"2597\":1}}],[\"在栈上的局部变量空间会存储他在堆上的地址\",{\"1\":{\"2138\":1}}],[\"在我们之前就了解到\",{\"1\":{\"2597\":1}}],[\"在清扫阶段内存分配可能会触发\",{\"1\":{\"2586\":1}}],[\"在注册时从栈拷贝到堆\",{\"1\":{\"2394\":1}}],[\"在注册时候就执行了\",{\"1\":{\"2380\":1}}],[\"在堆上分配一个\",{\"1\":{\"2372\":1}}],[\"在闭包中被修改过\",{\"1\":{\"2372\":1}}],[\"在结构体后面还有\",{\"1\":{\"2362\":1,\"2373\":1}}],[\"在只读数据段分配的指向\",{\"1\":{\"2356\":1}}],[\"在编译阶段会做出优化\",{\"1\":{\"2356\":1}}],[\"在编译期间\",{\"1\":{\"1992\":1}}],[\"在有些情况下会被优化掉\",{\"1\":{\"2270\":1}}],[\"在有些系统中\",{\"1\":{\"313\":1}}],[\"在局部变量则是地址\",{\"1\":{\"2168\":1}}],[\"在外层函数返回前要把堆上的返回值拷贝到栈上那一个\",{\"1\":{\"2149\":1}}],[\"在go语言中闭包只是拥有一个或多个捕获变量的function\",{\"1\":{\"2115\":1}}],[\"在计算机科学中\",{\"1\":{\"2109\":1}}],[\"在内置数据里面\",{\"1\":{\"2027\":1}}],[\"在内存中可以找到字符串的内容\",{\"1\":{\"1766\":1}}],[\"在内存中进行更新数据\",{\"1\":{\"616\":1}}],[\"在内存中操作数据\",{\"1\":{\"481\":1}}],[\"在进行拼接\",{\"1\":{\"1939\":1}}],[\"在进行更新操作\",{\"1\":{\"542\":1}}],[\"在很多键值对被删除的情况下\",{\"1\":{\"1859\":1}}],[\"在很长一段时间内无法推广\",{\"1\":{\"1746\":1}}],[\"在每次哈希表读写操作\",{\"1\":{\"1830\":1}}],[\"在通常情况下\",{\"1\":{\"1811\":1}}],[\"在java\",{\"1\":{\"1770\":1}}],[\"在c语言中通过特定的字符\",{\"1\":{\"1766\":1}}],[\"在64位机器上就需要花费大约\",{\"1\":{\"1644\":1}}],[\"在头部字段里\",{\"1\":{\"1558\":1}}],[\"在地址栏输入\",{\"1\":{\"1483\":1}}],[\"在里面添加三行本机ip地址到测试域名的映射\",{\"1\":{\"1469\":1}}],[\"在绘制或光栅化阶段\",{\"1\":{\"1438\":1}}],[\"在此请求行中\",{\"1\":{\"1546\":1}}],[\"在此阶段\",{\"1\":{\"1436\":1}}],[\"在此场景下使用自增主键是合理的\",{\"1\":{\"233\":1}}],[\"在渲染树上运行布局以计算每个节点的几何体\",{\"1\":{\"1432\":1}}],[\"在某些情况下还包括合成\",{\"1\":{\"1425\":1}}],[\"在某个数据页上做了什么修改\",{\"1\":{\"112\":1,\"616\":1,\"645\":1}}],[\"在传输到目的地址过程中\",{\"1\":{\"1387\":1}}],[\"在末尾加上用于检测错误的帧校验序列\",{\"1\":{\"1339\":1}}],[\"在后续操作系统会把本次查询结果放到一块叫做\",{\"1\":{\"1331\":1}}],[\"在http传输数据之前\",{\"1\":{\"1285\":1}}],[\"在未更新网页的情况下\",{\"1\":{\"1091\":1}}],[\"在tcp头部格式中有一个窗口大小的字段\",{\"1\":{\"928\":1}}],[\"在收到最后一个ack之前它会一直重传fin报文直至超时\",{\"1\":{\"872\":1}}],[\"在网络情况复杂的情况下\",{\"1\":{\"833\":1}}],[\"在mysqld服务崩溃或者服务器主机宕机的情况下\",{\"1\":{\"634\":1}}],[\"在mysql起着什么作用\",{\"0\":{\"614\":1}}],[\"在可重复读级别是怎么解决幻读\",{\"0\":{\"596\":1}}],[\"在可重复读隔离级别下开启事务\",{\"1\":{\"307\":1}}],[\"在事务开始到结束这一段过程\",{\"1\":{\"574\":1}}],[\"在事务提交之前有另一个事务\",{\"1\":{\"562\":1}}],[\"在更新方面\",{\"1\":{\"541\":1}}],[\"在磁盘中操作数据\",{\"1\":{\"482\":1}}],[\"在一堆数据中查询一个数据时候\",{\"1\":{\"478\":1}}],[\"在一定程度上\",{\"1\":{\"415\":1}}],[\"在一个市民信息表上\",{\"1\":{\"249\":1}}],[\"在互相等待对方的资源释放\",{\"1\":{\"374\":1}}],[\"在等待事务\",{\"1\":{\"374\":1}}],[\"在执行阶段\",{\"1\":{\"2104\":1}}],[\"在执行\",{\"1\":{\"358\":1,\"2324\":1,\"2952\":1}}],[\"在下面的操作序列中\",{\"1\":{\"356\":1}}],[\"在下面这个表\",{\"1\":{\"236\":1}}],[\"在做表结构变更的时候\",{\"1\":{\"349\":1}}],[\"在这个过程中双方需要隐藏了底层通信细节\",{\"1\":{\"3283\":1}}],[\"在这个函数中\",{\"1\":{\"2104\":1}}],[\"在这个窗口里找到\",{\"1\":{\"1465\":1}}],[\"在这个例子中\",{\"1\":{\"1412\":1,\"2136\":1}}],[\"在这个查询里面\",{\"1\":{\"519\":1}}],[\"在这个查询语句工程中\",{\"1\":{\"517\":1}}],[\"在这里就会先输出\",{\"1\":{\"2922\":1}}],[\"在这里只是简单的用一个例子去介绍了一些相关的代码与变量\",{\"1\":{\"2853\":1}}],[\"在这里我已经懵了\",{\"1\":{\"2784\":1}}],[\"在这里我们只是简单的讲解\",{\"1\":{\"2725\":1}}],[\"在这里我们创建一个新的类型\",{\"1\":{\"2053\":1}}],[\"在这里一次垃圾回收工作中将某一个变量标记为垃圾\",{\"1\":{\"2682\":1}}],[\"在这里他依旧是值的交换\",{\"1\":{\"2304\":1}}],[\"在这里的短变量声明\",{\"1\":{\"1878\":1}}],[\"在这里\",{\"1\":{\"488\":1,\"3313\":1}}],[\"在这里被阻塞了\",{\"1\":{\"336\":1}}],[\"在这种情况下\",{\"1\":{\"222\":1}}],[\"在访问一个表的时候会被自动加上\",{\"1\":{\"322\":1}}],[\"在还没有出现更细粒度的锁的时候\",{\"1\":{\"321\":1}}],[\"在异常处理机制上有差异\",{\"1\":{\"314\":1}}],[\"在备份过程中整个库完全处于只读状态\",{\"1\":{\"295\":1}}],[\"在建立连接时由计算机⽣成的随机数作为其初始值\",{\"1\":{\"744\":1}}],[\"在建立联合索引时候\",{\"1\":{\"265\":1}}],[\"在建表语句中一般是这么定义的\",{\"1\":{\"226\":1}}],[\"在上诉的前提下\",{\"1\":{\"264\":1}}],[\"在上诉的查询过程中\",{\"1\":{\"244\":1}}],[\"在引擎内部使用覆盖索引在索引\",{\"1\":{\"248\":1}}],[\"在插入新值时候需要做必要的维护\",{\"1\":{\"221\":1}}],[\"在回滚日志里面就会有类似下面的记录\",{\"1\":{\"167\":1}}],[\"在\",{\"1\":{\"142\":1,\"166\":1,\"179\":1,\"208\":1,\"213\":1,\"214\":1,\"243\":1,\"278\":1,\"378\":1,\"425\":1,\"1176\":1,\"1324\":1,\"1463\":1,\"1472\":1,\"1491\":1,\"1892\":1,\"2138\":1,\"2288\":1,\"2296\":2,\"2301\":1,\"2336\":1,\"2354\":1,\"2380\":1,\"2419\":1,\"2422\":1,\"2492\":1,\"2567\":1,\"2772\":1,\"2916\":1,\"2933\":1,\"2951\":1,\"3210\":1,\"3211\":1,\"3212\":1,\"3215\":1,\"3249\":1,\"3388\":1,\"3411\":1,\"3418\":1,\"3426\":1,\"3430\":1,\"3431\":1}}],[\"在之后用\",{\"1\":{\"135\":1}}],[\"一等公民\",{\"1\":{\"3218\":1}}],[\"一切皆为对象\",{\"1\":{\"3073\":1}}],[\"一些内部通用实现\",{\"1\":{\"2893\":1}}],[\"一些浏览器引擎使用\",{\"1\":{\"1421\":1}}],[\"一段简单的汇编代码会分成多个段\",{\"1\":{\"2824\":1}}],[\"一段时间专注于进行垃圾回收\",{\"1\":{\"2676\":1}}],[\"一定是在栈\",{\"1\":{\"2614\":1}}],[\"一旦\",{\"1\":{\"2862\":1}}],[\"一旦释放的早了\",{\"1\":{\"2606\":1}}],[\"一旦有人想要攻击服务器\",{\"1\":{\"802\":1}}],[\"一半工作放到全局工作缓存中\",{\"1\":{\"2562\":1}}],[\"一样\",{\"1\":{\"2528\":1}}],[\"一次性分配函数栈帧的主要原因是避免栈访问越界\",{\"1\":{\"2289\":1}}],[\"一次翻倍扩容结束\",{\"1\":{\"1852\":1}}],[\"一致\",{\"1\":{\"2008\":1,\"2446\":1}}],[\"一致性\",{\"1\":{\"144\":1,\"557\":1}}],[\"一对应\",{\"1\":{\"1808\":1}}],[\"一对多\",{\"1\":{\"770\":1}}],[\"一种方法\",{\"1\":{\"1778\":1}}],[\"一种是元数据锁\",{\"1\":{\"316\":1}}],[\"一种是表锁\",{\"1\":{\"316\":1}}],[\"一直到根目录\",{\"1\":{\"3388\":1}}],[\"一直沿用至今\",{\"1\":{\"1739\":1}}],[\"一直变化的是\",{\"1\":{\"1387\":1}}],[\"一\",{\"0\":{\"1453\":1},\"1\":{\"2594\":1}}],[\"一开始启动应该取不到\",{\"1\":{\"2793\":1}}],[\"一开始\",{\"1\":{\"793\":1,\"1286\":1,\"2831\":1}}],[\"一边写一边后移\",{\"1\":{\"623\":1}}],[\"一张表允许创建多个普通索引\",{\"1\":{\"510\":1}}],[\"一张表允许创建多个唯一索引\",{\"1\":{\"509\":1}}],[\"一个程序\",{\"1\":{\"3271\":1}}],[\"一个\",{\"1\":{\"2822\":1,\"3408\":1}}],[\"一个hello\",{\"1\":{\"2816\":1}}],[\"一个影响运行时非常重要的操作便是本地线程存储\",{\"1\":{\"2754\":1}}],[\"一个数据对象被引用的次数\",{\"1\":{\"2668\":1}}],[\"一个字节\",{\"1\":{\"1939\":1}}],[\"一个字段\",{\"1\":{\"1830\":2}}],[\"一个非空接口类型\",{\"1\":{\"1912\":1}}],[\"一个极坏的哈希函数就是将所有的key都映射到一个index上\",{\"1\":{\"1809\":1}}],[\"一个完美的哈希函数就是将key和index一\",{\"1\":{\"1808\":1}}],[\"一个bit有0和1两种状态\",{\"1\":{\"1737\":1}}],[\"一个三位数\",{\"1\":{\"1551\":1}}],[\"一个是计算类型\",{\"1\":{\"2008\":1}}],[\"一个是设备的\",{\"1\":{\"1352\":1}}],[\"一个是\",{\"1\":{\"1301\":1}}],[\"一个是浏览器监听的端口\",{\"1\":{\"1301\":1}}],[\"一个网络包所能容纳的\",{\"1\":{\"1298\":1}}],[\"一个网络包的最大长度\",{\"1\":{\"1297\":1}}],[\"一个随机数\",{\"1\":{\"1232\":1}}],[\"一个旧的syn报文会比新的syn报文先到服务端\",{\"1\":{\"817\":1}}],[\"一个事务在获得某个数据行对象的\",{\"1\":{\"608\":1,\"609\":1}}],[\"一个事务被提交之后\",{\"1\":{\"559\":1}}],[\"一个用户的事务不被其他事务所干扰\",{\"1\":{\"558\":1}}],[\"一个节点越\",{\"1\":{\"488\":1}}],[\"一个表可以有多个外键\",{\"1\":{\"412\":1}}],[\"一个表只能有一个\",{\"1\":{\"411\":1}}],[\"一个日志不够吗\",{\"1\":{\"109\":1}}],[\"一起释放\",{\"1\":{\"368\":1}}],[\"一条记录\",{\"1\":{\"367\":1}}],[\"一般用于非文本文件如图片等\",{\"1\":{\"3152\":1,\"3156\":1,\"3160\":1,\"3164\":1}}],[\"一般用于get与post请求\",{\"1\":{\"1079\":1}}],[\"一般使用utf8\",{\"1\":{\"3134\":1}}],[\"一般使用slice\",{\"1\":{\"1647\":1}}],[\"一般语言都会有的图像处理库\",{\"1\":{\"2891\":1}}],[\"一般是该g正在执行网络i\",{\"1\":{\"2868\":1}}],[\"一般是变量类型不确定\",{\"1\":{\"2202\":1}}],[\"一般\",{\"1\":{\"1534\":1}}],[\"一般在gc前或者刚被创建时\",{\"1\":{\"2864\":1}}],[\"一般在\",{\"1\":{\"1325\":1}}],[\"一般免费证书较少\",{\"1\":{\"1201\":1}}],[\"一般都是防止死锁或者利用超时时间来解决长时间卡顿\",{\"1\":{\"343\":1}}],[\"一般不使用\",{\"1\":{\"321\":1}}],[\"一般采用的方式都是先写日志\",{\"1\":{\"100\":1}}],[\"🤷‍♀️为什么会有两个日志\",{\"1\":{\"109\":1}}],[\"咦~~\",{\"1\":{\"1547\":1}}],[\"咦\",{\"1\":{\"109\":1,\"2954\":1}}],[\"会使用tab\",{\"1\":{\"3388\":1}}],[\"会遇到一些问题\",{\"1\":{\"3263\":1}}],[\"会带来维护困难\",{\"1\":{\"3261\":1}}],[\"会带来不同的时间和空间的开销\",{\"1\":{\"2715\":1}}],[\"会指向\",{\"1\":{\"2955\":1}}],[\"会要保存\",{\"1\":{\"2934\":1}}],[\"会切换成\",{\"1\":{\"2849\":1}}],[\"会分担多个\",{\"1\":{\"2837\":1}}],[\"会分配足够多的新桶\",{\"1\":{\"1830\":1}}],[\"会分配三个结构\",{\"1\":{\"1665\":1}}],[\"会获取cpu核数\",{\"1\":{\"2785\":1}}],[\"会更注重于核心代码流程\",{\"1\":{\"2737\":1}}],[\"会出现某些线程开启写屏障的工作有一点点的延迟而发生错误\",{\"1\":{\"2721\":1}}],[\"会出现什么情况呢\",{\"1\":{\"133\":1}}],[\"会增加新生代\",{\"1\":{\"2666\":1}}],[\"会增加网络拥塞\",{\"1\":{\"895\":1}}],[\"会自动解决由运行时候识别不再有用的数据并释放\",{\"1\":{\"2609\":1}}],[\"会自动释放这个全局锁\",{\"1\":{\"314\":1}}],[\"会执行标记任务直到被抢占\",{\"1\":{\"2570\":1}}],[\"会执行参数\",{\"1\":{\"2312\":1}}],[\"会和目标使用率出现显著偏差\",{\"1\":{\"2569\":1}}],[\"会对该结果进行\",{\"1\":{\"2568\":1}}],[\"会对匹配的数据进行回表查询\",{\"1\":{\"289\":1}}],[\"会处理本地工作队列和全局工作缓存中工作量的均衡问题\",{\"1\":{\"2559\":1}}],[\"会处理和解析语法\",{\"1\":{\"698\":1}}],[\"会继续处理工作队列中的节点\",{\"1\":{\"2496\":1}}],[\"会根据请求中的信息来确定要调用的具体方法\",{\"1\":{\"3276\":1}}],[\"会根据当前\",{\"1\":{\"2567\":1}}],[\"会根据\",{\"1\":{\"2494\":1}}],[\"会根据这些信息生产http请求信息\",{\"1\":{\"1256\":1}}],[\"会记录一个\",{\"1\":{\"2478\":1}}],[\"会记录所有的逻辑操作\",{\"1\":{\"108\":1}}],[\"会提前定义并分配到函数调用栈局部变量上\",{\"1\":{\"2439\":1}}],[\"会提取相关信息\",{\"1\":{\"1256\":1}}],[\"会存储在\",{\"1\":{\"2411\":1,\"2437\":1}}],[\"会存在一个问题\",{\"1\":{\"898\":1,\"2508\":1}}],[\"会改为堆分配\",{\"1\":{\"2372\":1}}],[\"会延时执行\",{\"1\":{\"2334\":1}}],[\"会把写屏障缓冲内容\",{\"1\":{\"2564\":1}}],[\"会把\",{\"1\":{\"2180\":1}}],[\"会把日志写入文件系统的\",{\"1\":{\"655\":1}}],[\"会新建一个字符串\",{\"1\":{\"2175\":1}}],[\"会由编译器转换为\",{\"1\":{\"2174\":1}}],[\"会值拷贝到参数空间\",{\"1\":{\"2168\":1}}],[\"会输出true\",{\"1\":{\"2163\":1}}],[\"会被打上\",{\"1\":{\"2957\":1}}],[\"会被移除然后通过\",{\"1\":{\"2945\":1}}],[\"会被放到这个全局\",{\"1\":{\"2840\":1}}],[\"会被加入到\",{\"1\":{\"2506\":1}}],[\"会被编译器编译为一堆堆机器指令\",{\"1\":{\"2264\":1}}],[\"会被编译器转化为\",{\"1\":{\"2168\":1}}],[\"会被转换成\",{\"1\":{\"2180\":1}}],[\"会被赋值为\",{\"1\":{\"2091\":1}}],[\"会被锁住\",{\"1\":{\"158\":1}}],[\"会关联到同一个类型元数据\",{\"1\":{\"2030\":1}}],[\"会需要内存对齐\",{\"1\":{\"1984\":1}}],[\"会不需要内存对齐\",{\"1\":{\"1984\":1}}],[\"会的\",{\"1\":{\"1980\":1}}],[\"会匹配到48的内存大小\",{\"1\":{\"1725\":1}}],[\"会发生\",{\"1\":{\"2932\":1}}],[\"会发生重新开辟底层数组\",{\"1\":{\"1707\":1}}],[\"会发生什么\",{\"1\":{\"1701\":1}}],[\"会发生panic\",{\"1\":{\"1677\":1}}],[\"会发送一个窗口非0的报文\",{\"1\":{\"934\":1}}],[\"会发送一个报文告知发送方此时的窗口为0\",{\"1\":{\"933\":1}}],[\"会实现更加灵活丰富的功能\",{\"1\":{\"1523\":1}}],[\"会阻塞渲染并停止html的解析\",{\"1\":{\"1408\":1}}],[\"会向\",{\"1\":{\"2528\":1}}],[\"会向权限域名服务器进行查询\",{\"1\":{\"1278\":1}}],[\"会向一个根域名服务器进行查询\",{\"1\":{\"1274\":1}}],[\"会告诉对应的顶级域名服务器\",{\"1\":{\"1275\":1}}],[\"会进行迭代查询\",{\"1\":{\"1273\":1}}],[\"会运行许多代码块\",{\"1\":{\"1250\":1}}],[\"会在当前执行的\",{\"1\":{\"2930\":1}}],[\"会在函数调用栈直接分配空间存储\",{\"1\":{\"2409\":1,\"2434\":1}}],[\"会在堆上也分配一个\",{\"1\":{\"2149\":1}}],[\"会在内部解析这个请求\",{\"1\":{\"1500\":1}}],[\"会在浏览器的输入框下方出现下拉列表提供建议\",{\"1\":{\"1250\":1}}],[\"会在每个\",{\"1\":{\"161\":1}}],[\"会触发自动完成机制\",{\"1\":{\"1250\":1}}],[\"会话密钥有三个随机数以及加密算法而合成\",{\"1\":{\"1240\":1}}],[\"会话层\",{\"1\":{\"714\":1}}],[\"会逐渐恢复接受窗口的大小\",{\"1\":{\"1024\":1}}],[\"会返回当前的窗口大小\",{\"1\":{\"941\":1}}],[\"会启动持续计时器\",{\"1\":{\"940\":1}}],[\"会导致可能并没有丢就重发\",{\"1\":{\"895\":1}}],[\"会导致主从延迟\",{\"1\":{\"298\":1}}],[\"会回复一个ack确认应答报文\",{\"1\":{\"850\":1,\"1394\":1}}],[\"会造成双方资源的浪费\",{\"1\":{\"838\":1}}],[\"会影响到并发度的\",{\"1\":{\"597\":1}}],[\"会影响覆盖索引的使用\",{\"1\":{\"511\":1}}],[\"会将\",{\"1\":{\"2957\":1}}],[\"会将该节点标记成黑色\",{\"1\":{\"2624\":1}}],[\"会将执行函数置于函数\",{\"1\":{\"2447\":1}}],[\"会将参数指向的变量\",{\"1\":{\"2254\":1}}],[\"会将二级地址也就是\",{\"1\":{\"2118\":1}}],[\"会将底层数组第三位改成3\",{\"1\":{\"1671\":1}}],[\"会将其复制到网卡内的缓存区中\",{\"1\":{\"1339\":1}}],[\"会将磁盘需要更新数据的数据页加载进入内存中\",{\"1\":{\"616\":1}}],[\"会将字符串转换成数字\",{\"1\":{\"552\":1}}],[\"会将数据页做合并\",{\"1\":{\"224\":1}}],[\"会一直向右匹配索引\",{\"1\":{\"529\":1}}],[\"会一直向右匹配直到遇到范围查询\",{\"1\":{\"276\":1}}],[\"会有一些不同点\",{\"1\":{\"482\":1}}],[\"会平添开发难度\",{\"1\":{\"418\":1}}],[\"会持有哪些锁\",{\"1\":{\"358\":1}}],[\"会直到事务提交才释放\",{\"1\":{\"349\":1}}],[\"会怎么样呢\",{\"1\":{\"302\":1}}],[\"会先将他的\",{\"1\":{\"2908\":1}}],[\"会先判断\",{\"1\":{\"2386\":1}}],[\"会先判断索引中内部的值\",{\"1\":{\"284\":1}}],[\"会先去执行对应的\",{\"1\":{\"2841\":1}}],[\"会先去\",{\"1\":{\"1917\":1}}],[\"会先查询缓存\",{\"1\":{\"691\":1}}],[\"会先过滤掉age<10的数据\",{\"1\":{\"289\":1}}],[\"会扫描多少行\",{\"1\":{\"236\":1}}],[\"会加\",{\"1\":{\"151\":2}}],[\"会首先判断当前用户是否有权限去做这件事情\",{\"1\":{\"88\":1}}],[\"负责构建go语言的其他工具\",{\"1\":{\"2893\":1}}],[\"负责根据主\",{\"1\":{\"2769\":1}}],[\"负责执行已经注册的\",{\"1\":{\"2343\":1}}],[\"负责执行这一操作的是网卡\",{\"1\":{\"1338\":1}}],[\"负责在函数结束后跳回到调用处\",{\"1\":{\"2265\":1}}],[\"负责向两台主机进程之间的通信提供通用的数据传输服务\",{\"1\":{\"713\":1}}],[\"负责数据的存储和提取\",{\"1\":{\"695\":1}}],[\"负责跟客户端建立连接\",{\"1\":{\"690\":1}}],[\"负责全面管理和控制数据库系统\",{\"1\":{\"400\":1}}],[\"负责\",{\"1\":{\"107\":1}}],[\"擦除一些记录\",{\"1\":{\"104\":1}}],[\"是访问集合元素的一种方式\",{\"1\":{\"3242\":1}}],[\"是值的有序序列\",{\"1\":{\"3050\":1}}],[\"是python中一个隐含的变量它代表了模块的名字\",{\"1\":{\"3041\":1}}],[\"是panic函数自己的参数\",{\"1\":{\"2919\":1}}],[\"是之前的\",{\"1\":{\"2917\":1}}],[\"是现在的执行的\",{\"1\":{\"2906\":1}}],[\"是怎么处理的\",{\"1\":{\"2902\":1}}],[\"是unix系统中ar工具的简单实现\",{\"1\":{\"2893\":1}}],[\"是我们经常使用的错误函数\",{\"1\":{\"2891\":1}}],[\"是内核线程的封装\",{\"1\":{\"2858\":1}}],[\"是gpm调度器调度的基本单位\",{\"1\":{\"2856\":1}}],[\"是主线程对应的\",{\"1\":{\"2830\":1}}],[\"是主键\",{\"1\":{\"662\":1}}],[\"是使用内部链接时大多数\",{\"1\":{\"2748\":1}}],[\"是无条件跳转\",{\"1\":{\"2744\":1}}],[\"是无法使用\",{\"1\":{\"268\":1}}],[\"是精确到修改的对象\",{\"1\":{\"2696\":1}}],[\"是可达的\",{\"1\":{\"2688\":1}}],[\"是可以复用的\",{\"1\":{\"1912\":1}}],[\"是可以追加写入的\",{\"1\":{\"113\":1,\"649\":1}}],[\"是可以用来记录新的操作记录的\",{\"1\":{\"104\":1}}],[\"是函数\",{\"1\":{\"2386\":1,\"2389\":1,\"2942\":1}}],[\"是不需要实例化就可以调用\",{\"1\":{\"3092\":1}}],[\"是不是函数\",{\"1\":{\"2386\":1}}],[\"是不正确的字段名\",{\"1\":{\"1563\":1}}],[\"是作为参数\",{\"1\":{\"2380\":1}}],[\"是触发defer函数执行的panic指针\",{\"1\":{\"2350\":1,\"2362\":1,\"2373\":1,\"2420\":1}}],[\"是deferproc函数返回后要继续执行的指令地址\",{\"1\":{\"2350\":1,\"2362\":1,\"2373\":1,\"2420\":1}}],[\"是闭包对象\",{\"1\":{\"2196\":1}}],[\"是捕获变量\",{\"1\":{\"2196\":1}}],[\"是存储变量\",{\"1\":{\"2174\":1}}],[\"是两个不同的类型\",{\"1\":{\"2032\":1}}],[\"是第四个字段\",{\"1\":{\"1973\":1}}],[\"是第三个字段\",{\"1\":{\"1972\":1}}],[\"是第二个字段\",{\"1\":{\"1971\":1}}],[\"是第一个字段\",{\"1\":{\"1970\":1}}],[\"是用于表示其自然的数据单位\",{\"1\":{\"1927\":1}}],[\"是4e25\",{\"1\":{\"1755\":1}}],[\"是请求字段\",{\"1\":{\"1569\":1}}],[\"是请求目标\",{\"1\":{\"1546\":1}}],[\"是合法的字段名\",{\"1\":{\"1563\":1}}],[\"是更详细的解释文字\",{\"1\":{\"1552\":1}}],[\"是服务器错误\",{\"1\":{\"1551\":1}}],[\"是成功\",{\"1\":{\"1551\":1}}],[\"是版本号\",{\"1\":{\"1546\":1}}],[\"是html和xml文档的编程接口\",{\"1\":{\"1403\":1}}],[\"是浏览器将通过网络接收的数据转换为dom和cssom的步骤\",{\"1\":{\"1401\":1}}],[\"是基于\",{\"1\":{\"1174\":1}}],[\"是什么\",{\"1\":{\"1169\":1,\"1173\":1}}],[\"是超文本传输协议\",{\"1\":{\"1064\":1}}],[\"是未收到数据但可以接收的数据\",{\"1\":{\"1022\":1}}],[\"是未发送但总大小超过接收方处理范围\",{\"1\":{\"1014\":1}}],[\"是未发送但总大小在接收方处理范围内\",{\"1\":{\"1013\":1}}],[\"是已成功接收并确认的数据\",{\"1\":{\"1021\":1}}],[\"是已发送但未收到\",{\"1\":{\"1012\":1}}],[\"是已发送并收到\",{\"1\":{\"1011\":1}}],[\"是的\",{\"1\":{\"973\":1}}],[\"是个重复的报文\",{\"1\":{\"920\":1}}],[\"是变化的\",{\"1\":{\"898\":1}}],[\"是经常波动变化的\",{\"1\":{\"897\":1}}],[\"是经常变化的\",{\"1\":{\"897\":1}}],[\"是任何报文在网络上存在的最长时间\",{\"1\":{\"867\":1}}],[\"是报文最大生存时间\",{\"1\":{\"867\":1}}],[\"是流式传输\",{\"1\":{\"778\":1}}],[\"是在支持头等函数的编程语言中实现词法绑定的一种技术\",{\"1\":{\"2109\":1}}],[\"是在建立浏览器与服务器的\",{\"1\":{\"1496\":1}}],[\"是在\",{\"1\":{\"637\":1}}],[\"是固定大小的\",{\"1\":{\"619\":1}}],[\"是目前搜索引擎数据库使用的一种技术\",{\"1\":{\"512\":1}}],[\"是数组下标\",{\"1\":{\"504\":1}}],[\"是每个引擎用来唯一标识数据行的信息\",{\"1\":{\"501\":1}}],[\"是memory表的默认索引类型\",{\"1\":{\"465\":1}}],[\"是一种持续集成和持续交付\",{\"1\":{\"3403\":1}}],[\"是一种高性能\",{\"1\":{\"3269\":1}}],[\"是一种可变容器模型\",{\"1\":{\"3067\":1}}],[\"是一种典型的分级\",{\"1\":{\"2514\":1}}],[\"是一种比较严谨写法的\",{\"1\":{\"2161\":1}}],[\"是一种操纵和管理数据库的大型软件\",{\"1\":{\"398\":1}}],[\"是一个特殊方法用于在创建对象时进行初始化操作\",{\"1\":{\"3075\":1}}],[\"是一个引导程序\",{\"1\":{\"2893\":1}}],[\"是一个全局变量\",{\"1\":{\"2761\":1}}],[\"是一个很方便的机制\",{\"1\":{\"2332\":1}}],[\"是一个很大的集合\",{\"1\":{\"1743\":1}}],[\"是一个位标识符\",{\"1\":{\"2229\":1,\"2241\":1}}],[\"是一个结构体类型\",{\"1\":{\"2228\":1}}],[\"是一个\",{\"1\":{\"2208\":1,\"2542\":1}}],[\"是一个接口类型\",{\"1\":{\"2205\":1}}],[\"是一个整数类型\",{\"1\":{\"2099\":1}}],[\"是一个快速生成随机数的函数\",{\"1\":{\"1866\":1}}],[\"是一个动词\",{\"1\":{\"1538\":1}}],[\"是一个小表\",{\"1\":{\"333\":1}}],[\"是能够快速发现并进行处理的\",{\"1\":{\"381\":1}}],[\"是表\",{\"1\":{\"356\":1}}],[\"是支持行锁的\",{\"1\":{\"351\":1}}],[\"是通过序列号与确认应答\",{\"1\":{\"883\":1}}],[\"是通过序列号\",{\"1\":{\"881\":1}}],[\"是通过\",{\"1\":{\"295\":1}}],[\"是否被恢复\",{\"1\":{\"2946\":1}}],[\"是否被恢复了\",{\"1\":{\"2933\":1}}],[\"是否设置成功\",{\"1\":{\"2755\":1}}],[\"是否需要暂停调度\",{\"1\":{\"2872\":1}}],[\"是否需要进行\",{\"1\":{\"2478\":1}}],[\"是否需要建立冗余的联合索引支持覆盖索引\",{\"1\":{\"253\":1}}],[\"是否还需要启动\",{\"1\":{\"2478\":1}}],[\"是否只读等等\",{\"1\":{\"2229\":1,\"2241\":1}}],[\"是否为\",{\"1\":{\"2778\":1}}],[\"是否为方法\",{\"1\":{\"2229\":1,\"2241\":1}}],[\"是否为指针\",{\"1\":{\"2229\":1,\"2241\":1}}],[\"是否可比较\",{\"1\":{\"2206\":1}}],[\"是否可转换为类型u\",{\"1\":{\"2206\":1}}],[\"是否可以赋值给类型u\",{\"1\":{\"2206\":1}}],[\"是否等于\",{\"1\":{\"2049\":1,\"2063\":1,\"2065\":1,\"2079\":1,\"2386\":1}}],[\"是否指向\",{\"1\":{\"2041\":1}}],[\"是否使用证书\",{\"1\":{\"1201\":1}}],[\"是否支持数据库异常崩溃后的安全恢复\",{\"1\":{\"436\":1}}],[\"是否支持事务和外键\",{\"1\":{\"433\":1}}],[\"是否支持行级锁\",{\"1\":{\"430\":1}}],[\"是否有必要将身份证号和名字建立联合索引\",{\"1\":{\"249\":1}}],[\"是指一个事务执行过程中看到的数据\",{\"1\":{\"150\":1}}],[\"是指一个事务提交之后\",{\"1\":{\"149\":1}}],[\"是指一个事务还没提交时\",{\"1\":{\"148\":1}}],[\"是指\",{\"1\":{\"113\":1,\"151\":1,\"649\":1}}],[\"是循环写的\",{\"1\":{\"113\":1,\"648\":1}}],[\"是逻辑日志\",{\"1\":{\"112\":1,\"646\":1}}],[\"是物理日志\",{\"1\":{\"112\":1,\"645\":1}}],[\"是\",{\"1\":{\"111\":2,\"615\":1,\"642\":1,\"643\":1,\"867\":1,\"1315\":1,\"2220\":1,\"2763\":1,\"2795\":1,\"3020\":1}}],[\"是由两部分组成\",{\"1\":{\"107\":1}}],[\"是当前要擦除的位置\",{\"1\":{\"103\":1,\"624\":1}}],[\"是当前记录的位置\",{\"1\":{\"103\":1,\"623\":1}}],[\"之上的\",{\"1\":{\"1204\":1}}],[\"之所以要等到\",{\"1\":{\"2910\":1}}],[\"之所以会有区别是因为\",{\"1\":{\"1176\":1}}],[\"之所以v2还是1\",{\"1\":{\"157\":1}}],[\"之间的语句\",{\"1\":{\"3109\":1}}],[\"之间的一些异同点\",{\"0\":{\"639\":1}}],[\"之间的区域是可以用来记录新的操作\",{\"1\":{\"625\":1}}],[\"之间的空白区域\",{\"1\":{\"104\":1}}],[\"之间不允许交叉加锁和释放锁\",{\"1\":{\"360\":1}}],[\"之前使用\",{\"1\":{\"3388\":1}}],[\"之前和\",{\"1\":{\"3388\":2}}],[\"之前在\",{\"1\":{\"2900\":1}}],[\"之前放在\",{\"1\":{\"2795\":1}}],[\"之前的过程省略\",{\"1\":{\"2950\":1}}],[\"之前的样子\",{\"1\":{\"2285\":1}}],[\"之前的数据包若一段时间后到达了接收方\",{\"1\":{\"920\":1}}],[\"之前只有\",{\"1\":{\"512\":1}}],[\"之前说过\",{\"1\":{\"307\":1}}],[\"之前不会去看索引中\",{\"1\":{\"283\":1}}],[\"之前\",{\"1\":{\"278\":1}}],[\"之前提交的记录都不会丢失\",{\"1\":{\"105\":1,\"615\":1}}],[\"之后必须带空格\",{\"1\":{\"3388\":1}}],[\"之后必须要有一个\",{\"1\":{\"1530\":1}}],[\"之后不能带空格\",{\"1\":{\"3388\":1}}],[\"之后有\",{\"1\":{\"3388\":1}}],[\"之后的名称相符\",{\"1\":{\"3111\":1}}],[\"之后用户程序中某一个对象\",{\"1\":{\"2705\":1}}],[\"之后等于2\",{\"1\":{\"2574\":1}}],[\"之后就会执行\",{\"1\":{\"2914\":1}}],[\"之后就\",{\"1\":{\"2315\":1}}],[\"之后再也没有修改了\",{\"1\":{\"2133\":1}}],[\"之后双方就会建立tcp连接\",{\"1\":{\"1390\":1}}],[\"之后处于\",{\"1\":{\"1287\":1,\"1288\":1,\"1289\":1}}],[\"之后进入time\",{\"1\":{\"853\":1,\"1397\":1}}],[\"之后进入fin\",{\"1\":{\"851\":1,\"1395\":1}}],[\"之后服务端进入closed\",{\"1\":{\"850\":1,\"1394\":1}}],[\"之后服务端处于syn\",{\"1\":{\"796\":1}}],[\"之后客户端进入fin\",{\"1\":{\"849\":1,\"1393\":1}}],[\"之后客户端处于establishen状态\",{\"1\":{\"797\":1}}],[\"之后客户端处于syn\",{\"1\":{\"795\":1}}],[\"之后开发人员或者\",{\"1\":{\"342\":1}}],[\"之后其他线程的以下语句会被阻塞\",{\"1\":{\"293\":1}}],[\"之后备份日志的时候\",{\"1\":{\"134\":1}}],[\"之后要查询再重连\",{\"1\":{\"71\":1}}],[\"之后\",{\"1\":{\"66\":1,\"284\":1,\"314\":1,\"336\":1,\"359\":1,\"512\":1,\"1236\":1,\"1289\":1,\"1290\":1}}],[\"不推荐\",{\"1\":{\"3148\":1}}],[\"不推荐建立索引场景\",{\"1\":{\"458\":1}}],[\"不建议外界直接访问\",{\"1\":{\"3083\":1}}],[\"不要跟关键字\",{\"1\":{\"2977\":1}}],[\"不包括特殊字符\",{\"1\":{\"2975\":1}}],[\"不够支撑自己理解整个过程\",{\"1\":{\"2811\":1}}],[\"不为空\",{\"1\":{\"2561\":1}}],[\"不含有指针的属于\",{\"1\":{\"2525\":1}}],[\"不用每次都与其他的\",{\"1\":{\"2838\":1}}],[\"不用每次都扫描所有数据\",{\"1\":{\"2662\":1}}],[\"不用专门去执行扫描任务\",{\"1\":{\"2671\":1}}],[\"不用构建\",{\"1\":{\"2449\":1}}],[\"不用回表\",{\"1\":{\"519\":1}}],[\"不用回表操作\",{\"1\":{\"286\":1}}],[\"不等于\",{\"1\":{\"2388\":1,\"3004\":1}}],[\"不知道其余的\",{\"1\":{\"2753\":1}}],[\"不知道自己注册的链表是否已经执行完了\",{\"1\":{\"2388\":1}}],[\"不知道你是否已经猜到答案了\",{\"1\":{\"2379\":1}}],[\"不知道这三个\",{\"1\":{\"909\":1}}],[\"不行\",{\"1\":{\"2212\":1}}],[\"不管什么类型的\",{\"1\":{\"2495\":1}}],[\"不管是内置类型还是自定义类型\",{\"1\":{\"2004\":1}}],[\"不管你用什么存储引擎\",{\"1\":{\"638\":1}}],[\"不满足倍数\",{\"1\":{\"1976\":1}}],[\"不满足条件\",{\"1\":{\"243\":1}}],[\"不过这种方式依然不适用于循环中的\",{\"1\":{\"2455\":1}}],[\"不过这一次是等量扩容\",{\"1\":{\"1854\":1}}],[\"不过多个\",{\"1\":{\"2332\":1}}],[\"不过使用头字段需要注意下面几点\",{\"1\":{\"1561\":1}}],[\"不过缓存的时间就几分钟\",{\"1\":{\"1331\":1}}],[\"不仅可以使用标准里的\",{\"1\":{\"1560\":1}}],[\"不再修改\",{\"1\":{\"2131\":1}}],[\"不再继续抓包\",{\"1\":{\"1485\":1}}],[\"不再需要回表查整行记录\",{\"1\":{\"253\":1}}],[\"不断地推出新的字符集\",{\"1\":{\"1741\":1}}],[\"不断的拆开发送到的数据包的头部\",{\"1\":{\"1388\":1}}],[\"不断往后推移与循环\",{\"1\":{\"103\":1}}],[\"不验证通信方的身份\",{\"1\":{\"1196\":1}}],[\"不加密\",{\"1\":{\"1195\":1}}],[\"不加锁的话\",{\"1\":{\"305\":1}}],[\"不加锁会有什么情况出现呢\",{\"1\":{\"299\":1}}],[\"不安全\",{\"1\":{\"1194\":1}}],[\"不受外界影响\",{\"1\":{\"1030\":1}}],[\"不提供复杂的控制机制\",{\"1\":{\"1006\":1}}],[\"不提供行级锁\",{\"1\":{\"431\":1}}],[\"不然就一直囤积数据\",{\"1\":{\"955\":1}}],[\"不是正常返回结果\",{\"1\":{\"2948\":1}}],[\"不是运行队列中呢\",{\"1\":{\"2791\":1}}],[\"不是\",{\"1\":{\"2763\":1}}],[\"不是从堆拷贝到栈上\",{\"1\":{\"2421\":1}}],[\"不是更多呢\",{\"0\":{\"866\":1}}],[\"不是两次\",{\"0\":{\"806\":1}}],[\"不需要安装\",{\"1\":{\"1465\":1}}],[\"不需要使用更多的通信次数\",{\"1\":{\"840\":1}}],[\"不需要显式使用\",{\"1\":{\"322\":1}}],[\"不使用四次握手的原因\",{\"1\":{\"839\":1}}],[\"不使用两次握手的原因\",{\"1\":{\"837\":1}}],[\"不使用二叉树\",{\"1\":{\"206\":1}}],[\"不丢弃和按序传输\",{\"1\":{\"836\":1}}],[\"不丢失\",{\"1\":{\"772\":1}}],[\"不可避免会造成内存碎片化\",{\"1\":{\"2508\":1}}],[\"不可寻址\",{\"1\":{\"1872\":1}}],[\"不可以携带数据\",{\"1\":{\"800\":1}}],[\"不可重复度和幻读\",{\"1\":{\"568\":1}}],[\"不可重复读的重点是数据的更新\",{\"1\":{\"569\":1}}],[\"不可重复读\",{\"1\":{\"145\":1,\"563\":1,\"578\":1}}],[\"不重复\",{\"1\":{\"772\":1}}],[\"不允许复制模块的进口\",{\"1\":{\"3388\":1}}],[\"不允许箭头功能\",{\"1\":{\"3388\":1}}],[\"不允许使用三元操作符\",{\"1\":{\"3388\":1}}],[\"不允许使用嵌套的三元表达式\",{\"1\":{\"3388\":1}}],[\"不允许否定的表达式\",{\"1\":{\"3388\":1}}],[\"不允许多个空行\",{\"1\":{\"3388\":1}}],[\"不允许空格和\",{\"1\":{\"3388\":1}}],[\"不允许标签与变量同名\",{\"1\":{\"3388\":1}}],[\"不允许\",{\"1\":{\"3388\":1}}],[\"不允许对\",{\"1\":{\"3388\":1}}],[\"不允许在变量定义之前使用它们\",{\"1\":{\"3388\":1}}],[\"不允许在\",{\"1\":{\"3388\":1}}],[\"不允许有重复元素\",{\"1\":{\"3060\":1}}],[\"不允许修改字符串中的字符\",{\"1\":{\"1777\":1}}],[\"不允许分割\",{\"1\":{\"556\":1}}],[\"不允许为空\",{\"1\":{\"405\":1}}],[\"不一定所有事情都是用于触发机制\",{\"1\":{\"3415\":1}}],[\"不一定\",{\"1\":{\"451\":1}}],[\"不支持范围查询\",{\"1\":{\"471\":1}}],[\"不支持\",{\"1\":{\"437\":1}}],[\"不支持外键\",{\"1\":{\"434\":1}}],[\"不支持事务\",{\"1\":{\"434\":1}}],[\"不支持行锁意味着并发控制只能使用表锁\",{\"1\":{\"351\":1}}],[\"不分库分表\",{\"1\":{\"421\":1}}],[\"不会导致程序退出\",{\"1\":{\"3388\":1}}],[\"不会执行模块中if条件成立时的代码\",{\"1\":{\"3043\":1}}],[\"不会有任何效果\",{\"1\":{\"2960\":1}}],[\"不会再被调度\",{\"1\":{\"2864\":1}}],[\"不会一开始就直接添加到运行队列中\",{\"1\":{\"2790\":1}}],[\"不会报错\",{\"1\":{\"2184\":1}}],[\"不会对\",{\"1\":{\"1878\":1}}],[\"不会出现乱码\",{\"1\":{\"1770\":1}}],[\"不会返回任何资源\",{\"1\":{\"1112\":1}}],[\"不会发生拥塞\",{\"1\":{\"924\":1}}],[\"不会使用索引\",{\"1\":{\"288\":1}}],[\"不会挪动其他记录\",{\"1\":{\"227\":1}}],[\"不只是索引的全部定义\",{\"1\":{\"263\":1}}],[\"不产生回表\",{\"1\":{\"246\":1}}],[\"不同服务可能使用了不同编程语言和平台\",{\"1\":{\"3264\":1}}],[\"不同服务器的处理方式也是不同的\",{\"1\":{\"1176\":1}}],[\"不同平台下程序开始进入入口不同\",{\"1\":{\"2846\":1}}],[\"不同平台的入口文件都不同\",{\"1\":{\"2741\":1}}],[\"不同类型垃圾回收器也得处理一些个性化的问题\",{\"1\":{\"2716\":1}}],[\"不同链表管理不同大小的内存块\",{\"1\":{\"2512\":1}}],[\"不同的功能单元可以交付给不同的团队进行开发和维护\",{\"1\":{\"3261\":1}}],[\"不同的子类的同一个方法就会有不同的效果产生\",{\"1\":{\"3100\":1}}],[\"不同的子类对象会表现出不同的行为\",{\"1\":{\"3098\":1}}],[\"不同的是\",{\"1\":{\"2719\":1,\"2957\":1}}],[\"不同的同步方式\",{\"1\":{\"2715\":1}}],[\"不同的字符对应的二进制位数肯定也不一样\",{\"1\":{\"1744\":1}}],[\"不同的隔离级别下\",{\"1\":{\"159\":1}}],[\"不同slice与声明的数组可以共用一个底层数组\",{\"1\":{\"1689\":1}}],[\"不同报文格式\",{\"1\":{\"1523\":1}}],[\"不同时刻启动的事务会有不同的\",{\"1\":{\"169\":1}}],[\"不能带末尾的逗号\",{\"1\":{\"3388\":1}}],[\"不能够因为某些原因导致调用出错\",{\"1\":{\"3266\":1}}],[\"不能大于\",{\"1\":{\"3124\":3}}],[\"不能与\",{\"1\":{\"3104\":1}}],[\"不能作为除数\",{\"1\":{\"3104\":1}}],[\"不能从任何灰色对象追踪到该白色对象\",{\"1\":{\"2686\":1}}],[\"不能修改的\",{\"1\":{\"2244\":1}}],[\"不能有空格\",{\"1\":{\"1564\":1}}],[\"不能有重复\",{\"1\":{\"405\":1}}],[\"不能光理论\",{\"1\":{\"1490\":1}}],[\"不能仅仅考虑到对面接收方的窗口大小\",{\"1\":{\"962\":1}}],[\"不能三次吗\",{\"0\":{\"856\":1}}],[\"不能保证双方的初始序列号都能确认接受\",{\"1\":{\"830\":1}}],[\"不能保证可靠性\",{\"1\":{\"773\":1}}],[\"不能像\",{\"1\":{\"735\":1}}],[\"不能加x锁\",{\"1\":{\"605\":1}}],[\"不能用于排序\",{\"1\":{\"469\":1}}],[\"不能一味的否定\",{\"1\":{\"421\":1}}],[\"不能再记录了\",{\"1\":{\"104\":1}}],[\"不能陷入一个细节中\",{\"1\":{\"53\":1}}],[\"日志记录都已经写入了\",{\"1\":{\"681\":1}}],[\"日志记录的数据来说\",{\"1\":{\"644\":1}}],[\"日志缓存区只有可能丢失最多一个语句或者一个事务\",{\"1\":{\"634\":1}}],[\"日志缓存区将每隔一秒写到日志文件中\",{\"1\":{\"629\":1}}],[\"日志\",{\"0\":{\"612\":1},\"1\":{\"537\":1,\"638\":1}}],[\"日志空间满了\",{\"1\":{\"101\":1}}],[\"日志系统\",{\"0\":{\"94\":1}}],[\"branch\",{\"1\":{\"3428\":1}}],[\"branches\",{\"1\":{\"3413\":1,\"3428\":1}}],[\"brace\",{\"1\":{\"3388\":1,\"3397\":1}}],[\"bracket\",{\"1\":{\"3388\":1}}],[\"browser\",{\"1\":{\"3388\":1}}],[\"break语句之后出现不可达代码\",{\"1\":{\"3388\":1}}],[\"break\",{\"1\":{\"3023\":1,\"3341\":2,\"3342\":2}}],[\"bx\",{\"1\":{\"2753\":7,\"2755\":2,\"2757\":2}}],[\"blacklist\",{\"1\":{\"3388\":1}}],[\"black\",{\"1\":{\"2628\":1}}],[\"blob\",{\"1\":{\"3388\":1}}],[\"block\",{\"1\":{\"3388\":2}}],[\"blocks\",{\"1\":{\"2480\":1,\"3388\":3}}],[\"blocked\",{\"1\":{\"336\":1}}],[\"blog\",{\"1\":{\"805\":1,\"1048\":1,\"1050\":1,\"3255\":1,\"3347\":1,\"3451\":1}}],[\"bss\",{\"1\":{\"2492\":1,\"2532\":1}}],[\"bst\",{\"1\":{\"479\":1}}],[\"bgsweep\",{\"1\":{\"2506\":1}}],[\"bgscancredit\",{\"1\":{\"2477\":1}}],[\"bgmarkdone\",{\"1\":{\"2480\":1}}],[\"bgmarkready\",{\"1\":{\"2480\":1}}],[\"b2\",{\"1\":{\"2383\":1,\"2388\":1}}],[\"b1和b2\",{\"1\":{\"2386\":1}}],[\"b1\",{\"1\":{\"2383\":1,\"2388\":1}}],[\"b=0\",{\"1\":{\"3028\":1}}],[\"b=a\",{\"1\":{\"2324\":1}}],[\"b=1\",{\"1\":{\"2321\":1,\"2324\":2}}],[\"b=2\",{\"1\":{\"2296\":1,\"2321\":1,\"2354\":1,\"2365\":1,\"2375\":1,\"2376\":1}}],[\"bp\",{\"1\":{\"2270\":1}}],[\"bot\",{\"1\":{\"3447\":1}}],[\"bom\",{\"1\":{\"3388\":2}}],[\"book\",{\"0\":{\"3453\":1}}],[\"bootstrap\",{\"1\":{\"2789\":1}}],[\"boolean\",{\"1\":{\"3388\":2}}],[\"bool\",{\"1\":{\"1869\":1,\"1996\":1,\"2206\":9,\"2350\":1,\"2362\":1,\"2373\":1,\"2420\":2,\"2459\":3,\"2862\":2,\"2868\":1,\"2907\":1,\"2919\":2}}],[\"body\",{\"1\":{\"1172\":1,\"1175\":1,\"1176\":2,\"1181\":1,\"1530\":1,\"1534\":2,\"3388\":1}}],[\"bmap\",{\"0\":{\"1835\":1},\"1\":{\"1839\":3}}],[\"by\",{\"1\":{\"1772\":2,\"2473\":1,\"3104\":1}}],[\"bytes\",{\"1\":{\"2891\":1,\"3177\":1}}],[\"bytesmarked\",{\"1\":{\"2480\":1}}],[\"byte是uint8的一个内置别名\",{\"1\":{\"2001\":1,\"2027\":1}}],[\"byte的方式\",{\"1\":{\"1770\":1}}],[\"byte\",{\"1\":{\"1769\":1,\"1772\":3,\"1900\":1,\"1929\":1,\"1998\":1,\"2008\":1,\"2052\":2,\"2082\":1,\"2224\":1,\"2454\":1,\"2538\":1,\"2780\":2,\"2783\":1}}],[\"babel\",{\"1\":{\"3388\":1}}],[\"banana\",{\"0\":{\"3467\":1},\"1\":{\"3058\":1}}],[\"bar\",{\"1\":{\"3041\":3,\"3388\":1}}],[\"background\",{\"1\":{\"2480\":2,\"3327\":1,\"3341\":3}}],[\"baici1\",{\"1\":{\"1292\":1,\"3447\":2}}],[\"baidu\",{\"1\":{\"1155\":1}}],[\"bad\",{\"1\":{\"1123\":1,\"1144\":1,\"2778\":1,\"2795\":1}}],[\"basics\",{\"1\":{\"1044\":1}}],[\"base选项\",{\"1\":{\"3436\":1}}],[\"based\",{\"1\":{\"3365\":1}}],[\"base\",{\"1\":{\"399\":1,\"3437\":1,\"3438\":1,\"3439\":1}}],[\"b可能因为没收到ack而重传了一个fin报文\",{\"1\":{\"874\":1}}],[\"build\",{\"1\":{\"3428\":2}}],[\"buildid\",{\"1\":{\"2893\":1}}],[\"buildmode=exe\",{\"1\":{\"2748\":2}}],[\"builtins\",{\"1\":{\"3388\":1}}],[\"builtin\",{\"1\":{\"2891\":1}}],[\"bufio就对它进行了实现\",{\"1\":{\"2891\":1}}],[\"bufio\",{\"1\":{\"2891\":1}}],[\"buffers\",{\"1\":{\"3358\":1}}],[\"buffering\",{\"1\":{\"3133\":1}}],[\"buffering=\",{\"1\":{\"3129\":1}}],[\"buffer\",{\"1\":{\"543\":1,\"544\":1}}],[\"but\",{\"1\":{\"2868\":1}}],[\"bucketmask返回bucket的个数\",{\"1\":{\"1866\":1}}],[\"bucketmask\",{\"1\":{\"1866\":1}}],[\"bucketcnt是常量8代表一个桶内的cell数\",{\"1\":{\"1866\":1}}],[\"bucketcnt\",{\"1\":{\"1866\":1}}],[\"bucketcntbits\",{\"1\":{\"1866\":1}}],[\"bucketcount\",{\"1\":{\"1827\":1}}],[\"bucketsize\",{\"1\":{\"2014\":1}}],[\"buckets指向新桶\",{\"1\":{\"1848\":1}}],[\"buckets\",{\"1\":{\"1834\":1}}],[\"bucket\",{\"1\":{\"1799\":1,\"2014\":3}}],[\"bug\",{\"1\":{\"79\":1}}],[\"b树算法原理\",{\"1\":{\"477\":1}}],[\"b树\",{\"0\":{\"474\":1},\"1\":{\"393\":1,\"476\":1}}],[\"b\",{\"1\":{\"266\":2,\"268\":6,\"335\":1,\"356\":1,\"359\":2,\"363\":1,\"365\":1,\"369\":1,\"370\":1,\"374\":3,\"441\":1,\"463\":1,\"562\":1,\"564\":3,\"566\":1,\"1631\":3,\"1634\":1,\"1834\":1,\"1838\":1,\"1847\":1,\"1866\":3,\"1939\":1,\"1940\":1,\"1965\":1,\"1971\":1,\"1981\":2,\"2052\":2,\"2082\":1,\"2090\":2,\"2091\":1,\"2103\":1,\"2234\":1,\"2272\":2,\"2273\":2,\"2278\":1,\"2280\":1,\"2282\":1,\"2286\":1,\"2294\":6,\"2296\":1,\"2299\":4,\"2300\":6,\"2301\":1,\"2303\":3,\"2304\":1,\"2309\":6,\"2310\":1,\"2312\":1,\"2315\":2,\"2317\":1,\"2320\":4,\"2321\":3,\"2352\":3,\"2365\":1,\"2370\":6,\"2371\":1,\"2373\":1,\"2375\":1,\"2376\":1,\"2378\":2,\"2380\":3,\"2400\":3,\"2402\":2,\"2418\":2,\"2425\":1,\"2427\":2,\"2454\":2,\"2705\":3,\"2778\":1,\"3028\":1,\"3048\":9,\"3069\":1,\"3090\":12,\"3143\":1,\"3176\":1,\"3388\":1}}],[\"bb\",{\"1\":{\"237\":1}}],[\"be\",{\"1\":{\"2789\":1,\"2795\":1,\"3397\":1}}],[\"beforeblockcomment\",{\"1\":{\"3388\":1}}],[\"beforecolon\",{\"1\":{\"3388\":1}}],[\"before\",{\"1\":{\"2789\":3,\"3388\":11}}],[\"between\",{\"1\":{\"236\":1,\"246\":1,\"276\":1,\"516\":1,\"518\":1,\"529\":1,\"3388\":1}}],[\"begin\",{\"1\":{\"174\":1,\"178\":1,\"179\":2,\"348\":1}}],[\"bitwise\",{\"1\":{\"3388\":1}}],[\"bitmap\",{\"1\":{\"2538\":1,\"2544\":1}}],[\"bits\",{\"1\":{\"2206\":1}}],[\"bit\",{\"1\":{\"1772\":1,\"1929\":1,\"1930\":1,\"2538\":1,\"2539\":1,\"2540\":2}}],[\"bind\",{\"1\":{\"3388\":2}}],[\"binary\",{\"1\":{\"478\":1}}],[\"binlog参数详解\",{\"1\":{\"658\":1}}],[\"binlog会记录所有涉及更新数据的逻辑操作\",{\"1\":{\"638\":1}}],[\"binlog\",{\"0\":{\"106\":1,\"636\":1,\"639\":1,\"653\":1},\"1\":{\"98\":1,\"107\":1,\"108\":1,\"111\":1,\"112\":1,\"113\":2,\"120\":2,\"125\":1,\"128\":1,\"132\":1,\"134\":6,\"135\":3,\"139\":1,\"298\":1,\"637\":1,\"638\":1,\"640\":1,\"643\":1,\"646\":1,\"649\":2,\"652\":1,\"654\":2,\"666\":1,\"673\":1,\"674\":3,\"675\":1,\"676\":3,\"682\":1,\"683\":1,\"684\":1}}],[\"bigint\",{\"1\":{\"228\":1}}],[\"b++\",{\"1\":{\"2309\":1,\"2320\":1}}],[\"b+树非叶子节点存储非主键字段\",{\"1\":{\"487\":1}}],[\"b+树非叶子节点存主键的值\",{\"1\":{\"487\":1}}],[\"b+树\",{\"0\":{\"474\":1},\"1\":{\"476\":1}}],[\"b+树和\",{\"1\":{\"441\":1,\"463\":1}}],[\"b+树索引算法原理\",{\"1\":{\"393\":1}}],[\"b+树这种索引结构\",{\"1\":{\"257\":1}}],[\"b+\",{\"0\":{\"491\":1},\"1\":{\"208\":2,\"217\":1,\"221\":1,\"222\":1,\"493\":1,\"522\":1}}],[\"和命名的\",{\"1\":{\"3388\":1}}],[\"和关键字\",{\"1\":{\"3109\":1}}],[\"和setter\",{\"1\":{\"3083\":1}}],[\"和动态特征\",{\"1\":{\"3073\":1}}],[\"和动态类型\",{\"1\":{\"1917\":1}}],[\"和系统保留字\",{\"1\":{\"2977\":1}}],[\"和官方文档相同\",{\"1\":{\"2882\":1}}],[\"和p不同\",{\"1\":{\"2868\":1}}],[\"和plan\",{\"1\":{\"2795\":1}}],[\"和macos\",{\"1\":{\"2743\":1}}],[\"和1\",{\"1\":{\"2396\":1}}],[\"和局部变量\",{\"1\":{\"2315\":1}}],[\"和普通函数调用几乎没什么不同\",{\"1\":{\"2158\":1,\"2166\":1}}],[\"和一个\",{\"1\":{\"2574\":1}}],[\"和一个写屏障缓冲\",{\"1\":{\"2554\":1}}],[\"和一个关联的环境\",{\"1\":{\"2109\":1}}],[\"和一个动态类型\",{\"1\":{\"1912\":1}}],[\"和那些断言成功的\",{\"1\":{\"2066\":1}}],[\"和我们预想的一样三次握手一样\",{\"1\":{\"1496\":1}}],[\"和目标\",{\"1\":{\"1387\":1}}],[\"和回滚\",{\"1\":{\"435\":1}}],[\"和事务\",{\"1\":{\"374\":1}}],[\"和更新类事务的提交语句\",{\"1\":{\"293\":1}}],[\"和搜索树\",{\"1\":{\"185\":1}}],[\"和重做\",{\"1\":{\"114\":1}}],[\"和\",{\"0\":{\"426\":1,\"696\":1},\"1\":{\"98\":1,\"132\":1,\"139\":1,\"210\":1,\"266\":1,\"323\":1,\"348\":2,\"429\":1,\"625\":1,\"640\":1,\"677\":1,\"1169\":1,\"1175\":2,\"1177\":1,\"1201\":1,\"1203\":1,\"1289\":1,\"1298\":1,\"1559\":1,\"1770\":1,\"1781\":1,\"2030\":1,\"2032\":1,\"2203\":1,\"2301\":1,\"2304\":1,\"2317\":1,\"2475\":1,\"2500\":1,\"2528\":1,\"2537\":1,\"2546\":1,\"2555\":1,\"2557\":1,\"2581\":1,\"2650\":1,\"2741\":2,\"2747\":1,\"2756\":2,\"2757\":2,\"2772\":1,\"2837\":1,\"2862\":2,\"2905\":1,\"2914\":1,\"2930\":1,\"2934\":1,\"2945\":1,\"2963\":1,\"3105\":1,\"3388\":8}}],[\"重新给元组赋值\",{\"1\":{\"3058\":1}}],[\"重启openresty服务器\",{\"1\":{\"1475\":1}}],[\"重置内容\",{\"1\":{\"1094\":1}}],[\"重置为\",{\"1\":{\"986\":1}}],[\"重传丢失的数据包\",{\"1\":{\"999\":1}}],[\"重传机制的其中一个方式\",{\"1\":{\"885\":1}}],[\"重发就慢\",{\"1\":{\"894\":1}}],[\"重发控制\",{\"1\":{\"881\":1}}],[\"重复元素只会出现一次\",{\"1\":{\"3063\":1}}],[\"重复处理同一个数据对象不会对回收正确性造成什么影响\",{\"1\":{\"2716\":1}}],[\"重复发送多次syn报文\",{\"1\":{\"833\":1}}],[\"重复\",{\"1\":{\"739\":1}}],[\"重复以上操作\",{\"1\":{\"242\":1}}],[\"重复相同的判断逻辑\",{\"1\":{\"91\":1}}],[\"重放到中午误删表之前的那个时刻\",{\"1\":{\"128\":1}}],[\"重做日志\",{\"1\":{\"98\":1,\"438\":1,\"615\":1,\"651\":1}}],[\"基本介绍\",{\"0\":{\"3402\":1}}],[\"基本信息\",{\"0\":{\"3350\":1}}],[\"基本语句\",{\"0\":{\"3013\":1}}],[\"基本情况\",{\"0\":{\"2467\":1}}],[\"基本的报文格式就是\",{\"1\":{\"1181\":1}}],[\"基本上执行流程与上面的查询语句一致\",{\"1\":{\"98\":1}}],[\"基础学习\",{\"0\":{\"2965\":1}}],[\"基础类型枚举值和反射中的\",{\"1\":{\"2008\":1}}],[\"基础\",{\"0\":{\"395\":1}}],[\"基础架构\",{\"0\":{\"52\":1}}],[\"基于该原因有这样以下的解决方案\",{\"1\":{\"3443\":1}}],[\"基于这两个原因\",{\"1\":{\"3292\":1}}],[\"基于http\",{\"1\":{\"3269\":1}}],[\"基于弱分代假说\",{\"1\":{\"2660\":1}}],[\"基于go语言gin框架的web项目骨架\",{\"1\":{\"1620\":1}}],[\"基于字节流\",{\"1\":{\"738\":1}}],[\"基于字节流的传输层通信协议\",{\"1\":{\"733\":1}}],[\"基于上面的分析\",{\"1\":{\"340\":1}}],[\"基于非主键索引的查询需要多扫描一棵索引树\",{\"1\":{\"219\":1}}],[\"基于主键索引和普通索引的查询有什么区别\",{\"1\":{\"215\":1}}],[\"我现在需要配置只要仓库有\",{\"1\":{\"3412\":1}}],[\"我的说不定也不适合你\",{\"1\":{\"3387\":1}}],[\"我的猜测当前是\",{\"1\":{\"2792\":1}}],[\"我是服务器\",{\"1\":{\"3342\":1}}],[\"我是传一个还是后面的全部重传\",{\"1\":{\"909\":1}}],[\"我已经不懂了\",{\"1\":{\"2784\":1}}],[\"我用的电脑是\",{\"1\":{\"2736\":1}}],[\"我会有很多解决\",{\"1\":{\"2293\":1}}],[\"我会建议你总是使用\",{\"1\":{\"177\":1}}],[\"我猜测他的内存对齐与上一个字段一致\",{\"1\":{\"1986\":1}}],[\"我比较推崇李文周的博客\",{\"1\":{\"1586\":1}}],[\"我确实没有接收到\",{\"1\":{\"910\":1}}],[\"我发送了\",{\"1\":{\"910\":1}}],[\"我觉得把类看作一个隐匿对象\",{\"1\":{\"3092\":1}}],[\"我觉得情况不需要考虑\",{\"1\":{\"873\":1}}],[\"我觉得业务不会出现\",{\"1\":{\"387\":1}}],[\"我见过这样的情况\",{\"1\":{\"348\":1}}],[\"我建议你选择使用\",{\"1\":{\"345\":1}}],[\"我建议你使用\",{\"1\":{\"178\":1}}],[\"我不建议你使用\",{\"1\":{\"313\":1}}],[\"我们关系的是函数\",{\"1\":{\"3309\":1}}],[\"我们进行进一步的升级\",{\"1\":{\"3292\":1}}],[\"我们采用原生rpc\",{\"1\":{\"3285\":1}}],[\"我们经常会用子类对象去替换掉一个父类对象\",{\"1\":{\"3095\":1}}],[\"我们经常用的go命令\",{\"1\":{\"2893\":1}}],[\"我们并不建议将属性设置为私有的\",{\"1\":{\"3081\":1}}],[\"我们利用模块来管理函数\",{\"1\":{\"3030\":1}}],[\"我们直到利用\",{\"1\":{\"2940\":1}}],[\"我们再来看个例子\",{\"1\":{\"2912\":1}}],[\"我们引入\",{\"1\":{\"2859\":1}}],[\"我们一起来看看\",{\"1\":{\"2826\":1}}],[\"我们一直写\",{\"1\":{\"2822\":1}}],[\"我们一直讨论的是程序正常执行\",{\"1\":{\"2457\":1}}],[\"我们下一次再讨论这个\",{\"1\":{\"2794\":1}}],[\"我们留到具体的章节去考虑\",{\"1\":{\"2776\":1}}],[\"我们到现在的讨论都是在单核的范围里面\",{\"1\":{\"2709\":1}}],[\"我们通常称之为\",{\"1\":{\"3076\":1}}],[\"我们通常会用\",{\"1\":{\"2207\":1}}],[\"我们通过标记方法\",{\"1\":{\"2620\":1}}],[\"我们今天就来看看\",{\"1\":{\"2610\":1}}],[\"我们今天聊一聊关于日志方面的\",{\"1\":{\"613\":1}}],[\"我们后面看看\",{\"1\":{\"2461\":1}}],[\"我们举一个例子看看到底做了怎么样的优化呢\",{\"1\":{\"2424\":1}}],[\"我们之前的建议是将属性命名以单下划线开头\",{\"1\":{\"3083\":1}}],[\"我们之前说的堆分配\",{\"1\":{\"2521\":1}}],[\"我们之前说过会先进行返回值赋值然后去执行\",{\"1\":{\"2321\":1}}],[\"我们之前眼光聚焦于\",{\"1\":{\"2382\":1}}],[\"我们称之为defer\",{\"1\":{\"2340\":1}}],[\"我们都会去用\",{\"1\":{\"2332\":1}}],[\"我们都知道一个\",{\"1\":{\"2050\":1}}],[\"我们都知道\",{\"1\":{\"923\":1}}],[\"我们先来看看为什么\",{\"1\":{\"2334\":1}}],[\"我们先来理一下思路\",{\"1\":{\"2322\":1}}],[\"我们先进行分析\",{\"1\":{\"2310\":1}}],[\"我们先看一个例子\",{\"1\":{\"2308\":1}}],[\"我们聚焦于代码\",{\"1\":{\"2298\":1}}],[\"我们在前面总说\",{\"1\":{\"2855\":1}}],[\"我们在之前的分析里面了解到一些核心函数\",{\"1\":{\"2776\":1}}],[\"我们在学习\",{\"1\":{\"2293\":1}}],[\"我们在应用中应该尽量使用主键查询\",{\"1\":{\"219\":1}}],[\"我们认为返回值是通过寄存器传递的\",{\"1\":{\"2276\":1,\"2307\":1}}],[\"我们按照编程语言的语法定义的函数\",{\"1\":{\"2264\":1}}],[\"我们现在明白了\",{\"1\":{\"2251\":1}}],[\"我们从函数\",{\"1\":{\"2353\":1}}],[\"我们从后面一步一步理一下\",{\"1\":{\"2248\":1}}],[\"我们从一个表的更新语句开始\",{\"1\":{\"96\":1}}],[\"我们回忆一下\",{\"1\":{\"2248\":1}}],[\"我们知道在\",{\"1\":{\"2963\":1}}],[\"我们知道了\",{\"1\":{\"2771\":1}}],[\"我们知道\",{\"1\":{\"2212\":1,\"2508\":1}}],[\"我们知道身份证号是市民的唯一标识\",{\"1\":{\"252\":1}}],[\"我们依旧从函数调用栈开始分析\",{\"1\":{\"2212\":1}}],[\"我们无需再传入方法接收者作为第一个参数\",{\"1\":{\"2193\":1}}],[\"我们创建了一个新类型\",{\"1\":{\"2083\":1}}],[\"我们会首先去根据\",{\"1\":{\"2062\":1,\"2078\":1}}],[\"我们接下来应该判断这个类型是否有\",{\"1\":{\"2060\":1}}],[\"我们接下来看看\",{\"1\":{\"115\":1}}],[\"我们也可以自己定义类型\",{\"1\":{\"2002\":1}}],[\"我们将注意力聚焦到\",{\"1\":{\"2321\":1}}],[\"我们将接口称之为\",{\"1\":{\"2037\":1}}],[\"我们将\",{\"1\":{\"1905\":1,\"2795\":1}}],[\"我们声明了一个\",{\"1\":{\"1902\":1}}],[\"我们只定义了返回值的类型\",{\"1\":{\"2323\":1}}],[\"我们只关注局部变量\",{\"1\":{\"2270\":1}}],[\"我们只给ans2添加一个元素\",{\"1\":{\"1709\":1}}],[\"我们只要输入待查找的键即\",{\"1\":{\"187\":1}}],[\"我们来深挖一波\",{\"1\":{\"2822\":1}}],[\"我们来细细扒一扒这个里面的逻辑\",{\"1\":{\"2751\":1}}],[\"我们来分析一波\",{\"1\":{\"2380\":1}}],[\"我们来看看这到底会发生什么\",{\"1\":{\"2371\":1}}],[\"我们来看看不同的地方\",{\"1\":{\"2256\":1}}],[\"我们来看看\",{\"1\":{\"2233\":1,\"2398\":1,\"2861\":1}}],[\"我们来看看反射是如何更新变量值的\",{\"1\":{\"2230\":1}}],[\"我们来看看uft\",{\"1\":{\"1748\":1}}],[\"我们来看看抓取到的\",{\"1\":{\"1532\":1}}],[\"我们来说说常用的头字段\",{\"1\":{\"1567\":1}}],[\"我们来讨论一个问题\",{\"1\":{\"215\":1,\"340\":1}}],[\"我们来讨论一下其中的隔离性\",{\"1\":{\"144\":1}}],[\"我们启动一下这个实验环境\",{\"1\":{\"1491\":1}}],[\"我们不必等到解析器找到对外部资源的引用来请求它\",{\"1\":{\"1410\":1}}],[\"我们需要明确一点\",{\"1\":{\"2380\":1}}],[\"我们需要根据路由表的网关列判断对方的地址\",{\"1\":{\"1377\":1}}],[\"我们需要查询的\",{\"1\":{\"519\":1}}],[\"我们可以讲\",{\"1\":{\"3257\":1}}],[\"我们可以使用python的异常机制对可能在运行时发生状况的代码进行适当的处理\",{\"1\":{\"3175\":1}}],[\"我们可以使用静态方法来解决这类问题\",{\"1\":{\"3089\":1}}],[\"我们可以指定文件名\",{\"1\":{\"3126\":1}}],[\"我们可以确定\",{\"1\":{\"2614\":1}}],[\"我们可以基于\",{\"1\":{\"2544\":1}}],[\"我们可以看到\",{\"1\":{\"2324\":1}}],[\"我们可以通过\",{\"1\":{\"2024\":1}}],[\"我们可以得知\",{\"1\":{\"896\":1}}],[\"我们可以发现与\",{\"1\":{\"2339\":1}}],[\"我们可以发现多次等价后\",{\"1\":{\"2196\":1}}],[\"我们可以发现第二种方式将类型为\",{\"1\":{\"2164\":1}}],[\"我们可以发现\",{\"1\":{\"260\":1}}],[\"我们假设a发送了ack报文后过了一段时间t之后b才收到该ack\",{\"1\":{\"874\":1}}],[\"我们要反射\",{\"1\":{\"2211\":1}}],[\"我们要搞清楚两点\",{\"1\":{\"1822\":1}}],[\"我们要启动\",{\"1\":{\"1472\":1}}],[\"我们要明白\",{\"1\":{\"368\":1}}],[\"我们要把这三个操作放在一个事务中\",{\"1\":{\"367\":1}}],[\"我们要回到之前的问题\",{\"1\":{\"124\":1}}],[\"我们简化一点\",{\"1\":{\"363\":1}}],[\"我们讨论一个问题\",{\"1\":{\"225\":1}}],[\"我们有一个主键列为\",{\"1\":{\"210\":1}}],[\"我根据对背景进行处理\",{\"1\":{\"14\":1}}],[\"太神奇了\",{\"1\":{\"95\":1}}],[\"太长时间没有动静\",{\"1\":{\"67\":1}}],[\"至于为什么\",{\"1\":{\"2788\":1}}],[\"至于为什么你可以通过方法去分析理由\",{\"1\":{\"1982\":1}}],[\"至于解析背后的原理\",{\"1\":{\"2776\":1}}],[\"至于tcp\",{\"1\":{\"720\":1}}],[\"至此可以发送到目的网络地址的数据包就诞生了\",{\"1\":{\"1343\":1}}],[\"至此服务端已经完成连接关闭\",{\"1\":{\"854\":1,\"1398\":1}}],[\"至此\",{\"1\":{\"93\":1}}],[\"至少是3个小时以上了\",{\"1\":{\"48\":1}}],[\"判断素数的函数\",{\"1\":{\"3176\":1}}],[\"判断子集和超集\",{\"1\":{\"3065\":1}}],[\"判断是不是g0\",{\"1\":{\"2795\":1}}],[\"判断是不是系统协程\",{\"1\":{\"2793\":1}}],[\"判断a1是否要调用\",{\"1\":{\"2454\":1}}],[\"判断a2是否要调用\",{\"1\":{\"2454\":1}}],[\"判断的方法时通过判断\",{\"1\":{\"2386\":1}}],[\"判断方法与前一种断言一致\",{\"1\":{\"2077\":1}}],[\"判断\",{\"1\":{\"2049\":1,\"2755\":1}}],[\"判断后的结果是和第三条目匹配\",{\"1\":{\"1317\":1}}],[\"判断哪些数据包是已经被对方接收到的\",{\"1\":{\"827\":1}}],[\"判断此连接是否是一个历史连接\",{\"1\":{\"819\":1}}],[\"判断id值是不是10\",{\"1\":{\"90\":1}}],[\"判断你输入地\",{\"1\":{\"78\":1}}],[\"执行函数\",{\"1\":{\"2942\":1}}],[\"执行结束后移除\",{\"1\":{\"2924\":1}}],[\"执行结束后会释放栈帧\",{\"1\":{\"2282\":1}}],[\"执行到一个\",{\"1\":{\"2908\":1}}],[\"执行g函数\",{\"1\":{\"2868\":1}}],[\"执行入口就是\",{\"1\":{\"2850\":1}}],[\"执行栈\",{\"1\":{\"2753\":1,\"2772\":1}}],[\"执行的函数都是同一个函数注册的\",{\"1\":{\"2945\":1}}],[\"执行的初始化阶段\",{\"1\":{\"2567\":1}}],[\"执行的大致过程如下\",{\"1\":{\"2484\":1}}],[\"执行的步骤如下\",{\"1\":{\"1229\":1}}],[\"执行过程中\",{\"1\":{\"2581\":1}}],[\"执行过程\",{\"1\":{\"2475\":1}}],[\"执行完后\",{\"1\":{\"2389\":1,\"2934\":2}}],[\"执行完了\",{\"1\":{\"2388\":1}}],[\"执行流程\",{\"1\":{\"2389\":1}}],[\"执行流程如下\",{\"1\":{\"89\":1}}],[\"执行注册的\",{\"1\":{\"2376\":1}}],[\"执行时又要从堆拷贝到栈\",{\"1\":{\"2394\":1}}],[\"执行时从空闲\",{\"1\":{\"2364\":1}}],[\"执行时候可执行文件被加载到内存中\",{\"1\":{\"2824\":1}}],[\"执行时候再拷贝到函数调用栈上\",{\"1\":{\"2367\":1}}],[\"执行时候也从链表头开始\",{\"1\":{\"2346\":1}}],[\"执行时候\",{\"1\":{\"2169\":1,\"2175\":1,\"2386\":1}}],[\"执行前会判断用户是否有执行查询的权限\",{\"1\":{\"694\":1}}],[\"执行查询语句的时候\",{\"1\":{\"691\":1}}],[\"执行事务前后\",{\"1\":{\"557\":1}}],[\"执行\",{\"1\":{\"359\":1,\"2143\":1,\"2365\":1,\"2366\":1,\"2375\":1,\"2386\":1,\"2388\":2,\"2559\":1,\"2578\":1,\"2840\":1,\"2862\":1,\"2924\":1,\"3109\":1}}],[\"执行器生成操作的\",{\"1\":{\"666\":1}}],[\"执行器生成这个操作的\",{\"1\":{\"120\":1}}],[\"执行器拿到数据后\",{\"1\":{\"663\":1}}],[\"执行器拿到引擎给的行数据\",{\"1\":{\"118\":1}}],[\"执行器操作引擎\",{\"1\":{\"662\":1}}],[\"执行器和\",{\"0\":{\"660\":1}}],[\"执行器调用引擎的提交事务接口\",{\"1\":{\"121\":1,\"667\":1}}],[\"执行器先找引擎取\",{\"1\":{\"117\":1}}],[\"执行器将上述遍历过程中所有满足条件的行组成的记录集作为结果集返回给客户端\",{\"1\":{\"92\":1}}],[\"执行器就会根据表的引擎定义\",{\"1\":{\"89\":1}}],[\"执行器\",{\"0\":{\"87\":1},\"1\":{\"694\":1}}],[\"执行器等\",{\"1\":{\"59\":1}}],[\"打包后加入文件\",{\"1\":{\"3445\":1}}],[\"打包后的结果通过网络发送回客户端\",{\"1\":{\"3280\":1}}],[\"打包后的请求通过网络发送到远程服务器\",{\"1\":{\"3275\":1}}],[\"打包并构建文档\",{\"1\":{\"3428\":1}}],[\"打包并部署\",{\"1\":{\"3403\":1}}],[\"打包结果\",{\"1\":{\"3279\":1}}],[\"打包物品\",{\"1\":{\"3274\":1}}],[\"打包参数\",{\"1\":{\"3274\":1}}],[\"打印对象\",{\"1\":{\"3215\":1}}],[\"打印异常信息\",{\"1\":{\"2925\":1}}],[\"打印信息从链表尾开始\",{\"1\":{\"2922\":1}}],[\"打印panic信息\",{\"1\":{\"2913\":1}}],[\"打印panic\",{\"1\":{\"2913\":1}}],[\"打上对钩就可以了\",{\"1\":{\"1465\":1}}],[\"打开一个文件用于追加\",{\"1\":{\"3166\":1}}],[\"打开一个文件用于读写\",{\"1\":{\"3154\":1,\"3162\":1,\"3170\":1}}],[\"打开一个文件只用于写入\",{\"1\":{\"3158\":1}}],[\"打开一个文件进行更新\",{\"1\":{\"3146\":1}}],[\"打开windows的设置窗口\",{\"1\":{\"1465\":1}}],[\"打开表的时候\",{\"1\":{\"89\":1}}],[\"打算来使用\",{\"1\":{\"62\":1}}],[\"而对象是具体的东西\",{\"1\":{\"3072\":1}}],[\"而对象是类的实例\",{\"1\":{\"3072\":1}}],[\"而对于事务\",{\"1\":{\"374\":1}}],[\"而对于\",{\"1\":{\"321\":1}}],[\"而这些信息就被封装在context中\",{\"1\":{\"2891\":1}}],[\"而操作系统的差异则是直接反应在运行时进行不同的系统级操作上\",{\"1\":{\"2745\":1}}],[\"而有的线程则没有工作\",{\"1\":{\"2712\":1}}],[\"而回收器后续复制\",{\"1\":{\"2705\":1}}],[\"而回收器正在处理的灰色对象又不能抵达这个白色对象\",{\"1\":{\"2688\":1}}],[\"而如果忘了释放\",{\"1\":{\"2606\":1}}],[\"而如果用整型做主键\",{\"1\":{\"228\":1}}],[\"而函数的局部变量\",{\"1\":{\"2597\":1}}],[\"而链表操作比较慢\",{\"1\":{\"2395\":1}}],[\"而参数空间与局部变量空间并没有关联\",{\"1\":{\"2299\":1}}],[\"而交换指针时候却可以了\",{\"1\":{\"2293\":1}}],[\"而每个\",{\"1\":{\"2546\":1}}],[\"而每个函数的最后都有一条ret指令\",{\"1\":{\"2265\":1}}],[\"而每个键值对的tophash\",{\"1\":{\"1836\":1}}],[\"而已\",{\"1\":{\"2186\":1}}],[\"而类型断言的目标类型可以是抽象类型也可以是具体类型\",{\"1\":{\"2038\":1}}],[\"而数据类型的对齐系数是取类型大小与平台的对齐系数种较小的那个\",{\"1\":{\"1948\":1}}],[\"而在发送结束后\",{\"1\":{\"3335\":1}}],[\"而在\",{\"1\":{\"1868\":1}}],[\"而在其他语言当中\",{\"1\":{\"1639\":1}}],[\"而hmap\",{\"1\":{\"1841\":1}}],[\"而go\",{\"1\":{\"1770\":1}}],[\"而客户端\",{\"1\":{\"1496\":1}}],[\"而今天我们需要分析呢\",{\"1\":{\"1490\":1}}],[\"而其他设备则会忽略这个包\",{\"1\":{\"1350\":1}}],[\"而当\",{\"1\":{\"1334\":1}}],[\"而发送方会义无反顾地发送这几个字节\",{\"1\":{\"949\":1}}],[\"而重发的数据包已被收到\",{\"1\":{\"920\":1}}],[\"而不用等到rto超时再进行重传\",{\"1\":{\"990\":1}}],[\"而不会出现有些桶注定不会被选中的情况\",{\"1\":{\"1804\":1}}],[\"而不会导致接收端处理不过来\",{\"1\":{\"929\":1}}],[\"而不会向网络发送任何报文\",{\"1\":{\"874\":1}}],[\"而不是字符串了\",{\"1\":{\"3300\":1}}],[\"而不是其他的\",{\"1\":{\"3113\":1}}],[\"而不是\",{\"1\":{\"2301\":1,\"3388\":1}}],[\"而不是局部变量\",{\"1\":{\"2170\":1}}],[\"而不是cpu上的主线程\",{\"1\":{\"1441\":1}}],[\"而不是一起发送\",{\"1\":{\"859\":1}}],[\"而不是为了查询效率\",{\"1\":{\"509\":1}}],[\"而一旦适合哈希索引\",{\"1\":{\"473\":1}}],[\"而关掉死锁检测意味着可能会出现大量的超时\",{\"1\":{\"387\":1}}],[\"而实际上\",{\"1\":{\"332\":1}}],[\"而将整个库设置为\",{\"1\":{\"314\":1}}],[\"而由于\",{\"1\":{\"308\":1}}],[\"而\",{\"1\":{\"280\":1,\"867\":1,\"1176\":1,\"1202\":1,\"1563\":1,\"1564\":1,\"2180\":1}}],[\"而更糟的情况是\",{\"1\":{\"222\":1}}],[\"而是进入了\",{\"1\":{\"2905\":1}}],[\"而是放到\",{\"1\":{\"2790\":1}}],[\"而是把相关指针写入当前\",{\"1\":{\"2564\":1}}],[\"而是去执行\",{\"1\":{\"2457\":1}}],[\"而是从栈上的局部变量空间拷贝到参数空间\",{\"1\":{\"2421\":1}}],[\"而是指向\",{\"1\":{\"2098\":1}}],[\"而是指向新的内存\",{\"1\":{\"1778\":1}}],[\"而是\",{\"1\":{\"2044\":1}}],[\"而是以字长\",{\"1\":{\"1932\":1}}],[\"而是以数据\",{\"1\":{\"900\":1}}],[\"而是重新声明值\",{\"1\":{\"1878\":1}}],[\"而是字节个数\",{\"1\":{\"1767\":1}}],[\"而是通过长度len来表示字符串结束\",{\"1\":{\"1766\":1}}],[\"而是状态行\",{\"1\":{\"1548\":1}}],[\"而是一个副本\",{\"1\":{\"1088\":1}}],[\"而是系统自行判断什么时候写\",{\"1\":{\"655\":1}}],[\"而是执行到哪一行就拿哪一行的锁\",{\"1\":{\"368\":1}}],[\"而是在事务结束时再统一释放他们\",{\"1\":{\"360\":1}}],[\"而是使用\",{\"1\":{\"206\":1}}],[\"而是采用事务方式\",{\"1\":{\"122\":1}}],[\"而且对象一定属于某个类\",{\"1\":{\"3073\":1}}],[\"而且可以进行交集\",{\"1\":{\"3060\":1}}],[\"而且此时其实\",{\"1\":{\"2792\":1}}],[\"而且风险还比较高\",{\"1\":{\"2606\":1}}],[\"而且go\",{\"1\":{\"2332\":1}}],[\"而且他的web项目让我受益匪浅⭐\",{\"1\":{\"1586\":1}}],[\"而且在\",{\"1\":{\"1530\":1}}],[\"而且一般输入的网址是一串由点分隔的字符串\",{\"1\":{\"1259\":1}}],[\"而且\",{\"1\":{\"381\":1,\"2394\":1}}],[\"而且客户端有重试机制\",{\"1\":{\"339\":1}}],[\"而且年龄是\",{\"1\":{\"272\":1}}],[\"而且并不会自动提交\",{\"1\":{\"175\":1}}],[\"而且弊大于利\",{\"1\":{\"74\":1}}],[\"而两阶段提交就是让这两个状态保持逻辑上的一致\",{\"1\":{\"139\":1}}],[\"而优化器的作用就是决定选择使用哪一个方案\",{\"1\":{\"86\":1}}],[\"这与你的部署域名有关系\",{\"1\":{\"3436\":1}}],[\"这与第二条目的目标地址\",{\"1\":{\"1373\":1}}],[\"这可能涉及到网络协议\",{\"1\":{\"3275\":1}}],[\"这整个过程可以抽象成一个购物订单\",{\"1\":{\"3271\":1}}],[\"这句话\",{\"1\":{\"3119\":1}}],[\"这其中的一种做法就是让一个类从另一个类那里将属性和方法直接继承下来\",{\"1\":{\"3095\":1}}],[\"这其中前两部分起始行和头部字段经常又合称为\",{\"1\":{\"1529\":1}}],[\"这段程序编译后成为为一个可执行文件\",{\"1\":{\"2824\":1}}],[\"这段空间对应到虚拟地址空间的栈\",{\"1\":{\"2267\":1}}],[\"这前面一部分就是为了去确定程序入口参数和\",{\"1\":{\"2752\":1}}],[\"这三个文件你都可以看到相类似的入口代码\",{\"1\":{\"2742\":1}}],[\"这三个部分通常使用空格\",{\"1\":{\"1542\":1}}],[\"这和并行垃圾回收是不同的\",{\"1\":{\"2718\":1}}],[\"这得根据场景进行选择\",{\"1\":{\"2715\":1}}],[\"这次拷贝\",{\"1\":{\"2254\":1}}],[\"这四种的判断断言的方式可以分成两种\",{\"1\":{\"2086\":1}}],[\"这也为什么是近似的原因\",{\"1\":{\"2618\":1}}],[\"这也是称闭包为有状态的函数的原因\",{\"1\":{\"2116\":1}}],[\"这也是为什么\",{\"1\":{\"1992\":1,\"2343\":1}}],[\"这也就验证了\",{\"1\":{\"1642\":1}}],[\"这对于存储来说是极大的浪费\",{\"1\":{\"1745\":1}}],[\"这被称为\",{\"1\":{\"1739\":1}}],[\"这表示默认网关\",{\"1\":{\"1318\":1}}],[\"这期间都发生了什么\",{\"0\":{\"1246\":1}}],[\"这意味着客户端期望的下一个报文的序列号是\",{\"1\":{\"1035\":1}}],[\"这意味着下次发送数据的时候\",{\"1\":{\"1034\":1}}],[\"这些功能单元模块可以部署在不同的机器上\",{\"1\":{\"3261\":1}}],[\"这些方法就是对象可以接收的消息\",{\"1\":{\"3076\":1}}],[\"这些界限可能不是很准确\",{\"1\":{\"2795\":1}}],[\"这些都属于\",{\"1\":{\"2698\":1}}],[\"这些机器指令对应到虚拟地址空间中\",{\"1\":{\"2264\":1}}],[\"这些捕获变量就是它的捕获列表\",{\"1\":{\"2115\":1}}],[\"这些类型元数据共同构成了\",{\"1\":{\"2004\":1}}],[\"这些类型描述信息就是类型元数据\",{\"1\":{\"1993\":1}}],[\"这些常规桶和溢出桶在内存中是连续的\",{\"1\":{\"1838\":1}}],[\"这些操作基本上通过常量时间键的比较来完成\",{\"1\":{\"1796\":1}}],[\"这些键值对实际上是通过哈希表来存储的\",{\"1\":{\"1792\":1}}],[\"这些报文\",{\"1\":{\"909\":1}}],[\"这些问题好像不是很严重\",{\"1\":{\"480\":1}}],[\"这主要是为了避免前后两个使用相同四元组的连接中的前一个连接的报文干扰后一个连接\",{\"1\":{\"864\":1}}],[\"这是默认模式\",{\"1\":{\"3150\":1,\"3152\":1}}],[\"这是面向对象编程中一个常见的行为\",{\"1\":{\"3095\":1}}],[\"这是大部分人的命名规定\",{\"1\":{\"3081\":1}}],[\"这是linux中该命令的模拟实现\",{\"1\":{\"2893\":1}}],[\"这是\",{\"1\":{\"2795\":1}}],[\"这是普通\",{\"1\":{\"2748\":1}}],[\"这是数据的可达性\",{\"1\":{\"2616\":1}}],[\"这是临时变量的地址\",{\"1\":{\"2244\":1}}],[\"这是因为编译器替我们做了处理\",{\"1\":{\"2193\":1}}],[\"这是一种借贷偿还的机制\",{\"1\":{\"2583\":1}}],[\"这是一种语法糖\",{\"1\":{\"2160\":1}}],[\"这是一问题\",{\"1\":{\"2123\":1}}],[\"这是一个常见的面试题目\",{\"1\":{\"1489\":1}}],[\"这是一个时间复杂度是\",{\"1\":{\"384\":1}}],[\"这是无法接受的\",{\"1\":{\"1745\":1}}],[\"这是主要原因\",{\"1\":{\"444\":1}}],[\"这是业务有损的\",{\"1\":{\"387\":1}}],[\"这是业务无损的\",{\"1\":{\"387\":1}}],[\"这类不支持事务的引擎\",{\"1\":{\"347\":1}}],[\"这类不会再修改的数据\",{\"1\":{\"203\":1}}],[\"这种模式是客户端和服务端都可以向对方发送数据流\",{\"1\":{\"3337\":1}}],[\"这种模式是客户端源源不断的向服务端发送数据流\",{\"1\":{\"3335\":1}}],[\"这种模式是客户端发起一次请求\",{\"1\":{\"3333\":1}}],[\"这种做法符合直觉\",{\"1\":{\"2745\":1}}],[\"这种方式不仅不用创建\",{\"1\":{\"2455\":1}}],[\"这种方式被称为\",{\"1\":{\"2455\":1}}],[\"这种方式比较激烈\",{\"1\":{\"989\":1}}],[\"这种方法调用转换成\",{\"1\":{\"2180\":1}}],[\"这种断言就是判断\",{\"1\":{\"2059\":1,\"2076\":1}}],[\"这种类型断言就是判断\",{\"1\":{\"2041\":1,\"2048\":1}}],[\"这种情况下\",{\"1\":{\"1861\":1}}],[\"这种检测非常耗时\",{\"1\":{\"611\":1}}],[\"这种数据结构特点\",{\"1\":{\"485\":1}}],[\"这种支持行锁的引擎\",{\"1\":{\"321\":1}}],[\"这种存储方式的表称为索引组织表\",{\"1\":{\"208\":1}}],[\"这棵\",{\"1\":{\"217\":1}}],[\"这样对外发布动态链接库就不需要把源码给到对方进行编译了\",{\"1\":{\"2891\":1}}],[\"这样一共有\",{\"1\":{\"2524\":1}}],[\"这样左右拷贝\",{\"1\":{\"2394\":1}}],[\"这样可以避免频繁的堆分配与回收\",{\"1\":{\"2364\":1}}],[\"这样无论函数对参数做怎么样的修改\",{\"1\":{\"2216\":1}}],[\"这样\",{\"1\":{\"2189\":1,\"2193\":1}}],[\"这样是拿不到字面量的地址的\",{\"1\":{\"2183\":1}}],[\"这样即便脱离了捕捉时的上下文\",{\"1\":{\"2109\":1}}],[\"这样子的目的就是避免再遇到同种类型断言时重复检查方法列表的操作\",{\"1\":{\"2067\":1}}],[\"这样的逻辑对于函数\",{\"1\":{\"2453\":1}}],[\"这样的方式有以下几个优点\",{\"1\":{\"2448\":1}}],[\"这样的变量被称为\",{\"1\":{\"2193\":1}}],[\"这样的变量就被称为\",{\"1\":{\"2189\":1}}],[\"这样的函数调用\",{\"1\":{\"2168\":1}}],[\"这样的时间复杂度就是o\",{\"1\":{\"1795\":1}}],[\"这样的语句\",{\"1\":{\"346\":1}}],[\"这样会更容易实现\",{\"1\":{\"2722\":1}}],[\"这样会消耗掉大量的内存\",{\"1\":{\"1644\":1}}],[\"这样会导致整个库长时间处于不可写状态\",{\"1\":{\"314\":1}}],[\"这样才不会引起网络拥塞\",{\"1\":{\"923\":1}}],[\"这样事务之间就完全不可能产生干扰\",{\"1\":{\"575\":1}}],[\"这样就很好理解上面这段示例程序的输出结果了\",{\"1\":{\"2196\":1}}],[\"这样就得到了\",{\"1\":{\"1755\":1}}],[\"这样就可以根据域名得不同组成逐一精确找到对应得ip\",{\"1\":{\"1270\":1}}],[\"这样就可以快速定位到\",{\"1\":{\"261\":1}}],[\"这样就能降低树的高度\",{\"1\":{\"485\":1}}],[\"这样每次冲突概率变成原来的\",{\"1\":{\"389\":1}}],[\"这样每次要给影院账户加金额的时候\",{\"1\":{\"389\":1}}],[\"这样如果你要查\",{\"1\":{\"205\":1}}],[\"这样也省去了再次执行\",{\"1\":{\"179\":1}}],[\"这里需要设置\",{\"1\":{\"3429\":1}}],[\"这里需要考虑的原则就是空间问题\",{\"1\":{\"269\":1}}],[\"这里设置为\",{\"1\":{\"3413\":1,\"3428\":1}}],[\"这里总之一句话\",{\"1\":{\"3389\":1}}],[\"这里是浏览器环境\",{\"1\":{\"3388\":1}}],[\"这里是语法糖\",{\"1\":{\"2180\":1}}],[\"这里然后继续执行\",{\"1\":{\"2940\":1}}],[\"这里会正常执行输出\",{\"1\":{\"2928\":1,\"2949\":1}}],[\"这里会根据\",{\"1\":{\"2918\":1}}],[\"这里不会被执行\",{\"1\":{\"2904\":1,\"2928\":1,\"2949\":1}}],[\"这里记录着所有空闲的\",{\"1\":{\"2839\":1}}],[\"这里获取待执行的\",{\"1\":{\"2838\":1}}],[\"这里阻塞\",{\"1\":{\"2804\":1}}],[\"这里就不多去解释\",{\"1\":{\"2784\":1}}],[\"这里就为nil\",{\"1\":{\"1659\":1}}],[\"这里做一些校验和系统级的初始化工作\",{\"1\":{\"2758\":1}}],[\"这里解决方法也有一个问题\",{\"1\":{\"2681\":1}}],[\"这里有点不一样的地方\",{\"1\":{\"2906\":1}}],[\"这里有一个问题\",{\"1\":{\"2676\":1}}],[\"这里有两种方式比较常用\",{\"1\":{\"1800\":1}}],[\"这里压缩目的与清扫一直都是回收垃圾\",{\"1\":{\"2638\":1}}],[\"这里又判断到\",{\"1\":{\"2389\":1}}],[\"这里捕获变量\",{\"1\":{\"2372\":1}}],[\"这里没有参数与返回值所以为\",{\"1\":{\"2342\":1}}],[\"这里因为参数是指针类型\",{\"1\":{\"2301\":1}}],[\"这里传参依旧是值拷贝\",{\"1\":{\"2254\":1}}],[\"这里输出\",{\"1\":{\"2195\":2}}],[\"这里使用的是值接收者\",{\"1\":{\"2184\":1}}],[\"这里函数调用了两次所以是两个\",{\"1\":{\"2172\":1}}],[\"这里判断方式比较简单\",{\"1\":{\"2049\":1}}],[\"这里定了一个空接口类型\",{\"1\":{\"1892\":1}}],[\"这里引入了溢出桶\",{\"1\":{\"1838\":1}}],[\"这里并不叫请求行\",{\"1\":{\"1548\":1}}],[\"这里要说明下\",{\"1\":{\"1033\":1}}],[\"这里写图片描述\",{\"1\":{\"846\":1}}],[\"这里\",{\"1\":{\"206\":1,\"2355\":1}}],[\"这里我们假设身份证号没有重复\",{\"1\":{\"199\":1}}],[\"这里的初始化也是有一定顺序规则的\",{\"1\":{\"2788\":1}}],[\"这里的局部变量\",{\"1\":{\"2365\":1}}],[\"这里的局部变量b改成命名返回值\",{\"1\":{\"2319\":1}}],[\"这里的\",{\"1\":{\"125\":1,\"2066\":1,\"2091\":1,\"2941\":1}}],[\"这时再回头去看wireshark\",{\"1\":{\"1485\":1}}],[\"这时对应的哈希索引的示意图如下所示\",{\"1\":{\"190\":1}}],[\"这时候全表扫描和索引查询时间差不多的\",{\"1\":{\"459\":1}}],[\"这时候会对表\",{\"1\":{\"335\":1}}],[\"这时候需要申请一个新的数据页\",{\"1\":{\"222\":1}}],[\"这时候事务b虽然还没有提交\",{\"1\":{\"155\":1}}],[\"这时候\",{\"1\":{\"134\":1,\"564\":1,\"566\":1}}],[\"这就给\",{\"1\":{\"1560\":1}}],[\"这就是一个完整的类\",{\"1\":{\"3100\":1}}],[\"这就是增量式垃圾回收\",{\"1\":{\"2680\":1}}],[\"这就是他失败的原因\",{\"1\":{\"2299\":1}}],[\"这就是返回地址\",{\"1\":{\"2279\":1}}],[\"这就是内存对齐\",{\"1\":{\"1933\":1}}],[\"这就是map使用的桶的内存布局\",{\"1\":{\"1836\":1}}],[\"这就是哈希冲突\",{\"1\":{\"1811\":1}}],[\"这就是第七个包\",{\"1\":{\"1502\":1}}],[\"这就是\",{\"1\":{\"1501\":1}}],[\"这就是所谓的\",{\"1\":{\"2606\":1}}],[\"这就是所谓的javascript编译\",{\"1\":{\"1421\":1}}],[\"这就是所谓的流量控制\",{\"1\":{\"1026\":1}}],[\"这就是糊涂窗口综合症\",{\"1\":{\"949\":1}}],[\"这就会导致出现过大的维护代价\",{\"1\":{\"256\":1}}],[\"这就会导致大量占用存储空间\",{\"1\":{\"171\":1}}],[\"这就导致接下来的查询都在事务中\",{\"1\":{\"176\":1}}],[\"这一篇算得上是\",{\"1\":{\"2726\":1}}],[\"这一次的\",{\"1\":{\"2421\":1}}],[\"这一项同时把之前所有内容的发生的数据做个摘要\",{\"1\":{\"1234\":1,\"1238\":1}}],[\"这一条记录到\",{\"1\":{\"616\":1}}],[\"这一行里\",{\"1\":{\"1559\":1}}],[\"这一行的\",{\"1\":{\"637\":1,\"646\":1}}],[\"这一行所在的数据页本来就在内存中\",{\"1\":{\"117\":1}}],[\"这一行\",{\"1\":{\"117\":1}}],[\"这一个过程的\",{\"1\":{\"100\":1}}],[\"这两者是等价的\",{\"1\":{\"2162\":1}}],[\"这两个配置参数怎么样配置会更好\",{\"0\":{\"657\":1}}],[\"这两个性质决定了\",{\"1\":{\"488\":1}}],[\"这两个过程的区别是\",{\"1\":{\"282\":1}}],[\"这两个索引\",{\"1\":{\"268\":1}}],[\"这两个日志在更新语句的流程中会怎样进行提交呢\",{\"1\":{\"115\":1}}],[\"这两种索引\",{\"1\":{\"266\":1}}],[\"这两种日志有以下三点不同\",{\"1\":{\"110\":1}}],[\"这两种执行方法的逻辑结果是一样的\",{\"1\":{\"86\":1}}],[\"这个才是控制行尾部分号的\",{\"1\":{\"3388\":1}}],[\"这个就是多态\",{\"1\":{\"3098\":1}}],[\"这个动作称之为方法重写\",{\"1\":{\"3098\":1}}],[\"这个方法就表现出了多态行为\",{\"1\":{\"3101\":1}}],[\"这个方法是属于类而并不属于某一个对象的\",{\"1\":{\"3089\":1}}],[\"这个方法变量\",{\"1\":{\"2196\":1}}],[\"这个\",{\"1\":{\"2838\":1}}],[\"这个子程序\",{\"1\":{\"2744\":1}}],[\"这个被称之为\",{\"1\":{\"2701\":1}}],[\"这个数据很少\",{\"1\":{\"2618\":1}}],[\"这个数组记录的是\",{\"1\":{\"1906\":1}}],[\"这个数组就是按照身份证号递增的顺序保存的\",{\"1\":{\"199\":1}}],[\"这个例子中\",{\"1\":{\"2371\":1}}],[\"这个暂时不知道\",{\"1\":{\"2259\":1}}],[\"这个返回值会被赋值给局部变量\",{\"1\":{\"2242\":1}}],[\"这个函数会阻塞\",{\"1\":{\"2795\":1}}],[\"这个函数的调用过程中\",{\"1\":{\"2772\":1}}],[\"这个函数去拿到\",{\"1\":{\"2207\":1}}],[\"这个函数\",{\"1\":{\"2190\":1}}],[\"这个函数使用方法\",{\"1\":{\"2189\":1}}],[\"这个函数引用了\",{\"1\":{\"2112\":1}}],[\"这个局部变量会被改为堆分配\",{\"1\":{\"2136\":1}}],[\"这个自由变量\",{\"1\":{\"2114\":1}}],[\"这个地址应该就是函数入口了\",{\"1\":{\"2100\":1}}],[\"这个组合会对应下面这个\",{\"1\":{\"2072\":1}}],[\"这个组合对应的\",{\"1\":{\"2049\":1}}],[\"这个与平台上的编译器有关\",{\"1\":{\"1945\":1}}],[\"这个哈希表可与我们使用的\",{\"1\":{\"1915\":1}}],[\"这个类型实现的\",{\"1\":{\"1906\":1}}],[\"这个依据叫做负载因子\",{\"1\":{\"1826\":1}}],[\"这个编码问题没有解决\",{\"1\":{\"1746\":1}}],[\"这个字段是接收端告诉发送端自己还有多少缓冲区可以接收数据\",{\"1\":{\"929\":1}}],[\"这个概率实在是太小了\",{\"1\":{\"879\":1}}],[\"这个fin报文要从网络中消失最多还需要一个msl时长\",{\"1\":{\"874\":1}}],[\"这个能力成为\",{\"1\":{\"615\":1}}],[\"这个能力称为\",{\"1\":{\"105\":1}}],[\"这个并发控制要做在数据库服务端\",{\"1\":{\"388\":1}}],[\"这个等待时间往往是无法接受的\",{\"1\":{\"378\":1}}],[\"这个超时时间可以通过参数\",{\"1\":{\"376\":1}}],[\"这个业务需要涉及到以下操作\",{\"1\":{\"363\":1}}],[\"这个库的连接池爆满\",{\"1\":{\"339\":1}}],[\"这个视图是逻辑不一致的\",{\"1\":{\"305\":1}}],[\"这个联合索引\",{\"1\":{\"268\":1}}],[\"这个联合索引就有意义了\",{\"1\":{\"253\":1}}],[\"这个最左前缀可以是联合索引的最左\",{\"1\":{\"263\":1}}],[\"这个过程中有很多细节需要细细思考\",{\"1\":{\"3283\":1}}],[\"这个过程中数据是可以正常更新的\",{\"1\":{\"308\":1}}],[\"这个过程可能会有windows防火墙的警告\",{\"1\":{\"1477\":1}}],[\"这个过程我们称之为覆盖索引\",{\"1\":{\"519\":1}}],[\"这个过程我们称之为回表\",{\"1\":{\"517\":1}}],[\"这个过程称为页分裂\",{\"1\":{\"222\":1}}],[\"这个过程称为回表\",{\"1\":{\"218\":1}}],[\"这个过程不需要重连和重新做权限验证\",{\"1\":{\"72\":1}}],[\"这个路径得到\",{\"1\":{\"205\":1}}],[\"这个事务持续存在直到你主动执行\",{\"1\":{\"175\":1}}],[\"这个事务就启动了\",{\"1\":{\"175\":1}}],[\"这个命令会将这个线程的自动提交关掉\",{\"1\":{\"175\":1}}],[\"这个发生的概率是不是低了点\",{\"1\":{\"137\":1}}],[\"这个日志\",{\"1\":{\"135\":1}}],[\"这个临时库就会少了这一次更新\",{\"1\":{\"134\":1}}],[\"这个语句就执行完成了\",{\"1\":{\"93\":1}}],[\"这个时候双方的数据可以同时互相发送\",{\"1\":{\"3337\":1}}],[\"这个时候会根据路由表规则\",{\"1\":{\"1311\":1}}],[\"这个时候系统崩溃了\",{\"1\":{\"676\":1}}],[\"这个时候如果\",{\"1\":{\"674\":1}}],[\"这个时候\",{\"1\":{\"374\":1}}],[\"这个时候你要使用\",{\"1\":{\"68\":1}}],[\"这个时间复杂度是\",{\"1\":{\"205\":1}}],[\"这个时间由参数\",{\"1\":{\"67\":1}}],[\"这个连接里面的权限判断逻辑\",{\"1\":{\"66\":1}}],[\"也有设置上下文操作得\",{\"1\":{\"3415\":1}}],[\"也有可能发生错误\",{\"1\":{\"3103\":1}}],[\"也有可能是平台不支持\",{\"1\":{\"2270\":1}}],[\"也叫派生类或衍生类\",{\"1\":{\"3095\":1}}],[\"也叫超类或基类\",{\"1\":{\"3095\":1}}],[\"也叫machine\",{\"1\":{\"1927\":1}}],[\"也支持使用可变参数\",{\"1\":{\"3027\":1}}],[\"也支持了全文索引\",{\"1\":{\"512\":1}}],[\"也记录着\",{\"1\":{\"2831\":1}}],[\"也需要先清扫这个\",{\"1\":{\"2589\":1}}],[\"也需要去堆上获取与释放\",{\"1\":{\"2394\":1}}],[\"也脱离了\",{\"1\":{\"2455\":1}}],[\"也适用\",{\"1\":{\"2453\":1}}],[\"也知道闭包只是有捕获列表\",{\"1\":{\"2186\":1}}],[\"也相当于执行\",{\"1\":{\"2180\":1}}],[\"也要包括自由变量\",{\"1\":{\"2109\":1}}],[\"也要进一步确认\",{\"1\":{\"2063\":1,\"2079\":1}}],[\"也要修改每一行记录中的对应列的数据\",{\"1\":{\"331\":1}}],[\"也会从\",{\"1\":{\"2934\":1,\"2952\":1}}],[\"也会是\",{\"1\":{\"2321\":1}}],[\"也会自增加一\",{\"1\":{\"2321\":1}}],[\"也会触发扩容\",{\"1\":{\"1854\":1}}],[\"也会导致回滚段不能回收长时间被占用空间\",{\"1\":{\"341\":1}}],[\"也是通过\",{\"1\":{\"2941\":1}}],[\"也是应该尽量避免的\",{\"1\":{\"2716\":1}}],[\"也是就终于找到\",{\"1\":{\"1379\":1}}],[\"也是向后推移\",{\"1\":{\"624\":1}}],[\"也称为二层网络设备\",{\"1\":{\"1344\":1}}],[\"也即再次进入拥塞避免状态\",{\"1\":{\"1002\":1}}],[\"也向客户端发送fin报文之后服务端进入last\",{\"1\":{\"852\":1,\"1396\":1}}],[\"也无法可靠的同步双方序列号\",{\"1\":{\"838\":1}}],[\"也进入established状态\",{\"1\":{\"798\":1}}],[\"也不是从\",{\"1\":{\"2771\":1}}],[\"也不能间接调用\",{\"1\":{\"2960\":1}}],[\"也不能拷贝值\",{\"1\":{\"2216\":1}}],[\"也不能保证一定能被接收到哦\",{\"1\":{\"1176\":1}}],[\"也不能保证网络包中的数据完整性\",{\"1\":{\"755\":1}}],[\"也不行\",{\"1\":{\"2215\":1}}],[\"也不会触发叶子节点的分裂\",{\"1\":{\"227\":1}}],[\"也能够把数据恢复起来\",{\"1\":{\"674\":1}}],[\"也访问了数据\",{\"1\":{\"564\":1}}],[\"也就意味着两个函数同名函数实际上只有一个是存在的\",{\"1\":{\"3030\":1}}],[\"也就不用刷那些重复的defer面试题了\",{\"1\":{\"2390\":1}}],[\"也就等价于执行\",{\"1\":{\"2180\":1}}],[\"也就增大至了\",{\"1\":{\"1042\":1}}],[\"也就指向\",{\"1\":{\"1035\":1,\"1037\":1}}],[\"也就因为\",{\"1\":{\"897\":1}}],[\"也就减少了死锁检测的\",{\"1\":{\"389\":1}}],[\"也就是只有在\",{\"1\":{\"3413\":1,\"3428\":1}}],[\"也就是类似if\",{\"1\":{\"3388\":1}}],[\"也就是可以实现实时交互\",{\"1\":{\"3337\":1}}],[\"也就是公开的和私有的\",{\"1\":{\"3080\":1}}],[\"也就是根据链表项插入顺序逐一输出\",{\"1\":{\"2922\":1}}],[\"也就是runtime\",{\"1\":{\"2761\":1}}],[\"也就是垃圾回收程序与用户程序完成并发执行\",{\"1\":{\"2721\":1}}],[\"也就是被注册的defer函数\",{\"1\":{\"2350\":1,\"2362\":1,\"2373\":1,\"2420\":1}}],[\"也就是在函数开始执行时候分配足够大的栈帧空间\",{\"1\":{\"2288\":1}}],[\"也就是在事务开始执行后为涉及到的行按照需要加锁\",{\"1\":{\"360\":1}}],[\"也就是局部变量\",{\"1\":{\"2174\":1}}],[\"也就是全1\",{\"1\":{\"1866\":1}}],[\"也就是请求头或响应头空行后面数据的长度\",{\"1\":{\"1572\":1}}],[\"也就是确认包\",{\"1\":{\"1499\":1}}],[\"也就是\",{\"1\":{\"1472\":1,\"1498\":1,\"1530\":1,\"2176\":1}}],[\"也就是hypertext\",{\"1\":{\"1064\":1}}],[\"也就是指向了\",{\"1\":{\"1041\":1}}],[\"也就是设置为原来的一半\",{\"1\":{\"995\":1}}],[\"也就是包的往返时间\",{\"1\":{\"891\":1}}],[\"也就是我们常说的超时重传\",{\"1\":{\"885\":1}}],[\"也就是尽量保证被动关闭的一端收到它自己发出去的fin报文的ack确认报文\",{\"1\":{\"862\":1}}],[\"也就是⼀对多是无法做到的\",{\"1\":{\"735\":1}}],[\"也就是死锁\",{\"1\":{\"382\":1}}],[\"也就是把每个表都查询处理\",{\"1\":{\"294\":1}}],[\"也就是说超时后会再起一个新\",{\"1\":{\"339\":1}}],[\"也就是说\",{\"1\":{\"74\":1,\"1175\":1,\"1332\":1,\"1568\":1,\"2614\":1,\"3166\":1,\"3168\":1}}],[\"也被锁住了呢\",{\"1\":{\"337\":1}}],[\"也可添加\",{\"1\":{\"3388\":1}}],[\"也可能拖垮整个库\",{\"1\":{\"171\":1}}],[\"也可以完成对象实例的工作\",{\"1\":{\"3092\":1}}],[\"也可以通过给类发消息来调用对象方法但是要传入接收消息的对象作为参数\",{\"1\":{\"3090\":1}}],[\"也可以自定义\",{\"1\":{\"2891\":1}}],[\"也可以根据对象地址计算出它在哪一页\",{\"1\":{\"2544\":1}}],[\"也可以作为函数返回值\",{\"1\":{\"2097\":1}}],[\"也可以达到合理处理好共享内存的问题\",{\"1\":{\"1651\":1}}],[\"也可以写成\",{\"1\":{\"1562\":1}}],[\"也可以任意添加自定义头\",{\"1\":{\"1560\":1}}],[\"也可以进一步解决\",{\"1\":{\"388\":1}}],[\"也可以在客户端断开的时候自动释放\",{\"1\":{\"317\":1}}],[\"也可以是链表\",{\"1\":{\"1795\":1}}],[\"也可以是字符串索引的最左\",{\"1\":{\"263\":1,\"287\":1,\"526\":1}}],[\"也可以是一周一备\",{\"1\":{\"125\":1}}],[\"也可以先从表t2里面取出d=20的记录的id值\",{\"1\":{\"85\":1}}],[\"再从中获取\",{\"1\":{\"2793\":1}}],[\"再分配使用\",{\"1\":{\"2589\":1}}],[\"再新分配的对象就是白色的了\",{\"1\":{\"2505\":1}}],[\"再配合之前介绍过的function\",{\"1\":{\"2390\":1}}],[\"再放回空闲\",{\"1\":{\"2364\":1}}],[\"再进行堆分配\",{\"1\":{\"2364\":1}}],[\"再进行回表查询\",{\"1\":{\"289\":1}}],[\"再看下一个例子\",{\"1\":{\"2319\":1}}],[\"再下面分配的就是\",{\"1\":{\"2298\":1}}],[\"再调用的的\",{\"1\":{\"2257\":1}}],[\"再调用引擎接口写入这行新数据\",{\"1\":{\"118\":1}}],[\"再往前看\",{\"1\":{\"2241\":1}}],[\"再把这个临时变量的地址传递给函数使用\",{\"1\":{\"2216\":1}}],[\"再去修改值呢\",{\"1\":{\"2258\":1}}],[\"再去检查动态类型的方法列表进行一对一的比较\",{\"1\":{\"2064\":1,\"2080\":1}}],[\"再去做刚才的类型断言\",{\"1\":{\"2055\":1}}],[\"再拼成符合\",{\"1\":{\"1501\":1}}],[\"再按下回车键\",{\"1\":{\"1491\":1}}],[\"再安装wireshark\",{\"1\":{\"1464\":1}}],[\"再由相应的端口作为发送方将以太网包发送出去\",{\"1\":{\"1358\":1}}],[\"再与第二条目的子网掩码进行\",{\"1\":{\"1316\":1}}],[\"再次发生了\",{\"1\":{\"2916\":1,\"2951\":1}}],[\"再次检验类型的内存大小\",{\"1\":{\"2777\":1}}],[\"再次调用引擎接口写入这行数据\",{\"1\":{\"663\":1}}],[\"再次访问表里数据\",{\"1\":{\"566\":1}}],[\"再次访问数据\",{\"1\":{\"564\":1}}],[\"再次访问记录的数据页\",{\"1\":{\"545\":1}}],[\"再通过重试命令重复这个过程\",{\"1\":{\"342\":1}}],[\"再请求的话\",{\"1\":{\"339\":1}}],[\"再对比字段值\",{\"1\":{\"278\":1}}],[\"再建立一个\",{\"1\":{\"269\":1}}],[\"再到调度器这里全局\",{\"1\":{\"2842\":1}}],[\"再到\",{\"1\":{\"218\":1}}],[\"再假设执行\",{\"1\":{\"133\":1}}],[\"再判断t1里面c的值是否等于10\",{\"1\":{\"85\":1}}],[\"再判断t2里面d的值是否等于20\",{\"1\":{\"84\":1}}],[\"再根据id值关联到t1\",{\"1\":{\"85\":1}}],[\"再根据id值关联到表t2\",{\"1\":{\"84\":1}}],[\"决定了如何解析该类型\",{\"1\":{\"2008\":1}}],[\"决定各个表的连接顺序\",{\"1\":{\"81\":1}}],[\"决定使用哪个索引\",{\"1\":{\"81\":1}}],[\"后台\",{\"1\":{\"2494\":1,\"2496\":1}}],[\"后的字段值前可以有多个空格\",{\"1\":{\"1564\":1}}],[\"后者是\",{\"1\":{\"1203\":1}}],[\"后指向\",{\"1\":{\"1042\":1}}],[\"后\",{\"1\":{\"1001\":1,\"2905\":1}}],[\"后写\",{\"1\":{\"673\":1,\"675\":1}}],[\"后续都是用变量\",{\"1\":{\"3300\":1}}],[\"后续\",{\"0\":{\"2962\":1}}],[\"后续对该数据的访问就会出错\",{\"1\":{\"2606\":1}}],[\"后续会进行详细解答\",{\"1\":{\"2853\":1}}],[\"后续会逐渐学习操作系统\",{\"1\":{\"2812\":1}}],[\"后续会有介绍\",{\"1\":{\"1900\":1}}],[\"后续会利用这个环境进行分析每个包的内容\",{\"1\":{\"1487\":1}}],[\"后续会列出一系列的\",{\"1\":{\"8\":1}}],[\"后续的信息都将用会话密钥加密通信\",{\"1\":{\"1237\":1}}],[\"后续的操作都是无效的\",{\"1\":{\"562\":1}}],[\"后面和\",{\"1\":{\"3388\":1}}],[\"后面的\",{\"1\":{\"3388\":1}}],[\"后面的用作溢出桶\",{\"1\":{\"1838\":1}}],[\"后面\",{\"1\":{\"3388\":1}}],[\"后面调用方式不变\",{\"1\":{\"3238\":1}}],[\"后面还可以写\",{\"1\":{\"3117\":1}}],[\"后面可以写可选的\",{\"1\":{\"3114\":1}}],[\"后面会讲到\",{\"1\":{\"2977\":1}}],[\"后面就是\",{\"1\":{\"2298\":1}}],[\"后面就不能用索引\",{\"1\":{\"533\":1}}],[\"后面两位都是0\",{\"1\":{\"1805\":1}}],[\"后面字节的前两位一律设为10\",{\"1\":{\"1752\":1}}],[\"后面7位为这个符号的\",{\"1\":{\"1751\":1}}],[\"后面推出了gb2312\",{\"1\":{\"1741\":1}}],[\"后面一大段都是双方处于保持连接状态里面\",{\"1\":{\"1509\":1}}],[\"后面用于生产会话密钥\",{\"1\":{\"1225\":1}}],[\"后面用于会话密钥\",{\"1\":{\"1220\":1}}],[\"后面用\",{\"1\":{\"676\":1}}],[\"后面恢复的数据由于\",{\"1\":{\"676\":1}}],[\"后面在进行\",{\"1\":{\"543\":1}}],[\"后面都会被锁住\",{\"1\":{\"338\":1}}],[\"后面所有的增删改查的操作都会申请\",{\"1\":{\"338\":1}}],[\"后面地内容\",{\"1\":{\"79\":1}}],[\"后访问的事务必须等前一个事务执行完成\",{\"1\":{\"151\":1}}],[\"nickname\",{\"1\":{\"3099\":5}}],[\"nil\",{\"1\":{\"2052\":2,\"2082\":1,\"2208\":2,\"2222\":2,\"2234\":1,\"2239\":1,\"2260\":1,\"2362\":2,\"2373\":2,\"2783\":1,\"2789\":1,\"2793\":2,\"2795\":1,\"3286\":2,\"3287\":1,\"3295\":3,\"3297\":1,\"3311\":1,\"3325\":3,\"3327\":2,\"3341\":2,\"3342\":6}}],[\"npm\",{\"1\":{\"3383\":1,\"3428\":1}}],[\"npidle\",{\"1\":{\"2872\":1}}],[\"npcap\",{\"1\":{\"1464\":1}}],[\"nm\",{\"1\":{\"2893\":1}}],[\"nmfreed\",{\"1\":{\"2872\":1}}],[\"nmidlelocked\",{\"1\":{\"2872\":1}}],[\"nmidle\",{\"1\":{\"2872\":1}}],[\"ncgo\",{\"1\":{\"2862\":1}}],[\"ncpu\",{\"1\":{\"2786\":1,\"2789\":1}}],[\"ngsys\",{\"1\":{\"2793\":1,\"2872\":1}}],[\"ntel\",{\"1\":{\"2753\":1}}],[\"nstackroots\",{\"1\":{\"2480\":1}}],[\"nspanroots\",{\"1\":{\"2480\":1}}],[\"nbssroots\",{\"1\":{\"2480\":1}}],[\"ndataroots\",{\"1\":{\"2480\":1}}],[\"nflushcacheroots\",{\"1\":{\"2480\":1}}],[\"n++\",{\"1\":{\"2418\":1,\"2783\":2}}],[\"n+1\",{\"1\":{\"118\":1}}],[\"num=num+1\",{\"1\":{\"3256\":1}}],[\"num<10\",{\"1\":{\"3256\":1}}],[\"num\",{\"1\":{\"3026\":2,\"3062\":4,\"3069\":3,\"3256\":2}}],[\"numfield\",{\"1\":{\"2206\":1}}],[\"numout\",{\"1\":{\"2206\":1}}],[\"numin\",{\"1\":{\"2206\":1}}],[\"nummethod\",{\"1\":{\"2206\":1,\"2260\":1}}],[\"numbers\",{\"1\":{\"3388\":1}}],[\"number\",{\"1\":{\"1916\":1,\"2480\":1,\"2748\":1,\"3023\":3,\"3176\":7,\"3388\":1}}],[\"null允许null和undefined==\",{\"1\":{\"3388\":1}}],[\"null\",{\"1\":{\"226\":1,\"237\":2,\"251\":5,\"509\":1,\"510\":1,\"2783\":3,\"3388\":3}}],[\"nxt\",{\"1\":{\"1034\":1,\"1035\":1,\"1037\":1,\"1040\":1,\"1041\":1}}],[\"nested\",{\"1\":{\"3388\":2}}],[\"negated\",{\"1\":{\"3388\":2}}],[\"never\",{\"1\":{\"3388\":8}}],[\"never参数\",{\"1\":{\"3388\":2}}],[\"nevacuate的旧桶迁移结束后会增加这个编号值\",{\"1\":{\"1852\":1}}],[\"nevacuate为0\",{\"1\":{\"1848\":1}}],[\"nevacuate\",{\"1\":{\"1830\":1,\"1834\":1}}],[\"newiscap\",{\"1\":{\"3388\":1}}],[\"newimg\",{\"1\":{\"1292\":1}}],[\"newcredentials\",{\"1\":{\"3327\":1}}],[\"newcap=5\",{\"1\":{\"1724\":1}}],[\"newcap=cap\",{\"1\":{\"1713\":1}}],[\"newcap\",{\"1\":{\"1717\":5}}],[\"newserver\",{\"1\":{\"3325\":1,\"3342\":1}}],[\"newhelloserviceclient\",{\"1\":{\"3295\":1,\"3297\":1}}],[\"newline\",{\"1\":{\"3136\":1,\"3388\":5}}],[\"newline=none\",{\"1\":{\"3129\":1}}],[\"newgreeterclient\",{\"1\":{\"3327\":1,\"3341\":1}}],[\"newg\",{\"1\":{\"2793\":15}}],[\"newproc1\",{\"1\":{\"2793\":2}}],[\"newproc\",{\"1\":{\"2761\":2,\"2763\":2,\"2769\":1,\"2772\":1,\"2790\":1,\"2793\":2,\"2803\":1}}],[\"new\",{\"1\":{\"2232\":1,\"2253\":1,\"2789\":2,\"2795\":1,\"2891\":1,\"3210\":2,\"3297\":1,\"3309\":1,\"3311\":1,\"3388\":15}}],[\"network\",{\"0\":{\"3458\":1},\"1\":{\"1044\":1}}],[\"net\",{\"1\":{\"805\":1,\"1048\":1,\"1050\":1,\"1292\":1,\"1470\":1,\"2891\":1,\"3255\":1,\"3286\":1,\"3287\":3,\"3295\":1,\"3309\":1,\"3311\":3,\"3325\":1,\"3342\":2}}],[\"nextp\",{\"1\":{\"2795\":2,\"2862\":1}}],[\"nextoverflow继续指向下一个空闲的溢出桶\",{\"1\":{\"1841\":1}}],[\"nextoverflow\",{\"1\":{\"1839\":1,\"1841\":1}}],[\"next\",{\"1\":{\"597\":2,\"2480\":1,\"2885\":1,\"2889\":1,\"3246\":2,\"3247\":1,\"3248\":6,\"3249\":1,\"3250\":1,\"3253\":1,\"3256\":2}}],[\"near\",{\"1\":{\"79\":1}}],[\"n叉\",{\"1\":{\"206\":1}}],[\"n2\",{\"1\":{\"192\":1,\"200\":1,\"205\":1}}],[\"native\",{\"1\":{\"3388\":2}}],[\"nan\",{\"1\":{\"3388\":1}}],[\"nanotime\",{\"1\":{\"2789\":1}}],[\"narg\",{\"1\":{\"2793\":1}}],[\"names\",{\"1\":{\"3388\":2}}],[\"nameerror\",{\"1\":{\"3104\":1,\"3105\":1}}],[\"nameoff\",{\"1\":{\"2008\":1,\"2018\":2}}],[\"name=\",{\"1\":{\"288\":1}}],[\"name\",{\"1\":{\"259\":1,\"262\":1,\"264\":3,\"269\":1,\"272\":1,\"273\":1,\"283\":1,\"288\":1,\"524\":2,\"532\":1,\"1563\":3,\"1900\":1,\"2003\":1,\"2014\":1,\"2018\":1,\"2052\":3,\"2054\":1,\"2082\":3,\"2158\":8,\"2160\":1,\"2161\":1,\"2163\":11,\"2166\":9,\"2167\":1,\"2168\":2,\"2169\":3,\"2172\":9,\"2174\":2,\"2175\":1,\"2178\":7,\"2182\":2,\"2184\":1,\"2188\":3,\"2189\":1,\"2190\":1,\"2193\":1,\"2195\":6,\"2206\":2,\"2210\":1,\"3041\":2,\"3075\":8,\"3078\":1,\"3084\":9,\"3087\":9,\"3090\":1,\"3093\":1,\"3096\":15,\"3099\":1,\"3104\":1,\"3175\":1,\"3176\":1,\"3177\":1,\"3205\":1,\"3238\":2,\"3321\":1,\"3325\":1,\"3327\":1,\"3419\":1,\"3423\":1,\"3428\":8,\"3449\":1}}],[\"name2\",{\"1\":{\"192\":1}}],[\"navicat\",{\"1\":{\"62\":1}}],[\"nodejs\",{\"1\":{\"3394\":4}}],[\"node\",{\"1\":{\"3388\":2,\"3394\":4,\"3428\":5}}],[\"nodes\",{\"1\":{\"1406\":2}}],[\"noescape\",{\"1\":{\"2795\":1}}],[\"nocpuinfo\",{\"1\":{\"2753\":1}}],[\"nosplit|topframe\",{\"1\":{\"2753\":1,\"2755\":1,\"2757\":1,\"2759\":1,\"2761\":1}}],[\"nosplit\",{\"1\":{\"2743\":1,\"2748\":1}}],[\"nosql\",{\"1\":{\"195\":1}}],[\"normal\",{\"1\":{\"2018\":1}}],[\"noverflow\",{\"1\":{\"1834\":1}}],[\"no\",{\"1\":{\"1090\":1,\"2525\":2,\"2528\":1,\"3087\":1,\"3388\":121,\"3428\":1}}],[\"notation\",{\"1\":{\"3388\":1}}],[\"notorand\",{\"1\":{\"3009\":1}}],[\"notintel\",{\"1\":{\"2753\":3,\"2755\":1}}],[\"note\",{\"1\":{\"2239\":1,\"2480\":1,\"2872\":2}}],[\"not\",{\"1\":{\"226\":1,\"237\":2,\"251\":1,\"1111\":1,\"1132\":1,\"1135\":1,\"1141\":1,\"2239\":1,\"2789\":1,\"3005\":1,\"3104\":2,\"3113\":1,\"3205\":2,\"3346\":1}}],[\"now\",{\"1\":{\"181\":1,\"2473\":2,\"3093\":2,\"3342\":1}}],[\"nonwords\",{\"1\":{\"3388\":1}}],[\"none\",{\"1\":{\"3175\":1,\"3256\":1,\"3388\":1}}],[\"none样式的结点\",{\"1\":{\"1428\":1}}],[\"non\",{\"1\":{\"145\":1,\"1087\":1}}],[\"n\",{\"1\":{\"118\":1,\"192\":1,\"205\":2,\"206\":2,\"263\":1,\"287\":1,\"384\":1,\"526\":1,\"656\":2,\"1545\":1,\"1640\":3,\"1687\":3,\"1702\":3,\"1717\":3,\"1752\":1,\"1760\":1,\"1774\":2,\"1795\":1,\"1809\":1,\"2052\":2,\"2082\":1,\"2418\":1,\"2425\":1,\"2454\":2,\"2783\":3,\"2789\":3,\"2864\":1,\"3026\":6,\"3176\":8,\"3256\":2}}],[\"语言和平台差异\",{\"1\":{\"3264\":1}}],[\"语言\",{\"1\":{\"2608\":1,\"2884\":1}}],[\"语言在编译阶段会生成\",{\"1\":{\"2532\":1}}],[\"语言在\",{\"1\":{\"2396\":1}}],[\"语言在设计上保证\",{\"1\":{\"2332\":1}}],[\"语言在接口值上的一个神奇的特性\",{\"1\":{\"2038\":1}}],[\"语言时候相信也会遇到一个问题\",{\"1\":{\"2293\":1}}],[\"语言编译器会在函数头部插入检测代码\",{\"1\":{\"2291\":1}}],[\"语言支持多返回值\",{\"1\":{\"2276\":1,\"2307\":1}}],[\"语言支持为任意类型实现方法\",{\"1\":{\"2156\":1}}],[\"语言实现了对\",{\"1\":{\"2120\":1}}],[\"语言称这样的参数\",{\"1\":{\"2097\":1}}],[\"语言的一些依赖\",{\"1\":{\"3367\":1}}],[\"语言的调度模型里面只有\",{\"1\":{\"2837\":1}}],[\"语言的内存管理是基于\",{\"1\":{\"2514\":1}}],[\"语言的内置类型\",{\"1\":{\"1994\":1}}],[\"语言的\",{\"1\":{\"2332\":1,\"2726\":1}}],[\"语言的类型系统\",{\"1\":{\"2004\":1}}],[\"语言会把用到的\",{\"1\":{\"1913\":1}}],[\"语言string之解析\",{\"1\":{\"1782\":1}}],[\"语言中传参都是值拷贝\",{\"1\":{\"2296\":1}}],[\"语言中传参值拷贝的语义\",{\"1\":{\"2215\":1}}],[\"语言中函数栈帧布局是如下的\",{\"1\":{\"2268\":1}}],[\"语言中参数都是值拷贝\",{\"1\":{\"2212\":1}}],[\"语言中属于头等对象\",{\"1\":{\"2097\":1}}],[\"语言中\",{\"1\":{\"1770\":1,\"2288\":1}}],[\"语言基础\",{\"2\":{\"1626\":1,\"1732\":1,\"1785\":1,\"1884\":1,\"1919\":1,\"1987\":1,\"2034\":1,\"2093\":1,\"2152\":1,\"2198\":1,\"2262\":1,\"2328\":1,\"2462\":1,\"2590\":1,\"2727\":1,\"2813\":1,\"2878\":1,\"2896\":1,\"2964\":1,\"3206\":1,\"3258\":1}}],[\"语言设计与实现\",{\"1\":{\"1624\":1}}],[\"语言原本\",{\"1\":{\"1623\":1}}],[\"语言高性能编程\",{\"1\":{\"1607\":1}}],[\"语言简明教程\",{\"1\":{\"1587\":1}}],[\"语法糖\",{\"0\":{\"2177\":1},\"1\":{\"3238\":1}}],[\"语法\",{\"1\":{\"78\":1,\"178\":1,\"692\":1}}],[\"语法分析器会根据语法规则\",{\"1\":{\"78\":1}}],[\"语句之前有一空行\",{\"1\":{\"3388\":1}}],[\"语句中\",{\"1\":{\"3388\":1}}],[\"语句中的\",{\"1\":{\"3388\":1}}],[\"语句中有\",{\"1\":{\"3388\":1}}],[\"语句落空\",{\"1\":{\"3388\":1}}],[\"语句强制\",{\"1\":{\"3388\":1}}],[\"语句要么总是指定返回的值\",{\"1\":{\"3388\":1}}],[\"语句抛出一个指定的异常\",{\"1\":{\"3120\":1}}],[\"语句无论是否发生异常都将执行最后的代码\",{\"1\":{\"3118\":1}}],[\"语句按照如下方式工作\",{\"1\":{\"3108\":1}}],[\"语句改变了我们返回值空间的变量\",{\"1\":{\"2324\":1}}],[\"语句有哪些部分\",{\"1\":{\"692\":1}}],[\"语句会被阻塞\",{\"1\":{\"359\":1}}],[\"语句后\",{\"1\":{\"358\":1}}],[\"语句执行时会是什么现象呢\",{\"1\":{\"356\":1}}],[\"语句里面\",{\"1\":{\"342\":1}}],[\"语句时都会申请\",{\"1\":{\"324\":1}}],[\"语句的条件是\",{\"1\":{\"262\":1}}],[\"语句的开销\",{\"1\":{\"179\":1}}],[\"语句\",{\"1\":{\"175\":2,\"3388\":4}}],[\"语句开始执行的时候进行创建视图\",{\"1\":{\"161\":1}}],[\"语句过程中在写完第一个日志后\",{\"1\":{\"133\":1}}],[\"语句是否满足\",{\"1\":{\"78\":1,\"692\":1}}],[\"语句进行解析\",{\"1\":{\"76\":1}}],[\"识别字符串地具体含义\",{\"1\":{\"77\":1}}],[\"需要修改的配置\",{\"1\":{\"3436\":1}}],[\"需要修改同一行数据\",{\"1\":{\"369\":1}}],[\"需要重新对项目进行打包并部署\",{\"1\":{\"3410\":1}}],[\"需要定义双方实现的功能相关信息\",{\"1\":{\"3320\":1}}],[\"需要确认客户端和服务器之间地址\",{\"1\":{\"3272\":1}}],[\"需要精准去调用某一个服务下的某一个功能\",{\"1\":{\"3266\":1}}],[\"需要选择合适通信协议和传输方式\",{\"1\":{\"3265\":1}}],[\"需要改下模式即可\",{\"1\":{\"3177\":1}}],[\"需要注意的是\",{\"1\":{\"3086\":1}}],[\"需要花费额外的时间\",{\"1\":{\"3052\":1}}],[\"需要说明的是\",{\"1\":{\"3039\":1}}],[\"需要调用\",{\"1\":{\"2963\":1}}],[\"需要知道相关状态信息才能执行\",{\"1\":{\"2891\":1}}],[\"需要停止但是仍为停止的p数量\",{\"1\":{\"2872\":1}}],[\"需要停下来写入一些数据进入磁盘中\",{\"1\":{\"626\":1}}],[\"需要停下来\",{\"1\":{\"104\":1}}],[\"需要去执行\",{\"1\":{\"2859\":1}}],[\"需要实际的函数\",{\"1\":{\"2763\":1}}],[\"需要满足以下两个条件\",{\"1\":{\"2684\":1}}],[\"需要专门解决循环引用的情况\",{\"1\":{\"2675\":1}}],[\"需要回收这一部分的数据\",{\"1\":{\"2601\":1}}],[\"需要的话设置为\",{\"1\":{\"2577\":1}}],[\"需要的也是\",{\"1\":{\"335\":1}}],[\"需要设置\",{\"1\":{\"2575\":1}}],[\"需要启动一个\",{\"1\":{\"2573\":1}}],[\"需要继续追踪的\",{\"1\":{\"2496\":1}}],[\"需要被执行\",{\"1\":{\"2453\":1}}],[\"需要堆分配一段空间\",{\"1\":{\"2361\":1}}],[\"需要有足够的内存空间\",{\"1\":{\"2267\":1}}],[\"需要反射\",{\"1\":{\"2251\":1}}],[\"需要利用指针接收者\",{\"1\":{\"2170\":1}}],[\"需要扩容时候\",{\"1\":{\"1829\":1}}],[\"需要内存大小为5\",{\"1\":{\"1725\":1}}],[\"需要在http头加入\",{\"1\":{\"1511\":1}}],[\"需要你稍微设置一下\",{\"1\":{\"1465\":1}}],[\"需要断开tcp连接\",{\"1\":{\"1391\":1}}],[\"需要将数字信息转换成电信号\",{\"1\":{\"1337\":1}}],[\"需要根据具体的垃圾回收器类型\",{\"1\":{\"2697\":1}}],[\"需要根据arp\",{\"1\":{\"1329\":1}}],[\"需要根据身份证号查找对应的名字\",{\"1\":{\"190\":1}}],[\"需要委托操作系统将消息发送给web\",{\"1\":{\"1259\":1}}],[\"需要通过\",{\"1\":{\"682\":1}}],[\"需要向后面移动\",{\"1\":{\"626\":1}}],[\"需要每次更新时候将磁盘中的数据读入内存\",{\"1\":{\"542\":1}}],[\"需要把瘦高的b树结构变成矮胖的b+树\",{\"1\":{\"485\":1}}],[\"需要把最有可能发生锁冲突\",{\"1\":{\"361\":1}}],[\"需要时间去维护索引\",{\"1\":{\"460\":1}}],[\"需要排序或分组的字段建立索引\",{\"1\":{\"456\":1}}],[\"需要考虑到事务\",{\"1\":{\"358\":1}}],[\"需要\",{\"1\":{\"336\":1,\"367\":1,\"2753\":1,\"3316\":1}}],[\"需要扫描全表的数据\",{\"1\":{\"329\":1}}],[\"需要同时维护\",{\"1\":{\"268\":1}}],[\"需要执行几次树的搜索操作\",{\"1\":{\"236\":1}}],[\"需要逻辑上挪动后面的数据\",{\"1\":{\"221\":1}}],[\"需要找到两者的平衡点\",{\"1\":{\"146\":1}}],[\"需要找回数据\",{\"1\":{\"126\":1}}],[\"需要先搜索\",{\"1\":{\"218\":1}}],[\"需要先从磁盘读入内存\",{\"1\":{\"117\":1}}],[\"需要先看到全貌\",{\"1\":{\"53\":1}}],[\"需要对\",{\"1\":{\"76\":1}}],[\"所具备流模式如下\",{\"1\":{\"3331\":1}}],[\"所请求的资源必须通过代理访问\",{\"1\":{\"1115\":1}}],[\"所请求的资源未修改\",{\"1\":{\"1112\":1}}],[\"所在的数据页已经满了\",{\"1\":{\"222\":1}}],[\"所以项目的域名总是\",{\"1\":{\"3441\":1}}],[\"所以我一般就直接全局配置\",{\"1\":{\"3374\":1}}],[\"所以我们也可以调用\",{\"1\":{\"2795\":1}}],[\"所以我们希望尽可能的缩短\",{\"1\":{\"2677\":1}}],[\"所以需要将这些功能和服务进行横向的分割\",{\"1\":{\"3261\":1}}],[\"所以需要全表扫描\",{\"1\":{\"330\":1}}],[\"所以子类比父类拥有的更多的能力\",{\"1\":{\"3095\":1}}],[\"所以大多数python程序员会遵循一种命名惯例就是让属性名以单下划线开头来表示属性是受保护的\",{\"1\":{\"3081\":1}}],[\"所以大家都已经习惯了随手使用它\",{\"1\":{\"2392\":1}}],[\"所以那些没有注册到\",{\"1\":{\"2963\":1}}],[\"所以应该要谨慎使用\",{\"1\":{\"2891\":1}}],[\"所以上面的逻辑还没有设置osstack\",{\"1\":{\"2795\":1}}],[\"所以让我们做mfence\",{\"1\":{\"2753\":1}}],[\"所以很多地方并不是以\",{\"1\":{\"2736\":1}}],[\"所以并发写屏障的设计还要考虑到用户程序之间\",{\"1\":{\"2719\":1}}],[\"所以并不会去执行函数\",{\"1\":{\"2384\":1}}],[\"所以用户程序执行写屏障进行记录时\",{\"1\":{\"2719\":1}}],[\"所以用上诉方式进行判断\",{\"1\":{\"2050\":1}}],[\"所以可以把数据划分为新生代和老年代\",{\"1\":{\"2660\":1}}],[\"所以可以进行忽略\",{\"1\":{\"2618\":1}}],[\"所以不适合直接放入到运行队列中\",{\"1\":{\"2792\":1}}],[\"所以不用回收这一部分的\",{\"1\":{\"2600\":1}}],[\"所以不能从位置\",{\"1\":{\"1971\":1}}],[\"所以启动一个\",{\"1\":{\"2574\":1}}],[\"所以总的来说\",{\"1\":{\"2525\":1}}],[\"所以多链表管理的内存块规格主要面向中小分块\",{\"1\":{\"2513\":1}}],[\"所以执行\",{\"1\":{\"2376\":1}}],[\"所以go语言会预分配不同规格的deferpool\",{\"1\":{\"2364\":1}}],[\"所以函数\",{\"1\":{\"2356\":1,\"2380\":1}}],[\"所以defer\",{\"1\":{\"2346\":1}}],[\"所以输出分别为\",{\"1\":{\"2317\":1}}],[\"所以返回地址下面就是函数\",{\"1\":{\"2280\":1}}],[\"所以说参数和返回值采用由右至左的入栈顺序比较合适\",{\"1\":{\"2275\":1}}],[\"所以接受的参数数据是变量\",{\"1\":{\"2235\":1}}],[\"所以转化成指针接收者调用\",{\"1\":{\"2183\":1}}],[\"所以参数空间里面第一个参数是\",{\"1\":{\"2355\":1}}],[\"所以参数空间拷贝参数\",{\"1\":{\"2174\":1}}],[\"所以参数是\",{\"1\":{\"2168\":1}}],[\"所以他的数据会被放到数据段\",{\"1\":{\"2168\":1}}],[\"所以只会输出\",{\"1\":{\"2143\":1}}],[\"所以编译器对捕获变量的不同情况做出不同的处理\",{\"1\":{\"2125\":1}}],[\"所以断言成功\",{\"1\":{\"2068\":1}}],[\"所以断言失败\",{\"1\":{\"2055\":1,\"2071\":1,\"2083\":1}}],[\"所以在某些时刻采用\",{\"1\":{\"2722\":1}}],[\"所以在\",{\"1\":{\"2569\":1}}],[\"所以在没有执行\",{\"1\":{\"2324\":1}}],[\"所以在栈上分配返回值空间更合适\",{\"1\":{\"2276\":1,\"2307\":1}}],[\"所以在方法得调用上\",{\"1\":{\"1992\":1}}],[\"所以在使用哈希表时一定会遇到冲突\",{\"1\":{\"1811\":1}}],[\"所以第\",{\"1\":{\"1972\":1,\"1973\":1}}],[\"所以从第\",{\"1\":{\"1970\":1,\"1971\":1}}],[\"所以从a的角度看\",{\"1\":{\"158\":1}}],[\"所以才说map的元素是不可寻址的\",{\"1\":{\"1873\":1}}],[\"所以通常会选择\",{\"1\":{\"1829\":1}}],[\"所以通过上述情况\",{\"1\":{\"219\":1}}],[\"所以为了区分\",{\"1\":{\"2419\":1}}],[\"所以为了减少扩容次数\",{\"1\":{\"1838\":1}}],[\"所以为3\",{\"1\":{\"1699\":1}}],[\"所以为9\",{\"1\":{\"1694\":1}}],[\"所以它们不需要使用额外的内存并且比使用数组更有效率\",{\"1\":{\"1651\":1}}],[\"所以它直接就进入了closed状态\",{\"1\":{\"874\":1}}],[\"所以会有一个\",{\"1\":{\"2837\":1}}],[\"所以会这里会改变\",{\"1\":{\"2176\":1}}],[\"所以会输出\",{\"1\":{\"2169\":1,\"2175\":1}}],[\"所以会返回\",{\"1\":{\"1506\":1}}],[\"所以会被\",{\"1\":{\"336\":1}}],[\"所以交换机会根据这一地址将包传输到下一个路由器\",{\"1\":{\"1385\":1}}],[\"所以将使用\",{\"1\":{\"1316\":1}}],[\"所以一共是\",{\"1\":{\"1202\":1}}],[\"所以有可能已遭篡改\",{\"1\":{\"1197\":1}}],[\"所以没有画出服务端的接收窗口\",{\"1\":{\"1033\":1}}],[\"所以窗口大小由接收方决定\",{\"1\":{\"930\":1}}],[\"所以a还需要多等一个msl\",{\"1\":{\"874\":1}}],[\"所以a至少要维持msl时长的time\",{\"1\":{\"874\":1}}],[\"所以晃眼一看\",{\"1\":{\"874\":1}}],[\"所以msl应该要大于等于ttl消耗为0的时间\",{\"1\":{\"871\":1}}],[\"所以服务端的fin和ack报文分开发送\",{\"1\":{\"859\":1}}],[\"所以就会发生\",{\"1\":{\"2245\":1}}],[\"所以就会报错\",{\"1\":{\"2244\":1}}],[\"所以就会被分配到堆上\",{\"1\":{\"2138\":1}}],[\"所以就有传输层的tcp协议负责网络数据包的可靠性\",{\"1\":{\"755\":1}}],[\"所以就不多介绍这一部分了\",{\"1\":{\"74\":1}}],[\"所以无论我们消息有多大都可以进行传输\",{\"1\":{\"739\":1}}],[\"所以也要全表扫描\",{\"1\":{\"331\":1}}],[\"所以更加大众化的选择就是\",{\"1\":{\"310\":1}}],[\"所以使用覆盖索引是一个常用的性能优化手段\",{\"1\":{\"247\":1,\"520\":1}}],[\"所以数据都是存储在\",{\"1\":{\"208\":1}}],[\"所以哈希索引做区间查询的速度是很慢的\",{\"1\":{\"194\":1}}],[\"所以这里做了一个模拟器\",{\"1\":{\"2893\":1}}],[\"所以这里函数调用栈的局部变量\",{\"1\":{\"2372\":1}}],[\"所以这里空缺的部分填写\",{\"1\":{\"2359\":1}}],[\"所以这里会先将\",{\"1\":{\"2321\":1}}],[\"所以这里会拷贝\",{\"1\":{\"2301\":1}}],[\"所以这里就没有\",{\"1\":{\"2296\":1}}],[\"所以这个语句在搜索索引树的时候\",{\"1\":{\"274\":1}}],[\"所以这个事务提交之前\",{\"1\":{\"171\":1}}],[\"所以这一行\",{\"1\":{\"135\":1}}],[\"所以\",{\"1\":{\"135\":1,\"156\":1,\"195\":1,\"203\":1,\"229\":1,\"248\":1,\"843\":1,\"897\":1,\"923\":1,\"1175\":1,\"1176\":1,\"1204\":1,\"2189\":1,\"2356\":1,\"2380\":1,\"2396\":1,\"2455\":1,\"2544\":1,\"2849\":1}}],[\"所以恢复后这一行c的值是1\",{\"1\":{\"134\":1}}],[\"所有在\",{\"1\":{\"2925\":1}}],[\"所有defer函数都正常执行\",{\"1\":{\"2383\":1}}],[\"所有成员都放好了\",{\"1\":{\"1974\":1}}],[\"所有的\",{\"1\":{\"2332\":1}}],[\"所有的函数的栈帧布局都会遵循统一的约定\",{\"1\":{\"2277\":1}}],[\"所有的行为与选择都是为了减少内存浪费和提高性能的\",{\"1\":{\"1962\":1}}],[\"所有的事务依次逐个执行\",{\"1\":{\"575\":1}}],[\"所有跨存储引擎工程都在这一层实现\",{\"1\":{\"689\":1}}],[\"所有跨存储引擎的功能都在这一层实现\",{\"1\":{\"59\":1}}],[\"所有引擎都会产生\",{\"1\":{\"643\":1}}],[\"所有引擎都可以使用\",{\"1\":{\"111\":1}}],[\"来定义函数\",{\"1\":{\"3025\":1}}],[\"来定位记录\",{\"1\":{\"257\":1,\"522\":1}}],[\"来起到帮助作用\",{\"1\":{\"2859\":1}}],[\"来到队列获取一个\",{\"1\":{\"2837\":1}}],[\"来执行\",{\"1\":{\"2793\":1}}],[\"来省略\",{\"1\":{\"2789\":1}}],[\"来启动程序\",{\"1\":{\"2761\":1}}],[\"来辅助完成额外的目标\",{\"1\":{\"2574\":1}}],[\"来决定是否执行\",{\"1\":{\"2453\":1}}],[\"来解决这个问题\",{\"1\":{\"2452\":1}}],[\"来看它来自于\",{\"1\":{\"2241\":1}}],[\"来看看为什么会失败\",{\"1\":{\"2293\":1}}],[\"来看看内置类型的元数据\",{\"1\":{\"2015\":1}}],[\"来看看变量\",{\"1\":{\"1894\":1}}],[\"来存储键值对\",{\"1\":{\"1799\":1}}],[\"来分隔\",{\"1\":{\"1542\":1}}],[\"来判断选择哪一个网卡作为源地址ip\",{\"1\":{\"1311\":1}}],[\"来判断此记录是否有效\",{\"1\":{\"682\":1}}],[\"来进行分隔得\",{\"1\":{\"1262\":1}}],[\"来不及处理\",{\"1\":{\"948\":1}}],[\"来作为主键\",{\"1\":{\"503\":1}}],[\"来设置\",{\"1\":{\"376\":1}}],[\"来确保拿到一致性视图\",{\"1\":{\"308\":1}}],[\"来确保不会有其他线程对数据库做更新\",{\"1\":{\"295\":1}}],[\"来说\",{\"1\":{\"502\":1,\"2538\":1}}],[\"来说出现的结果就是课程没有发生变化\",{\"1\":{\"304\":1}}],[\"来说就赚了\",{\"1\":{\"304\":1}}],[\"来恢复的时候就多了一个事务出来\",{\"1\":{\"135\":1}}],[\"来恢复临时库的话\",{\"1\":{\"134\":1}}],[\"来重新初始化连接资源\",{\"1\":{\"72\":1}}],[\"来此\",{\"1\":{\"56\":1}}],[\"或许可以从一个原始demo\",{\"1\":{\"3283\":1}}],[\"或正在执行time\",{\"1\":{\"2868\":1}}],[\"或重新分配\",{\"1\":{\"2606\":1}}],[\"或函数闭包\",{\"1\":{\"2109\":1}}],[\"或更强的锁\",{\"1\":{\"608\":1}}],[\"或更新版本\",{\"1\":{\"72\":1}}],[\"或是联合索引的最左原则字段\",{\"1\":{\"286\":1}}],[\"或\",{\"1\":{\"174\":1,\"175\":1,\"288\":1,\"1529\":1,\"3388\":8}}],[\"或者选择其他的\",{\"1\":{\"3422\":1}}],[\"或者去看你的vscode的setting是不是出现配置重复的问题\",{\"1\":{\"3398\":1}}],[\"或者换一种配置文件\",{\"1\":{\"3398\":1}}],[\"或者服务端和客户端长时间数据交互\",{\"1\":{\"3331\":1}}],[\"或者操作的对象\",{\"1\":{\"3075\":1}}],[\"或者是目前已存在的m数量\",{\"1\":{\"2872\":1}}],[\"或者通过传递\",{\"1\":{\"2789\":1}}],[\"或者把黑色对象回退到灰色对象\",{\"1\":{\"2698\":1}}],[\"或者使用了\",{\"1\":{\"2457\":1}}],[\"或者解锁一个\",{\"1\":{\"2332\":1}}],[\"或者已经被下载\",{\"1\":{\"1410\":1}}],[\"或者四次呢\",{\"0\":{\"806\":1}}],[\"或者\",{\"1\":{\"341\":1,\"878\":1,\"1408\":1,\"3437\":1}}],[\"或者加索引\",{\"1\":{\"329\":1}}],[\"或者修改字段\",{\"1\":{\"329\":1}}],[\"或者断开连接\",{\"1\":{\"175\":1}}],[\"或者在一个语句有多表关联\",{\"1\":{\"81\":1}}],[\"或者程序里面判断执行过一个占用内存的大查询后\",{\"1\":{\"71\":1}}],[\"7144948875613339685\",{\"1\":{\"3317\":1}}],[\"71\",{\"1\":{\"3069\":1}}],[\"78\",{\"1\":{\"3069\":1}}],[\"7节\",{\"1\":{\"861\":1}}],[\"700\",{\"1\":{\"237\":1}}],[\"7\",{\"0\":{\"513\":1,\"653\":1,\"806\":1,\"1199\":1,\"3102\":1},\"1\":{\"72\":1,\"237\":1,\"1609\":1,\"1687\":3,\"1702\":3,\"1939\":1,\"2885\":1,\"3053\":2,\"3054\":4,\"3256\":1,\"3388\":1}}],[\"53\",{\"1\":{\"3394\":2}}],[\"5层\",{\"1\":{\"3388\":1}}],[\"5259902\",{\"1\":{\"3347\":1}}],[\"52字节以后\",{\"1\":{\"1014\":1}}],[\"51cto\",{\"1\":{\"3347\":1}}],[\"5时候\",{\"1\":{\"1876\":1}}],[\"5份数据\",{\"1\":{\"902\":1}}],[\"5都发送呢\",{\"1\":{\"898\":1}}],[\"503\",{\"1\":{\"1146\":1}}],[\"502\",{\"1\":{\"1143\":1}}],[\"501\",{\"1\":{\"1140\":1}}],[\"50s\",{\"1\":{\"378\":2}}],[\"50\",{\"1\":{\"223\":1,\"3048\":2}}],[\"50052\",{\"1\":{\"3341\":1,\"3342\":1}}],[\"50051\",{\"1\":{\"3325\":1,\"3327\":1}}],[\"500\",{\"1\":{\"210\":1,\"218\":1,\"237\":1,\"1137\":1,\"1551\":1}}],[\"5\",{\"0\":{\"491\":1,\"636\":1,\"763\":1,\"1168\":1,\"3044\":1,\"3045\":1,\"3049\":1,\"3055\":1,\"3059\":1,\"3066\":2},\"1\":{\"72\":1,\"210\":1,\"236\":1,\"237\":1,\"246\":1,\"278\":1,\"280\":1,\"283\":1,\"284\":1,\"289\":1,\"512\":1,\"516\":1,\"518\":1,\"909\":1,\"1656\":2,\"1670\":1,\"1673\":1,\"1687\":1,\"1702\":1,\"1717\":1,\"1846\":1,\"1847\":1,\"1939\":1,\"2370\":1,\"2568\":2,\"2574\":2,\"2885\":1,\"3015\":2,\"3019\":2,\"3020\":1,\"3021\":2,\"3048\":4,\"3053\":5,\"3054\":4,\"3062\":1,\"3063\":2,\"3090\":1,\"3124\":4,\"3175\":1,\"3233\":1,\"3256\":1,\"3388\":1}}],[\"从字符串开头到结尾\",{\"1\":{\"3193\":1}}],[\"从字符串中查找子串所在位置\",{\"1\":{\"3048\":1}}],[\"从字符串中取出指定位置的字符\",{\"1\":{\"3048\":1}}],[\"从指定的位置删除元素\",{\"1\":{\"3054\":1}}],[\"从指定的开始索引到指定的结束索引\",{\"1\":{\"3048\":1}}],[\"从系统堆栈初始化堆栈边界\",{\"1\":{\"2795\":1}}],[\"从p的dead\",{\"1\":{\"2793\":1}}],[\"从给定的\",{\"1\":{\"2753\":1}}],[\"从源码角度看\",{\"1\":{\"2733\":1}}],[\"从本地缓存中直接分配一个\",{\"1\":{\"2589\":1}}],[\"从上面伪指令\",{\"1\":{\"2416\":1}}],[\"从上图可以看出\",{\"1\":{\"58\":1}}],[\"从当前的\",{\"1\":{\"2366\":1}}],[\"从右至左入栈\",{\"1\":{\"2301\":1}}],[\"从结构体的字段定义来看\",{\"1\":{\"2100\":1}}],[\"从严的最后一个二进制位开始\",{\"1\":{\"1755\":1}}],[\"从这个意义上来说\",{\"1\":{\"1357\":1}}],[\"从这个备份恢复到临时库\",{\"1\":{\"127\":1}}],[\"从远程服务器接收到了一个无效的响应\",{\"1\":{\"1145\":1}}],[\"从图上可以看出解决方法有两种\",{\"1\":{\"951\":1}}],[\"从而减少重复代码的编写\",{\"1\":{\"3095\":1}}],[\"从而通过array\",{\"1\":{\"1799\":1}}],[\"从而改变文档的结构\",{\"1\":{\"1403\":1}}],[\"从而可以更好的做网络上的流控\",{\"1\":{\"921\":1}}],[\"从而导致整个库不能使用了\",{\"1\":{\"339\":1}}],[\"从能力来讲\",{\"1\":{\"650\":1}}],[\"从写日志的方式来说\",{\"1\":{\"647\":1}}],[\"从头开始写\",{\"1\":{\"620\":1}}],[\"从顾客\",{\"1\":{\"364\":1}}],[\"从性能和存储空间方面考量\",{\"1\":{\"229\":1}}],[\"从性能方面讲\",{\"1\":{\"227\":1}}],[\"从存储空间来看\",{\"1\":{\"228\":1}}],[\"从备份的时间点开始\",{\"1\":{\"128\":1}}],[\"从现象看就是\",{\"1\":{\"69\":1}}],[\"有特殊含义的单词\",{\"1\":{\"2977\":1}}],[\"有什么用吗\",{\"1\":{\"2935\":1}}],[\"有很多重要的全局变量\",{\"1\":{\"2826\":1}}],[\"有债务需要偿还\",{\"1\":{\"2584\":1}}],[\"有点慢\",{\"0\":{\"2391\":1}}],[\"有参数\",{\"1\":{\"2355\":1}}],[\"有两个重要的全局变量\",{\"1\":{\"2475\":1}}],[\"有两个参数\",{\"1\":{\"2342\":1}}],[\"有两个核心类型\",{\"1\":{\"2203\":1}}],[\"有两个比较重要的属性\",{\"1\":{\"622\":1}}],[\"有没有感觉调用的很奇怪\",{\"1\":{\"2179\":1}}],[\"有没有方法避免回表过程呢\",{\"1\":{\"244\":1}}],[\"有部分人需要繁体字\",{\"1\":{\"1741\":1}}],[\"有256个状态\",{\"1\":{\"1737\":1}}],[\"有一些特定的属性和元素可以实例化一个层\",{\"1\":{\"1442\":1}}],[\"有一个\",{\"1\":{\"2168\":1}}],[\"有一个叫慢启动门限的状态变量\",{\"1\":{\"975\":1}}],[\"有一个用户\",{\"1\":{\"302\":1}}],[\"有一个需求\",{\"1\":{\"261\":1,\"262\":1}}],[\"有一个注意点\",{\"1\":{\"248\":1}}],[\"有一个说法\",{\"1\":{\"95\":1}}],[\"有问题就直接丢掉\",{\"1\":{\"1346\":1}}],[\"有上面过程可知\",{\"1\":{\"859\":1}}],[\"有边界\",{\"1\":{\"779\":1}}],[\"有序的\",{\"1\":{\"739\":1}}],[\"有序数组索引只适用于静态存储引擎\",{\"1\":{\"203\":1}}],[\"有序数组在等值查询和范围查询场景中的性能就都非常优秀\",{\"1\":{\"202\":1}}],[\"有序数组\",{\"1\":{\"185\":1,\"196\":1}}],[\"有人掉到这个坑里\",{\"1\":{\"328\":1}}],[\"有人会杠一下\",{\"1\":{\"137\":1}}],[\"有这样一个问题\",{\"1\":{\"235\":1}}],[\"有三种常见也比较简单的数据结构\",{\"1\":{\"185\":1}}],[\"有些通信协议和传输方式可能存在一定性能瓶颈\",{\"1\":{\"3265\":1}}],[\"有些编程语言需要程序员在编写程序时候\",{\"1\":{\"2604\":1}}],[\"有些函数也可能没有自由变量\",{\"1\":{\"2109\":1}}],[\"有些内置类型就没有这么简单\",{\"1\":{\"2013\":1}}],[\"有些服务器直接忽略\",{\"1\":{\"1176\":1}}],[\"有些服务器会帮你卸货\",{\"1\":{\"1176\":1}}],[\"有些客户端连接框架会默认连接成功后先执行一个\",{\"1\":{\"176\":1}}],[\"有些临时内存存储的资源就会不断地变多\",{\"1\":{\"69\":1}}],[\"有了流量控制\",{\"0\":{\"956\":1}}],[\"有了意向锁之后\",{\"1\":{\"611\":1}}],[\"有了这个功能\",{\"1\":{\"309\":1}}],[\"有了\",{\"1\":{\"105\":1}}],[\"有段代码没理解他的含义\",{\"1\":{\"49\":1}}],[\"但实际上并不执行任何功能\",{\"1\":{\"3273\":1}}],[\"但有点武断\",{\"1\":{\"2795\":1}}],[\"但它上面还有一些东西\",{\"1\":{\"2795\":1}}],[\"但在多核并发场景下就不一定了\",{\"1\":{\"2719\":1}}],[\"但还没对它进行扫描\",{\"1\":{\"2629\":1}}],[\"但通常出现在响应头里\",{\"1\":{\"1570\":1}}],[\"但不包括\",{\"1\":{\"3020\":1}}],[\"但不能使用下划线\",{\"1\":{\"1563\":1}}],[\"但不太安全\",{\"1\":{\"633\":1}}],[\"但首字母大写的可读性更好\",{\"1\":{\"1562\":1}}],[\"但各个\",{\"1\":{\"1534\":1}}],[\"但可以没有\",{\"1\":{\"1530\":1}}],[\"但默认是不启用的\",{\"1\":{\"1465\":1}}],[\"但过多的脚本仍然是一个重要的瓶颈\",{\"1\":{\"1408\":1}}],[\"但资源只是临时被移动\",{\"1\":{\"1106\":1}}],[\"但未返回内容\",{\"1\":{\"1091\":1}}],[\"但未处理完成\",{\"1\":{\"1085\":1}}],[\"但返回的meta信息不在原始的服务器\",{\"1\":{\"1088\":1}}],[\"但这段时间具体应该多长主要是为了达成上述第二个目的而设计的\",{\"1\":{\"877\":1}}],[\"但仔细想一下其实1个msl是不行的\",{\"1\":{\"874\":1}}],[\"但也是最慢的一种方式\",{\"1\":{\"634\":1}}],[\"但执行完不会马上释放\",{\"1\":{\"360\":1}}],[\"但业务并发度以及性能越好\",{\"1\":{\"354\":1}}],[\"但业务并发度以及性能越差\",{\"1\":{\"353\":1}}],[\"但是他也是迭代器\",{\"1\":{\"3257\":1}}],[\"但是部分程序员和公司更倾向于使用驼峰命名法\",{\"1\":{\"3075\":1}}],[\"但是发现\",{\"1\":{\"2917\":1}}],[\"但是就可以用unsafe的pointer方法来实现\",{\"1\":{\"2891\":1}}],[\"但是并不影响兼容问题\",{\"1\":{\"2887\":1}}],[\"但是并不会同时刷新到磁盘上\",{\"1\":{\"631\":1}}],[\"但是并没有启动m\",{\"1\":{\"2789\":1}}],[\"但是考虑到性能\",{\"1\":{\"2716\":1}}],[\"但是却不能保障满意的负载均衡\",{\"1\":{\"2713\":1}}],[\"但是实际上都是多核的场景\",{\"1\":{\"2709\":1}}],[\"但是后面的程序运行时候\",{\"1\":{\"2682\":1}}],[\"但是误差\",{\"1\":{\"2574\":1}}],[\"但是会出现\",{\"1\":{\"2568\":1}}],[\"但是会将连接恢复到刚刚创建完时的状态\",{\"1\":{\"72\":1}}],[\"但是好像这样的逻辑怎么用到\",{\"1\":{\"2451\":1}}],[\"但是与一般的函数调用比起来\",{\"1\":{\"2392\":1}}],[\"但是交换的是\",{\"1\":{\"2299\":1}}],[\"但是经过返回值赋值局部变量\",{\"1\":{\"2244\":1}}],[\"但是局部变量\",{\"1\":{\"2170\":1}}],[\"但是被调用函数\",{\"1\":{\"2149\":1}}],[\"但是被调用函数会把它拷贝到堆上一份\",{\"1\":{\"2147\":1}}],[\"但是各自持有自己的捕获列表\",{\"1\":{\"2116\":1}}],[\"但是go语言里并没有把闭包从\",{\"1\":{\"2115\":1}}],[\"但是基本结构都是如此\",{\"1\":{\"2015\":1}}],[\"但是能够追踪到的数据不一定是有用\",{\"1\":{\"2618\":1}}],[\"但是能够存储的更加紧凑\",{\"1\":{\"1861\":1}}],[\"但是能用不代表好用\",{\"1\":{\"1795\":1}}],[\"但是使用的溢出桶较多\",{\"1\":{\"1854\":1}}],[\"但是通过比较发现key不对\",{\"1\":{\"1814\":1,\"1818\":1}}],[\"但是限制字符串不能出现\",{\"1\":{\"1766\":1}}],[\"但是可以保证通过灰色对象可以抵达到白色对象\",{\"1\":{\"2691\":1}}],[\"但是可以创建多行的字符串\",{\"1\":{\"1764\":1}}],[\"但是可以接受数据\",{\"1\":{\"857\":1}}],[\"但是没有规定这个二进制如何存储\",{\"1\":{\"1744\":1}}],[\"但是用来表示其他语言就显得很少了\",{\"1\":{\"1741\":1}}],[\"但是也有缺点\",{\"1\":{\"1646\":1}}],[\"但是也有一个问题\",{\"1\":{\"1309\":1}}],[\"但是题解水平很高\",{\"1\":{\"1615\":1}}],[\"但是我希望他是一个自定义域名\",{\"1\":{\"3441\":1}}],[\"但是我们可以通过abc模块的abcmeta元类和abstractmethod包装器来达到抽象类的效果\",{\"1\":{\"3101\":1}}],[\"但是我们这里没有这个文件\",{\"1\":{\"1506\":1}}],[\"但是我只是根据身份证号去查询家庭地址字段\",{\"1\":{\"256\":1}}],[\"但是它只能在\",{\"1\":{\"2927\":1}}],[\"但是它的确阻塞javascript\",{\"1\":{\"1413\":1}}],[\"但是它也是有额外负担\",{\"1\":{\"381\":1}}],[\"但是离到达还需要经过几个地方\",{\"1\":{\"1343\":1}}],[\"但是第一个条目的\",{\"1\":{\"1315\":1}}],[\"但是第二步与第三步可以优化成一步\",{\"1\":{\"829\":1}}],[\"但是网络巨大\",{\"1\":{\"1259\":1}}],[\"但是极易被窃取\",{\"1\":{\"1192\":1}}],[\"但是操作有关联性就会很麻烦\",{\"1\":{\"1187\":1}}],[\"但是拒绝执行此请求\",{\"1\":{\"1130\":1}}],[\"但是大量的计算机都是在一个网络环境里面\",{\"1\":{\"957\":1}}],[\"但是ack都返回2\",{\"1\":{\"905\":1}}],[\"但是该旧连接的历史报文可能还残留在网络中\",{\"1\":{\"842\":1}}],[\"但是此时操作没有完\",{\"1\":{\"2072\":1}}],[\"但是此时\",{\"1\":{\"676\":1}}],[\"但是不用慌\",{\"1\":{\"2811\":1}}],[\"但是不妨碍我们来看看底层到底是怎么回事\",{\"1\":{\"2202\":1}}],[\"但是不会立即将数据写入磁盘中\",{\"1\":{\"655\":1}}],[\"但是不一样的是\",{\"1\":{\"98\":1}}],[\"但是更新时会判断在此期间有没有别的事务更新这个数据\",{\"1\":{\"601\":1}}],[\"但是注意\",{\"1\":{\"597\":1}}],[\"但是着重点不一样\",{\"1\":{\"568\":1}}],[\"但是mysql却没有使用\",{\"0\":{\"548\":1}}],[\"但是允许数据为\",{\"1\":{\"509\":1}}],[\"但是如果像复制式回收器这样移动数据来避免碎片化\",{\"1\":{\"2704\":1}}],[\"但是如果有\",{\"1\":{\"2325\":1}}],[\"但是如果值大于了10就会发生panic\",{\"1\":{\"1706\":1}}],[\"但是如果我需要传\",{\"1\":{\"909\":1}}],[\"但是如果你的项目轻量\",{\"1\":{\"421\":1}}],[\"但是如果用身份证号做主键\",{\"1\":{\"228\":1}}],[\"但是每秒却执行不了几个事务\",{\"1\":{\"384\":1}}],[\"但是代码还没升级\",{\"1\":{\"348\":1}}],[\"但是在mstart\",{\"1\":{\"2795\":1}}],[\"但是在\",{\"1\":{\"338\":1,\"2934\":1}}],[\"但是在查询这条记录的时候\",{\"1\":{\"169\":1}}],[\"但是之后所有要在表\",{\"1\":{\"338\":1}}],[\"但是有以下问题存在\",{\"1\":{\"3288\":1}}],[\"但是有一种情况除外\",{\"1\":{\"1984\":1}}],[\"但是有一定的限制\",{\"1\":{\"1803\":1}}],[\"但是有些引擎不支持这个事务\",{\"1\":{\"310\":1}}],[\"但是有的开发同学会纠结\",{\"1\":{\"178\":1}}],[\"但是余额却扣了\",{\"1\":{\"304\":1}}],[\"但是课表多了一门课\",{\"1\":{\"304\":1}}],[\"但是让整库都只读\",{\"1\":{\"296\":1}}],[\"但是范围列后面的列无法用到索引\",{\"1\":{\"276\":1,\"530\":1}}],[\"但是对于<script>标签\",{\"1\":{\"1408\":1}}],[\"但是对于\",{\"1\":{\"248\":1}}],[\"但是当你需要更新数据时候\",{\"1\":{\"202\":1}}],[\"但是结果已经被a看到了\",{\"1\":{\"155\":1}}],[\"但是\",{\"1\":{\"135\":1,\"674\":1,\"910\":1,\"2083\":2,\"2149\":1,\"2276\":1,\"2296\":1,\"2307\":1,\"2396\":1,\"2460\":1,\"2963\":1,\"3080\":1}}],[\"但是由于每个节点只能存储一个数据\",{\"1\":{\"480\":1}}],[\"但是由于\",{\"1\":{\"134\":1,\"1177\":1}}],[\"但是执行的效率会有不同\",{\"1\":{\"86\":1}}],[\"但是这些都是暂停用户程序\",{\"1\":{\"2676\":1}}],[\"但是这些资源只能在连接断开时候释放\",{\"1\":{\"69\":1}}],[\"但是这样的\",{\"1\":{\"2569\":1}}],[\"但是这种语法糖不能用于字面量\",{\"1\":{\"2181\":1}}],[\"但是这种操作本身带有一定的风险\",{\"1\":{\"387\":1}}],[\"但是这三种类型都可以和nil进行对比\",{\"1\":{\"1871\":1}}],[\"但是这回答比较片面\",{\"1\":{\"808\":1}}],[\"但是这期间要消耗大量的\",{\"1\":{\"384\":1}}],[\"但是这里的行为不一样\",{\"1\":{\"2638\":1}}],[\"但是这里提醒了\",{\"1\":{\"130\":1}}],[\"但是这里有一个问题存在\",{\"1\":{\"69\":1}}],[\"但其运算速度比较慢\",{\"1\":{\"29\":1}}],[\"然后进入eslint的包内\",{\"1\":{\"3384\":1}}],[\"然后进入快速恢复算法\",{\"1\":{\"993\":1}}],[\"然后有很奇怪的错误\",{\"1\":{\"3373\":1}}],[\"然后选择合适目录进行解压\",{\"1\":{\"3361\":1}}],[\"然后暴露出来\",{\"1\":{\"3294\":1}}],[\"然后才会删除被恢复的\",{\"1\":{\"2946\":1}}],[\"然后执行到\",{\"1\":{\"2914\":1}}],[\"然后在\",{\"1\":{\"2930\":1}}],[\"然后在当前的\",{\"1\":{\"2906\":1}}],[\"然后在分配参数空间\",{\"1\":{\"2301\":1}}],[\"然后发生了\",{\"1\":{\"2905\":1}}],[\"然后发送最后的信息\",{\"1\":{\"1236\":1}}],[\"然后更新为新的api\",{\"1\":{\"2893\":1}}],[\"然后补充相关的细节\",{\"1\":{\"2812\":1}}],[\"然后函数结束前通过判断\",{\"1\":{\"2453\":1}}],[\"然后这一项从\",{\"1\":{\"2386\":1}}],[\"然后这个\",{\"1\":{\"2363\":1}}],[\"然后输出\",{\"1\":{\"2375\":1}}],[\"然后就会移除这一项\",{\"1\":{\"2909\":1}}],[\"然后就会关闭tcp连接\",{\"1\":{\"1390\":1}}],[\"然后就要调用\",{\"1\":{\"2851\":1}}],[\"然后就到\",{\"1\":{\"2282\":1}}],[\"然后是局部变量\",{\"1\":{\"2312\":1}}],[\"然后是被调用函数的参数\",{\"1\":{\"2310\":1}}],[\"然后是函数的局部变量\",{\"1\":{\"2268\":1}}],[\"然后是返回值空间\",{\"1\":{\"2212\":1}}],[\"然后值拷贝\",{\"1\":{\"2175\":1}}],[\"然后值拷贝成员到返回值空间\",{\"1\":{\"2169\":1}}],[\"然后参数\",{\"1\":{\"2175\":1}}],[\"然后帮我们把第一种转变成第二种\",{\"1\":{\"2162\":1}}],[\"然后和闭包函数都使用堆上分配的那一个\",{\"1\":{\"2147\":1}}],[\"然后放到\",{\"1\":{\"2133\":1}}],[\"然后使用一个二级指针来调用呢\",{\"1\":{\"2105\":1}}],[\"然后缓存起来\",{\"1\":{\"2088\":1}}],[\"然后同样会把这个\",{\"1\":{\"2066\":1}}],[\"然后继续往这个溢出桶里存\",{\"1\":{\"1841\":1}}],[\"然后赋值给对应的函数变量\",{\"1\":{\"1639\":1}}],[\"然后我们打开chrome\",{\"1\":{\"1483\":1}}],[\"然后一路下一步就可以安装成功了\",{\"1\":{\"1464\":1}}],[\"然后web服务器就会向本机发送数据\",{\"1\":{\"1390\":1}}],[\"然后路由器会根据mac头部后方的ip头部中的内容进行包转发工作\",{\"1\":{\"1366\":1}}],[\"然后路由表查询转发目标\",{\"1\":{\"1358\":1}}],[\"然后将信号发送到相应的端口\",{\"1\":{\"1355\":1}}],[\"然后交换机将电信号转换成数字信号\",{\"1\":{\"1346\":1}}],[\"然后交到ip协议来发送数据\",{\"1\":{\"1294\":1}}],[\"然后客户端主动发起连接\",{\"1\":{\"1287\":1}}],[\"然后客户端程序结束执行\",{\"1\":{\"65\":1}}],[\"然后用它加密报文\",{\"1\":{\"1231\":1}}],[\"然后用户购买\",{\"1\":{\"302\":1}}],[\"然后接着发送serverhello\",{\"1\":{\"1223\":1}}],[\"然后重新开始慢启动\",{\"1\":{\"987\":1}}],[\"然后告知执行器执行完成\",{\"1\":{\"665\":1}}],[\"然后告知执行器执行完成了\",{\"1\":{\"119\":1}}],[\"然后其他线程才有可能继续执行\",{\"1\":{\"378\":1}}],[\"然后备份用户课程表\",{\"1\":{\"302\":1}}],[\"然后往已购课程里面加上一门课\",{\"1\":{\"302\":1}}],[\"然后往后继续遍历\",{\"1\":{\"261\":1}}],[\"然后对整个库完成备份需求\",{\"1\":{\"295\":1}}],[\"然后挪动部分数据过去\",{\"1\":{\"222\":1}}],[\"然后通过`encoding`参数指定编码\",{\"1\":{\"3175\":1}}],[\"然后通过\",{\"1\":{\"2849\":1}}],[\"然后通过包末尾的\",{\"1\":{\"1360\":1}}],[\"然后通过业务重试一般就没问题了\",{\"1\":{\"387\":1}}],[\"然后通过链表一次遍历\",{\"1\":{\"192\":1}}],[\"然后通过磁盘找到记录\",{\"1\":{\"100\":1}}],[\"然后把\",{\"1\":{\"187\":1}}],[\"然后你会发现\",{\"1\":{\"134\":1}}],[\"然后你可以把表数据从临时库取出来\",{\"1\":{\"129\":1}}],[\"然后\",{\"1\":{\"128\":1,\"1755\":1,\"2388\":1}}],[\"然后再执行\",{\"1\":{\"2315\":1}}],[\"然后再入栈的第一个\",{\"1\":{\"2274\":1}}],[\"然后再去执行\",{\"1\":{\"2380\":1}}],[\"然后再去\",{\"1\":{\"241\":1}}],[\"然后再返回\",{\"1\":{\"117\":1}}],[\"然后再写进磁盘\",{\"1\":{\"100\":1}}],[\"然后再更新\",{\"1\":{\"100\":1}}],[\"然后再次发送请求\",{\"1\":{\"68\":1}}],[\"就也要改函数参数的类型\",{\"1\":{\"3307\":1}}],[\"就联系起来了\",{\"1\":{\"2831\":1}}],[\"就添加到全局队列供其他p进行调度\",{\"1\":{\"2793\":1}}],[\"就足够了\",{\"1\":{\"2753\":1}}],[\"就一定用不到\",{\"1\":{\"2615\":1}}],[\"就设置为\",{\"1\":{\"2576\":1}}],[\"就把\",{\"1\":{\"2562\":1}}],[\"就把当前的\",{\"1\":{\"2560\":1}}],[\"就代表这个对象是垃圾了\",{\"1\":{\"2668\":1}}],[\"就代表扫描完当前\",{\"1\":{\"2540\":1}}],[\"就代表访问根目录下的设置的默认文件\",{\"1\":{\"1255\":1}}],[\"就很容易理解上面几个例子\",{\"1\":{\"2390\":1}}],[\"就要开始打印信息了\",{\"1\":{\"2921\":1}}],[\"就要到\",{\"1\":{\"2366\":1}}],[\"就要看看它所依赖的线程有没有被别人锁住\",{\"1\":{\"382\":1}}],[\"就没有再次修改了\",{\"1\":{\"2126\":1}}],[\"就无法保证闭包捕获的变量要在闭包函数和外层函数中表现一致\",{\"1\":{\"2125\":1}}],[\"就放在对应的funcval\",{\"1\":{\"2115\":1}}],[\"就去编号为4的桶\",{\"1\":{\"1850\":1}}],[\"就在这个桶后面链上这个溢出桶\",{\"1\":{\"1841\":1}}],[\"就迁移一部分键值对到新桶里\",{\"1\":{\"1830\":1}}],[\"就必须知道它的编码方式\",{\"1\":{\"1742\":1}}],[\"就从磁盘上把那个文件全读出来\",{\"1\":{\"1501\":1}}],[\"就不过多的描述了\",{\"1\":{\"2256\":1}}],[\"就不需要发送\",{\"1\":{\"1333\":1}}],[\"就不开启死锁检测\",{\"1\":{\"387\":1}}],[\"就写入接收方的mac\",{\"1\":{\"1330\":1}}],[\"就发送窗口为0的报文\",{\"1\":{\"953\":1}}],[\"就发送一个\",{\"1\":{\"909\":1}}],[\"就面临一个问题\",{\"1\":{\"909\":1}}],[\"就重传seq2\",{\"1\":{\"906\":1}}],[\"就可能会逐渐变长\",{\"1\":{\"898\":1}}],[\"就可以了\",{\"1\":{\"3430\":1}}],[\"就可以实现类似的本地调用\",{\"1\":{\"3295\":1}}],[\"就可以考虑使用\",{\"1\":{\"3083\":1}}],[\"就可以定义出一个叫做\",{\"1\":{\"3073\":1}}],[\"就可以表示一个字符串\",{\"1\":{\"3046\":1}}],[\"就可以从\",{\"1\":{\"2838\":1}}],[\"就可以将\",{\"1\":{\"2650\":1}}],[\"就可以主动让出了\",{\"1\":{\"2578\":1}}],[\"就可以根据\",{\"1\":{\"2544\":1}}],[\"就可以进入\",{\"1\":{\"2497\":1}}],[\"就可以进行修改\",{\"1\":{\"1778\":1}}],[\"就可以通过寄存器存储地址加上偏移量找到自己的捕获变量\",{\"1\":{\"2119\":1}}],[\"就可以确定一个\",{\"1\":{\"1912\":1}}],[\"就可以用鼠标点击工具栏里的\",{\"1\":{\"1485\":1}}],[\"就可以在第一次握手中的syn的报文放入大量数据\",{\"1\":{\"802\":1}}],[\"就可以利用索引来加速检索\",{\"1\":{\"263\":1}}],[\"就可以获得区间内的所有用户\",{\"1\":{\"201\":1}}],[\"就可以找到其对应的值即\",{\"1\":{\"187\":1}}],[\"就直接进入close状态\",{\"1\":{\"854\":1,\"1398\":1}}],[\"就直接返回给执行器\",{\"1\":{\"117\":1}}],[\"就增加了服务器被攻击的风险\",{\"1\":{\"802\":1}}],[\"就\",{\"1\":{\"744\":1}}],[\"就是你要干的动作\",{\"1\":{\"3422\":1}}],[\"就是没有名字的函数\",{\"1\":{\"3223\":1}}],[\"就是将当前的\",{\"1\":{\"2944\":1}}],[\"就是将当前执行的\",{\"1\":{\"2932\":1}}],[\"就是主协程对应的\",{\"1\":{\"2829\":1}}],[\"就是垃圾\",{\"1\":{\"2615\":1}}],[\"就是注册defer函数的函数栈指针\",{\"1\":{\"2350\":1,\"2362\":1,\"2373\":1,\"2420\":1}}],[\"就是defer函数参数加返回值的总大小\",{\"1\":{\"2350\":1,\"2362\":1,\"2373\":1,\"2420\":1}}],[\"就是重复函数\",{\"1\":{\"2286\":1}}],[\"就是runtime\",{\"1\":{\"1868\":1,\"2793\":1}}],[\"就是它是一种变长的编码方式\",{\"1\":{\"1749\":1}}],[\"就是在这里分配\",{\"1\":{\"2521\":1}}],[\"就是在只读数据段分配一个共用的\",{\"1\":{\"2356\":1}}],[\"就是在互联网上使用最广的一种\",{\"1\":{\"1748\":1}}],[\"就是在发送数据时\",{\"1\":{\"885\":1}}],[\"就是\",{\"1\":{\"1559\":2}}],[\"就是找官网下载相关的版本\",{\"1\":{\"1464\":1}}],[\"就是数据从网络一端传送到另一端所需的时间\",{\"1\":{\"891\":1}}],[\"就是信息的集合或者说数据库是由数据库管理系统管理的数据的集合\",{\"1\":{\"397\":1}}],[\"就是进入了死锁状态\",{\"1\":{\"374\":1}}],[\"就回滚\",{\"1\":{\"387\":1}}],[\"就停止匹配\",{\"1\":{\"276\":1,\"529\":1}}],[\"就需要分两次读\",{\"1\":{\"1939\":1}}],[\"就需要先检测是否有其它事务对该表或者该表中的某一行加了锁\",{\"1\":{\"611\":1}}],[\"就需要更多的存储空间\",{\"1\":{\"269\":1}}],[\"就需要多权衡一下了\",{\"1\":{\"253\":1}}],[\"就需要重连\",{\"1\":{\"68\":1}}],[\"就相对麻烦了\",{\"1\":{\"221\":1}}],[\"就导致了意外的长事务\",{\"1\":{\"176\":1}}],[\"就有了拥塞控制\",{\"1\":{\"958\":1}}],[\"就有了隔离级别的概念\",{\"1\":{\"145\":1}}],[\"就有可能出现脏读\",{\"1\":{\"145\":1}}],[\"就会停止迭代\",{\"1\":{\"3250\":1}}],[\"就会正常执行与结束\",{\"1\":{\"2909\":1}}],[\"就会从别的\",{\"1\":{\"2843\":1}}],[\"就会从全局工作缓存中获取任务放到本地队列中\",{\"1\":{\"2563\":1}}],[\"就会交换\",{\"1\":{\"2557\":1}}],[\"就会将结构体分配添加到链表头上\",{\"1\":{\"2414\":1,\"2441\":1}}],[\"就会将按顺序把\",{\"1\":{\"283\":1}}],[\"就会输出\",{\"1\":{\"2380\":1}}],[\"就会去改变此时调用者函数返回值空间的变量\",{\"1\":{\"2325\":1}}],[\"就会去使用它\",{\"1\":{\"2104\":1}}],[\"就会另外分配一个足够大的栈空间\",{\"1\":{\"2291\":1}}],[\"就会跳转到被调用函数入口处开始执行\",{\"1\":{\"2265\":1}}],[\"就会把之前的参数\",{\"1\":{\"2367\":1}}],[\"就会把\",{\"1\":{\"2066\":1}}],[\"就会有内存泄露的问题\",{\"1\":{\"1984\":1}}],[\"就会有多个\",{\"1\":{\"1310\":1}}],[\"就会预分配2\",{\"1\":{\"1838\":1}}],[\"就会分配更多的桶作为新桶\",{\"1\":{\"1829\":1}}],[\"就会通过指针去查询\",{\"1\":{\"1818\":1}}],[\"就会出现编号\",{\"1\":{\"1805\":1}}],[\"就会出现乱码\",{\"1\":{\"1742\":1}}],[\"就会定义如下情况\",{\"1\":{\"1663\":1}}],[\"就会构造一个如下的一个结构\",{\"1\":{\"1657\":1}}],[\"就会断开连接\",{\"1\":{\"1510\":1}}],[\"就会调用引擎处理\",{\"1\":{\"1503\":1}}],[\"就会在堆上创建一个\",{\"1\":{\"2139\":1}}],[\"就会在\",{\"1\":{\"1491\":1}}],[\"就会看到一个简单的欢迎界面\",{\"1\":{\"1483\":1}}],[\"就会启动openresty服务器在后台运行\",{\"1\":{\"1477\":1}}],[\"就会启动拥塞避免\",{\"1\":{\"979\":1}}],[\"就会找到\",{\"1\":{\"1465\":1}}],[\"就会开始解析收到的信息\",{\"1\":{\"1401\":1}}],[\"就会给数据包封装mac头部\",{\"1\":{\"1382\":1}}],[\"就会自动匹配这一行\",{\"1\":{\"1318\":1}}],[\"就会向顶级域名服务器进行查询\",{\"1\":{\"1276\":1}}],[\"就会使用\",{\"1\":{\"977\":1}}],[\"就会重发该数据\",{\"1\":{\"885\":1}}],[\"就会导致两个日志状态逻辑上不一致\",{\"1\":{\"678\":1}}],[\"就会导致这几个线程都进入无限等待的状态\",{\"1\":{\"372\":1}}],[\"就会一直占着\",{\"1\":{\"341\":1}}],[\"就会直接判断并跳过\",{\"1\":{\"284\":1}}],[\"就会显得很麻烦\",{\"1\":{\"202\":1}}],[\"就会被删除\",{\"1\":{\"169\":1}}],[\"就会返回没有权限地错误\",{\"1\":{\"88\":1}}],[\"就会发现一般提示错误地位置都是在\",{\"1\":{\"79\":1}}],[\"就会内存占用太大\",{\"1\":{\"69\":1}}],[\"就会收到错误提醒\",{\"1\":{\"68\":1,\"78\":1}}],[\"lhs\",{\"1\":{\"3388\":1}}],[\"ll\",{\"1\":{\"3048\":1}}],[\"lzw\",{\"1\":{\"2891\":1}}],[\"lfencebeforerdtsc\",{\"1\":{\"2753\":1}}],[\"lfence\",{\"1\":{\"2753\":1}}],[\"lfstack\",{\"1\":{\"2480\":1}}],[\"latest\",{\"1\":{\"3428\":1}}],[\"label\",{\"1\":{\"3388\":2}}],[\"labels\",{\"1\":{\"2793\":2,\"3388\":2}}],[\"lambda后面没有跟函数名\",{\"1\":{\"3228\":1}}],[\"lambda\",{\"1\":{\"3226\":1,\"3233\":1}}],[\"lambda函数用于定义简单的\",{\"1\":{\"3225\":1}}],[\"lambda函数是一种匿名函数\",{\"1\":{\"3223\":1}}],[\"lambda函数返回函数名作为结果\",{\"1\":{\"3222\":1}}],[\"last\",{\"1\":{\"3104\":3,\"3124\":1,\"3388\":2}}],[\"lastpoll\",{\"1\":{\"2789\":1,\"2872\":1}}],[\"large\",{\"1\":{\"1916\":1}}],[\"languages\",{\"1\":{\"3346\":1,\"3352\":1}}],[\"language\",{\"0\":{\"3460\":1},\"1\":{\"323\":2}}],[\"literal\",{\"1\":{\"3388\":1}}],[\"lis\",{\"1\":{\"3325\":2,\"3342\":2}}],[\"list=\",{\"1\":{\"3246\":1}}],[\"list2\",{\"1\":{\"3053\":2}}],[\"list1\",{\"1\":{\"3053\":8,\"3054\":20}}],[\"list\",{\"1\":{\"1476\":1,\"1478\":1,\"2186\":1,\"2480\":1,\"2891\":1,\"3053\":1,\"3058\":3,\"3176\":6,\"3246\":1}}],[\"listener\",{\"1\":{\"3287\":2,\"3311\":2}}],[\"listen\",{\"1\":{\"1286\":1,\"3287\":1,\"3311\":1,\"3325\":2,\"3342\":1}}],[\"lib\",{\"1\":{\"2882\":1}}],[\"liblink\",{\"1\":{\"2868\":2}}],[\"license\",{\"1\":{\"2882\":1}}],[\"lint\",{\"1\":{\"3388\":1}}],[\"linux\",{\"1\":{\"2736\":1,\"2741\":2,\"2743\":1}}],[\"linking\",{\"1\":{\"2748\":1}}],[\"link\",{\"1\":{\"2350\":1,\"2362\":1,\"2373\":1,\"2420\":1,\"2459\":1,\"2893\":1,\"2907\":1,\"2919\":1}}],[\"linebreak\",{\"1\":{\"3388\":2}}],[\"lines\",{\"1\":{\"3116\":1,\"3175\":2,\"3388\":3}}],[\"line\",{\"1\":{\"1526\":1,\"3104\":3,\"3124\":1,\"3175\":2,\"3388\":2}}],[\"like\",{\"1\":{\"262\":1,\"264\":1,\"273\":1,\"276\":1,\"289\":1,\"376\":1,\"524\":2,\"529\":1,\"532\":1,\"533\":1}}],[\"let\",{\"1\":{\"3388\":1}}],[\"less\",{\"1\":{\"3388\":1}}],[\"left\",{\"1\":{\"2759\":1}}],[\"leaq\",{\"1\":{\"2748\":1,\"2753\":1,\"2755\":1,\"2757\":2}}],[\"learn\",{\"1\":{\"32\":2}}],[\"learn作为经典的机器学习框架\",{\"1\":{\"29\":1}}],[\"lexical\",{\"1\":{\"2109\":1}}],[\"len长度不是字符个数\",{\"1\":{\"1767\":1}}],[\"len改成3\",{\"1\":{\"1671\":1}}],[\"len为3\",{\"1\":{\"1692\":1,\"1697\":1}}],[\"len为2\",{\"1\":{\"1668\":1}}],[\"len为0\",{\"1\":{\"1660\":1}}],[\"len\",{\"1\":{\"1654\":1,\"1656\":4,\"1670\":2,\"1673\":2,\"1680\":2,\"1687\":6,\"1702\":6,\"1769\":1,\"2020\":2,\"2052\":2,\"2082\":1,\"2135\":1,\"2206\":1,\"2891\":1,\"3048\":1,\"3053\":1,\"3054\":2,\"3062\":1,\"3116\":1,\"3388\":1}}],[\"length\",{\"1\":{\"1156\":1,\"1572\":1,\"1916\":1,\"3062\":1,\"3388\":1}}],[\"leetcode\",{\"1\":{\"1613\":1}}],[\"lonely\",{\"1\":{\"3388\":1}}],[\"lone\",{\"1\":{\"3388\":1}}],[\"loop\",{\"1\":{\"3388\":2}}],[\"loopback\",{\"1\":{\"1482\":1}}],[\"lookuperror\",{\"1\":{\"3175\":1}}],[\"lo\",{\"1\":{\"2753\":1,\"2795\":3}}],[\"loadfactor\",{\"1\":{\"1827\":1}}],[\"load\",{\"1\":{\"1826\":1,\"3394\":2}}],[\"location\",{\"1\":{\"3388\":1}}],[\"localtime\",{\"1\":{\"3093\":2}}],[\"local\",{\"1\":{\"2754\":1}}],[\"localhost\",{\"1\":{\"1483\":1,\"3286\":1,\"3297\":1,\"3341\":1}}],[\"lockfile\",{\"1\":{\"3428\":1}}],[\"lockosthread\",{\"1\":{\"2862\":1}}],[\"lockedg\",{\"1\":{\"2862\":1}}],[\"lockranksched\",{\"1\":{\"2789\":1}}],[\"lockinit\",{\"1\":{\"2789\":2}}],[\"locks\",{\"1\":{\"607\":1}}],[\"lock帮助解决幻读问题\",{\"1\":{\"597\":1}}],[\"lock\",{\"1\":{\"293\":1,\"317\":1,\"321\":1,\"322\":1,\"346\":1,\"348\":1,\"376\":2,\"378\":1,\"597\":1,\"604\":1,\"605\":1,\"2480\":1,\"2789\":4,\"2872\":1}}],[\"logsharing\",{\"1\":{\"1169\":1}}],[\"log在更新语句过程中会有两种状态呢\",{\"0\":{\"670\":1}}],[\"log和binlog\",{\"0\":{\"639\":1}}],[\"log每次都是什么时候将记录写入磁盘\",{\"0\":{\"627\":1}}],[\"log日志是怎样工作的\",{\"0\":{\"618\":1}}],[\"log是什么\",{\"0\":{\"614\":1}}],[\"logn\",{\"1\":{\"200\":1,\"478\":1}}],[\"log后写binlog\",{\"1\":{\"134\":1}}],[\"log\",{\"0\":{\"99\":1},\"1\":{\"98\":1,\"105\":1,\"107\":1,\"111\":1,\"112\":1,\"113\":1,\"119\":2,\"121\":1,\"122\":1,\"132\":1,\"134\":2,\"135\":2,\"139\":1,\"205\":2,\"438\":1,\"615\":1,\"616\":1,\"619\":2,\"620\":1,\"622\":1,\"628\":2,\"640\":1,\"642\":1,\"645\":1,\"648\":1,\"651\":1,\"658\":1,\"664\":1,\"665\":1,\"667\":1,\"673\":1,\"674\":1,\"675\":1,\"676\":2,\"677\":1,\"680\":2,\"681\":1,\"682\":1,\"2891\":2,\"3119\":1}}],[\"lost\",{\"1\":{\"68\":1}}],[\"你也可以去配置任务与其他任务之间得关系\",{\"1\":{\"3417\":1}}],[\"你也不用写很复杂得脚本去实现\",{\"1\":{\"3403\":1}}],[\"你也需要维护\",{\"1\":{\"253\":1}}],[\"你没有下载相关的包或者插件\",{\"1\":{\"3392\":1}}],[\"你到处都可以看到\",{\"1\":{\"3283\":1}}],[\"你不可能将其定制化添加在一个项目中\",{\"1\":{\"3261\":1}}],[\"你输入的信息是有效的\",{\"1\":{\"3205\":1}}],[\"你输入网址再按下回车的过程\",{\"1\":{\"1507\":1}}],[\"你需要将\",{\"1\":{\"3437\":1,\"3438\":1}}],[\"你需要往里面重写部分函数\",{\"1\":{\"3100\":1}}],[\"你需要追查一下\",{\"1\":{\"346\":1}}],[\"你会发现多了一个结构体\",{\"1\":{\"2416\":1}}],[\"你会发现好像和\",{\"1\":{\"2403\":1}}],[\"你会唯一索引还是普通索引\",{\"0\":{\"534\":1}}],[\"你要明白对齐系数到底是什么\",{\"1\":{\"1960\":1}}],[\"你要给\",{\"1\":{\"1175\":1}}],[\"你往里面装怎么样的子弹\",{\"1\":{\"1910\":1}}],[\"你是否考虑过\",{\"1\":{\"2822\":1}}],[\"你是垃圾吗\",{\"1\":{\"2612\":1}}],[\"你是不是觉得要结束了\",{\"1\":{\"1504\":1}}],[\"你是怎么理解的\",{\"0\":{\"498\":1}}],[\"你可能会弹出下面的信息\",{\"1\":{\"3393\":1}}],[\"你可再找一个浏览器进行实验\",{\"1\":{\"1493\":1}}],[\"你可以运行相关命令\",{\"1\":{\"3422\":1}}],[\"你可以参考官方文档进行选择\",{\"1\":{\"3414\":1}}],[\"你可以自己设定触发机制\",{\"1\":{\"3407\":1}}],[\"你可以选择删除\",{\"1\":{\"3398\":1}}],[\"你可以选择进行配置\",{\"1\":{\"619\":1}}],[\"你可以懂得指令的含义\",{\"1\":{\"2265\":1}}],[\"你可以当作在使用\",{\"1\":{\"2190\":1}}],[\"你可以作为参数进行传递\",{\"1\":{\"2097\":1}}],[\"你可以看作是一个工具\",{\"1\":{\"1910\":1}}],[\"你可以想象一个丢包率达到百分之一的糟糕网络\",{\"1\":{\"879\":1}}],[\"你可以在\",{\"1\":{\"180\":1}}],[\"你了解糊涂窗口综合症吗\",{\"0\":{\"946\":1}}],[\"你知道吗\",{\"0\":{\"931\":1}}],[\"你知道哪些索引的原则\",{\"0\":{\"513\":1}}],[\"你能说一说redo\",{\"0\":{\"639\":1}}],[\"你一定要小心不要导致锁住线上查询和更新\",{\"1\":{\"349\":1}}],[\"你肯定会特别小心\",{\"1\":{\"332\":1}}],[\"你建立越多的索引\",{\"1\":{\"269\":1}}],[\"你依旧可以用上这个索引\",{\"1\":{\"262\":1}}],[\"你就会看到\",{\"1\":{\"384\":1}}],[\"你就会收到一个\",{\"1\":{\"65\":1}}],[\"你就需要将区间内的所有用户都要扫描一遍\",{\"1\":{\"194\":1}}],[\"你现在维护着一个身份证信息和姓名的表\",{\"1\":{\"190\":1}}],[\"你的配置文件有问题\",{\"1\":{\"3395\":1}}],[\"你的\",{\"1\":{\"262\":1}}],[\"你的钱少了你会干吗\",{\"1\":{\"138\":1}}],[\"你的临时库就跟误删之前的线上库一样了\",{\"1\":{\"129\":1}}],[\"你客户端再次发送请求\",{\"1\":{\"68\":1}}],[\"82142856\",{\"1\":{\"3255\":1}}],[\"82\",{\"1\":{\"3069\":1}}],[\"8要求标识符的名字用全小写多个单词用下划线连接\",{\"1\":{\"3075\":1}}],[\"8要求\",{\"1\":{\"2978\":1}}],[\"8版本以后提供的插件机制\",{\"1\":{\"2891\":1}}],[\"8192\",{\"1\":{\"2795\":1}}],[\"8+7\",{\"1\":{\"2753\":1}}],[\"8byte\",{\"1\":{\"1953\":1}}],[\"8个值放一起\",{\"1\":{\"1836\":1}}],[\"8个键放一起\",{\"1\":{\"1836\":1}}],[\"8个bit代表一个字节\",{\"1\":{\"1737\":1}}],[\"8解读\",{\"1\":{\"1757\":1}}],[\"8进行编码\",{\"1\":{\"1757\":1}}],[\"8编码方式\",{\"1\":{\"1753\":1}}],[\"8的编码规则\",{\"1\":{\"1750\":1}}],[\"8的编码规则是怎么样的\",{\"1\":{\"1748\":1}}],[\"8=40\",{\"1\":{\"1725\":1}}],[\"8mb\",{\"1\":{\"1644\":1}}],[\"8448446\",{\"1\":{\"1169\":1}}],[\"8008\",{\"1\":{\"3286\":1,\"3287\":1,\"3311\":1}}],[\"800w\",{\"1\":{\"1644\":1}}],[\"80552037\",{\"1\":{\"1050\":1}}],[\"80\",{\"1\":{\"1034\":2,\"1035\":2,\"1038\":2,\"1203\":1,\"1301\":1,\"1496\":1}}],[\"8\",{\"0\":{\"534\":1,\"657\":1,\"841\":1,\"1205\":1,\"1747\":1,\"3125\":1,\"3178\":1},\"1\":{\"67\":1,\"74\":2,\"691\":1,\"878\":1,\"1164\":1,\"1687\":1,\"1702\":1,\"1748\":1,\"1749\":1,\"1751\":1,\"1755\":2,\"1772\":1,\"1781\":1,\"1929\":1,\"1932\":2,\"1951\":1,\"1957\":1,\"1965\":2,\"1971\":4,\"1976\":1,\"1981\":1,\"1985\":1,\"2355\":1,\"2362\":2,\"2373\":2,\"2743\":1,\"2748\":2,\"2759\":1,\"2763\":1,\"2885\":1,\"3048\":1,\"3175\":1,\"3176\":1,\"3256\":1}}],[\"控制逗号在行尾出现还是在行首出现\",{\"1\":{\"3388\":1}}],[\"控制逗号前后的空格\",{\"1\":{\"3388\":1}}],[\"控制的目的就是避免\",{\"1\":{\"958\":1}}],[\"控制位\",{\"1\":{\"749\":1}}],[\"控制并发\",{\"1\":{\"388\":1}}],[\"控制\",{\"1\":{\"67\":1}}],[\"都抽取出来后\",{\"1\":{\"3073\":1}}],[\"都对应两个位图标记\",{\"1\":{\"2546\":1}}],[\"都有一个本地工作队列\",{\"1\":{\"2554\":1}}],[\"都有一个\",{\"1\":{\"2528\":1}}],[\"都有哪些协议\",{\"0\":{\"705\":1}}],[\"都只存储一种大小的元素\",{\"1\":{\"2524\":1}}],[\"都只能使用\",{\"1\":{\"2417\":1}}],[\"都要确保完成上一轮\",{\"1\":{\"2506\":1}}],[\"都要判断会不会由于自己的加入导致了死锁\",{\"1\":{\"384\":1}}],[\"都不适合分配到栈上\",{\"1\":{\"2597\":1}}],[\"都不会作用到局部变量\",{\"1\":{\"2216\":1}}],[\"都不能作用到局部变量\",{\"1\":{\"2215\":1}}],[\"都能够在栈上进行分配空间\",{\"1\":{\"2417\":1}}],[\"都能顺利通过编译并且执行\",{\"1\":{\"2159\":1}}],[\"都能完全载入节点并且利用预读属性\",{\"1\":{\"497\":1}}],[\"都满足那么皆大欢喜这个类型实现了接口的方法\",{\"1\":{\"2063\":1,\"2079\":1}}],[\"都需要委托ip\",{\"1\":{\"1304\":1}}],[\"都允许开发人员自定义和扩充\",{\"1\":{\"1183\":1}}],[\"都为\",{\"1\":{\"1029\":1}}],[\"都送到了\",{\"1\":{\"905\":1}}],[\"都置为1\",{\"1\":{\"796\":1}}],[\"都会触发\",{\"1\":{\"3212\":1}}],[\"都会被分配到堆上\",{\"1\":{\"2597\":1}}],[\"都会先执行未完成的\",{\"1\":{\"2495\":1}}],[\"都会了解\",{\"1\":{\"2156\":1}}],[\"都会产生\",{\"1\":{\"638\":1}}],[\"都会输入地址\",{\"1\":{\"62\":1}}],[\"都是为了迎合\",{\"1\":{\"2963\":1}}],[\"都是一致\",{\"1\":{\"2743\":1}}],[\"都是一个事务中对数据进行了多次的读取\",{\"1\":{\"568\":1}}],[\"都是通过传递拷贝后变量的地址来实现传值的语义\",{\"1\":{\"2218\":1}}],[\"都是以\",{\"1\":{\"2186\":1}}],[\"都是把\",{\"1\":{\"2091\":1}}],[\"都是可以通过一次读取字长来获得\",{\"1\":{\"1940\":1}}],[\"都是\",{\"1\":{\"1175\":1}}],[\"都是用了函数操作\",{\"1\":{\"550\":1}}],[\"都是追加操作\",{\"1\":{\"227\":1}}],[\"都可以保证⼀个报⽂⼀定能够到达接收端\",{\"1\":{\"737\":1}}],[\"都可以解决\",{\"1\":{\"575\":1}}],[\"都可以得到前一个状态的值\",{\"1\":{\"166\":1}}],[\"都可以用于表示事务的提交状态\",{\"1\":{\"139\":1}}],[\"都将依赖于此时读到的权限\",{\"1\":{\"66\":1}}],[\"await\",{\"1\":{\"3388\":1}}],[\"avoid\",{\"1\":{\"3388\":1}}],[\"av\",{\"1\":{\"3096\":3}}],[\"av消息\",{\"1\":{\"3078\":1}}],[\"avt\",{\"1\":{\"478\":1}}],[\"aes\",{\"1\":{\"2891\":1}}],[\"apply\",{\"1\":{\"3388\":2}}],[\"apple\",{\"0\":{\"3466\":1},\"1\":{\"3053\":4,\"3058\":1}}],[\"append\",{\"1\":{\"1717\":2,\"3054\":1,\"3176\":1}}],[\"api\",{\"0\":{\"2883\":1},\"1\":{\"2882\":1,\"2884\":1,\"2887\":1,\"2888\":1,\"2893\":1}}],[\"aix\",{\"1\":{\"2795\":1}}],[\"auxv\",{\"1\":{\"2783\":9}}],[\"authentication\",{\"1\":{\"3428\":1}}],[\"authors\",{\"1\":{\"2882\":1}}],[\"authority\",{\"1\":{\"1201\":1}}],[\"authoritative\",{\"1\":{\"1087\":1}}],[\"auto\",{\"1\":{\"179\":1,\"226\":1}}],[\"autocommit=1\",{\"1\":{\"177\":1}}],[\"autocommit=0\",{\"1\":{\"175\":1,\"176\":1}}],[\"about\",{\"1\":{\"3428\":1}}],[\"aborted\",{\"1\":{\"2919\":1,\"2920\":1}}],[\"abort\",{\"1\":{\"2755\":1,\"2761\":1,\"2805\":1}}],[\"ab+\",{\"1\":{\"3171\":1}}],[\"ab\",{\"1\":{\"3167\":1}}],[\"abcmeta\",{\"1\":{\"3099\":1}}],[\"abc\",{\"1\":{\"3099\":1}}],[\"abcde\",{\"1\":{\"3052\":1}}],[\"abc123456\",{\"1\":{\"3048\":2}}],[\"able\",{\"1\":{\"2795\":1}}],[\"abi0\",{\"1\":{\"2763\":1,\"2795\":1}}],[\"abiinternal\",{\"1\":{\"2763\":1}}],[\"abstractmethod\",{\"1\":{\"3099\":2}}],[\"abstract\",{\"1\":{\"1421\":1}}],[\"amd\",{\"1\":{\"2753\":1}}],[\"amd64\",{\"1\":{\"2741\":4,\"2743\":3,\"2744\":1,\"2748\":6,\"2753\":1,\"2755\":1,\"2757\":1,\"2759\":1,\"2761\":1,\"2771\":1,\"2797\":1,\"3354\":1}}],[\"ax\",{\"1\":{\"2753\":5,\"2755\":2,\"2757\":3,\"2759\":4,\"2761\":5}}],[\"again\",{\"1\":{\"2418\":2}}],[\"age和\",{\"1\":{\"3087\":1}}],[\"agent\",{\"1\":{\"1569\":1}}],[\"age=\",{\"1\":{\"288\":1}}],[\"age=10\",{\"1\":{\"273\":1,\"284\":1,\"532\":1}}],[\"age\",{\"1\":{\"259\":1,\"264\":1,\"269\":1,\"272\":1,\"283\":1,\"284\":1,\"288\":1,\"289\":1,\"3075\":4,\"3084\":12,\"3087\":12,\"3096\":15}}],[\"age`\",{\"1\":{\"251\":1}}],[\"a+\",{\"1\":{\"3169\":1}}],[\"a+b\",{\"1\":{\"2370\":1}}],[\"a++\",{\"1\":{\"2309\":2,\"2320\":2,\"2378\":3}}],[\"a=0\",{\"1\":{\"3028\":1}}],[\"a=5\",{\"1\":{\"2376\":1}}],[\"a=3\",{\"1\":{\"2365\":2,\"2375\":1,\"2376\":1,\"2380\":1}}],[\"a=1\",{\"1\":{\"2296\":1,\"2354\":1,\"2359\":1,\"2367\":1}}],[\"a2正常结束\",{\"1\":{\"2904\":1}}],[\"a2的参数\",{\"1\":{\"2454\":1}}],[\"a2\",{\"1\":{\"2272\":3,\"2273\":2,\"2383\":2,\"2386\":2,\"2388\":5,\"2425\":2,\"2451\":1,\"2453\":1,\"2454\":1,\"2904\":2,\"2905\":1,\"2909\":1,\"2928\":2,\"2930\":2,\"2932\":2,\"2934\":3,\"2949\":2,\"2951\":1,\"2952\":2}}],[\"a1再次panic\",{\"1\":{\"2913\":1}}],[\"a1正常结束\",{\"1\":{\"2904\":1,\"2928\":1,\"2949\":1}}],[\"a1和a2\",{\"1\":{\"2384\":1}}],[\"a1的参数\",{\"1\":{\"2454\":1}}],[\"a1的参数加返回值共占多少字节的变量\",{\"1\":{\"2355\":1}}],[\"a1的函数调用栈中\",{\"1\":{\"2367\":1}}],[\"a1\",{\"1\":{\"2272\":4,\"2273\":2,\"2352\":2,\"2355\":1,\"2356\":3,\"2358\":1,\"2359\":1,\"2362\":2,\"2366\":2,\"2367\":1,\"2383\":2,\"2389\":2,\"2400\":2,\"2402\":1,\"2416\":1,\"2425\":2,\"2426\":1,\"2427\":1,\"2453\":1,\"2454\":1,\"2904\":2,\"2905\":1,\"2913\":2,\"2914\":2,\"2916\":1,\"2917\":1,\"2918\":1,\"2920\":1,\"2928\":2,\"2930\":1,\"2942\":2,\"2949\":2,\"2955\":2,\"2956\":1}}],[\"a147\",{\"1\":{\"1190\":1}}],[\"a了\",{\"1\":{\"2257\":1}}],[\"a的地址\",{\"1\":{\"2176\":1}}],[\"aftercolon\",{\"1\":{\"3388\":1}}],[\"after\",{\"1\":{\"1717\":1,\"2795\":1,\"3388\":6}}],[\"after头信息中\",{\"1\":{\"1148\":1}}],[\"add\",{\"1\":{\"2783\":1,\"2793\":1,\"3028\":2,\"3063\":2,\"3341\":1,\"3342\":1}}],[\"addr\",{\"1\":{\"2362\":1,\"2373\":1}}],[\"addr2line\",{\"1\":{\"2893\":1}}],[\"addr2\",{\"1\":{\"2141\":1,\"2356\":2}}],[\"addr1\",{\"1\":{\"2141\":1,\"2356\":1,\"2372\":1}}],[\"address\",{\"1\":{\"1656\":2,\"1670\":1,\"1673\":1,\"1680\":1,\"1687\":4,\"1702\":4,\"2260\":1,\"3295\":2}}],[\"addres\",{\"1\":{\"1656\":2,\"1670\":1,\"1673\":1,\"1680\":1,\"1687\":3,\"1702\":3}}],[\"adapter\",{\"1\":{\"1482\":1}}],[\"administrator\",{\"1\":{\"400\":1}}],[\"aom\",{\"1\":{\"1423\":1}}],[\"asi\",{\"1\":{\"3388\":1}}],[\"assert\",{\"1\":{\"3176\":1}}],[\"assertionerror\",{\"1\":{\"3119\":1}}],[\"assignment\",{\"1\":{\"3388\":1}}],[\"assign\",{\"1\":{\"3388\":7}}],[\"assignableto\",{\"1\":{\"2206\":1}}],[\"assist\",{\"1\":{\"2478\":1,\"2500\":1,\"2581\":1}}],[\"assisttime\",{\"1\":{\"2477\":1}}],[\"as\",{\"1\":{\"3038\":2,\"3113\":1,\"3119\":3,\"3175\":2,\"3176\":1,\"3177\":4}}],[\"asm初始化\",{\"1\":{\"2795\":1}}],[\"asminit\",{\"1\":{\"2795\":1}}],[\"asm\",{\"1\":{\"2748\":1,\"2753\":1,\"2755\":1,\"2757\":1,\"2759\":1,\"2761\":1,\"2893\":1}}],[\"ascii\",{\"0\":{\"1736\":1},\"1\":{\"1739\":2,\"1751\":1,\"1781\":1}}],[\"ascll\",{\"1\":{\"717\":1}}],[\"async><\",{\"1\":{\"1411\":2}}],[\"async\",{\"1\":{\"1408\":1,\"3388\":1}}],[\"alert\",{\"1\":{\"3388\":2}}],[\"always参数\",{\"1\":{\"3388\":2}}],[\"always\",{\"1\":{\"1916\":1,\"2759\":1,\"3388\":6}}],[\"alginit\",{\"1\":{\"2789\":2}}],[\"alg\",{\"1\":{\"2008\":1}}],[\"alg这里记录了该类型的两个函数\",{\"1\":{\"1868\":1}}],[\"algowiki\",{\"1\":{\"1618\":1}}],[\"align\",{\"1\":{\"2008\":1,\"2206\":1}}],[\"alignof\",{\"1\":{\"1950\":1,\"1951\":1,\"1965\":1}}],[\"alignment\",{\"1\":{\"1937\":1}}],[\"alias\",{\"0\":{\"2026\":1},\"1\":{\"1772\":2}}],[\"alive\",{\"1\":{\"1161\":1,\"1510\":2,\"1511\":2,\"1512\":1}}],[\"alt=\",{\"1\":{\"1411\":1}}],[\"alter\",{\"1\":{\"342\":1}}],[\"allstr\",{\"1\":{\"3341\":3,\"3342\":3}}],[\"allstreamserver\",{\"1\":{\"3342\":1}}],[\"allstream\",{\"1\":{\"3340\":1,\"3341\":1,\"3342\":1}}],[\"allp\",{\"1\":{\"2832\":1,\"2835\":1}}],[\"allm\",{\"1\":{\"2832\":1,\"2834\":1}}],[\"allgs\",{\"1\":{\"2832\":1,\"2833\":1}}],[\"allgadd\",{\"1\":{\"2793\":1}}],[\"allowarrowfunctions\",{\"1\":{\"3388\":2}}],[\"allowsingleline\",{\"1\":{\"3388\":1}}],[\"allowpattern\",{\"1\":{\"3388\":2}}],[\"allowkeywords\",{\"1\":{\"3388\":3}}],[\"allow\",{\"1\":{\"3388\":5}}],[\"allowed\",{\"1\":{\"1135\":1,\"3397\":1}}],[\"allocate\",{\"1\":{\"2795\":1}}],[\"allocbits\",{\"1\":{\"2546\":1,\"2547\":1}}],[\"all\",{\"1\":{\"1406\":1,\"1772\":2,\"3388\":2}}],[\"a只需要等待1个msl就够了\",{\"1\":{\"874\":1}}],[\"around\",{\"1\":{\"3388\":1}}],[\"arrow\",{\"1\":{\"3388\":7}}],[\"arrays\",{\"1\":{\"3388\":1}}],[\"array\",{\"1\":{\"1640\":1,\"1807\":1,\"1916\":1,\"2206\":2,\"3388\":4}}],[\"arrayb\",{\"1\":{\"1640\":5}}],[\"arraya\",{\"1\":{\"1640\":6}}],[\"are\",{\"1\":{\"3346\":1}}],[\"area\",{\"1\":{\"3090\":3}}],[\"arena\",{\"1\":{\"2523\":1,\"2536\":2,\"2538\":1,\"2542\":1}}],[\"archive\",{\"1\":{\"2891\":1}}],[\"arm\",{\"1\":{\"2868\":1}}],[\"argp\",{\"1\":{\"2793\":3,\"2919\":1}}],[\"arg\",{\"1\":{\"2761\":1,\"2919\":1,\"3116\":4}}],[\"args\",{\"1\":{\"2759\":1,\"2766\":1,\"2779\":1,\"2780\":1,\"2800\":1,\"3028\":2,\"3122\":1,\"3238\":2,\"3240\":2,\"3388\":2}}],[\"arguments\",{\"1\":{\"2748\":1,\"3388\":3}}],[\"argv参数\",{\"1\":{\"2800\":1}}],[\"argv\",{\"1\":{\"2747\":1,\"2748\":3,\"2753\":1,\"2759\":1,\"2779\":1,\"2780\":2,\"2783\":6,\"3116\":1}}],[\"argc\",{\"1\":{\"2747\":1,\"2748\":1,\"2753\":1,\"2759\":1,\"2779\":1,\"2780\":2,\"2783\":2,\"2800\":1}}],[\"articles\",{\"1\":{\"1058\":1,\"1059\":1}}],[\"article\",{\"1\":{\"805\":1,\"1048\":1,\"1050\":1,\"1052\":1,\"1056\":1,\"3255\":1}}],[\"arp\",{\"1\":{\"711\":1,\"1327\":1,\"1330\":1,\"1331\":1,\"1333\":3,\"1334\":2,\"1380\":1,\"1381\":3}}],[\"attribute\",{\"1\":{\"3084\":1,\"3087\":1}}],[\"attributeerror\",{\"1\":{\"3084\":1,\"3087\":1}}],[\"atomicstatus\",{\"1\":{\"2868\":1}}],[\"atomic\",{\"1\":{\"2793\":1}}],[\"atomicity\",{\"1\":{\"144\":1}}],[\"atoi32\",{\"1\":{\"2789\":1}}],[\"at\",{\"1\":{\"628\":1,\"658\":1,\"2350\":1,\"2362\":1,\"2373\":1,\"2420\":1,\"2480\":1,\"2783\":2}}],[\"a\",{\"0\":{\"3455\":1},\"1\":{\"266\":3,\"268\":4,\"304\":3,\"335\":1,\"358\":1,\"359\":1,\"363\":1,\"364\":1,\"374\":3,\"562\":1,\"564\":2,\"566\":2,\"1631\":3,\"1633\":1,\"1791\":1,\"1882\":1,\"1916\":1,\"1940\":1,\"1965\":1,\"1970\":1,\"1981\":2,\"1985\":2,\"2014\":1,\"2103\":3,\"2104\":1,\"2158\":11,\"2160\":1,\"2161\":2,\"2163\":12,\"2164\":3,\"2166\":12,\"2167\":1,\"2168\":6,\"2169\":3,\"2170\":3,\"2172\":6,\"2174\":4,\"2175\":2,\"2176\":1,\"2178\":10,\"2180\":5,\"2182\":3,\"2184\":1,\"2188\":9,\"2189\":5,\"2190\":3,\"2193\":2,\"2195\":17,\"2196\":2,\"2210\":2,\"2211\":1,\"2212\":2,\"2214\":2,\"2215\":1,\"2216\":3,\"2225\":1,\"2232\":3,\"2235\":1,\"2236\":1,\"2237\":3,\"2239\":1,\"2241\":1,\"2244\":1,\"2245\":1,\"2249\":1,\"2250\":2,\"2251\":3,\"2253\":3,\"2254\":3,\"2272\":1,\"2273\":1,\"2281\":1,\"2294\":6,\"2296\":1,\"2299\":3,\"2300\":6,\"2301\":1,\"2303\":4,\"2304\":1,\"2309\":5,\"2310\":2,\"2312\":1,\"2315\":1,\"2320\":5,\"2321\":2,\"2324\":1,\"2333\":2,\"2335\":1,\"2337\":1,\"2352\":9,\"2353\":1,\"2354\":1,\"2358\":1,\"2362\":2,\"2365\":2,\"2370\":8,\"2371\":1,\"2372\":2,\"2373\":1,\"2375\":2,\"2376\":1,\"2378\":9,\"2380\":4,\"2383\":1,\"2384\":1,\"2386\":3,\"2389\":3,\"2400\":9,\"2402\":4,\"2425\":2,\"2427\":3,\"2447\":1,\"2454\":3,\"2480\":1,\"2705\":4,\"2778\":3,\"2904\":2,\"2905\":1,\"2913\":1,\"2914\":1,\"2928\":2,\"2930\":1,\"2937\":1,\"2940\":1,\"2941\":2,\"2942\":2,\"2949\":2,\"3028\":1,\"3048\":9,\"3069\":1,\"3090\":12,\"3165\":1,\"3176\":1,\"3233\":2,\"3248\":3,\"3250\":4,\"3341\":2,\"3342\":2,\"3388\":3,\"3428\":1}}],[\"aa\",{\"1\":{\"237\":1}}],[\"action的一些配置\",{\"1\":{\"3423\":1}}],[\"actions\",{\"1\":{\"3403\":2,\"3428\":3,\"3431\":1,\"3447\":1,\"3451\":1,\"3452\":1}}],[\"action\",{\"0\":{\"3401\":1},\"1\":{\"3403\":1,\"3422\":1,\"3423\":1,\"3425\":1}}],[\"activemodules数据初始化\",{\"1\":{\"2789\":1}}],[\"activemodules\",{\"1\":{\"2789\":3}}],[\"ac246\",{\"1\":{\"3048\":1}}],[\"acquirep\",{\"1\":{\"2795\":1}}],[\"ack确认的数据\",{\"1\":{\"1011\":1,\"1012\":1}}],[\"ack报文被b接收到\",{\"1\":{\"874\":1}}],[\"ack在网络中丢失\",{\"1\":{\"873\":1}}],[\"ack状态的b因为收到了ack\",{\"1\":{\"874\":1}}],[\"ack状态\",{\"1\":{\"852\":1,\"872\":1,\"1396\":1}}],[\"ack置为1\",{\"1\":{\"797\":1}}],[\"ack\",{\"1\":{\"746\":1,\"750\":1,\"796\":1,\"797\":1,\"885\":1,\"903\":1,\"909\":2,\"910\":1,\"1000\":1,\"1001\":3,\"1288\":1,\"1289\":3,\"1290\":2,\"1499\":1,\"1502\":1}}],[\"accept\",{\"1\":{\"3287\":1,\"3311\":1}}],[\"accepted\",{\"1\":{\"1084\":1}}],[\"accessor\",{\"1\":{\"3388\":1}}],[\"accessibility\",{\"1\":{\"1423\":1}}],[\"access\",{\"1\":{\"65\":1,\"3428\":3,\"3429\":1,\"3430\":1,\"3447\":1}}],[\"account\",{\"1\":{\"302\":1}}],[\"acid\",{\"1\":{\"144\":1}}],[\"any\",{\"1\":{\"3388\":1}}],[\"answer\",{\"1\":{\"3023\":2}}],[\"ans=append\",{\"1\":{\"1717\":2}}],[\"ans\",{\"1\":{\"1717\":5}}],[\"ans2会新开辟一个底层数组\",{\"1\":{\"1708\":1}}],[\"ans2与egg共用一个底层数组\",{\"1\":{\"1704\":1}}],[\"ans2=append\",{\"1\":{\"1702\":1}}],[\"ans2的元素是egg索引7到数组结束\",{\"1\":{\"1699\":1}}],[\"ans2结构如下\",{\"1\":{\"1695\":1}}],[\"ans2\",{\"1\":{\"1687\":6,\"1702\":7}}],[\"ans1的可读写范围是底层数组的索引1到3\",{\"1\":{\"1700\":1}}],[\"ans1的元素是egg索引1到4\",{\"1\":{\"1694\":1}}],[\"ans1结构如下\",{\"1\":{\"1690\":1}}],[\"ans1\",{\"1\":{\"1687\":6,\"1702\":6}}],[\"anotherscript\",{\"1\":{\"1411\":1}}],[\"an\",{\"0\":{\"696\":1},\"1\":{\"78\":1,\"1772\":2,\"2748\":1,\"3113\":1}}],[\"andq\",{\"1\":{\"2753\":1}}],[\"and\",{\"1\":{\"1\":1,\"83\":1,\"178\":1,\"179\":1,\"236\":1,\"246\":1,\"273\":2,\"288\":1,\"289\":1,\"516\":1,\"518\":1,\"532\":2,\"1772\":2,\"2473\":2,\"2748\":1,\"3090\":2,\"3205\":1,\"3365\":1,\"3388\":4,\"3431\":1}}],[\"ubuntu\",{\"1\":{\"3419\":1,\"3428\":1}}],[\"up\",{\"1\":{\"3428\":1}}],[\"upper\",{\"1\":{\"3048\":1}}],[\"update\",{\"1\":{\"97\":1,\"133\":1,\"356\":1,\"358\":1,\"359\":1,\"367\":1,\"661\":1,\"3063\":1,\"3069\":1}}],[\"uint\",{\"1\":{\"1998\":1,\"2206\":1}}],[\"uint64\",{\"1\":{\"1998\":1,\"2480\":1,\"2789\":1,\"2872\":2}}],[\"uintptr\",{\"1\":{\"1834\":1,\"1866\":2,\"1869\":2,\"1900\":1,\"1916\":2,\"1998\":1,\"2008\":2,\"2014\":2,\"2099\":2,\"2206\":1,\"2224\":1,\"2350\":2,\"2362\":2,\"2373\":2,\"2420\":2,\"2459\":4,\"2783\":3,\"2793\":1,\"2795\":1,\"2868\":3,\"2907\":2}}],[\"uint32\",{\"1\":{\"1834\":1,\"1900\":1,\"1998\":1,\"2008\":1,\"2014\":1,\"2018\":1,\"2224\":1,\"2480\":4,\"2864\":5,\"2868\":1,\"2872\":4}}],[\"uint16\",{\"1\":{\"1834\":1,\"1998\":1,\"2014\":1,\"2018\":2,\"2778\":1}}],[\"uint8\",{\"1\":{\"1772\":3,\"1834\":2,\"1866\":1,\"1998\":1,\"2008\":3,\"2014\":2,\"2778\":3,\"2793\":1}}],[\"utf16的编解码方法\",{\"1\":{\"2891\":1}}],[\"utf\",{\"0\":{\"1747\":1},\"1\":{\"1748\":1,\"1749\":1,\"1750\":1,\"1751\":1,\"1753\":1,\"1755\":2,\"1781\":1,\"3175\":1,\"3176\":1}}],[\"utf8mb4\",{\"1\":{\"553\":1}}],[\"utf8\",{\"1\":{\"553\":1}}],[\"url的组成\",{\"1\":{\"1253\":1}}],[\"url\",{\"1\":{\"1175\":1,\"1176\":2,\"1183\":1,\"1254\":1,\"3388\":2,\"3447\":1}}],[\"uri\",{\"1\":{\"1172\":1,\"1183\":1,\"1539\":1}}],[\"udp是不需要连接\",{\"1\":{\"785\":1}}],[\"udp是一个一个包传输的\",{\"1\":{\"779\":1}}],[\"udp是可以一对一\",{\"1\":{\"770\":1}}],[\"udp首部只有8个字节\",{\"1\":{\"776\":1}}],[\"udp尽最大努力交付\",{\"1\":{\"773\":1}}],[\"udp不需要建立连接\",{\"1\":{\"767\":1}}],[\"udp\",{\"1\":{\"713\":1,\"735\":1,\"1006\":1,\"1007\":1,\"2891\":1}}],[\"u\",{\"1\":{\"302\":2,\"2206\":3,\"3147\":1,\"3347\":1}}],[\"unneeded\",{\"1\":{\"3388\":1}}],[\"underscore\",{\"1\":{\"3388\":1}}],[\"undefined\",{\"1\":{\"3388\":3}}],[\"undefimed\",{\"1\":{\"3388\":1}}],[\"undef\",{\"1\":{\"3388\":2}}],[\"unmodified\",{\"1\":{\"3388\":1}}],[\"unreachable\",{\"1\":{\"3388\":1}}],[\"unexpected\",{\"1\":{\"3113\":1,\"3388\":1}}],[\"untime\",{\"1\":{\"2457\":1}}],[\"until\",{\"1\":{\"2239\":1}}],[\"unpackeface\",{\"1\":{\"2234\":1,\"2239\":1,\"2241\":1,\"2260\":1}}],[\"unpatch\",{\"1\":{\"34\":1}}],[\"uncommon\",{\"1\":{\"2206\":1}}],[\"uncommontype\",{\"1\":{\"2017\":1,\"2018\":1,\"2023\":1,\"2024\":1,\"2206\":1}}],[\"uncommitted\",{\"1\":{\"148\":1,\"572\":1,\"580\":1}}],[\"unsafe\",{\"1\":{\"1834\":2,\"1869\":3,\"1890\":1,\"1892\":1,\"1895\":1,\"1900\":1,\"1903\":1,\"1950\":1,\"1951\":1,\"1965\":2,\"1981\":2,\"1985\":2,\"2014\":1,\"2208\":1,\"2213\":1,\"2220\":1,\"2224\":1,\"2229\":1,\"2236\":1,\"2239\":1,\"2241\":1,\"2260\":2,\"2459\":1,\"2778\":1,\"2783\":1,\"2793\":2,\"2795\":2,\"2891\":1,\"2919\":1}}],[\"unsigned\",{\"1\":{\"1772\":1}}],[\"unix\",{\"1\":{\"3342\":1,\"3388\":1}}],[\"unix网络编程\",{\"1\":{\"861\":1}}],[\"union\",{\"1\":{\"3065\":1}}],[\"unicodedecodeerror\",{\"1\":{\"3175\":1}}],[\"unicode符号范围\",{\"1\":{\"1753\":1}}],[\"unicode规定了字符的二进制形式\",{\"1\":{\"1744\":1}}],[\"unicode\",{\"0\":{\"1740\":1},\"1\":{\"1743\":1,\"1746\":1,\"1748\":1,\"1751\":1,\"1752\":1,\"1755\":1,\"1781\":1,\"2891\":1,\"3388\":2}}],[\"unused\",{\"1\":{\"1117\":1,\"2018\":1,\"2868\":5,\"3388\":3}}],[\"unable\",{\"1\":{\"3447\":1}}],[\"unary\",{\"1\":{\"3388\":1}}],[\"unaddressable\",{\"1\":{\"2232\":1,\"2246\":1}}],[\"unavailable\",{\"1\":{\"1147\":1}}],[\"unauthorized\",{\"1\":{\"1126\":1}}],[\"una\",{\"1\":{\"1038\":1,\"1039\":1,\"1042\":1}}],[\"unknown\",{\"0\":{\"696\":1},\"1\":{\"2789\":1}}],[\"unlock\",{\"1\":{\"317\":1,\"348\":1,\"2789\":1}}],[\"usage\",{\"1\":{\"3365\":1}}],[\"usable\",{\"1\":{\"1034\":1,\"1038\":1,\"1039\":1,\"1040\":1,\"1042\":1}}],[\"using\",{\"1\":{\"83\":1,\"2232\":1,\"2246\":1,\"2748\":1,\"3388\":1}}],[\"useless\",{\"1\":{\"3388\":4}}],[\"uses\",{\"1\":{\"2789\":2,\"3423\":1,\"3428\":3}}],[\"used\",{\"1\":{\"1772\":2,\"2018\":2,\"2789\":1}}],[\"use\",{\"1\":{\"79\":1,\"1114\":1,\"3346\":1,\"3388\":2}}],[\"users\",{\"1\":{\"3365\":1}}],[\"username\",{\"1\":{\"3205\":2}}],[\"user2\",{\"1\":{\"205\":1}}],[\"userf\",{\"1\":{\"205\":1}}],[\"userc\",{\"1\":{\"205\":1}}],[\"usera\",{\"1\":{\"205\":1}}],[\"user\",{\"1\":{\"65\":1,\"1569\":1,\"2473\":1}}],[\"u$user\",{\"1\":{\"63\":1}}],[\"密码\",{\"1\":{\"62\":1}}],[\"时才会触发\",{\"1\":{\"3413\":1,\"3428\":1}}],[\"时使用\",{\"1\":{\"3388\":1}}],[\"时函数会暂停并保存当前所有的运行信息\",{\"1\":{\"3253\":1}}],[\"时触发\",{\"1\":{\"3211\":1,\"3213\":1,\"3214\":1,\"3215\":1}}],[\"时都对startbucket和startcell进行了random操作\",{\"1\":{\"1865\":1}}],[\"时的数据都已收到\",{\"1\":{\"1001\":1}}],[\"时延\",{\"1\":{\"960\":1,\"963\":1}}],[\"时延等问题\",{\"1\":{\"957\":1}}],[\"时\",{\"1\":{\"750\":1,\"751\":1,\"752\":1,\"753\":1,\"976\":1,\"977\":1,\"1250\":1,\"1715\":1,\"2575\":1,\"2589\":1,\"3388\":1}}],[\"时候都会加锁\",{\"1\":{\"2837\":1}}],[\"时候他的哈希值通过哈希函数得到桶的编号\",{\"1\":{\"1811\":1}}],[\"时候\",{\"1\":{\"62\":1,\"192\":1,\"2668\":1}}],[\"时间复杂度就是o\",{\"1\":{\"1796\":1}}],[\"时间复杂度就会高\",{\"1\":{\"493\":1}}],[\"时间复杂度为o\",{\"1\":{\"1808\":1}}],[\"时间复杂度为\",{\"1\":{\"200\":1}}],[\"时间需要的更多\",{\"1\":{\"448\":1}}],[\"时间\",{\"1\":{\"59\":1,\"898\":1,\"2721\":1}}],[\"以方括号取对象属性时\",{\"1\":{\"3388\":1}}],[\"以二进制格式打开一个文件只用于写入\",{\"1\":{\"3160\":1}}],[\"以二进制格式打开一个文件用于追加\",{\"1\":{\"3168\":1,\"3172\":1}}],[\"以二进制格式打开一个文件用于读写\",{\"1\":{\"3156\":1,\"3164\":1}}],[\"以二进制格式打开一个文件用于只读\",{\"1\":{\"3152\":1}}],[\"以只读方式打开文件\",{\"1\":{\"3150\":1}}],[\"以internal命名的包只允许它父级和父级的子级目录导入\",{\"1\":{\"2891\":1}}],[\"以便我们可以开始调用常规\",{\"1\":{\"2795\":1}}],[\"以便在主html解析器到达请求的资源时\",{\"1\":{\"1410\":1}}],[\"以windows\",{\"1\":{\"2743\":1}}],[\"以上简单介绍了一些垃圾回收的方法\",{\"1\":{\"2676\":1}}],[\"以上面这个图为例\",{\"1\":{\"221\":1}}],[\"以下是证据\",{\"1\":{\"2162\":1}}],[\"以下有两种方法\",{\"1\":{\"2028\":1}}],[\"以下都是\",{\"1\":{\"1994\":1}}],[\"以满足\",{\"1\":{\"1976\":1}}],[\"以32位cpu举例\",{\"1\":{\"1936\":1}}],[\"以确保它们以正确的顺序绘制到屏幕上\",{\"1\":{\"1443\":1}}],[\"以确保报文已被自然消亡\",{\"1\":{\"871\":1}}],[\"以视区的大小为基础\",{\"1\":{\"1436\":1}}],[\"以这样的方式去拿到所需要的核心数据\",{\"1\":{\"1388\":1}}],[\"以这两个坐标所构成的矩阵的区域\",{\"1\":{\"41\":1,\"42\":1}}],[\"以太网中一般为\",{\"1\":{\"1297\":1}}],[\"以bst\",{\"1\":{\"478\":1}}],[\"以免对线上服务造成影响\",{\"1\":{\"332\":1}}],[\"以前有一种做法\",{\"1\":{\"295\":1}}],[\"以age=1\",{\"1\":{\"288\":1}}],[\"以最左原则进行where检索\",{\"1\":{\"288\":1}}],[\"以市民表的联合索引\",{\"1\":{\"272\":1}}],[\"以及许多与调度相关的内容\",{\"1\":{\"2839\":1}}],[\"以及\",{\"1\":{\"2741\":2}}],[\"以及与垃圾回收程序之间的竞争问题\",{\"1\":{\"2719\":1}}],[\"以及控制\",{\"1\":{\"2481\":1}}],[\"以及不同类型的\",{\"1\":{\"2478\":1}}],[\"以及返回地址与\",{\"1\":{\"2310\":1}}],[\"以及确定页面上每个对象的大小和位置的过程\",{\"1\":{\"1433\":1}}],[\"以及你是否处于隐私浏览模式\",{\"1\":{\"1250\":1}}],[\"以及各种控制以及错误处理方式\",{\"1\":{\"1072\":1}}],[\"以及解决根据身份证号查询地址的需求\",{\"1\":{\"267\":1}}],[\"以及所有的内置函数\",{\"1\":{\"59\":1}}],[\"以\",{\"1\":{\"259\":1,\"1913\":1,\"2426\":1,\"2567\":1,\"2741\":1,\"3408\":1}}],[\"以插件形式\",{\"1\":{\"60\":1}}],[\"的斜杠数量和方向\",{\"1\":{\"3439\":1}}],[\"的默认输出目录\",{\"1\":{\"3428\":1}}],[\"的默认值本身就是\",{\"1\":{\"381\":1}}],[\"的默认值是\",{\"1\":{\"378\":1}}],[\"的文档来获取更多信息\",{\"1\":{\"3428\":1}}],[\"的构造函数\",{\"1\":{\"3388\":2}}],[\"的帮助\",{\"1\":{\"3316\":1}}],[\"的限定只对当前类的对象生效\",{\"1\":{\"3086\":1}}],[\"的东西\",{\"1\":{\"3073\":1}}],[\"的总体设计思路不变\",{\"1\":{\"2963\":1}}],[\"的执行改成了\",{\"1\":{\"2963\":1}}],[\"的信息\",{\"1\":{\"2922\":1}}],[\"的信息然后输出\",{\"1\":{\"2922\":1}}],[\"的解析知道\",{\"1\":{\"2900\":1}}],[\"的生命周期\",{\"1\":{\"2865\":1}}],[\"的锁定\",{\"1\":{\"2862\":1}}],[\"的g\",{\"1\":{\"2862\":1}}],[\"的本地\",{\"1\":{\"2838\":1,\"2840\":1}}],[\"的本地队列中\",{\"1\":{\"2848\":1}}],[\"的本地队列\",{\"1\":{\"2790\":1}}],[\"的任务\",{\"1\":{\"2837\":1,\"2859\":1}}],[\"的下一个运行的\",{\"1\":{\"2803\":1}}],[\"的入口点\",{\"1\":{\"2795\":1}}],[\"的相关属性\",{\"1\":{\"2792\":1}}],[\"的相关基础知识的普及\",{\"1\":{\"2726\":1}}],[\"的数量\",{\"1\":{\"2789\":1}}],[\"的数据结构的操作\",{\"1\":{\"2891\":1}}],[\"的数据填满整个网络\",{\"1\":{\"958\":1}}],[\"的数据写入磁盘中\",{\"1\":{\"656\":1}}],[\"的数据\",{\"1\":{\"21\":1}}],[\"的一个对象\",{\"1\":{\"2789\":1}}],[\"的一段代码\",{\"1\":{\"2324\":1}}],[\"的引用是通过\",{\"1\":{\"2763\":1}}],[\"的死代码消除\",{\"1\":{\"2761\":1}}],[\"的前两个值分别对应\",{\"1\":{\"2747\":1}}],[\"的缩写\",{\"1\":{\"2746\":1}}],[\"的调度\",{\"1\":{\"2733\":1}}],[\"的调用会被编译器编译成\",{\"1\":{\"2278\":1}}],[\"的调用方式是传入一个\",{\"1\":{\"2189\":1}}],[\"的访问便会出错\",{\"1\":{\"2705\":1}}],[\"的新副本所持有的是陈旧对象\",{\"1\":{\"2705\":1}}],[\"的压力\",{\"1\":{\"2666\":1}}],[\"的使用率为\",{\"1\":{\"2567\":1}}],[\"的使用率\",{\"0\":{\"2566\":1}}],[\"的写法\",{\"1\":{\"3205\":1}}],[\"的写屏障缓冲区\",{\"1\":{\"2564\":1}}],[\"的写入拆成了两个步骤\",{\"1\":{\"677\":1}}],[\"的工作分一些到全局工作队列中\",{\"1\":{\"2560\":1}}],[\"的工作\",{\"1\":{\"2558\":1}}],[\"的元数据信息\",{\"1\":{\"2536\":1}}],[\"的内置属性\",{\"1\":{\"3388\":1}}],[\"的内存管理分为三级\",{\"1\":{\"2517\":1}}],[\"的内容\",{\"1\":{\"619\":1}}],[\"的处理程序中的异常\",{\"1\":{\"3113\":1}}],[\"的处理逻辑\",{\"1\":{\"2457\":1}}],[\"的处理方式是一直保留的\",{\"1\":{\"2455\":1}}],[\"的第一位是否为\",{\"1\":{\"2453\":1}}],[\"的位置\",{\"1\":{\"2407\":1,\"2432\":1,\"3388\":1}}],[\"的性能问题主要缘于两个方面\",{\"1\":{\"2393\":1}}],[\"的defer\",{\"1\":{\"2389\":1}}],[\"的细节\",{\"1\":{\"2382\":1}}],[\"的代码\",{\"1\":{\"2374\":1}}],[\"的栈正在被移动\",{\"1\":{\"2868\":1}}],[\"的栈指针即遇到不属于自己注册的\",{\"1\":{\"2388\":1}}],[\"的栈指针\",{\"1\":{\"2362\":1,\"2373\":1,\"2386\":1,\"2937\":1}}],[\"的栈帧\",{\"1\":{\"2280\":1,\"2940\":1}}],[\"的栈帧分布就由上至下\",{\"1\":{\"2273\":1}}],[\"的指令入口地址为\",{\"1\":{\"2356\":1}}],[\"的指针类型\",{\"1\":{\"2301\":1}}],[\"的指针\",{\"1\":{\"2251\":1,\"2831\":2}}],[\"的赋值\",{\"1\":{\"2312\":1}}],[\"的自增加一\",{\"1\":{\"2312\":1}}],[\"的参数进行重新赋值\",{\"1\":{\"3388\":1}}],[\"的参数\",{\"1\":{\"2273\":1,\"2362\":1,\"2371\":1,\"2373\":1,\"2416\":1}}],[\"的返回值和参数\",{\"1\":{\"2359\":1}}],[\"的返回值空间的变量\",{\"1\":{\"2323\":1}}],[\"的返回值\",{\"1\":{\"2273\":1,\"2310\":1,\"2321\":1}}],[\"的返回值函数满足闭包的定义\",{\"1\":{\"2114\":1}}],[\"的拷贝值地址\",{\"1\":{\"2235\":1}}],[\"的拷贝值\",{\"1\":{\"2216\":1}}],[\"的函数正常返回以后\",{\"1\":{\"2946\":1}}],[\"的函数值\",{\"1\":{\"2763\":1}}],[\"的函数栈中\",{\"1\":{\"2354\":1}}],[\"的函数\",{\"1\":{\"2189\":1}}],[\"的函数调用栈\",{\"1\":{\"2167\":1}}],[\"的变量\",{\"1\":{\"2164\":1}}],[\"的变量空间分别被返回值进行赋值\",{\"1\":{\"2142\":1}}],[\"的地址对应的值就变成了\",{\"1\":{\"2303\":1}}],[\"的地址对应的值\",{\"1\":{\"2303\":1}}],[\"的地址与\",{\"1\":{\"2303\":1}}],[\"的地址指向这个新的字符串\",{\"1\":{\"2169\":1}}],[\"的地址\",{\"1\":{\"2139\":1,\"2174\":2,\"2214\":1,\"2215\":1,\"2225\":1,\"2237\":1,\"2254\":1,\"2301\":1}}],[\"的统一调用\",{\"1\":{\"2120\":1}}],[\"的接口方法\",{\"1\":{\"2059\":1}}],[\"的接口类型变量\",{\"1\":{\"1902\":1}}],[\"的动态值\",{\"1\":{\"2091\":1}}],[\"的动态值是\",{\"1\":{\"1906\":1}}],[\"的动态类型\",{\"1\":{\"2214\":1}}],[\"的动态类型的反射类型\",{\"1\":{\"2208\":1}}],[\"的动态类型和某个具体类型作比较\",{\"1\":{\"2091\":1}}],[\"的动态类型是\",{\"1\":{\"2060\":1,\"2083\":1}}],[\"的动态类型是否实现了\",{\"1\":{\"2059\":1,\"2076\":1}}],[\"的动态类型是否为\",{\"1\":{\"2048\":1}}],[\"的动态类型不是\",{\"1\":{\"2044\":1}}],[\"的方法\",{\"1\":{\"3388\":1}}],[\"的方法列表缺少了一个\",{\"1\":{\"2083\":1}}],[\"的方法元数据列表\",{\"1\":{\"2024\":1}}],[\"的方式\",{\"1\":{\"311\":1,\"2722\":1,\"2963\":1}}],[\"的倍数\",{\"1\":{\"1971\":1,\"1972\":1,\"1973\":1,\"1976\":1}}],[\"的类型编号为\",{\"1\":{\"2524\":1}}],[\"的类型\",{\"1\":{\"2494\":1}}],[\"的类型是\",{\"1\":{\"2071\":1}}],[\"的类型哈希值\",{\"1\":{\"1917\":1}}],[\"的类型元数据在\",{\"1\":{\"2009\":1}}],[\"的类型元数据\",{\"1\":{\"1895\":1,\"2041\":1}}],[\"的幂\",{\"1\":{\"1916\":1}}],[\"的结构体字段\",{\"1\":{\"2920\":1}}],[\"的结构\",{\"1\":{\"1894\":1,\"2861\":1}}],[\"的桶注定不会被选中的情况\",{\"1\":{\"1805\":1}}],[\"的查找效率\",{\"1\":{\"1799\":1}}],[\"的实现方式会在调用时造成较大的额外开销\",{\"1\":{\"2392\":1}}],[\"的实现方式\",{\"1\":{\"1748\":1}}],[\"的实际接收能力控制发送的数据量\",{\"1\":{\"1026\":1}}],[\"的形式存在的\",{\"1\":{\"2186\":1}}],[\"的形式\",{\"1\":{\"1559\":1}}],[\"的三次握手与服务器建立连接\",{\"1\":{\"1517\":1}}],[\"的三个包\",{\"1\":{\"1202\":1}}],[\"的端口是\",{\"1\":{\"1496\":1}}],[\"的长度的话\",{\"1\":{\"1294\":1}}],[\"的ip地址\",{\"1\":{\"1279\":1}}],[\"的ip\",{\"1\":{\"1272\":1}}],[\"的对应线程并没有创建出来\",{\"1\":{\"2792\":1}}],[\"的对应关系\",{\"1\":{\"1260\":1}}],[\"的对应的ip地址\",{\"1\":{\"1275\":1}}],[\"的对应的\",{\"1\":{\"241\":1}}],[\"的消息格式\",{\"1\":{\"1258\":1}}],[\"的握手阶段全部结束\",{\"1\":{\"1239\":1}}],[\"的规定和浏览器\",{\"1\":{\"1177\":1}}],[\"的底层也是\",{\"1\":{\"1175\":1}}],[\"的底层是\",{\"1\":{\"1175\":1}}],[\"的关于数据如何在万维网中如何通信的协议\",{\"1\":{\"1174\":1}}],[\"的个性页面\",{\"1\":{\"1133\":1}}],[\"的头部格式如下\",{\"1\":{\"1007\":1}}],[\"的通信服务\",{\"1\":{\"1006\":1}}],[\"的通知后\",{\"1\":{\"940\":1}}],[\"的意思是确认有\",{\"1\":{\"998\":1}}],[\"的概念\",{\"1\":{\"959\":1}}],[\"的报文\",{\"1\":{\"909\":2}}],[\"的报⽂会自动丢弃\",{\"1\":{\"739\":1}}],[\"的确认报文\",{\"1\":{\"898\":1}}],[\"的确认报文没有接收到\",{\"1\":{\"898\":1}}],[\"的时间\",{\"1\":{\"2578\":1,\"2677\":1,\"2679\":1}}],[\"的时长呢\",{\"1\":{\"878\":1}}],[\"的时候\",{\"1\":{\"81\":1,\"158\":1,\"308\":1,\"368\":1,\"2324\":1}}],[\"的单位是时间\",{\"1\":{\"869\":1}}],[\"的字段\",{\"1\":{\"2249\":1,\"2918\":1}}],[\"的字段进⾏序列号初始值的设定\",{\"1\":{\"752\":1}}],[\"的字段变为有效\",{\"1\":{\"750\":1}}],[\"的大对象直接在mheap\",{\"1\":{\"2524\":1}}],[\"的大小没有做限制\",{\"1\":{\"1534\":1}}],[\"的大小\",{\"1\":{\"744\":1}}],[\"的大多数核心服务功能以及所有的内置函数\",{\"1\":{\"689\":1}}],[\"的大多数核心服务功能\",{\"1\":{\"59\":1}}],[\"的初值为\",{\"1\":{\"674\":1}}],[\"的条件\",{\"1\":{\"544\":1}}],[\"的整倍数\",{\"1\":{\"496\":1}}],[\"的区别从以下几个方面说明\",{\"1\":{\"429\":1}}],[\"的区别\",{\"0\":{\"426\":1},\"1\":{\"1296\":1}}],[\"的基础之上\",{\"1\":{\"424\":1,\"425\":1}}],[\"的操作\",{\"1\":{\"384\":1}}],[\"的账户余额增加这张电影票价\",{\"1\":{\"365\":1}}],[\"的情况\",{\"1\":{\"358\":1}}],[\"的情况下\",{\"1\":{\"179\":1}}],[\"的主键\",{\"1\":{\"356\":1}}],[\"的作用是\",{\"1\":{\"322\":1}}],[\"的支持\",{\"1\":{\"308\":1}}],[\"的余额没有发生变化\",{\"1\":{\"304\":1}}],[\"的购买系统\",{\"1\":{\"301\":1}}],[\"的则会回表取数据进行再一次的判断\",{\"1\":{\"284\":1}}],[\"的各自查询\",{\"1\":{\"268\":1}}],[\"的普通索引\",{\"1\":{\"264\":1,\"268\":1}}],[\"的人\",{\"1\":{\"262\":1}}],[\"的人信息\",{\"1\":{\"261\":1}}],[\"的记录一条条取出来回表\",{\"1\":{\"283\":1}}],[\"的记录\",{\"1\":{\"240\":2,\"242\":1,\"284\":1}}],[\"的记录后面插入一个新记录\",{\"1\":{\"221\":1}}],[\"的表\",{\"1\":{\"210\":1}}],[\"的索引模型\",{\"0\":{\"207\":1}}],[\"的话\",{\"1\":{\"205\":1}}],[\"的事务\",{\"1\":{\"180\":1}}],[\"的命令\",{\"1\":{\"176\":1}}],[\"的问题\",{\"1\":{\"145\":1,\"178\":1,\"923\":1}}],[\"的值赋值到返回值空间中的\",{\"1\":{\"2321\":1}}],[\"的值经过值拷贝到\",{\"1\":{\"2315\":1}}],[\"的值吗\",{\"1\":{\"2212\":1}}],[\"的值应该略大于报文往返\",{\"1\":{\"896\":1}}],[\"的值会被用来做其他逻辑\",{\"1\":{\"313\":1}}],[\"的值似乎不会产生回表过程\",{\"1\":{\"246\":1}}],[\"的值\",{\"1\":{\"226\":1,\"283\":1,\"896\":1,\"897\":3,\"1001\":1,\"2143\":1,\"2174\":1,\"3253\":1}}],[\"的值为\",{\"1\":{\"218\":1,\"3124\":3}}],[\"的值就是分配到堆上捕获变量\",{\"1\":{\"2143\":1}}],[\"的值就是\",{\"1\":{\"135\":1}}],[\"的值就是0\",{\"1\":{\"134\":1}}],[\"的值是\",{\"1\":{\"133\":1,\"135\":1}}],[\"的行为\",{\"1\":{\"2286\":1}}],[\"的行锁\",{\"1\":{\"374\":2}}],[\"的行的数据\",{\"1\":{\"216\":1}}],[\"的行\",{\"1\":{\"133\":1}}],[\"的功能\",{\"1\":{\"114\":1}}],[\"的\",{\"1\":{\"111\":1,\"248\":1,\"356\":1,\"359\":1,\"381\":1,\"619\":1,\"643\":1,\"739\":1,\"753\":1,\"1289\":1,\"1290\":1,\"1472\":1,\"2055\":1,\"2169\":1,\"2175\":1,\"2176\":1,\"2186\":1,\"2221\":1,\"2524\":1,\"2526\":1,\"2579\":1,\"2790\":1,\"2793\":1,\"2803\":1,\"2862\":1,\"2914\":1,\"2955\":1,\"3419\":1}}],[\"的错误\",{\"1\":{\"65\":1}}],[\"涵盖了\",{\"1\":{\"689\":1}}],[\"涵盖\",{\"1\":{\"59\":1}}],[\"层报文\",{\"1\":{\"1303\":1,\"1320\":1,\"1336\":1}}],[\"层级越大\",{\"1\":{\"1263\":1}}],[\"层面上来说\",{\"1\":{\"641\":1}}],[\"层的\",{\"1\":{\"637\":1}}],[\"层的锁\",{\"1\":{\"323\":1}}],[\"层实现的\",{\"1\":{\"111\":1,\"643\":1}}],[\"层\",{\"1\":{\"107\":1,\"689\":1,\"1344\":1}}],[\"层包括连接器\",{\"1\":{\"59\":1}}],[\"层和存储引擎层\",{\"1\":{\"58\":1,\"688\":1}}],[\"当属性名匹配提供的正则表达式时\",{\"1\":{\"3388\":1}}],[\"当被触发的时候\",{\"1\":{\"3388\":1}}],[\"当运行next\",{\"1\":{\"3257\":1}}],[\"当抛出这个异常\",{\"1\":{\"3250\":1}}],[\"当其数目过多时\",{\"1\":{\"2864\":1}}],[\"当检测到引用对象已经存在新副本时候\",{\"1\":{\"2707\":1}}],[\"当引用次数更新到\",{\"1\":{\"2668\":1}}],[\"当所有可追踪数据都复制到\",{\"1\":{\"2650\":1}}],[\"当要进行垃圾回收时候\",{\"1\":{\"2649\":1}}],[\"当当前的节点的追踪任务完成后\",{\"1\":{\"2624\":1}}],[\"当没有灰色节点时候\",{\"1\":{\"2625\":1}}],[\"当没有\",{\"1\":{\"2497\":1}}],[\"当没有事务回需要这些回滚日志时候\",{\"1\":{\"169\":1}}],[\"当作普通函数调用\",{\"1\":{\"2447\":1}}],[\"当堆上存储\",{\"1\":{\"2414\":1,\"2441\":1}}],[\"当执行\",{\"1\":{\"2408\":1,\"2433\":1,\"2932\":1}}],[\"当执行一条语句时候\",{\"1\":{\"54\":1}}],[\"当参数是空接口情况\",{\"1\":{\"2218\":1}}],[\"当函数\",{\"1\":{\"2169\":1,\"2175\":1,\"2282\":1}}],[\"当函数参数传入的是一个数组时候\",{\"1\":{\"1639\":1}}],[\"当闭包函数执行时候\",{\"1\":{\"2119\":1}}],[\"当捕捉闭包的时候\",{\"1\":{\"2109\":1}}],[\"当目标类型是非空接口\",{\"1\":{\"2088\":1}}],[\"当目标类型为非空接口时\",{\"1\":{\"2062\":1,\"2078\":1}}],[\"当空的结构体为其他结构体的最后一个字段时候\",{\"1\":{\"1984\":1}}],[\"当前的\",{\"1\":{\"2935\":1}}],[\"当前的正常程序反而会不执行\",{\"1\":{\"2457\":1}}],[\"当前函数立刻停止执行剩下的代码\",{\"1\":{\"2916\":1}}],[\"当前执行的\",{\"1\":{\"2900\":1}}],[\"当前g所绑定的函数内存地址\",{\"1\":{\"2868\":1}}],[\"当前g所被分配的栈内存空间\",{\"1\":{\"2868\":1}}],[\"当前g是否可抢占\",{\"1\":{\"2868\":1}}],[\"当前关联该g实例的m实例\",{\"1\":{\"2868\":1}}],[\"当前未使用\",{\"1\":{\"2868\":1}}],[\"当前p已死亡\",{\"1\":{\"2864\":1}}],[\"当前p已经和m关联\",{\"1\":{\"2864\":1}}],[\"当前p需要停止调度\",{\"1\":{\"2864\":1}}],[\"当前p正在执行系统调用\",{\"1\":{\"2864\":1}}],[\"当前p尚未与任何m关联\",{\"1\":{\"2864\":1}}],[\"当前m\",{\"1\":{\"2803\":1}}],[\"当前栈与资源保存在\",{\"1\":{\"2757\":1}}],[\"当前\",{\"1\":{\"2481\":1,\"2790\":1,\"2868\":1}}],[\"当前结构字段的对齐字节数\",{\"1\":{\"2008\":1}}],[\"当前平台是\",{\"1\":{\"1953\":1}}],[\"当前填充的entries数目\",{\"1\":{\"1916\":1}}],[\"当前值是\",{\"1\":{\"169\":1}}],[\"当负载因子超过6\",{\"1\":{\"1876\":1}}],[\"当比值超过负载因子就会触发翻倍扩容\",{\"1\":{\"1846\":1}}],[\"当查找k2时候\",{\"1\":{\"1814\":1,\"1818\":1}}],[\"当m是5\",{\"1\":{\"1805\":1}}],[\"当原slice的cap\",{\"1\":{\"1714\":1}}],[\"当使用append为ans2添加元素\",{\"1\":{\"1708\":1}}],[\"当定义一个slice\",{\"1\":{\"1657\":1}}],[\"当处于\",{\"1\":{\"1510\":1}}],[\"当处于普通模式\",{\"1\":{\"1510\":1}}],[\"当处理并发时候\",{\"1\":{\"431\":1}}],[\"当接收到服务器发送的报文\",{\"1\":{\"1502\":1}}],[\"当接收方窗口内的数据\",{\"1\":{\"948\":1}}],[\"当接收方处理完数据后\",{\"1\":{\"934\":1}}],[\"当接收方的窗口为0时候\",{\"1\":{\"933\":1}}],[\"当接收方的窗口为0时\",{\"0\":{\"931\":1}}],[\"当建立了\",{\"1\":{\"1498\":1}}],[\"当文档的各个部分以不同的层绘制\",{\"1\":{\"1443\":1}}],[\"当dom更新时\",{\"1\":{\"1423\":1}}],[\"当javascript解析和执行顺序不重要时\",{\"1\":{\"1412\":1}}],[\"当主线程在解析html和css时\",{\"1\":{\"1412\":1}}],[\"当遇到一个css文件时\",{\"1\":{\"1408\":1}}],[\"当解析器发现非阻塞资源\",{\"1\":{\"1408\":1}}],[\"当浏览器收到数据\",{\"1\":{\"1401\":1}}],[\"当包到达路由器之后\",{\"1\":{\"1365\":1}}],[\"当转发包时\",{\"1\":{\"1358\":1}}],[\"当您键入\",{\"1\":{\"1250\":1}}],[\"当收到了部分数据的ack报文时候\",{\"1\":{\"1017\":1}}],[\"当收到you\",{\"0\":{\"696\":1}}],[\"当发送方把数据全部发送出去\",{\"1\":{\"1015\":1}}],[\"当发送方收到3个重复的ack的情况\",{\"1\":{\"994\":1}}],[\"当发送方接受到了一个窗口为0\",{\"1\":{\"940\":1}}],[\"当发送方接受到有三次同样的ack报文\",{\"1\":{\"914\":1}}],[\"当发生了超时重传情况\",{\"1\":{\"984\":1}}],[\"当发生拥塞情况\",{\"1\":{\"983\":1}}],[\"当拥塞窗口超过慢启动门限时候\",{\"1\":{\"979\":1}}],[\"当窗口长度小到一定程度\",{\"1\":{\"953\":1}}],[\"当持续计时器超时时候\",{\"1\":{\"941\":1}}],[\"当我们在main函数中调用该方法时\",{\"1\":{\"3101\":1}}],[\"当我们调用这个经过子类重写的方法时\",{\"1\":{\"3098\":1}}],[\"当我们把一大堆拥有共同特征的对象的静态特征\",{\"1\":{\"3073\":1}}],[\"当我们导入的模块除了定义函数之外还有可以执行代码\",{\"1\":{\"3039\":1}}],[\"当我们再次存一个键值对\",{\"1\":{\"1811\":1}}],[\"当我们修改一个元素值时候\",{\"1\":{\"1674\":1}}],[\"当我们添加一个元素时候\",{\"1\":{\"1671\":1}}],[\"当我们决定关闭服务器时候\",{\"1\":{\"1514\":1}}],[\"当我们想要恢复到之前的一个状态\",{\"1\":{\"100\":1}}],[\"当我收到了三个返回\",{\"1\":{\"909\":1}}],[\"当超过了这个数值则需要进行栈扩张\",{\"1\":{\"2868\":2}}],[\"当超过指定的时间后\",{\"1\":{\"885\":1}}],[\"当超时时间\",{\"1\":{\"894\":1,\"895\":1}}],[\"当客户端发送最后一个ack报文\",{\"1\":{\"872\":1}}],[\"当客户端连接完成后\",{\"1\":{\"67\":1}}],[\"当此值为\",{\"1\":{\"867\":1}}],[\"当此时连接已经断开了\",{\"1\":{\"68\":1}}],[\"当通信结束希望断开连接时\",{\"1\":{\"753\":1}}],[\"当某一层发生变化时\",{\"1\":{\"726\":1}}],[\"当数据传输完毕\",{\"1\":{\"1391\":1}}],[\"当数据发生了崩溃的时候\",{\"1\":{\"680\":1}}],[\"当数据库多个事务同时执行时候\",{\"1\":{\"145\":1}}],[\"当事务提交时候\",{\"1\":{\"655\":1}}],[\"当设置为2\",{\"1\":{\"635\":1}}],[\"当设置为1\",{\"1\":{\"634\":1}}],[\"当设置为0\",{\"1\":{\"633\":1}}],[\"当有数据需要更新时候\",{\"1\":{\"616\":1}}],[\"当一个新的连接进来的时候\",{\"1\":{\"3287\":1,\"3311\":1}}],[\"当一个事务\",{\"1\":{\"562\":1}}],[\"当一条记录需要更新时候\",{\"1\":{\"101\":1}}],[\"当需要计算阶乘的时候不用再写循环求阶乘而是直接调用已经定义好的函数\",{\"1\":{\"3026\":1}}],[\"当需要一个\",{\"1\":{\"1917\":1}}],[\"当需要扩容时候\",{\"1\":{\"1830\":1}}],[\"当需要存储a时候就存储这个编号值\",{\"1\":{\"1738\":1}}],[\"当需要更新的数据在内存中就直接更新\",{\"1\":{\"543\":1}}],[\"当需要恢复到指定的某一秒时\",{\"1\":{\"126\":1}}],[\"当表中数据发生更新时候\",{\"1\":{\"448\":1}}],[\"当回答这种问题\",{\"1\":{\"421\":1}}],[\"当并发系统中不同线程出现循环资源依赖\",{\"1\":{\"372\":1}}],[\"当对某个表执加上写锁后\",{\"1\":{\"319\":1}}],[\"当\",{\"1\":{\"308\":1,\"739\":1,\"898\":1,\"976\":1,\"977\":1,\"2118\":1,\"2299\":1,\"2361\":1,\"2386\":1,\"2557\":1,\"2564\":2,\"2584\":1,\"2705\":1,\"2764\":1,\"2793\":1,\"2848\":1,\"2951\":1,\"3213\":1}}],[\"当相邻两个页由于删除了数据\",{\"1\":{\"224\":1}}],[\"当然它支持不同平台的操作\",{\"1\":{\"2891\":1}}],[\"当然\",{\"1\":{\"367\":1}}],[\"当然有分裂就有合并\",{\"1\":{\"224\":1}}],[\"当然在可重复读隔离级别下\",{\"1\":{\"150\":1}}],[\"当出现死锁以后\",{\"1\":{\"378\":1}}],[\"当出现多个\",{\"1\":{\"188\":1}}],[\"当出现读写锁冲突的时候\",{\"1\":{\"151\":1}}],[\"当你想要去看一个项目的源码时候\",{\"1\":{\"2880\":1}}],[\"当你想要查询\",{\"1\":{\"192\":1}}],[\"当你开发时候\",{\"1\":{\"2332\":1}}],[\"当你按下回车\",{\"1\":{\"1251\":1}}],[\"当你按下g键\",{\"1\":{\"1250\":1}}],[\"当你在浏览器中输入\",{\"1\":{\"1248\":1}}],[\"当你进行增删改时候\",{\"1\":{\"460\":1}}],[\"当你的事务出现了锁多个行\",{\"1\":{\"361\":1}}],[\"当你需要让整个库处于只读状态的时候\",{\"1\":{\"293\":1}}],[\"当你做区间查询\",{\"1\":{\"194\":1}}],[\"当你使用make去定义这个变量\",{\"1\":{\"1665\":1}}],[\"当你使用主键索引时候\",{\"1\":{\"487\":1}}],[\"当你使用\",{\"1\":{\"62\":1}}],[\"当你作为客户端\",{\"1\":{\"62\":1}}],[\"当你准备学习源码部分时候\",{\"1\":{\"53\":1}}],[\"把一个类作为一个迭代器使用需要在类中实现两个方法\",{\"1\":{\"3247\":1}}],[\"把一个类型的方法赋值给他\",{\"1\":{\"2189\":1}}],[\"把hmap\",{\"1\":{\"1852\":1}}],[\"把已经用到的溢出桶链起来\",{\"1\":{\"1839\":1}}],[\"把这称之为覆盖索引\",{\"1\":{\"246\":1}}],[\"把这个值加上\",{\"1\":{\"118\":1}}],[\"把值放在数组里\",{\"1\":{\"187\":1}}],[\"把c从0改成1\",{\"1\":{\"135\":1}}],[\"把\",{\"1\":{\"54\":1,\"1001\":1,\"2455\":1}}],[\"=value值\",{\"1\":{\"3217\":1}}],[\"=^=>>=``<<=`\",{\"1\":{\"3012\":1}}],[\"=+=\",{\"1\":{\"3011\":1}}],[\"=reflect\",{\"1\":{\"2210\":1}}],[\"=range\",{\"1\":{\"1774\":1}}],[\"===\",{\"1\":{\"3388\":3}}],[\"==a\",{\"1\":{\"2193\":1}}],[\"==\",{\"1\":{\"2163\":1,\"2222\":1,\"2234\":1,\"2239\":1,\"2260\":2,\"2786\":1,\"2793\":2,\"2795\":3,\"3003\":1,\"3017\":1,\"3041\":1,\"3062\":2,\"3078\":1,\"3084\":1,\"3090\":1,\"3093\":4,\"3096\":1,\"3099\":1,\"3175\":1,\"3176\":2,\"3177\":1,\"3205\":1,\"3388\":1}}],[\"==f1\",{\"1\":{\"1992\":1}}],[\"=find\",{\"1\":{\"1878\":1}}],[\"=map\",{\"1\":{\"1878\":1}}],[\"=0\",{\"1\":{\"1774\":1,\"1850\":1,\"1878\":2,\"2418\":1}}],[\"=egg\",{\"1\":{\"1687\":2,\"1702\":2}}],[\"=1\",{\"1\":{\"1673\":1,\"2568\":1,\"2573\":1,\"2574\":1}}],[\"=10\",{\"1\":{\"284\":1}}],[\"=\",{\"1\":{\"50\":1,\"471\":2,\"995\":1,\"996\":1,\"998\":1,\"1631\":3,\"1634\":1,\"1635\":1,\"1638\":1,\"1640\":2,\"1687\":1,\"1702\":1,\"1717\":9,\"1772\":2,\"1774\":1,\"1827\":1,\"1866\":3,\"1893\":2,\"1904\":2,\"1929\":1,\"2029\":1,\"2040\":3,\"2043\":2,\"2047\":3,\"2054\":2,\"2058\":3,\"2070\":2,\"2075\":3,\"2082\":2,\"2090\":3,\"2103\":2,\"2111\":3,\"2113\":1,\"2132\":3,\"2135\":4,\"2158\":2,\"2163\":4,\"2166\":2,\"2172\":3,\"2178\":3,\"2188\":3,\"2195\":6,\"2208\":1,\"2210\":1,\"2222\":1,\"2232\":2,\"2234\":1,\"2239\":3,\"2243\":1,\"2253\":2,\"2260\":11,\"2261\":1,\"2272\":3,\"2294\":2,\"2299\":1,\"2300\":2,\"2303\":1,\"2309\":2,\"2320\":1,\"2337\":1,\"2352\":2,\"2365\":1,\"2370\":3,\"2375\":1,\"2378\":1,\"2400\":2,\"2402\":5,\"2427\":1,\"2454\":4,\"2473\":1,\"2755\":1,\"2757\":1,\"2778\":1,\"2780\":2,\"2783\":7,\"2786\":2,\"2789\":8,\"2793\":14,\"2795\":18,\"2864\":1,\"2868\":8,\"2928\":1,\"2949\":1,\"3003\":1,\"3011\":7,\"3015\":6,\"3017\":1,\"3023\":1,\"3026\":6,\"3028\":1,\"3048\":12,\"3052\":4,\"3053\":7,\"3054\":1,\"3058\":8,\"3062\":5,\"3069\":6,\"3075\":2,\"3078\":2,\"3084\":6,\"3087\":7,\"3090\":6,\"3093\":8,\"3096\":9,\"3099\":2,\"3113\":3,\"3116\":1,\"3119\":1,\"3124\":1,\"3175\":3,\"3176\":3,\"3177\":1,\"3205\":4,\"3213\":1,\"3233\":1,\"3238\":3,\"3240\":1,\"3246\":1,\"3248\":4,\"3250\":4,\"3256\":2,\"3286\":4,\"3287\":4,\"3295\":4,\"3297\":3,\"3301\":1,\"3311\":4,\"3321\":4,\"3325\":5,\"3327\":5,\"3340\":4,\"3341\":13,\"3342\":13,\"3388\":4}}],[\"注释中被提到\",{\"1\":{\"3388\":1}}],[\"注释取消此次警告\",{\"1\":{\"3388\":1}}],[\"注释\",{\"1\":{\"3388\":2}}],[\"注册处理函数时候更加方便点\",{\"1\":{\"3291\":1}}],[\"注册处理逻辑\",{\"1\":{\"3287\":1,\"3311\":1}}],[\"注册了两个\",{\"1\":{\"2905\":1}}],[\"注册的\",{\"1\":{\"2386\":2,\"2388\":1,\"2389\":1,\"2942\":1}}],[\"注册是有捕获列表的\",{\"1\":{\"2369\":1}}],[\"注册结束\",{\"1\":{\"2363\":1,\"2374\":1}}],[\"注册信息会保存到\",{\"1\":{\"2345\":1}}],[\"注册\",{\"1\":{\"2340\":1,\"2930\":1}}],[\"注重\",{\"1\":{\"668\":1}}],[\"注意观察参数的顺序\",{\"1\":{\"2274\":1}}],[\"注意点\",{\"1\":{\"2124\":1}}],[\"注意同一个类型在不同平台上的对齐系数不同\",{\"1\":{\"1948\":1}}],[\"注意注意\",{\"1\":{\"1878\":1}}],[\"注意\",{\"1\":{\"295\":1,\"1960\":1,\"2296\":1,\"2301\":1,\"2795\":1,\"3173\":1,\"3415\":1,\"3431\":1,\"3439\":1}}],[\"注\",{\"1\":{\"46\":1,\"567\":1,\"598\":1,\"1464\":1,\"1493\":1,\"1896\":1,\"1908\":1,\"2001\":1,\"2024\":1,\"2139\":1,\"2151\":1,\"2172\":1,\"2270\":1,\"2736\":1,\"2941\":1,\"2951\":1}}],[\"将这个代码的参数进行封装\",{\"1\":{\"3303\":1}}],[\"将变量暴露出来\",{\"1\":{\"3300\":1}}],[\"将调用方法封装在函数中\",{\"1\":{\"3295\":1}}],[\"将函数视为\",{\"1\":{\"3218\":1}}],[\"将列表转换成元组\",{\"1\":{\"3058\":1}}],[\"将元组转换成列表\",{\"1\":{\"3058\":1}}],[\"将字符串以指定的宽度靠右放置左侧填充指定的字符\",{\"1\":{\"3048\":1}}],[\"将字符串以指定的宽度居中并在两侧填充指定的字符\",{\"1\":{\"3048\":1}}],[\"将它标记为终止\",{\"1\":{\"2918\":1}}],[\"将go测试程序的输出转换为机器可读的json流\",{\"1\":{\"2893\":1}}],[\"将源文件汇编为目标文件\",{\"1\":{\"2893\":1}}],[\"将会被转移到调度器全局g列表\",{\"1\":{\"2864\":1}}],[\"将mainpc方法\",{\"1\":{\"2793\":1}}],[\"将新创建的的\",{\"1\":{\"2793\":1}}],[\"将new\",{\"1\":{\"2789\":1}}],[\"将操作系统传递\",{\"1\":{\"2779\":1}}],[\"将操作记录更新到磁盘中\",{\"1\":{\"101\":1}}],[\"将垃圾回收工作分多次来完成\",{\"1\":{\"2680\":1}}],[\"将用户程序与垃圾回收交替执行\",{\"1\":{\"2680\":1}}],[\"将明显提升垃圾回收执行的效率\",{\"1\":{\"2662\":1}}],[\"将可以追踪到数据复制到\",{\"1\":{\"2649\":1}}],[\"将原来栈上的数据都拷过来\",{\"1\":{\"2291\":1}}],[\"将下一条指令的地址入栈\",{\"1\":{\"2279\":1}}],[\"将r右移b位后与7做与运算\",{\"1\":{\"1866\":1}}],[\"将r和bucketmask做与操作\",{\"1\":{\"1866\":1}}],[\"将旧桶数量记为m=4\",{\"1\":{\"1850\":1}}],[\"将世界上所有的符号都纳入其中\",{\"1\":{\"1742\":1}}],[\"将之前的数组元素进行拷贝然后修改底层数组的值\",{\"1\":{\"1708\":1}}],[\"将值拷贝然后添加值\",{\"1\":{\"1707\":1}}],[\"将页面展现出来\",{\"1\":{\"1503\":1}}],[\"将压缩包解压到刚才的\",{\"1\":{\"1467\":1}}],[\"将其解包为本地应用程序可以使用的形式\",{\"1\":{\"3281\":1}}],[\"将其压缩\",{\"1\":{\"1463\":1}}],[\"将其数据进行转发\",{\"1\":{\"1368\":1}}],[\"将内容提升到gpu上的层\",{\"1\":{\"1441\":1}}],[\"将各个节点绘制到屏幕上\",{\"1\":{\"1437\":1,\"1449\":1}}],[\"将所有相关样式匹配到dom树中的每个可见节点\",{\"1\":{\"1431\":1}}],[\"将dom和cssom组合成一个render树\",{\"1\":{\"1427\":1,\"1447\":1}}],[\"将文档解析为一个由节点和对象\",{\"1\":{\"1403\":1}}],[\"将文件系统的\",{\"1\":{\"656\":1}}],[\"将数据信号转换成电信号\",{\"1\":{\"1383\":1}}],[\"将数据库状态恢复到你想要任意时刻\",{\"1\":{\"438\":1}}],[\"将包转发到除了源端口之外的所有端口上\",{\"1\":{\"1350\":1}}],[\"将包存入缓冲区后\",{\"1\":{\"1348\":1}}],[\"将服务器公钥放入到数字证书中\",{\"1\":{\"1208\":1}}],[\"将比特组合成字节进而组合成帧\",{\"1\":{\"709\":1}}],[\"将\",{\"1\":{\"677\":1,\"2169\":1,\"2755\":1}}],[\"将记录写入磁盘中\",{\"1\":{\"616\":1}}],[\"将一行改成逻辑上的多行来减少锁冲突\",{\"1\":{\"389\":1}}],[\"将参数从网络传输的格式还原为本地方法可以理解的形式\",{\"1\":{\"3277\":1}}],[\"将参数向前复制到一个偶数栈上\",{\"1\":{\"2753\":1}}],[\"将参数\",{\"1\":{\"377\":1}}],[\"将查找频繁的数据进行靠左创建索引\",{\"1\":{\"288\":1}}],[\"将1改成2\",{\"1\":{\"158\":1}}],[\"将备份的\",{\"1\":{\"128\":1}}],[\"将你输入地语句拆分成多个字符串\",{\"1\":{\"77\":1}}],[\"将该区域设置最大的范围\",{\"1\":{\"43\":1}}],[\"将每个像素五个模态的值与目标组成一行数据\",{\"1\":{\"17\":1}}],[\"为其增加新功能\",{\"1\":{\"3240\":1}}],[\"为go语言测试程序提供支持\",{\"1\":{\"2891\":1}}],[\"为文件i\",{\"1\":{\"2891\":1}}],[\"为上述五个状态之一\",{\"1\":{\"2864\":1}}],[\"为后缀\",{\"1\":{\"2746\":1}}],[\"为主\",{\"1\":{\"2736\":1}}],[\"为空\",{\"1\":{\"2562\":1}}],[\"为指针\",{\"1\":{\"2539\":1}}],[\"为非指针\",{\"1\":{\"2539\":1}}],[\"为每个\",{\"1\":{\"2487\":1}}],[\"为保证程序顺利高效运行\",{\"1\":{\"1933\":1}}],[\"为单位访问\",{\"1\":{\"1932\":1}}],[\"为\",{\"1\":{\"1913\":1,\"2492\":1,\"2540\":1}}],[\"为不知道其尺寸的替换元素\",{\"1\":{\"1436\":1}}],[\"为例\",{\"1\":{\"272\":1,\"478\":1,\"2426\":1,\"2741\":1,\"2743\":1}}],[\"为什么这里一定要放到\",{\"1\":{\"2791\":1}}],[\"为什么这样子做可以做到逻辑一致呢\",{\"1\":{\"124\":1}}],[\"为什么传参就无法交换变量\",{\"1\":{\"2293\":1}}],[\"为什么一定要先调用\",{\"1\":{\"2258\":1}}],[\"为什么会有gc存在\",{\"0\":{\"2596\":1}}],[\"为什么会有这个\",{\"1\":{\"2250\":1}}],[\"为什么会发生\",{\"1\":{\"2248\":1}}],[\"为什么会需要去进一步确认\",{\"1\":{\"2065\":1}}],[\"为什么不统一使用平台最大对齐值呢或者就采用各个类型对应的对齐值\",{\"1\":{\"1952\":1}}],[\"为什么不是\",{\"1\":{\"878\":1}}],[\"为什么不是很推荐使用外键\",{\"0\":{\"401\":1}}],[\"为什么需要内存对齐\",{\"0\":{\"1934\":1}}],[\"为什么需要time\",{\"0\":{\"860\":1}}],[\"为什么需要tcp协议\",{\"0\":{\"754\":1}}],[\"为什么容量大于1024就扩容1\",{\"1\":{\"1731\":1}}],[\"为什么slice的扩容规则是这样的\",{\"1\":{\"1731\":1}}],[\"为什么tcp可靠性还需要拥塞控制\",{\"0\":{\"956\":1}}],[\"为什么time\",{\"0\":{\"866\":1}}],[\"为什么引入滑动窗口\",{\"0\":{\"922\":1}}],[\"为什么挥手需要四次\",{\"0\":{\"856\":1}}],[\"为什么客户端和服务端初始序列号是不同的\",{\"0\":{\"841\":1}}],[\"为什么要保存这两个字段啊\",{\"1\":{\"2935\":1}}],[\"为什么要通过\",{\"1\":{\"2105\":1}}],[\"为什么要等量扩容\",{\"1\":{\"1858\":1}}],[\"为什么要用哈希表\",{\"1\":{\"1794\":1}}],[\"为什么要知道这些数据\",{\"1\":{\"921\":1}}],[\"为什么要随机生成\",{\"0\":{\"841\":1}}],[\"为什么要分层\",{\"0\":{\"724\":1}}],[\"为什么是三次握手\",{\"0\":{\"806\":1}}],[\"为什么选择\",{\"0\":{\"491\":1}}],[\"为什么\",{\"1\":{\"337\":1}}],[\"为什么每次建表里面需要有一个自增主键\",{\"1\":{\"225\":1}}],[\"为什么建议你尽量不要使用长事务\",{\"1\":{\"170\":1}}],[\"为什么日志需要事务方式提交\",{\"1\":{\"131\":1}}],[\"为什么redo\",{\"0\":{\"670\":1},\"1\":{\"122\":1}}],[\"为了更高并发执行性能\",{\"1\":{\"2859\":1}}],[\"为了维持内存分配量与清扫页面数的线性关系\",{\"1\":{\"2588\":1}}],[\"为了避免\",{\"1\":{\"2581\":1}}],[\"为了应对此情况\",{\"1\":{\"2568\":1}}],[\"为了满足语义\",{\"1\":{\"2250\":1}}],[\"为了支持反射\",{\"1\":{\"1993\":1}}],[\"为了防止开发人员依赖map的顺序\",{\"1\":{\"1865\":1}}],[\"为了减少这种情况的产生\",{\"1\":{\"1742\":1}}],[\"为了减少读写磁盘io的次数\",{\"1\":{\"485\":1}}],[\"为了方便\",{\"1\":{\"1454\":1}}],[\"为了确保重绘的速度比初始绘制的速度更快\",{\"1\":{\"1440\":1}}],[\"为了确保脚本不会阻塞进程\",{\"1\":{\"1412\":1}}],[\"为了确定每个对象的确切大小和位置\",{\"1\":{\"1435\":1}}],[\"为了简单起见\",{\"1\":{\"1027\":1}}],[\"为了报文减少丢失\",{\"1\":{\"963\":1}}],[\"为了限制发送方发送到网络中的数据量\",{\"1\":{\"959\":1}}],[\"为了解决这个问题\",{\"1\":{\"912\":1,\"2838\":1}}],[\"为了解决这些问题\",{\"1\":{\"145\":1}}],[\"为了尽量减少i\",{\"1\":{\"496\":1}}],[\"为了尽量减少连接的过程\",{\"1\":{\"69\":1}}],[\"为了保证交易的原子性\",{\"1\":{\"367\":1}}],[\"为了优化性能\",{\"1\":{\"244\":1}}],[\"为了让代码有一定的健壮性和容错性\",{\"1\":{\"3175\":1}}],[\"为了让一个查询尽量少的读磁盘\",{\"1\":{\"206\":1}}],[\"为了让两份日志之间逻辑一致\",{\"1\":{\"123\":1}}],[\"为了后续计算方便\",{\"1\":{\"43\":1}}],[\"为该计划做准备\",{\"1\":{\"8\":1}}],[\"去看是否是自己需要的\",{\"1\":{\"3389\":1}}],[\"去寻找符合自己的\",{\"1\":{\"3389\":1}}],[\"去封装一层专门处理\",{\"1\":{\"3294\":1}}],[\"去实现刚才的过程\",{\"1\":{\"3285\":1}}],[\"去设计写屏障的具体实现方案了\",{\"1\":{\"2697\":1}}],[\"去区分数据的有用性\",{\"1\":{\"2620\":1}}],[\"去关闭一个打开的文件\",{\"1\":{\"2332\":1}}],[\"去调用各种方法都会去\",{\"1\":{\"2226\":1}}],[\"去查表\",{\"1\":{\"2088\":1}}],[\"去\",{\"1\":{\"2062\":1,\"2078\":1}}],[\"去它的官网\",{\"1\":{\"1467\":1}}],[\"去更好的观察到每个包得真实内容\",{\"1\":{\"1454\":1}}],[\"去使用引擎提供的接口\",{\"1\":{\"694\":1}}],[\"去使用这个引擎提供的接口\",{\"1\":{\"89\":1}}],[\"去恢复数据\",{\"1\":{\"674\":1}}],[\"去获取相对应区域五个模态组成的矩阵数据\",{\"1\":{\"42\":1}}],[\"去获取相对应区域\",{\"1\":{\"41\":1}}],[\"去进行训练\",{\"1\":{\"22\":1}}],[\"yangdiy\",{\"1\":{\"3428\":1,\"3449\":1}}],[\"yay\",{\"1\":{\"3428\":1,\"3447\":2,\"3449\":1}}],[\"yay世界\",{\"1\":{\"1774\":1}}],[\"yaml\",{\"1\":{\"3408\":2,\"3411\":1,\"3418\":1,\"3426\":1}}],[\"yoda\",{\"1\":{\"3388\":2}}],[\"you\",{\"1\":{\"78\":1}}],[\"your\",{\"0\":{\"696\":1},\"1\":{\"1\":1,\"78\":1}}],[\"y>protoc\",{\"1\":{\"3365\":1}}],[\"yield\",{\"1\":{\"3253\":2,\"3256\":2,\"3257\":2,\"3388\":4}}],[\"y=2\",{\"1\":{\"3238\":1}}],[\"y1\",{\"1\":{\"2778\":1}}],[\"y1t\",{\"1\":{\"2778\":2}}],[\"yuque\",{\"1\":{\"1190\":1}}],[\"y\",{\"1\":{\"40\":2,\"2778\":1,\"3015\":4,\"3052\":2,\"3233\":2,\"3238\":2}}],[\"x=1\",{\"1\":{\"3238\":1}}],[\"xml\",{\"1\":{\"2891\":1}}],[\"xadd\",{\"1\":{\"2793\":1}}],[\"x1f\",{\"1\":{\"3388\":1}}],[\"x1\",{\"1\":{\"2778\":2}}],[\"x1t\",{\"1\":{\"2778\":3}}],[\"xxxxxx00\",{\"1\":{\"1850\":1}}],[\"xiaolincoding\",{\"1\":{\"1054\":1}}],[\"x锁\",{\"1\":{\"604\":1}}],[\"x\",{\"1\":{\"40\":2,\"609\":1,\"611\":1,\"1640\":3,\"1951\":2,\"2234\":3,\"2243\":2,\"2260\":4,\"2261\":2,\"2567\":1,\"2778\":1,\"3015\":8,\"3017\":3,\"3052\":8,\"3124\":10,\"3141\":1,\"3233\":2,\"3238\":2,\"3248\":2,\"3250\":4}}],[\"对babel解析器的包装使其与\",{\"1\":{\"3388\":1}}],[\"对该代码进行封装\",{\"1\":{\"3305\":1}}],[\"对方打包使用感受\",{\"1\":{\"3279\":1}}],[\"对方使用\",{\"1\":{\"3278\":1}}],[\"对方拆包裹\",{\"1\":{\"3277\":1}}],[\"对方在快递柜找到\",{\"1\":{\"3276\":1}}],[\"对子类并不起任何作用\",{\"1\":{\"3086\":1}}],[\"对象使用\",{\"1\":{\"3388\":1}}],[\"对象\",{\"1\":{\"3211\":1,\"3212\":1,\"3213\":1,\"3214\":1,\"3216\":1,\"3217\":1}}],[\"对象的\",{\"1\":{\"3076\":1}}],[\"对象都有属性和行为\",{\"1\":{\"3073\":1}}],[\"对象依然还是白色的\",{\"1\":{\"2630\":1}}],[\"对字典中所有键值对进行遍历\",{\"1\":{\"3069\":1}}],[\"对称差运算\",{\"1\":{\"3065\":1}}],[\"对io\",{\"1\":{\"2891\":1}}],[\"对齐边界\",{\"1\":{\"2206\":1}}],[\"对齐系数\",{\"0\":{\"1942\":1},\"1\":{\"1945\":1}}],[\"对英语字符与二进制位之间的关系\",{\"1\":{\"1739\":1}}],[\"对索引字段\",{\"1\":{\"551\":1,\"552\":1,\"553\":1}}],[\"对索引中包含的字段先做判断\",{\"1\":{\"280\":1,\"528\":1}}],[\"对一个字段\",{\"0\":{\"534\":1}}],[\"对性能没有要求\",{\"1\":{\"421\":1}}],[\"对分库分表会造成影响\",{\"1\":{\"420\":1}}],[\"对应着当前该\",{\"1\":{\"2862\":2}}],[\"对应着当前内核线程需要执行的\",{\"1\":{\"2862\":1}}],[\"对应负担的标记任务就越多\",{\"1\":{\"2583\":1}}],[\"对应了两个\",{\"1\":{\"2538\":1}}],[\"对应一个\",{\"1\":{\"2536\":1}}],[\"对应\",{\"1\":{\"2524\":1}}],[\"对应地址的值\",{\"1\":{\"2304\":1}}],[\"对应元数据也会不同\",{\"1\":{\"2032\":1}}],[\"对应每个key只保存其哈希值的高8位\",{\"1\":{\"1836\":1}}],[\"对应主机进程\",{\"1\":{\"715\":1}}],[\"对应用会更友好\",{\"1\":{\"345\":1}}],[\"对应的原则称之为里氏替换原则\",{\"1\":{\"3095\":1}}],[\"对应的数据结构是\",{\"1\":{\"2524\":1,\"2838\":1,\"2839\":1}}],[\"对应的桶编号1已经被占用了\",{\"1\":{\"1813\":1,\"1817\":1}}],[\"对应的零值就是0\",{\"1\":{\"1633\":1}}],[\"对应的哪些报文啊\",{\"1\":{\"909\":1}}],[\"对应的\",{\"1\":{\"242\":1,\"517\":1,\"2068\":1,\"2225\":1}}],[\"对应的名字\",{\"1\":{\"200\":1}}],[\"对表加读锁后\",{\"1\":{\"318\":1}}],[\"对于这段程序编译成的代码段\",{\"1\":{\"2846\":1}}],[\"对于这个问题\",{\"1\":{\"358\":1}}],[\"对于数据段\",{\"1\":{\"2826\":1}}],[\"对于陈旧对象\",{\"1\":{\"2705\":1}}],[\"对于程序就是一种垃圾了\",{\"1\":{\"2601\":1}}],[\"对于函数\",{\"1\":{\"2278\":1}}],[\"对于每一个\",{\"1\":{\"2538\":1}}],[\"对于每一次map遍历\",{\"1\":{\"1865\":1}}],[\"对于每一行数据\",{\"1\":{\"466\":1}}],[\"对于新桶\",{\"1\":{\"1850\":1}}],[\"对于n字节的符号\",{\"1\":{\"1752\":1}}],[\"对于单字节的符号\",{\"1\":{\"1751\":1}}],[\"对于int\",{\"1\":{\"1633\":1}}],[\"对于响应报文里面\",{\"1\":{\"1548\":1}}],[\"对于接收方来说\",{\"1\":{\"910\":1}}],[\"对于发送方来说\",{\"1\":{\"909\":1}}],[\"对于索引树\",{\"1\":{\"519\":1}}],[\"对于有主键的\",{\"1\":{\"502\":1}}],[\"对于在线服务来说\",{\"1\":{\"378\":1}}],[\"对于顾客\",{\"1\":{\"370\":1}}],[\"对于两阶段锁\",{\"1\":{\"360\":1}}],[\"对于行锁来说\",{\"1\":{\"352\":1}}],[\"对于全部是\",{\"1\":{\"345\":1}}],[\"对于出现锁的解决方法\",{\"1\":{\"343\":1}}],[\"对于用户\",{\"1\":{\"304\":2}}],[\"对于\",{\"1\":{\"284\":1,\"501\":1,\"504\":1,\"2525\":1}}],[\"对于一个需要频繁使用事务的业务\",{\"1\":{\"178\":1}}],[\"对\",{\"0\":{\"2566\":1},\"1\":{\"40\":1,\"2763\":1,\"3425\":1}}],[\"对数据进行清洗\",{\"1\":{\"20\":1}}],[\"如函数\",{\"1\":{\"2977\":1}}],[\"如上图所示\",{\"1\":{\"1708\":1}}],[\"如\",{\"1\":{\"1538\":1}}],[\"如按钮和图像\",{\"1\":{\"1439\":1}}],[\"如css\",{\"1\":{\"1410\":1}}],[\"如同一个圆\",{\"1\":{\"620\":1}}],[\"如此循环\",{\"1\":{\"382\":1}}],[\"如改表头新增一列\",{\"1\":{\"323\":1}}],[\"如select\",{\"1\":{\"323\":1}}],[\"如何实现\",{\"1\":{\"3283\":1}}],[\"如何进行划分不同线程的任务呢\",{\"1\":{\"2712\":1}}],[\"如何解决呢\",{\"1\":{\"2689\":1}}],[\"如何缩短\",{\"1\":{\"2679\":1}}],[\"如何应对碎片化内存\",{\"0\":{\"2507\":1}}],[\"如何延迟\",{\"0\":{\"2331\":1},\"1\":{\"2338\":1}}],[\"如何查询路由表\",{\"1\":{\"1370\":1}}],[\"如何获取对方的mac地址呢\",{\"1\":{\"1328\":1}}],[\"如何安全地给小表加字段\",{\"1\":{\"340\":1}}],[\"如何避免回表\",{\"1\":{\"246\":1}}],[\"如何处理数据会极大影响训练后的结果\",{\"1\":{\"39\":1}}],[\"如果出现这种错误\",{\"1\":{\"3398\":1}}],[\"如果做到解耦\",{\"1\":{\"3309\":1}}],[\"如果该文件已存在\",{\"1\":{\"3166\":1,\"3168\":1,\"3170\":1,\"3172\":1}}],[\"如果该文件已存在则打开文件\",{\"1\":{\"3158\":1,\"3160\":1,\"3162\":1,\"3164\":1}}],[\"如果该文件已存在则会报错\",{\"1\":{\"3142\":1}}],[\"如果该文件不存在\",{\"1\":{\"3158\":1,\"3160\":1,\"3162\":1,\"3164\":1,\"3166\":1,\"3168\":1,\"3170\":1,\"3172\":1}}],[\"如果异常的类型和\",{\"1\":{\"3111\":1}}],[\"如果希望属性是私有的\",{\"1\":{\"3080\":1}}],[\"如果被恢复了\",{\"1\":{\"2933\":1}}],[\"如果触发指针不匹配则终止之前工作的\",{\"1\":{\"2924\":1}}],[\"如果也没有了\",{\"1\":{\"2843\":1}}],[\"如果gomaxprocs有设置\",{\"1\":{\"2789\":1}}],[\"如果相等则向后跳转两条指令\",{\"1\":{\"2755\":1}}],[\"如果分工不均就会导致有的线程一直在工作\",{\"1\":{\"2712\":1}}],[\"如果扫描完成后\",{\"1\":{\"2630\":1}}],[\"如果存在就删除该元素\",{\"1\":{\"3054\":1}}],[\"如果存在时间长了\",{\"1\":{\"2601\":1}}],[\"如果存储string类型\",{\"1\":{\"2010\":1}}],[\"如果协程在\",{\"1\":{\"2583\":1}}],[\"如果本地工作队列为空\",{\"1\":{\"2563\":1}}],[\"如果全局工作缓存为空\",{\"1\":{\"2560\":1}}],[\"如果交换之后还是满的\",{\"1\":{\"2558\":1}}],[\"如果此时\",{\"1\":{\"2369\":1}}],[\"如果此指针一直存活不释放对应的内存\",{\"1\":{\"1984\":1}}],[\"如果发现需要栈增长\",{\"1\":{\"2291\":1}}],[\"如果发送方发送了\",{\"1\":{\"1024\":1}}],[\"如果发送变化\",{\"1\":{\"1017\":1}}],[\"如果发送窗口大小没有发生变化\",{\"1\":{\"1017\":1}}],[\"如果选择逐步扩张\",{\"1\":{\"2289\":1}}],[\"如果学过微机原理\",{\"1\":{\"2265\":1}}],[\"如果像\",{\"1\":{\"2189\":1}}],[\"如果找到了\",{\"1\":{\"2063\":1,\"2079\":1,\"2088\":1}}],[\"如果找不到则发送\",{\"1\":{\"1381\":1}}],[\"如果找不到匹配的路由\",{\"1\":{\"1374\":1}}],[\"如果改变字段的顺序\",{\"1\":{\"1979\":1}}],[\"如果到第四个字段结束\",{\"1\":{\"1976\":1}}],[\"如果内存对齐\",{\"1\":{\"1940\":1}}],[\"如果内存没有\",{\"1\":{\"662\":1}}],[\"如果非内存对齐\",{\"1\":{\"1939\":1}}],[\"如果能查询到对应的\",{\"1\":{\"1918\":1}}],[\"如果将\",{\"1\":{\"1894\":1}}],[\"如果溢出桶数量过多\",{\"1\":{\"1876\":1}}],[\"如果要做到这点\",{\"1\":{\"3083\":1}}],[\"如果要取一个value的地址则不能通过编译\",{\"1\":{\"1873\":1}}],[\"如果要建立聚簇索引\",{\"1\":{\"449\":1}}],[\"如果把这些键值对重新安排到等量的新桶中\",{\"1\":{\"1861\":1}}],[\"如果常规桶数目大于2^\",{\"1\":{\"1857\":1}}],[\"如果常规桶数目不大于2^15\",{\"1\":{\"1856\":1}}],[\"如果为0的话就去编号为0的桶\",{\"1\":{\"1850\":1}}],[\"如果第三位是1的话\",{\"1\":{\"1850\":1}}],[\"如果我们需要限定自定义类型的对象只能绑定某些属性\",{\"1\":{\"3086\":1}}],[\"如果我们在模块中编写了执行代码\",{\"1\":{\"3039\":1}}],[\"如果我们给被调用函数早就命名好了返回值\",{\"1\":{\"2325\":1}}],[\"如果我们将\",{\"1\":{\"2055\":1}}],[\"如果我们把哈希表的桶存满了\",{\"1\":{\"1843\":1}}],[\"如果我执行\",{\"1\":{\"236\":1}}],[\"如果还有可用的溢出桶\",{\"1\":{\"1841\":1}}],[\"如果哈希表要分配的桶的数目大于24\",{\"1\":{\"1838\":1}}],[\"如果哈希函数可以很均匀的把key映射到各个桶里\",{\"1\":{\"1820\":1}}],[\"如果一个函数包含了一条注释\",{\"1\":{\"3388\":1}}],[\"如果一个异常没有与任何的\",{\"1\":{\"3112\":1}}],[\"如果一个类中存在抽象方法那么这个类就不能够实例化\",{\"1\":{\"3101\":1}}],[\"如果一个\",{\"1\":{\"2840\":1}}],[\"如果一个变量想赋值一个非空接口类型\",{\"1\":{\"1899\":1}}],[\"如果一个哈希值选择0号旧桶\",{\"1\":{\"1850\":1}}],[\"如果一个事务想要对整个表加x锁\",{\"1\":{\"611\":1}}],[\"如果一次性把所有键值对挪到新的桶里\",{\"1\":{\"1829\":1}}],[\"如果每次查找一个键都要从第一个元素开始遍历\",{\"1\":{\"1795\":1}}],[\"如果每次的更新操作都要写进磁盘\",{\"1\":{\"100\":1}}],[\"如果都规定用文本中最大的字节作为一个字符来存储\",{\"1\":{\"1745\":1}}],[\"如果扩容前容量翻倍小于所需容量\",{\"1\":{\"1713\":1}}],[\"如果想扩大读写范围\",{\"1\":{\"1700\":1}}],[\"如果超出len的范围访问元素\",{\"1\":{\"1677\":1}}],[\"如果超过这个时间\",{\"1\":{\"867\":1}}],[\"如果通过make的方式去定义一个slice\",{\"1\":{\"1663\":1}}],[\"如果通过调整顺序\",{\"1\":{\"266\":1}}],[\"如果数组大小有\",{\"1\":{\"1644\":1}}],[\"如果数据库的数据需要保证数据的唯一性\",{\"1\":{\"535\":1}}],[\"如果省略号\",{\"1\":{\"1635\":1}}],[\"如果请求头里没有\",{\"1\":{\"1568\":1}}],[\"如果文档格式良好\",{\"1\":{\"1404\":1}}],[\"如果网关为空\",{\"1\":{\"1379\":1}}],[\"如果网关是一个\",{\"1\":{\"1378\":1}}],[\"如果匹配就会作为候选转发目标\",{\"1\":{\"1371\":1}}],[\"如果没问题则检查\",{\"1\":{\"1361\":1}}],[\"如果没有异常发生\",{\"1\":{\"3110\":1}}],[\"如果没有的话\",{\"1\":{\"2842\":1}}],[\"如果没有任何\",{\"1\":{\"2721\":1}}],[\"如果没有找到\",{\"1\":{\"2088\":1}}],[\"如果没有找到对应的端口\",{\"1\":{\"1350\":1}}],[\"如果没有就直接创建一个新的\",{\"1\":{\"1918\":1}}],[\"如果没有超过设置的负载因子上限\",{\"1\":{\"1854\":1}}],[\"如果没有查询到ip地址\",{\"1\":{\"1274\":1}}],[\"如果没有路径名\",{\"1\":{\"1255\":1}}],[\"如果没有问题\",{\"1\":{\"1231\":1}}],[\"如果没有收到ack确认报文\",{\"1\":{\"1015\":1}}],[\"如果没有两阶段的提交\",{\"1\":{\"678\":1}}],[\"如果没有创建主键\",{\"1\":{\"503\":1}}],[\"如果没有\",{\"1\":{\"88\":1,\"2325\":1}}],[\"如果其中已经保存了对方的\",{\"1\":{\"1333\":1}}],[\"如果其他所有条目都无法匹配\",{\"1\":{\"1318\":1}}],[\"如果http的消息过长\",{\"1\":{\"1294\":1}}],[\"如果浏览器不支持\",{\"1\":{\"1224\":1}}],[\"如果收到新数据的\",{\"1\":{\"1001\":1}}],[\"如果再收到重复的\",{\"1\":{\"1000\":1}}],[\"如果报文发生了丢失\",{\"1\":{\"960\":1}}],[\"如果tcp再发生重传\",{\"1\":{\"957\":1}}],[\"如果对发送到环境内的报文不进行约束\",{\"1\":{\"957\":1}}],[\"如果接收方腾出几个字节并告诉发送方现在有几个字节的窗口\",{\"1\":{\"949\":1}}],[\"如果接收窗口不是\",{\"1\":{\"945\":1}}],[\"如果接收窗口仍然为\",{\"1\":{\"944\":1}}],[\"如果这个报文在网络中丢失\",{\"1\":{\"935\":1}}],[\"如果历史报文被新的连接接收了\",{\"1\":{\"842\":1}}],[\"如果序列号相同\",{\"1\":{\"842\":1}}],[\"如果⼀个已经失效的连接被重新建立起来了\",{\"1\":{\"842\":1}}],[\"如果前两次能够携带数据\",{\"1\":{\"802\":1}}],[\"如果业务没有要求\",{\"1\":{\"536\":1}}],[\"如果有6个核\",{\"1\":{\"2574\":1}}],[\"如果有4个核\",{\"1\":{\"2573\":1}}],[\"如果有就直接交付给mac记录的端口\",{\"1\":{\"1349\":1}}],[\"如果有多个列的哈希值相同\",{\"1\":{\"466\":1}}],[\"如果有两个线程要同时给一个表加字段\",{\"1\":{\"326\":1}}],[\"如果时间设置的很小\",{\"1\":{\"379\":1}}],[\"如果时间顺序上是先备份账户余额表\",{\"1\":{\"302\":1}}],[\"如果只有\",{\"1\":{\"338\":1}}],[\"如果客户端发生异常\",{\"1\":{\"314\":1}}],[\"如果视图是一致的\",{\"1\":{\"306\":1}}],[\"如果先备份用户课程表再备份用户余额表\",{\"1\":{\"304\":1}}],[\"如果后面用这个备份恢复数据\",{\"1\":{\"304\":1}}],[\"如果查询条件使用的是普通索引\",{\"1\":{\"286\":1}}],[\"如果查询条件是\",{\"1\":{\"264\":1}}],[\"如果现在有一个需求\",{\"1\":{\"272\":1}}],[\"如果现在有一个高频请求\",{\"1\":{\"253\":1}}],[\"如果现在有联合查询\",{\"1\":{\"268\":1}}],[\"如果新插入的id值为\",{\"1\":{\"221\":1}}],[\"如果插入新的行\",{\"1\":{\"221\":1}}],[\"如果执行\",{\"1\":{\"179\":2,\"314\":1}}],[\"如果是返回值被捕获\",{\"1\":{\"2149\":1}}],[\"如果是参数被捕获\",{\"1\":{\"2147\":1}}],[\"如果是值拷贝\",{\"1\":{\"2125\":1}}],[\"如果是没有捕获列表的\",{\"1\":{\"2120\":1}}],[\"如果是自定义类型\",{\"1\":{\"2017\":1}}],[\"如果是就放到接收缓冲区中\",{\"1\":{\"1361\":1}}],[\"如果是两次握手连接\",{\"1\":{\"822\":1,\"833\":1}}],[\"如果是\",{\"1\":{\"820\":1}}],[\"如果是我们上面说到的所有事务都要更新同一行的场景呢\",{\"1\":{\"383\":1}}],[\"如果是长整型\",{\"1\":{\"228\":1}}],[\"如果是长连接\",{\"1\":{\"176\":1}}],[\"如果是则将这行存在结果集中\",{\"1\":{\"90\":1}}],[\"如果在执行\",{\"1\":{\"3111\":1}}],[\"如果在此基础上再支持增量式回收\",{\"1\":{\"2723\":1}}],[\"如果在一个函数中调用另一个函数\",{\"1\":{\"2265\":1}}],[\"如果在内存中\",{\"1\":{\"662\":1}}],[\"如果在这个指定的等待时间里面能够拿到\",{\"1\":{\"342\":1}}],[\"如果在\",{\"1\":{\"135\":1}}],[\"如果需要用这个\",{\"1\":{\"134\":1}}],[\"如果逻辑性不一致\",{\"1\":{\"130\":1}}],[\"如果\",{\"1\":{\"117\":1,\"132\":1,\"222\":1,\"339\":1,\"626\":1,\"681\":1,\"682\":1,\"683\":1,\"684\":1,\"2208\":1,\"2289\":1,\"2561\":1,\"2562\":2,\"2576\":1,\"2948\":1}}],[\"如果当前桶存满了以后\",{\"1\":{\"1841\":1}}],[\"如果当前\",{\"1\":{\"104\":1,\"2578\":1}}],[\"如果不指定\",{\"1\":{\"3175\":2}}],[\"如果不满足这个要求\",{\"1\":{\"2960\":1}}],[\"如果不能在算法层面上进行优化\",{\"1\":{\"2679\":1}}],[\"如果不进行内存对齐\",{\"1\":{\"1935\":1}}],[\"如果不匹配就继续与下个条目进行路由匹配\",{\"1\":{\"1371\":1}}],[\"如果不在\",{\"1\":{\"543\":1}}],[\"如果不是m0\",{\"1\":{\"2795\":1}}],[\"如果不是\",{\"1\":{\"821\":1}}],[\"如果不是锁呢\",{\"1\":{\"379\":1}}],[\"如果不是则跳过\",{\"1\":{\"90\":1}}],[\"如果不符合最左前缀的部分\",{\"1\":{\"271\":1}}],[\"如果不通过事务方式提交\",{\"1\":{\"136\":1}}],[\"如果不设置\",{\"1\":{\"48\":1}}],[\"如果你的域名是\",{\"1\":{\"3437\":1,\"3438\":1}}],[\"如果你的语句不对\",{\"1\":{\"78\":1}}],[\"如果你文档需要\",{\"1\":{\"3428\":1}}],[\"如果你愿意可以找一些经典书籍去学习\",{\"1\":{\"2725\":1}}],[\"如果你想改变值\",{\"1\":{\"2170\":1}}],[\"如果你想修改字符串内容\",{\"1\":{\"1778\":1}}],[\"如果你发现的捕获的包数量少于\",{\"1\":{\"1493\":1}}],[\"如果你发现你的应用程序里有\",{\"1\":{\"346\":1}}],[\"如果你用\",{\"1\":{\"1176\":1}}],[\"如果你用的是\",{\"1\":{\"72\":1}}],[\"如果你后面用\",{\"1\":{\"674\":1}}],[\"如果你有中间件\",{\"1\":{\"388\":1}}],[\"如果你要做\",{\"1\":{\"341\":1}}],[\"如果你在从库上备份\",{\"1\":{\"298\":1}}],[\"如果你在主库上备份\",{\"1\":{\"297\":1}}],[\"如果你需要维护两个索引\",{\"1\":{\"269\":1}}],[\"如果你又建立一个\",{\"1\":{\"268\":1}}],[\"如果你也有这个顾虑\",{\"1\":{\"178\":1}}],[\"如果你运气好\",{\"1\":{\"127\":1}}],[\"如果你处理\",{\"1\":{\"79\":1}}],[\"如果用户名密码认证通过\",{\"1\":{\"66\":1}}],[\"如果用户名或密码不对\",{\"1\":{\"65\":1}}],[\"如日期\",{\"1\":{\"59\":1}}],[\"如下图所示\",{\"1\":{\"1483\":1,\"2289\":1,\"2296\":1,\"2346\":1,\"3362\":1,\"3433\":1}}],[\"如下图\",{\"1\":{\"620\":1}}],[\"如下\",{\"1\":{\"37\":1}}],[\"mv\",{\"1\":{\"3428\":1,\"3449\":1}}],[\"mvcc\",{\"1\":{\"308\":1}}],[\"m2\",{\"1\":{\"3038\":2,\"3205\":3}}],[\"m1\",{\"1\":{\"3038\":2,\"3205\":3}}],[\"m数量的最大值\",{\"1\":{\"2872\":1}}],[\"mnext\",{\"1\":{\"2872\":1}}],[\"mni80\",{\"1\":{\"38\":1}}],[\"micro\",{\"0\":{\"3462\":1}}],[\"mixed\",{\"1\":{\"3388\":3}}],[\"mieleizhi0522\",{\"1\":{\"3255\":1}}],[\"mime是媒体类型\",{\"1\":{\"2891\":1}}],[\"mime\",{\"1\":{\"2891\":1}}],[\"misc\",{\"1\":{\"2882\":1}}],[\"midle\",{\"1\":{\"2872\":1}}],[\"minute\",{\"1\":{\"3093\":6}}],[\"minute=0\",{\"1\":{\"3093\":1}}],[\"mingw\",{\"1\":{\"2807\":1}}],[\"minit\",{\"1\":{\"2795\":4}}],[\"min\",{\"1\":{\"40\":2,\"3093\":1}}],[\"m的空闲链表\",{\"1\":{\"2872\":1}}],[\"m的nextp字段对应着该p\",{\"1\":{\"2864\":1}}],[\"m初始化\",{\"1\":{\"2795\":1}}],[\"m启动后会从这里取p并挂钩上\",{\"1\":{\"2789\":1}}],[\"m0启动\",{\"1\":{\"2804\":1}}],[\"m0\",{\"1\":{\"2755\":1,\"2756\":2,\"2757\":4,\"2795\":2,\"2798\":1,\"2803\":1,\"2827\":1,\"2830\":1,\"2831\":4}}],[\"m0+m\",{\"1\":{\"2755\":2}}],[\"mfence\",{\"1\":{\"2753\":1}}],[\"mcommoninit\",{\"1\":{\"2789\":2}}],[\"mcount\",{\"1\":{\"2018\":1}}],[\"mcache\",{\"1\":{\"2520\":1,\"2528\":2}}],[\"mcentral\",{\"1\":{\"2519\":1,\"2526\":2,\"2528\":3}}],[\"mheap\",{\"1\":{\"2518\":1,\"2521\":1,\"2526\":1,\"2528\":1,\"2536\":1,\"2588\":1}}],[\"mhdr\",{\"1\":{\"1900\":1}}],[\"muintptr\",{\"1\":{\"2864\":1,\"2872\":1}}],[\"must\",{\"1\":{\"2789\":3}}],[\"mustbe\",{\"1\":{\"2243\":1,\"2261\":1}}],[\"mustbeassignable\",{\"1\":{\"2243\":1,\"2261\":1}}],[\"mutator\",{\"1\":{\"2513\":1,\"2564\":1}}],[\"mutex\",{\"1\":{\"2332\":1,\"2872\":1}}],[\"multiline\",{\"1\":{\"3202\":1,\"3388\":2}}],[\"multiple\",{\"1\":{\"1099\":1,\"3388\":1}}],[\"multi\",{\"0\":{\"12\":1},\"1\":{\"50\":4,\"3388\":2}}],[\"mtyp\",{\"1\":{\"2018\":1}}],[\"mtu\",{\"1\":{\"1295\":1,\"1296\":1,\"1297\":1}}],[\"m必须要是2的整数次幂这样才能保证与运算结果落在\",{\"1\":{\"1804\":1}}],[\"md5等函数\",{\"1\":{\"2891\":1}}],[\"md\",{\"1\":{\"2882\":3,\"3388\":1}}],[\"mdn\",{\"1\":{\"1400\":1}}],[\"mdl加锁过程是系统自动控制\",{\"1\":{\"324\":1}}],[\"mdl\",{\"1\":{\"322\":3,\"324\":3,\"335\":2,\"336\":1,\"338\":2,\"341\":1,\"342\":1,\"349\":1}}],[\"mstackissystemallocated\",{\"1\":{\"2795\":1}}],[\"mstartfn\",{\"1\":{\"2795\":1,\"2862\":1}}],[\"mstartm0\",{\"1\":{\"2795\":1}}],[\"mstart1\",{\"1\":{\"2795\":2}}],[\"mstart0\",{\"1\":{\"2795\":2}}],[\"mstart\",{\"1\":{\"2761\":3,\"2770\":1,\"2772\":1,\"2789\":1,\"2794\":1,\"2795\":3,\"2804\":1,\"2849\":1}}],[\"mspan\",{\"1\":{\"2524\":3,\"2525\":1,\"2526\":2,\"2542\":2,\"2544\":1,\"2546\":2}}],[\"ms\",{\"1\":{\"2020\":4,\"2795\":1}}],[\"mss\",{\"1\":{\"1295\":1,\"1298\":1}}],[\"msl与ttl的区别\",{\"1\":{\"868\":1}}],[\"msl\",{\"1\":{\"867\":1,\"869\":1,\"874\":1,\"878\":1}}],[\"more\",{\"1\":{\"3346\":1}}],[\"morphism\",{\"1\":{\"3098\":1}}],[\"movie\",{\"1\":{\"3075\":1,\"3078\":2}}],[\"movb\",{\"1\":{\"2753\":2}}],[\"movl\",{\"1\":{\"2753\":2,\"2759\":2}}],[\"movq\",{\"1\":{\"2748\":1,\"2753\":9,\"2755\":2,\"2757\":3,\"2759\":2,\"2761\":2}}],[\"moved\",{\"1\":{\"1102\":1}}],[\"most\",{\"1\":{\"2748\":1,\"3104\":3,\"3124\":1}}],[\"moff\",{\"1\":{\"2018\":1}}],[\"mod\",{\"1\":{\"2893\":1}}],[\"module\",{\"1\":{\"3388\":2,\"3394\":2}}],[\"module3\",{\"1\":{\"3040\":1,\"3043\":1}}],[\"module2\",{\"1\":{\"3033\":1,\"3036\":1,\"3038\":1}}],[\"module1\",{\"1\":{\"3031\":1,\"3036\":1,\"3038\":1}}],[\"modulesinit\",{\"1\":{\"2789\":1}}],[\"moduledataverify\",{\"1\":{\"2789\":1}}],[\"modualdata\",{\"1\":{\"2532\":1}}],[\"mode可选模式\",{\"1\":{\"3138\":1}}],[\"mode=\",{\"1\":{\"3129\":1,\"3175\":1}}],[\"mode\",{\"1\":{\"2480\":1,\"3132\":1}}],[\"modified\",{\"1\":{\"1111\":1}}],[\"modal\",{\"1\":{\"50\":2}}],[\"mounth\",{\"1\":{\"551\":1}}],[\"magic\",{\"1\":{\"3388\":1}}],[\"math\",{\"1\":{\"2891\":1,\"3090\":1,\"3176\":1,\"3388\":3}}],[\"match函数的第一个参数是正则表达式字符串或正则表达式对象\",{\"1\":{\"3205\":1}}],[\"match函数的完全匹配\",{\"1\":{\"3193\":1}}],[\"match\",{\"1\":{\"2206\":1,\"3184\":1,\"3205\":2,\"3388\":1}}],[\"malg\",{\"1\":{\"2793\":1}}],[\"mallocinit\",{\"1\":{\"2789\":1}}],[\"malloc\",{\"1\":{\"2514\":1}}],[\"mask\",{\"1\":{\"2789\":1}}],[\"master\",{\"1\":{\"1232\":1,\"1236\":1,\"1243\":1,\"3388\":1}}],[\"markers\",{\"1\":{\"3388\":1}}],[\"markdonesema\",{\"1\":{\"2480\":1}}],[\"markrootjobs\",{\"1\":{\"2480\":1}}],[\"markroot\",{\"1\":{\"2480\":2}}],[\"markrootnext\",{\"1\":{\"2480\":1}}],[\"mark\",{\"1\":{\"2478\":4,\"2480\":2,\"2485\":1,\"2487\":1,\"2494\":1,\"2496\":1,\"2497\":1,\"2500\":1,\"2559\":1,\"2564\":1,\"2567\":1,\"2569\":1,\"2575\":1,\"2584\":1}}],[\"markstarttime\",{\"1\":{\"2477\":1}}],[\"maps\",{\"1\":{\"2789\":2}}],[\"map不支持并发读写\",{\"1\":{\"1874\":1}}],[\"map是不可比较的\",{\"1\":{\"1871\":1}}],[\"maptype\",{\"1\":{\"1866\":1,\"2014\":1}}],[\"mapiterinit\",{\"1\":{\"1865\":1,\"1866\":1}}],[\"map每次遍历的顺序都是不同的\",{\"1\":{\"1864\":1}}],[\"map使用的桶很有设计感\",{\"1\":{\"1836\":1}}],[\"mapextra\",{\"1\":{\"1834\":1,\"1839\":1}}],[\"map类型的变量本质上是一个hmap类型的指针\",{\"1\":{\"1833\":1}}],[\"map类型的变量本质上是个指针\",{\"1\":{\"1792\":1}}],[\"map类型是map\",{\"1\":{\"1789\":1}}],[\"map概要\",{\"0\":{\"1787\":1}}],[\"map\",{\"0\":{\"1786\":1},\"1\":{\"1791\":1,\"1881\":1,\"1915\":1,\"2013\":1,\"2037\":1,\"2206\":2}}],[\"make\",{\"1\":{\"1717\":1,\"2789\":1,\"3099\":4}}],[\"main方法\",{\"1\":{\"2793\":1}}],[\"mainstarted\",{\"1\":{\"2793\":1}}],[\"main<abiinternal>\",{\"1\":{\"2763\":1}}],[\"main函数\",{\"1\":{\"2761\":1}}],[\"mainpc+0\",{\"1\":{\"2763\":1}}],[\"mainpc方法\",{\"1\":{\"2761\":1}}],[\"mainpc\",{\"1\":{\"2761\":1,\"2762\":1,\"2763\":2}}],[\"main\",{\"1\":{\"1631\":2,\"1656\":4,\"1670\":2,\"1673\":2,\"1680\":2,\"1687\":1,\"1702\":1,\"1717\":2,\"1760\":1,\"1763\":1,\"1774\":1,\"1878\":1,\"1951\":1,\"1965\":1,\"1981\":1,\"1985\":1,\"2111\":1,\"2132\":1,\"2135\":1,\"2158\":1,\"2163\":1,\"2166\":1,\"2168\":1,\"2172\":1,\"2174\":1,\"2178\":1,\"2188\":1,\"2195\":3,\"2196\":1,\"2212\":1,\"2253\":1,\"2294\":1,\"2295\":1,\"2296\":1,\"2298\":1,\"2299\":1,\"2300\":1,\"2301\":1,\"2303\":1,\"2309\":1,\"2310\":1,\"2315\":1,\"2317\":1,\"2320\":1,\"2321\":1,\"2323\":2,\"2324\":1,\"2333\":1,\"2352\":1,\"2370\":1,\"2378\":1,\"2380\":1,\"2400\":1,\"2506\":1,\"2762\":2,\"2763\":2,\"2769\":1,\"2771\":3,\"2789\":1,\"2790\":1,\"2793\":1,\"2823\":2,\"2846\":2,\"2848\":1,\"2849\":2,\"2850\":1,\"2851\":2,\"2904\":1,\"2928\":1,\"2949\":1,\"3041\":2,\"3043\":1,\"3078\":3,\"3084\":3,\"3087\":1,\"3090\":3,\"3093\":3,\"3096\":3,\"3099\":3,\"3175\":3,\"3176\":3,\"3177\":3,\"3205\":3,\"3286\":2,\"3287\":2,\"3297\":2,\"3311\":2,\"3325\":1,\"3327\":1,\"3341\":1,\"3342\":2,\"3413\":1,\"3428\":1}}],[\"machine\",{\"1\":{\"2858\":1}}],[\"mach\",{\"1\":{\"2757\":1}}],[\"macos等\",{\"1\":{\"3419\":1}}],[\"macos\",{\"1\":{\"2741\":1}}],[\"mac报文生成\",{\"0\":{\"1335\":1}}],[\"mac\",{\"1\":{\"1323\":1,\"1324\":3,\"1325\":1,\"1333\":1,\"1334\":1,\"1336\":1,\"1344\":1,\"1348\":2,\"1351\":1,\"1352\":1,\"1354\":1,\"1355\":2,\"1357\":1,\"1361\":2,\"1362\":1,\"1365\":5,\"1380\":2,\"1385\":1,\"1387\":2}}],[\"mac包头部格式\",{\"0\":{\"1322\":1}}],[\"mango\",{\"1\":{\"3053\":3}}],[\"management\",{\"1\":{\"398\":1}}],[\"manipulation\",{\"1\":{\"323\":1}}],[\"maxsplit=0\",{\"1\":{\"3188\":1}}],[\"maxmcount\",{\"1\":{\"2789\":1,\"2872\":1}}],[\"max\",{\"1\":{\"40\":2,\"46\":1,\"48\":1,\"3388\":7,\"3428\":3}}],[\"message\",{\"1\":{\"3321\":3,\"3325\":1,\"3327\":1,\"3340\":2,\"3394\":4,\"3397\":2}}],[\"mexit\",{\"1\":{\"2795\":1}}],[\"metaclass=abcmeta\",{\"1\":{\"3099\":1}}],[\"metadata\",{\"1\":{\"322\":1}}],[\"metroid\",{\"1\":{\"1470\":1}}],[\"methodbyname\",{\"1\":{\"2206\":1}}],[\"method\",{\"1\":{\"1135\":1,\"2018\":2,\"2154\":1,\"2156\":1,\"2182\":1,\"2206\":3}}],[\"merge\",{\"1\":{\"543\":1,\"544\":1}}],[\"members\",{\"1\":{\"3388\":1}}],[\"member\",{\"1\":{\"3058\":2}}],[\"memcached\",{\"1\":{\"195\":1}}],[\"memory\",{\"1\":{\"60\":1,\"504\":1,\"695\":1,\"1937\":1}}],[\"m\",{\"0\":{\"2860\":1},\"1\":{\"263\":1,\"287\":1,\"526\":1,\"1801\":1,\"1802\":1,\"1804\":1,\"1850\":1,\"2260\":1,\"2425\":1,\"2454\":2,\"2757\":3,\"2761\":2,\"2789\":3,\"2790\":1,\"2792\":2,\"2793\":5,\"2794\":1,\"2795\":6,\"2828\":1,\"2830\":1,\"2834\":1,\"2837\":4,\"2838\":3,\"2839\":1,\"2840\":1,\"2841\":1,\"2858\":1,\"2859\":1,\"2861\":1,\"2862\":10,\"2864\":1,\"2868\":3,\"2872\":1,\"3026\":4,\"3202\":1}}],[\"myclass\",{\"1\":{\"3248\":2,\"3250\":2}}],[\"mynumbers\",{\"1\":{\"3248\":2,\"3250\":2}}],[\"myfile\",{\"1\":{\"3113\":1}}],[\"mytype2\",{\"1\":{\"2029\":1,\"2032\":1}}],[\"mytype1\",{\"1\":{\"2029\":1,\"2030\":1}}],[\"myiter\",{\"1\":{\"3248\":6,\"3250\":2}}],[\"myimage\",{\"1\":{\"1411\":1}}],[\"myisam\",{\"0\":{\"426\":1},\"1\":{\"60\":1,\"310\":1,\"347\":1,\"351\":1,\"429\":1,\"431\":1,\"432\":1,\"434\":1,\"437\":1,\"512\":1,\"695\":1}}],[\"myslice\",{\"1\":{\"2020\":4,\"2021\":1,\"2024\":1}}],[\"myscript\",{\"1\":{\"1411\":1}}],[\"mysql有哪些部分组成\",{\"0\":{\"687\":1}}],[\"mysqld进程的崩溃会导致上一秒钟所有事务数据的丢失\",{\"1\":{\"633\":1}}],[\"mysqldump\",{\"1\":{\"308\":2}}],[\"mysql会每秒执行一次刷新磁盘操作\",{\"1\":{\"631\":1}}],[\"mysql中\",{\"1\":{\"465\":1}}],[\"mysql引擎支持哪些引擎\",{\"0\":{\"426\":1}}],[\"mysql5\",{\"1\":{\"289\":1,\"512\":1}}],[\"mysql>\",{\"1\":{\"237\":1}}],[\"mysql的事务启动方式有以下几种\",{\"1\":{\"173\":1}}],[\"mysql\",{\"1\":{\"54\":1,\"56\":1,\"58\":1,\"59\":1,\"62\":1,\"63\":1,\"64\":1,\"68\":1,\"69\":1,\"72\":2,\"74\":1,\"76\":1,\"78\":1,\"95\":1,\"107\":1,\"111\":1,\"114\":1,\"124\":1,\"134\":1,\"142\":1,\"166\":1,\"248\":2,\"276\":1,\"278\":1,\"280\":1,\"283\":1,\"284\":1,\"291\":1,\"293\":1,\"314\":1,\"316\":1,\"529\":1,\"637\":1,\"643\":1,\"674\":1,\"688\":1,\"689\":1,\"691\":1,\"693\":1,\"2332\":1,\"2891\":1}}],[\"送入svm\",{\"1\":{\"36\":1}}],[\"fetch\",{\"1\":{\"3428\":1}}],[\"feross\",{\"1\":{\"3388\":1}}],[\"feffery\",{\"1\":{\"28\":1}}],[\"fullmatch\",{\"1\":{\"3192\":1}}],[\"full\",{\"1\":{\"2480\":2}}],[\"funtion\",{\"1\":{\"2186\":1}}],[\"fun\",{\"1\":{\"1900\":1,\"1906\":1,\"2063\":1,\"2065\":1,\"2066\":1,\"2079\":1,\"2224\":1}}],[\"funcval\",{\"1\":{\"2098\":1,\"2099\":1,\"2104\":1,\"2105\":1,\"2118\":1,\"2133\":1,\"2139\":1,\"2141\":1,\"2341\":1,\"2342\":1,\"2350\":1,\"2356\":2,\"2362\":1,\"2366\":1,\"2372\":2,\"2373\":1,\"2376\":1,\"2420\":1,\"2459\":1,\"2793\":2,\"2907\":1}}],[\"function的左括号之前使用一致的空格\",{\"1\":{\"3388\":1}}],[\"functions\",{\"1\":{\"3388\":2}}],[\"function\",{\"0\":{\"2185\":1},\"1\":{\"1871\":1,\"2014\":1,\"2098\":1,\"2109\":1,\"2115\":1,\"2118\":1,\"2120\":2,\"2186\":1,\"2356\":1,\"2369\":1,\"2868\":1,\"3388\":16}}],[\"func\",{\"1\":{\"1631\":1,\"1640\":3,\"1656\":2,\"1670\":1,\"1673\":1,\"1680\":1,\"1687\":1,\"1702\":1,\"1717\":2,\"1760\":1,\"1763\":1,\"1774\":1,\"1866\":1,\"1869\":2,\"1878\":1,\"1951\":1,\"1965\":1,\"1981\":1,\"1985\":1,\"2014\":1,\"2020\":2,\"2052\":2,\"2082\":1,\"2103\":3,\"2111\":4,\"2132\":4,\"2135\":4,\"2158\":2,\"2163\":3,\"2166\":2,\"2172\":2,\"2178\":3,\"2188\":2,\"2195\":10,\"2206\":2,\"2208\":1,\"2222\":1,\"2234\":2,\"2239\":1,\"2243\":1,\"2253\":1,\"2260\":1,\"2261\":1,\"2272\":3,\"2294\":2,\"2300\":2,\"2309\":3,\"2320\":3,\"2333\":3,\"2335\":1,\"2337\":1,\"2341\":1,\"2352\":3,\"2370\":3,\"2378\":3,\"2383\":3,\"2400\":3,\"2402\":1,\"2425\":3,\"2427\":1,\"2454\":1,\"2778\":1,\"2780\":1,\"2783\":2,\"2786\":1,\"2789\":1,\"2793\":3,\"2795\":3,\"2823\":1,\"2862\":1,\"2904\":4,\"2913\":2,\"2928\":4,\"2949\":4,\"3238\":2,\"3240\":2,\"3286\":1,\"3287\":2,\"3295\":2,\"3297\":1,\"3306\":1,\"3309\":1,\"3311\":2,\"3325\":2,\"3327\":1,\"3341\":3,\"3342\":6,\"3388\":6}}],[\"frozen\",{\"1\":{\"3428\":1}}],[\"from\",{\"1\":{\"34\":1,\"55\":1,\"83\":1,\"181\":1,\"217\":1,\"218\":1,\"236\":1,\"246\":1,\"273\":1,\"516\":1,\"518\":1,\"524\":2,\"532\":1,\"1609\":1,\"1772\":2,\"2648\":2,\"2649\":1,\"2650\":1,\"2705\":2,\"2748\":1,\"3036\":2,\"3090\":1,\"3093\":1,\"3099\":1,\"3176\":1,\"3394\":2}}],[\"fruits5\",{\"1\":{\"3053\":2}}],[\"fruits4\",{\"1\":{\"3053\":2}}],[\"fruits3\",{\"1\":{\"3053\":2}}],[\"fruits2\",{\"1\":{\"3053\":2}}],[\"fruits\",{\"1\":{\"3053\":6,\"3058\":4}}],[\"freem\",{\"1\":{\"2872\":1}}],[\"free\",{\"1\":{\"2480\":1}}],[\"fractional\",{\"1\":{\"2571\":1,\"2574\":1,\"2577\":2,\"2578\":3}}],[\"fractionalutilizationgoal\",{\"1\":{\"2477\":1,\"2578\":1}}],[\"fractionalmarktime\",{\"1\":{\"2477\":1}}],[\"framepc\",{\"1\":{\"2459\":1}}],[\"fd\",{\"1\":{\"2459\":1}}],[\"f3\",{\"1\":{\"2195\":2,\"2196\":1}}],[\"fs2\",{\"1\":{\"3177\":2}}],[\"fs1\",{\"1\":{\"3177\":2}}],[\"fs\",{\"1\":{\"2135\":5,\"2142\":1,\"2143\":1,\"3176\":8}}],[\"f2\",{\"1\":{\"2103\":2,\"2111\":2,\"2132\":2,\"2188\":2,\"2193\":2,\"2195\":2,\"2196\":1}}],[\"fnf\",{\"1\":{\"3119\":2}}],[\"fn\",{\"1\":{\"2018\":2,\"2099\":1,\"2341\":1,\"2350\":1,\"2362\":1,\"2366\":1,\"2372\":1,\"2373\":1,\"2402\":1,\"2420\":1,\"2459\":1,\"2793\":6,\"2795\":3,\"2907\":1}}],[\"f1\",{\"1\":{\"1992\":1,\"2003\":1,\"2103\":2,\"2111\":2,\"2113\":2,\"2132\":2,\"2188\":2,\"2189\":3,\"2333\":2,\"2335\":1,\"2337\":1}}],[\"f\",{\"1\":{\"1893\":2,\"1894\":1,\"1904\":2,\"1905\":1,\"1906\":1,\"2040\":2,\"2043\":2,\"2047\":2,\"2054\":2,\"2058\":2,\"2070\":2,\"2075\":2,\"2082\":2,\"2239\":3,\"3015\":1,\"3048\":1,\"3052\":11,\"3069\":1,\"3113\":2,\"3116\":3,\"3175\":9,\"3388\":2}}],[\"flate\",{\"1\":{\"2891\":1}}],[\"flagaddr\",{\"1\":{\"2260\":1}}],[\"flagro\",{\"1\":{\"2260\":1}}],[\"flagindir\",{\"1\":{\"2239\":1,\"2260\":2}}],[\"flag\",{\"1\":{\"2229\":1,\"2239\":1,\"2241\":1,\"2260\":6,\"2891\":1}}],[\"flags=0\",{\"1\":{\"3182\":1,\"3184\":1,\"3186\":1,\"3188\":1,\"3190\":1,\"3192\":1,\"3194\":1,\"3196\":1}}],[\"flags\",{\"1\":{\"1834\":1,\"2014\":1}}],[\"fl\",{\"1\":{\"2260\":3}}],[\"floating\",{\"1\":{\"3388\":1}}],[\"float\",{\"1\":{\"2206\":1,\"3015\":1}}],[\"float64\",{\"1\":{\"1999\":1,\"2477\":1}}],[\"float32\",{\"1\":{\"1999\":1}}],[\"flush\",{\"1\":{\"293\":1,\"628\":1,\"658\":1,\"2558\":1,\"2561\":1,\"2564\":1}}],[\"fmt\",{\"1\":{\"1631\":5,\"1640\":3,\"1656\":4,\"1670\":2,\"1673\":2,\"1680\":2,\"1687\":3,\"1702\":3,\"1717\":3,\"1760\":1,\"1763\":1,\"1774\":4,\"1951\":1,\"1965\":2,\"1981\":2,\"1985\":2,\"2020\":2,\"2090\":3,\"2103\":1,\"2111\":1,\"2132\":1,\"2135\":1,\"2158\":2,\"2163\":1,\"2166\":3,\"2172\":3,\"2178\":3,\"2182\":1,\"2184\":1,\"2188\":2,\"2195\":2,\"2210\":1,\"2333\":3,\"2335\":1,\"2337\":1,\"2352\":2,\"2370\":2,\"2378\":2,\"2400\":2,\"2402\":1,\"2823\":2,\"2891\":1,\"2904\":3,\"2913\":1,\"2928\":3,\"2949\":3,\"3286\":2,\"3297\":2,\"3327\":1,\"3341\":4,\"3342\":5}}],[\"fixall\",{\"1\":{\"3380\":1}}],[\"fix\",{\"1\":{\"2893\":1}}],[\"fieldbynamefunc\",{\"1\":{\"2206\":1}}],[\"fieldbyname\",{\"1\":{\"2206\":1}}],[\"fieldbyindex\",{\"1\":{\"2206\":1}}],[\"field\",{\"1\":{\"2206\":1}}],[\"fields\",{\"1\":{\"2014\":1}}],[\"fieldalign\",{\"1\":{\"2008\":1,\"2206\":1}}],[\"filled\",{\"1\":{\"1916\":1}}],[\"files\",{\"1\":{\"3365\":2,\"3388\":1,\"3394\":4}}],[\"filename进行字符串连接\",{\"1\":{\"3388\":1}}],[\"filename\",{\"1\":{\"3176\":2}}],[\"filenames\",{\"1\":{\"3176\":2}}],[\"filenotfounderror\",{\"1\":{\"3119\":1,\"3175\":1,\"3177\":1}}],[\"file>\",{\"1\":{\"2049\":1,\"2055\":1,\"2062\":1,\"2068\":1,\"2078\":1}}],[\"file\",{\"1\":{\"1894\":1,\"1895\":1,\"1905\":1,\"1906\":2,\"2040\":1,\"2041\":1,\"2044\":1,\"2047\":1,\"2048\":1,\"2060\":1,\"2090\":2,\"3104\":3,\"3119\":3,\"3124\":1,\"3129\":1,\"3131\":1}}],[\"first\",{\"1\":{\"1656\":2,\"1670\":1,\"1673\":1,\"1680\":1,\"1687\":2,\"1702\":2}}],[\"firefox\",{\"1\":{\"1458\":1,\"1464\":1}}],[\"finally\",{\"1\":{\"3118\":1,\"3119\":1,\"3175\":1,\"3176\":1}}],[\"finaly\",{\"1\":{\"3117\":1}}],[\"finditer\",{\"1\":{\"3196\":1}}],[\"findall\",{\"1\":{\"3194\":1}}],[\"findrunnablegcworker\",{\"1\":{\"2487\":1,\"2575\":1}}],[\"find\",{\"1\":{\"1878\":2,\"3048\":2,\"3394\":2}}],[\"fin\",{\"1\":{\"753\":2}}],[\"fcs\",{\"1\":{\"1342\":1,\"1360\":1}}],[\"four=4\",{\"1\":{\"3069\":1}}],[\"found\",{\"1\":{\"1105\":1,\"1132\":1}}],[\"foo\",{\"1\":{\"3032\":1,\"3034\":1,\"3036\":4,\"3038\":2,\"3041\":3,\"3080\":1,\"3256\":4,\"3388\":2}}],[\"format\",{\"1\":{\"3048\":1,\"3113\":1,\"3124\":2}}],[\"forced\",{\"1\":{\"2473\":1}}],[\"forbidden\",{\"1\":{\"1129\":1}}],[\"for\",{\"1\":{\"65\":1,\"1406\":1,\"1717\":1,\"1772\":2,\"1774\":2,\"2014\":1,\"2018\":1,\"2135\":2,\"2138\":1,\"2139\":1,\"2140\":1,\"2417\":2,\"2418\":1,\"2748\":3,\"2783\":2,\"3016\":1,\"3017\":1,\"3026\":1,\"3028\":1,\"3052\":6,\"3054\":2,\"3058\":1,\"3062\":1,\"3069\":2,\"3099\":1,\"3116\":1,\"3175\":1,\"3176\":4,\"3250\":1,\"3256\":1,\"3341\":4,\"3342\":4,\"3346\":1,\"3388\":2,\"3397\":1}}],[\"fallthrough\",{\"1\":{\"3388\":1}}],[\"false两种值\",{\"1\":{\"2971\":1}}],[\"false\",{\"1\":{\"2362\":1,\"2373\":1,\"2503\":1,\"2793\":1,\"3048\":4,\"3176\":2,\"3388\":8}}],[\"failed\",{\"1\":{\"3325\":2,\"3394\":6,\"3397\":2}}],[\"fac\",{\"1\":{\"3026\":4}}],[\"factor\",{\"1\":{\"1826\":1,\"3176\":2}}],[\"fatal\",{\"1\":{\"2891\":1,\"3447\":1}}],[\"fastrandinit\",{\"1\":{\"2789\":1}}],[\"fastrand\",{\"1\":{\"1866\":3,\"2793\":1}}],[\"fast\",{\"1\":{\"990\":1,\"993\":1}}],[\"fanout\",{\"1\":{\"488\":1}}],[\"ftp文件传输\",{\"1\":{\"782\":1}}],[\"ftp\",{\"1\":{\"719\":1}}],[\"ftwrl\",{\"1\":{\"293\":1,\"295\":1,\"309\":1,\"310\":1,\"314\":1}}],[\"ffff\",{\"1\":{\"1753\":2,\"1755\":1}}],[\"ff\",{\"1\":{\"237\":1}}],[\"dragonfly\",{\"1\":{\"2783\":1,\"2786\":1}}],[\"drivers\",{\"1\":{\"1469\":1}}],[\"df|=1\",{\"1\":{\"2453\":1}}],[\"df\",{\"1\":{\"2452\":2,\"2453\":2,\"2454\":9}}],[\"dx\",{\"1\":{\"2118\":1,\"2753\":1}}],[\"dangle\",{\"1\":{\"3388\":2}}],[\"darwin\",{\"1\":{\"2741\":1,\"2755\":2,\"2795\":1}}],[\"days\",{\"1\":{\"1609\":1}}],[\"date\",{\"1\":{\"1570\":1}}],[\"data指向数组中索引为7的元素地址\",{\"1\":{\"1696\":1}}],[\"data指向数组中索引为1的元素地址\",{\"1\":{\"1691\":1}}],[\"data应该指向开辟数组的首地址\",{\"1\":{\"1667\":1}}],[\"data的地址则为0x0\",{\"1\":{\"1659\":1}}],[\"database\",{\"0\":{\"3456\":1},\"1\":{\"397\":1,\"398\":1,\"400\":1,\"2891\":1}}],[\"data\",{\"1\":{\"50\":3,\"323\":2,\"399\":1,\"1653\":1,\"1656\":2,\"1670\":1,\"1673\":1,\"1680\":1,\"1687\":3,\"1702\":3,\"1890\":1,\"1892\":1,\"1895\":1,\"1900\":1,\"1903\":1,\"1912\":1,\"2213\":1,\"2214\":1,\"2220\":1,\"2224\":1,\"2225\":1,\"2236\":1,\"2241\":1,\"2763\":1,\"3113\":1,\"3119\":1,\"3177\":3,\"3340\":2,\"3341\":7,\"3342\":6}}],[\"double\",{\"1\":{\"3388\":1}}],[\"douban\",{\"1\":{\"32\":1}}],[\"dot\",{\"1\":{\"3388\":2}}],[\"dosomethingunfinished\",{\"1\":{\"3388\":1}}],[\"dog和cat两个子类分别对pet类中的make\",{\"1\":{\"3101\":1}}],[\"dog\",{\"1\":{\"3099\":3}}],[\"doc\",{\"1\":{\"2882\":1,\"2893\":1}}],[\"docs\",{\"1\":{\"1044\":1,\"1190\":1,\"3346\":1,\"3352\":1,\"3388\":1,\"3428\":3,\"3447\":2,\"3449\":1,\"3452\":1}}],[\"do\",{\"1\":{\"2402\":1,\"2425\":1,\"2454\":1}}],[\"done\",{\"1\":{\"3341\":2,\"3342\":2}}],[\"don\",{\"1\":{\"2239\":1}}],[\"download\",{\"1\":{\"1467\":1}}],[\"dom节点的数量越多\",{\"1\":{\"1405\":1}}],[\"dom树描述了文档的内容\",{\"1\":{\"1405\":1}}],[\"dom\",{\"1\":{\"1403\":2,\"1406\":1}}],[\"dupe\",{\"1\":{\"3388\":3}}],[\"duplicate\",{\"1\":{\"3388\":2}}],[\"duplicates\",{\"1\":{\"2868\":1}}],[\"duplicated\",{\"1\":{\"1001\":1}}],[\"dummy\",{\"1\":{\"2234\":2}}],[\"durability\",{\"1\":{\"144\":1}}],[\"during\",{\"1\":{\"68\":1,\"2789\":1,\"3388\":1}}],[\"dhcp\",{\"1\":{\"719\":1}}],[\"dns\",{\"1\":{\"719\":1,\"1262\":1,\"1266\":1,\"1269\":1,\"1308\":1}}],[\"db3a6094489a\",{\"1\":{\"1190\":1}}],[\"dbs\",{\"1\":{\"399\":1}}],[\"dbms\",{\"1\":{\"398\":1}}],[\"db\",{\"1\":{\"397\":1}}],[\"dba\",{\"1\":{\"342\":1,\"399\":1,\"400\":1}}],[\"d\",{\"0\":{\"915\":1},\"1\":{\"337\":1,\"562\":2,\"916\":1,\"1631\":3,\"1717\":2,\"1965\":1,\"1973\":1,\"2402\":5,\"2416\":1,\"2759\":1,\"2778\":1,\"3048\":3,\"3205\":1,\"3341\":1,\"3394\":4}}],[\"ddl\",{\"1\":{\"323\":1,\"324\":2,\"341\":2}}],[\"dml\",{\"1\":{\"323\":1,\"324\":2}}],[\"dependencies\",{\"1\":{\"3428\":1}}],[\"depth\",{\"1\":{\"3428\":1}}],[\"deploy\",{\"1\":{\"3419\":1,\"3428\":2}}],[\"development\",{\"1\":{\"3388\":1}}],[\"developer\",{\"1\":{\"1052\":1,\"1056\":1,\"3430\":1}}],[\"debugger\",{\"1\":{\"3388\":3}}],[\"debug\",{\"1\":{\"2891\":1}}],[\"debugcallv2<abiinternal>\",{\"1\":{\"2761\":1}}],[\"debugcallv2\",{\"1\":{\"2761\":1}}],[\"dedicated\",{\"1\":{\"2570\":1,\"2573\":1,\"2574\":1,\"2576\":2}}],[\"dedicatedmarkworkersneeded\",{\"1\":{\"2477\":1}}],[\"dedicatedmarktime\",{\"1\":{\"2477\":1}}],[\"demo\",{\"1\":{\"3297\":1,\"3309\":1,\"3311\":1}}],[\"demo4\",{\"1\":{\"1985\":2}}],[\"demo3\",{\"1\":{\"1985\":2}}],[\"demo2\",{\"1\":{\"1981\":2}}],[\"demo1\",{\"1\":{\"1981\":2}}],[\"declared\",{\"1\":{\"3394\":2}}],[\"declaration风格中允许箭头函数\",{\"1\":{\"3388\":1}}],[\"declaration\",{\"1\":{\"3388\":4}}],[\"declarations\",{\"1\":{\"3388\":3}}],[\"decimal\",{\"1\":{\"3388\":1}}],[\"decide\",{\"1\":{\"1866\":1}}],[\"decoic\",{\"1\":{\"717\":1}}],[\"delete\",{\"1\":{\"1578\":1,\"3388\":1}}],[\"description\",{\"1\":{\"1411\":1}}],[\"destination\",{\"1\":{\"1315\":1,\"1316\":1}}],[\"des\",{\"1\":{\"1260\":1}}],[\"details\",{\"1\":{\"805\":1,\"1048\":1,\"1050\":1,\"3255\":1}}],[\"detect\",{\"1\":{\"377\":1,\"381\":1}}],[\"deadlock\",{\"1\":{\"377\":1,\"381\":1}}],[\"define\",{\"1\":{\"3388\":1}}],[\"defined\",{\"1\":{\"3104\":1}}],[\"definition\",{\"1\":{\"323\":1}}],[\"def\",{\"1\":{\"3025\":1,\"3026\":1,\"3028\":2,\"3032\":1,\"3034\":1,\"3041\":2,\"3075\":3,\"3078\":1,\"3084\":6,\"3087\":6,\"3090\":5,\"3093\":5,\"3096\":15,\"3099\":5,\"3175\":1,\"3176\":2,\"3177\":1,\"3205\":1,\"3238\":4,\"3240\":2,\"3248\":2,\"3250\":2,\"3256\":2}}],[\"deferpool\",{\"1\":{\"2394\":1}}],[\"deferprocstack\",{\"1\":{\"2402\":1,\"2415\":1,\"2442\":1}}],[\"deferproc函数的返回地址return\",{\"1\":{\"2362\":1,\"2373\":1}}],[\"deferproc第一个参数传入\",{\"1\":{\"2350\":1,\"2362\":1,\"2373\":1,\"2420\":1}}],[\"deferproc\",{\"1\":{\"2337\":1,\"2340\":1,\"2341\":1,\"2342\":1,\"2346\":1,\"2354\":1,\"2356\":1,\"2359\":1,\"2361\":1,\"2363\":1,\"2369\":1,\"2374\":1,\"2408\":1,\"2433\":1,\"2938\":1}}],[\"defer1\",{\"0\":{\"2391\":1,\"2397\":1,\"2423\":1},\"1\":{\"2392\":1,\"2393\":1,\"2398\":1,\"2401\":1,\"2405\":1,\"2406\":1,\"2419\":1,\"2429\":1,\"2430\":1,\"2448\":1,\"2452\":1,\"2458\":1}}],[\"defer池\",{\"1\":{\"2364\":1}}],[\"defer中取一个出来用\",{\"1\":{\"2364\":1}}],[\"defer结构体中\",{\"1\":{\"2955\":1}}],[\"defer结构体后面\",{\"1\":{\"2350\":1,\"2420\":1}}],[\"defer结构体\",{\"1\":{\"2350\":1,\"2362\":1,\"2373\":1,\"2420\":1}}],[\"deferreturn\",{\"1\":{\"2337\":2,\"2343\":1,\"2346\":1,\"2366\":1,\"2376\":1,\"2386\":1,\"2402\":2,\"2421\":1,\"2940\":1,\"2941\":1}}],[\"defer\",{\"0\":{\"2329\":1,\"2348\":1,\"2368\":1,\"2377\":1,\"2381\":1,\"2456\":1,\"2911\":1},\"1\":{\"1408\":1,\"2309\":1,\"2312\":1,\"2315\":2,\"2320\":1,\"2321\":2,\"2323\":1,\"2324\":2,\"2325\":2,\"2332\":4,\"2333\":1,\"2334\":1,\"2335\":1,\"2339\":1,\"2342\":1,\"2343\":2,\"2345\":4,\"2346\":1,\"2349\":2,\"2350\":4,\"2352\":1,\"2354\":1,\"2359\":2,\"2361\":2,\"2362\":4,\"2363\":2,\"2365\":1,\"2366\":4,\"2367\":2,\"2370\":1,\"2371\":1,\"2372\":1,\"2373\":4,\"2374\":2,\"2376\":2,\"2378\":1,\"2380\":1,\"2382\":3,\"2383\":4,\"2384\":1,\"2386\":6,\"2388\":4,\"2389\":1,\"2392\":2,\"2394\":2,\"2395\":1,\"2396\":1,\"2399\":2,\"2400\":1,\"2402\":2,\"2403\":1,\"2407\":1,\"2408\":1,\"2409\":1,\"2411\":1,\"2413\":2,\"2414\":1,\"2415\":2,\"2416\":2,\"2417\":2,\"2418\":2,\"2419\":2,\"2420\":4,\"2421\":3,\"2422\":3,\"2425\":2,\"2426\":1,\"2431\":1,\"2432\":1,\"2433\":1,\"2434\":1,\"2435\":1,\"2437\":1,\"2440\":2,\"2441\":1,\"2442\":2,\"2443\":1,\"2444\":1,\"2445\":2,\"2446\":1,\"2449\":1,\"2450\":1,\"2451\":1,\"2452\":1,\"2455\":6,\"2457\":2,\"2458\":2,\"2459\":2,\"2460\":1,\"2900\":2,\"2904\":2,\"2905\":1,\"2906\":1,\"2907\":3,\"2908\":3,\"2909\":1,\"2910\":3,\"2913\":1,\"2914\":3,\"2917\":2,\"2920\":1,\"2921\":1,\"2924\":1,\"2927\":1,\"2928\":2,\"2930\":2,\"2933\":1,\"2934\":2,\"2940\":1,\"2941\":1,\"2942\":2,\"2945\":2,\"2949\":2,\"2952\":3,\"2955\":1,\"2960\":1,\"2963\":6,\"3327\":1,\"3341\":3,\"3342\":2}}],[\"default\",{\"1\":{\"237\":2,\"251\":4,\"2090\":2,\"2091\":1,\"3388\":3}}],[\"denied\",{\"1\":{\"65\":1,\"3447\":1}}],[\"dir\",{\"1\":{\"3428\":1}}],[\"dirname\",{\"1\":{\"3388\":1}}],[\"dirty\",{\"1\":{\"145\":1}}],[\"div\",{\"1\":{\"3388\":1}}],[\"division\",{\"1\":{\"3104\":1}}],[\"dial\",{\"1\":{\"3286\":1,\"3295\":1,\"3327\":1,\"3341\":1}}],[\"dict\",{\"1\":{\"3069\":2}}],[\"difference\",{\"1\":{\"3065\":2}}],[\"disable\",{\"1\":{\"3388\":1}}],[\"discard\",{\"1\":{\"3063\":1}}],[\"dist\",{\"1\":{\"2893\":1,\"3428\":2,\"3449\":1}}],[\"distinguish\",{\"1\":{\"1772\":2}}],[\"di\",{\"1\":{\"2748\":1,\"2753\":6,\"2755\":3}}],[\"dig101\",{\"1\":{\"1925\":1}}],[\"ding\",{\"1\":{\"805\":1}}],[\"dimensional\",{\"0\":{\"12\":1}}],[\"d=20\",{\"1\":{\"83\":1}}],[\"iife\",{\"1\":{\"3388\":2}}],[\"irregular\",{\"1\":{\"3388\":1}}],[\"ignore\",{\"1\":{\"3388\":1}}],[\"ignorecase\",{\"1\":{\"3200\":1}}],[\"igmp\",{\"1\":{\"711\":1}}],[\"illumos\",{\"1\":{\"2795\":1}}],[\"i+1\",{\"1\":{\"2783\":1}}],[\"i++\",{\"1\":{\"1717\":1,\"1774\":1,\"2103\":1,\"2135\":2,\"2418\":1,\"3341\":1,\"3342\":1}}],[\"i<n\",{\"1\":{\"2418\":1}}],[\"i<\",{\"1\":{\"2418\":1}}],[\"i<len\",{\"1\":{\"1774\":1}}],[\"itabsinit\",{\"1\":{\"2789\":1}}],[\"itabtable\",{\"1\":{\"1917\":1,\"2062\":1,\"2068\":1,\"2071\":1,\"2078\":1}}],[\"itabtabletype\",{\"1\":{\"1916\":1}}],[\"itabinitsize\",{\"1\":{\"1916\":1}}],[\"itab了\",{\"1\":{\"1912\":1}}],[\"itab缓存\",{\"0\":{\"1911\":1}}],[\"itab\",{\"1\":{\"1900\":4,\"1903\":1,\"1906\":1,\"1912\":1,\"1913\":3,\"1916\":1,\"1917\":3,\"1918\":2,\"2049\":1,\"2050\":2,\"2055\":1,\"2062\":1,\"2063\":1,\"2065\":1,\"2066\":3,\"2068\":1,\"2071\":1,\"2072\":1,\"2078\":1,\"2079\":1,\"2083\":1,\"2088\":1,\"2224\":4,\"2225\":1}}],[\"it\",{\"1\":{\"1772\":2,\"1866\":3,\"2239\":1,\"3246\":3}}],[\"items3\",{\"1\":{\"3069\":2}}],[\"items2\",{\"1\":{\"3069\":2}}],[\"items1\",{\"1\":{\"3069\":2}}],[\"item\",{\"1\":{\"1656\":2,\"1670\":1,\"1673\":1,\"1680\":1,\"1687\":4,\"1702\":4,\"1774\":2}}],[\"iterator\",{\"1\":{\"3388\":2}}],[\"iter\",{\"1\":{\"48\":1,\"3246\":1,\"3247\":1,\"3248\":2,\"3250\":2}}],[\"iter=20000\",{\"1\":{\"46\":1}}],[\"ifdef\",{\"1\":{\"2755\":1}}],[\"ifn\",{\"1\":{\"2018\":1}}],[\"ifaceindir\",{\"1\":{\"2239\":1}}],[\"iface\",{\"1\":{\"1900\":1,\"1903\":1,\"2049\":1,\"2224\":1,\"2225\":1}}],[\"if\",{\"1\":{\"1717\":1,\"1866\":1,\"1878\":1,\"2222\":1,\"2234\":2,\"2239\":2,\"2260\":4,\"2337\":1,\"2402\":1,\"2418\":1,\"2425\":1,\"2454\":3,\"2778\":1,\"2786\":1,\"2789\":2,\"2793\":5,\"2795\":7,\"2868\":1,\"3014\":1,\"3015\":2,\"3017\":1,\"3023\":1,\"3041\":1,\"3054\":2,\"3062\":1,\"3063\":1,\"3069\":1,\"3075\":1,\"3078\":1,\"3084\":2,\"3087\":1,\"3090\":2,\"3093\":4,\"3096\":2,\"3099\":1,\"3124\":1,\"3175\":2,\"3176\":5,\"3177\":1,\"3205\":4,\"3250\":1,\"3286\":2,\"3295\":2,\"3297\":1,\"3325\":2,\"3327\":2,\"3341\":3,\"3342\":4,\"3388\":6,\"3419\":1}}],[\"icmp\",{\"1\":{\"711\":1,\"867\":1}}],[\"ip包会送到数据链路层\",{\"1\":{\"1321\":1}}],[\"ip包头格式\",{\"0\":{\"1306\":1}}],[\"ip报文生成\",{\"0\":{\"1319\":1}}],[\"ip会选择合适的路由和交换的节点\",{\"1\":{\"1305\":1}}],[\"ip模型你选择osi模型对应的层去说即可\",{\"1\":{\"720\":1}}],[\"ip模型各层的功能\",{\"0\":{\"705\":1}}],[\"ipv6\",{\"1\":{\"711\":1}}],[\"ipv4\",{\"1\":{\"711\":1}}],[\"ip\",{\"1\":{\"711\":1,\"867\":3,\"1006\":1,\"1174\":1,\"1175\":2,\"1298\":1,\"1307\":1,\"1308\":1,\"1310\":3,\"1316\":2,\"1318\":1,\"1320\":1,\"1325\":1,\"1326\":1,\"1339\":1,\"1357\":1,\"1371\":1,\"1373\":1,\"1378\":1,\"1379\":3,\"1380\":2,\"1387\":2,\"1516\":1}}],[\"ip篇\",{\"0\":{\"703\":1}}],[\"ix\",{\"1\":{\"609\":1,\"610\":1}}],[\"issuperset\",{\"1\":{\"3065\":2}}],[\"issubset\",{\"1\":{\"3065\":2}}],[\"issystemgoroutine\",{\"1\":{\"2793\":1}}],[\"isalnum\",{\"1\":{\"3048\":1}}],[\"isalpha\",{\"1\":{\"3048\":1}}],[\"isdigit\",{\"1\":{\"3048\":1}}],[\"isis\",{\"1\":{\"3005\":1}}],[\"isintel\",{\"1\":{\"2753\":1}}],[\"istack\",{\"1\":{\"2753\":1}}],[\"isvariadic\",{\"1\":{\"2206\":1}}],[\"isnan\",{\"1\":{\"3388\":2}}],[\"isn+1\",{\"1\":{\"796\":1,\"797\":1}}],[\"isn\",{\"1\":{\"795\":1,\"796\":1}}],[\"is\",{\"1\":{\"608\":1,\"610\":1,\"611\":1,\"1772\":6,\"2239\":1,\"2260\":1,\"2350\":1,\"2362\":1,\"2373\":1,\"2420\":1,\"2748\":2,\"2759\":2,\"2789\":1,\"2868\":1,\"3087\":2,\"3090\":2,\"3104\":1,\"3176\":2,\"3397\":1}}],[\"ismale=1\",{\"1\":{\"273\":1,\"532\":1}}],[\"isolation\",{\"1\":{\"144\":1}}],[\"ioerror\",{\"1\":{\"3116\":1,\"3176\":1,\"3177\":1}}],[\"iota\",{\"1\":{\"2473\":1,\"2864\":1,\"2868\":1}}],[\"io\",{\"1\":{\"100\":1,\"1044\":1,\"1470\":1,\"1902\":1,\"1906\":1,\"2047\":1,\"2058\":1,\"2059\":1,\"2060\":1,\"2071\":1,\"2075\":2,\"2076\":1,\"2891\":1,\"3346\":1,\"3352\":1,\"3437\":1}}],[\"ide\",{\"1\":{\"2884\":1}}],[\"idlemarktime\",{\"1\":{\"2477\":1}}],[\"idx\",{\"1\":{\"1878\":4}}],[\"id3\",{\"1\":{\"274\":1,\"278\":1}}],[\"id是主键\",{\"1\":{\"117\":1}}],[\"id=\",{\"1\":{\"1044\":1}}],[\"id=1\",{\"1\":{\"374\":1}}],[\"id=10\",{\"1\":{\"55\":1}}],[\"id=300\",{\"1\":{\"240\":1,\"241\":1}}],[\"id=500\",{\"1\":{\"216\":1,\"217\":1}}],[\"id=2\",{\"1\":{\"97\":1,\"117\":2,\"133\":1,\"374\":1,\"637\":1,\"646\":1,\"661\":1,\"662\":1}}],[\"id\",{\"1\":{\"83\":1,\"192\":1,\"200\":1,\"205\":1,\"210\":2,\"217\":1,\"218\":2,\"221\":1,\"226\":3,\"237\":1,\"241\":1,\"246\":2,\"261\":1,\"262\":1,\"356\":1,\"502\":1,\"517\":1,\"518\":1,\"519\":1,\"662\":1,\"2789\":2,\"3388\":3,\"3419\":1}}],[\"imethod\",{\"1\":{\"1900\":1}}],[\"implied\",{\"1\":{\"3388\":1}}],[\"implicit\",{\"1\":{\"3388\":2}}],[\"implements\",{\"1\":{\"2206\":1}}],[\"implemented\",{\"1\":{\"1141\":1}}],[\"imports\",{\"1\":{\"3388\":3}}],[\"import\",{\"1\":{\"34\":1,\"1631\":1,\"1656\":2,\"1670\":1,\"1673\":1,\"1680\":1,\"2823\":1,\"3036\":2,\"3038\":2,\"3043\":1,\"3090\":1,\"3093\":1,\"3099\":1,\"3113\":1,\"3176\":1,\"3205\":1,\"3238\":1,\"3286\":1,\"3287\":1,\"3295\":1,\"3297\":1,\"3309\":1,\"3311\":1,\"3342\":1,\"3388\":1}}],[\"img\",{\"1\":{\"57\":1,\"102\":1,\"116\":1,\"154\":1,\"168\":1,\"191\":1,\"198\":1,\"211\":1,\"238\":1,\"258\":1,\"279\":1,\"281\":1,\"303\":1,\"334\":1,\"357\":1,\"373\":1,\"467\":1,\"486\":1,\"621\":1,\"669\":1,\"704\":1,\"723\":1,\"814\":1,\"828\":1,\"832\":1,\"848\":1,\"863\":1,\"865\":1,\"926\":1,\"1010\":1,\"1392\":1,\"1466\":1,\"1479\":1,\"1484\":1,\"1486\":1,\"1531\":1,\"1543\":1,\"1553\":1,\"2781\":1,\"3107\":1}}],[\"image\",{\"1\":{\"45\":1,\"427\":1,\"742\":1,\"791\":1,\"1008\":1,\"1292\":1,\"1411\":1,\"1468\":1,\"1481\":1,\"1492\":1,\"1495\":1,\"1497\":1,\"1505\":1,\"1508\":1,\"1513\":1,\"1533\":1,\"1632\":1,\"1641\":1,\"1662\":1,\"1664\":1,\"1672\":1,\"1675\":1,\"1678\":1,\"1681\":1,\"1688\":1,\"1703\":1,\"1718\":1,\"1719\":1,\"1768\":1,\"1775\":1,\"1806\":1,\"1949\":1,\"1955\":1,\"1958\":1,\"1978\":1,\"2269\":1,\"2287\":1,\"2290\":1,\"2297\":1,\"2302\":1,\"2305\":1,\"2311\":1,\"2314\":1,\"2316\":1,\"2318\":1,\"2774\":1,\"2844\":1,\"2852\":1,\"2866\":1,\"2870\":1,\"2874\":1,\"2891\":1,\"3061\":1,\"3329\":1,\"3360\":1,\"3363\":1,\"3366\":1,\"3370\":1,\"3378\":1,\"3385\":1,\"3434\":1}}],[\"i\",{\"0\":{\"3455\":1},\"1\":{\"32\":1,\"497\":2,\"1717\":4,\"1774\":2,\"2103\":2,\"2135\":7,\"2136\":1,\"2138\":2,\"2139\":2,\"2143\":2,\"2206\":3,\"2208\":4,\"2219\":1,\"2234\":4,\"2237\":1,\"2239\":2,\"2402\":2,\"2418\":2,\"2425\":4,\"2427\":3,\"2454\":4,\"2783\":4,\"3113\":1,\"3200\":1,\"3323\":1,\"3341\":3,\"3342\":2,\"3383\":1}}],[\"infix\",{\"1\":{\"3388\":1}}],[\"info\",{\"1\":{\"3113\":1}}],[\"information\",{\"1\":{\"180\":1,\"181\":1,\"1087\":1,\"3346\":1}}],[\"inline\",{\"1\":{\"3388\":1}}],[\"invalid\",{\"1\":{\"3388\":2,\"3397\":1}}],[\"inner\",{\"1\":{\"3388\":1}}],[\"innot\",{\"1\":{\"3007\":1}}],[\"innodb引擎特有的\",{\"1\":{\"642\":1}}],[\"innodb就可以保证即使数据库发生异常重启\",{\"1\":{\"105\":1}}],[\"innodb\",{\"0\":{\"207\":1,\"426\":1,\"660\":1},\"1\":{\"60\":1,\"107\":1,\"111\":1,\"180\":1,\"181\":1,\"208\":3,\"213\":1,\"214\":1,\"321\":1,\"345\":1,\"351\":1,\"376\":2,\"377\":1,\"378\":2,\"381\":1,\"429\":1,\"432\":1,\"435\":1,\"438\":1,\"501\":1,\"502\":1,\"512\":1,\"615\":1,\"619\":1,\"628\":1,\"658\":1,\"695\":1}}],[\"indent\",{\"1\":{\"3388\":3}}],[\"index=timmer\",{\"1\":{\"3238\":1}}],[\"indexerror\",{\"1\":{\"3053\":1}}],[\"index\",{\"1\":{\"50\":2,\"213\":1,\"214\":1,\"237\":1,\"280\":1,\"1255\":1,\"2206\":1,\"2783\":1,\"2891\":1,\"3048\":2,\"3053\":1,\"3054\":2,\"3238\":4}}],[\"in循环逐行读取\",{\"1\":{\"3175\":1}}],[\"input\",{\"1\":{\"3015\":1,\"3023\":1,\"3026\":2,\"3205\":2}}],[\"inei\",{\"1\":{\"2753\":1}}],[\"initialized\",{\"1\":{\"3388\":1}}],[\"initial\",{\"1\":{\"2793\":1}}],[\"initsigmask\",{\"1\":{\"2789\":1}}],[\"init\",{\"1\":{\"2753\":1,\"2801\":1,\"3075\":2,\"3084\":1,\"3087\":1,\"3090\":1,\"3093\":1,\"3096\":5,\"3099\":1,\"3209\":2,\"3210\":1,\"3388\":2}}],[\"incgo\",{\"1\":{\"2862\":1}}],[\"incr\",{\"1\":{\"2309\":2,\"2310\":2,\"2312\":1,\"2315\":3,\"2320\":2,\"2321\":2,\"2323\":1}}],[\"incremental\",{\"1\":{\"2634\":1}}],[\"increment\",{\"1\":{\"226\":1}}],[\"including\",{\"1\":{\"1406\":1}}],[\"instead\",{\"1\":{\"3388\":1}}],[\"install\",{\"1\":{\"32\":1,\"2795\":1,\"3368\":3,\"3428\":4}}],[\"insecure\",{\"1\":{\"3327\":1}}],[\"insert\",{\"1\":{\"153\":1,\"237\":1,\"367\":1,\"3054\":1}}],[\"in\",{\"0\":{\"696\":2},\"1\":{\"78\":1,\"471\":1,\"1772\":2,\"2018\":1,\"2195\":6,\"2206\":1,\"2868\":1,\"3007\":1,\"3016\":1,\"3017\":1,\"3026\":1,\"3028\":1,\"3048\":2,\"3052\":6,\"3054\":4,\"3058\":1,\"3062\":1,\"3063\":1,\"3069\":3,\"3099\":1,\"3104\":3,\"3116\":1,\"3124\":1,\"3175\":1,\"3176\":4,\"3250\":1,\"3256\":1,\"3388\":5,\"3394\":2,\"3428\":1}}],[\"int16\",{\"1\":{\"1965\":1,\"1981\":2,\"1998\":1,\"2778\":1}}],[\"int64\",{\"1\":{\"1957\":1,\"1965\":1,\"1998\":1,\"2272\":6,\"2477\":8,\"2872\":2}}],[\"int8\",{\"1\":{\"1954\":1,\"1965\":1,\"1981\":2,\"1998\":1,\"2778\":2}}],[\"int32类型\",{\"1\":{\"2862\":1}}],[\"int32\",{\"1\":{\"1772\":3,\"1965\":1,\"1981\":2,\"1985\":2,\"1998\":1,\"2029\":2,\"2030\":2,\"2032\":1,\"2341\":1,\"2350\":1,\"2362\":1,\"2373\":1,\"2420\":1,\"2459\":1,\"2780\":2,\"2783\":1,\"2793\":2,\"2862\":1,\"2864\":1,\"2872\":5,\"2907\":1}}],[\"intgo\",{\"1\":{\"1769\":1}}],[\"int=make\",{\"1\":{\"1656\":2,\"1670\":1,\"1673\":1}}],[\"int是两个不同的数组类型\",{\"1\":{\"1637\":1}}],[\"int和\",{\"1\":{\"1637\":1}}],[\"intersection\",{\"1\":{\"3065\":1}}],[\"inter\",{\"1\":{\"1900\":1,\"1917\":1,\"2224\":1}}],[\"interfacetype\",{\"1\":{\"1900\":3,\"1912\":1,\"2224\":1}}],[\"interface\",{\"0\":{\"1885\":1,\"1888\":1},\"1\":{\"1887\":1,\"1892\":1,\"1990\":1,\"2003\":1,\"2018\":1,\"2040\":1,\"2058\":1,\"2090\":1,\"2206\":1,\"2208\":1,\"2220\":1,\"2234\":2,\"2239\":1,\"2260\":5,\"2919\":1,\"3308\":1,\"3309\":1}}],[\"internal专门用来控制包导入权限的\",{\"1\":{\"2891\":1}}],[\"internal\",{\"1\":{\"1138\":1,\"2014\":1,\"2748\":1,\"2891\":1,\"2893\":1}}],[\"integer\",{\"1\":{\"1772\":2,\"3113\":1}}],[\"intention\",{\"1\":{\"607\":1}}],[\"intelex\",{\"1\":{\"32\":1}}],[\"into\",{\"1\":{\"153\":1,\"237\":1}}],[\"int\",{\"1\":{\"153\":1,\"237\":2,\"251\":2,\"1631\":4,\"1633\":1,\"1634\":1,\"1635\":1,\"1638\":1,\"1640\":3,\"1656\":4,\"1670\":2,\"1673\":2,\"1680\":2,\"1687\":1,\"1702\":1,\"1717\":2,\"1834\":1,\"1878\":2,\"1998\":1,\"2003\":1,\"2012\":2,\"2037\":1,\"2052\":2,\"2082\":1,\"2103\":1,\"2206\":14,\"2211\":1,\"2294\":1,\"2300\":1,\"2301\":2,\"2309\":4,\"2320\":3,\"2352\":1,\"2355\":1,\"2370\":1,\"2378\":3,\"2400\":1,\"2402\":1,\"2425\":2,\"2427\":2,\"2454\":2,\"2480\":2,\"2755\":1,\"3023\":1,\"3026\":2,\"3104\":2,\"3113\":1,\"3176\":1}}],[\"introduction\",{\"1\":{\"1\":1}}],[\"intro\",{\"0\":{\"0\":1}}],[\"借助\",{\"1\":{\"29\":1}}],[\"wg\",{\"1\":{\"3341\":5,\"3342\":5}}],[\"wrap\",{\"1\":{\"3388\":2}}],[\"wrappers\",{\"1\":{\"3388\":1}}],[\"wrapper\",{\"1\":{\"3238\":2,\"3240\":2}}],[\"writebarrier\",{\"1\":{\"2491\":1,\"2503\":1}}],[\"writer进行了实现和封装\",{\"1\":{\"2891\":1}}],[\"writer\",{\"1\":{\"2075\":1}}],[\"write\",{\"1\":{\"103\":1,\"104\":2,\"317\":1,\"623\":1,\"625\":1,\"626\":1,\"2052\":1,\"2082\":1,\"2083\":1,\"3176\":3,\"3177\":1}}],[\"w+\",{\"1\":{\"3161\":1}}],[\"w64安装教程\",{\"1\":{\"2807\":1}}],[\"while\",{\"1\":{\"3022\":1,\"3023\":1,\"3093\":1,\"3256\":2,\"3388\":1}}],[\"whitespace\",{\"1\":{\"3388\":2}}],[\"white\",{\"1\":{\"2630\":1}}],[\"when\",{\"1\":{\"2480\":1,\"2748\":1}}],[\"whether\",{\"1\":{\"2239\":1}}],[\"where\",{\"0\":{\"696\":1},\"1\":{\"55\":1,\"83\":1,\"97\":1,\"181\":1,\"217\":1,\"218\":1,\"236\":1,\"246\":1,\"262\":1,\"264\":1,\"273\":1,\"516\":1,\"518\":1,\"524\":2,\"532\":1,\"661\":1,\"1866\":1}}],[\"wb+\",{\"1\":{\"3163\":1}}],[\"wb\",{\"1\":{\"3159\":1,\"3177\":1}}],[\"wbuf2\",{\"1\":{\"2555\":1,\"2557\":1,\"2561\":2,\"2562\":1}}],[\"wbuf1\",{\"1\":{\"2555\":1,\"2556\":1,\"2557\":2,\"2558\":1,\"2562\":3}}],[\"wbbuf\",{\"1\":{\"2554\":1,\"2564\":2}}],[\"welcome\",{\"1\":{\"3238\":1}}],[\"we\",{\"1\":{\"2239\":1}}],[\"web开发进阶实战\",{\"1\":{\"1598\":1}}],[\"web\",{\"1\":{\"1301\":1,\"1308\":1,\"1317\":1,\"1400\":1,\"1472\":1,\"1496\":1,\"1499\":1,\"1500\":1,\"1534\":1,\"1571\":1}}],[\"web服务器域名和文件名\",{\"1\":{\"1256\":1}}],[\"w\",{\"1\":{\"2075\":3,\"2076\":1,\"2082\":1,\"2083\":1,\"3157\":1,\"3176\":1}}],[\"world程序的执行\",{\"1\":{\"2816\":1}}],[\"worldstopped\",{\"1\":{\"2789\":1}}],[\"world\",{\"0\":{\"2821\":1},\"1\":{\"2473\":2,\"2493\":1,\"2504\":1,\"2676\":1,\"2789\":1,\"2823\":1,\"2851\":1,\"3032\":1,\"3034\":1,\"3036\":2,\"3048\":6}}],[\"words\",{\"1\":{\"3388\":1}}],[\"word\",{\"1\":{\"1927\":2,\"1932\":1,\"2018\":1,\"2220\":1,\"2239\":2,\"2241\":1,\"2538\":1,\"2540\":1,\"2822\":1}}],[\"workflows\",{\"1\":{\"3408\":1,\"3426\":1,\"3430\":1}}],[\"workflow\",{\"0\":{\"3406\":1},\"1\":{\"3428\":3}}],[\"workbuf\",{\"1\":{\"2480\":1,\"2555\":1}}],[\"worker\",{\"1\":{\"2478\":2,\"2480\":1,\"2487\":1,\"2494\":2,\"2495\":1,\"2496\":1,\"2500\":2,\"2559\":1,\"2564\":1,\"2567\":1,\"2569\":1,\"2570\":1,\"2571\":1,\"2573\":1,\"2574\":2,\"2575\":2,\"2576\":1,\"2577\":1,\"2578\":2,\"2584\":1}}],[\"work\",{\"1\":{\"178\":1,\"179\":1,\"2475\":1,\"2479\":1,\"2480\":1,\"2481\":1,\"2492\":1}}],[\"window\",{\"1\":{\"3419\":1}}],[\"windows平台安装gdb调试器\",{\"1\":{\"2808\":1}}],[\"windows\",{\"1\":{\"1465\":1,\"1469\":1,\"2741\":1,\"2743\":2,\"2795\":1,\"2797\":1,\"3353\":1,\"3354\":1}}],[\"win10\",{\"1\":{\"2736\":1,\"2741\":1}}],[\"wireshark\",{\"1\":{\"1480\":1,\"1491\":1,\"1498\":1,\"1501\":1}}],[\"wireshark+npcap\",{\"1\":{\"1457\":1,\"1464\":1}}],[\"withinsecure\",{\"1\":{\"3341\":1}}],[\"withtransportcredentials\",{\"1\":{\"3327\":1}}],[\"with\",{\"1\":{\"293\":1,\"3119\":1,\"3175\":2,\"3177\":2,\"3388\":2,\"3394\":2,\"3397\":1,\"3423\":1,\"3428\":3,\"3451\":1}}],[\"wise\",{\"0\":{\"12\":1}}],[\"warning\",{\"1\":{\"3388\":1}}],[\"warn\",{\"1\":{\"3388\":2}}],[\"warpped\",{\"1\":{\"38\":1}}],[\"watch\",{\"1\":{\"3075\":1,\"3078\":2,\"3096\":3}}],[\"waxberry\",{\"1\":{\"3053\":4}}],[\"wakep\",{\"1\":{\"2793\":1}}],[\"ways\",{\"1\":{\"1772\":2}}],[\"waitgroup\",{\"1\":{\"3341\":1,\"3342\":1}}],[\"waitreason\",{\"1\":{\"2868\":2}}],[\"wait等待2倍的msl比较合理解释\",{\"1\":{\"875\":1}}],[\"waite需要2msl\",{\"0\":{\"866\":1}}],[\"waite\",{\"1\":{\"851\":1,\"1395\":1}}],[\"wait状态一段时间有2个目的\",{\"1\":{\"877\":1}}],[\"wait状态才能保证它的ack从网络中消失\",{\"1\":{\"874\":1}}],[\"wait状态的主要目的有两个\",{\"1\":{\"861\":1}}],[\"wait状态\",{\"0\":{\"860\":1},\"1\":{\"850\":1,\"853\":1,\"1394\":1,\"1397\":1}}],[\"wait\",{\"1\":{\"67\":1,\"376\":2,\"378\":1,\"849\":1,\"1393\":1,\"3341\":1,\"3342\":1}}],[\"www\",{\"1\":{\"28\":1,\"1046\":1,\"1054\":1,\"1155\":1,\"1169\":1,\"1190\":1,\"1263\":1,\"1470\":2,\"1472\":1,\"3451\":1}}],[\"echo\",{\"1\":{\"3428\":1,\"3449\":1}}],[\"ecmascript\",{\"1\":{\"3388\":1}}],[\"event\",{\"0\":{\"3409\":1}}],[\"eval\",{\"1\":{\"3388\":4}}],[\"eol\",{\"1\":{\"3388\":1}}],[\"eq\",{\"1\":{\"3388\":1}}],[\"eqeqeq\",{\"1\":{\"3388\":1}}],[\"equal\",{\"1\":{\"1869\":1,\"2008\":1,\"3397\":1}}],[\"equivalent\",{\"1\":{\"1772\":2}}],[\"editor\",{\"1\":{\"3380\":1}}],[\"egon\",{\"1\":{\"3238\":1}}],[\"eggo>\",{\"1\":{\"2083\":1}}],[\"eggo\",{\"1\":{\"1893\":1,\"1904\":1,\"2040\":1,\"2043\":1,\"2047\":1,\"2052\":3,\"2053\":1,\"2054\":2,\"2055\":1,\"2058\":1,\"2070\":1,\"2075\":1,\"2082\":4,\"2083\":3,\"2090\":1,\"2158\":3,\"2166\":4,\"2169\":1,\"2172\":4,\"2175\":1,\"2178\":4,\"2182\":2,\"2184\":1,\"2188\":3,\"2195\":6,\"2210\":1,\"2232\":2,\"2253\":2,\"2425\":1,\"2454\":1}}],[\"egg=append\",{\"1\":{\"1656\":2,\"1670\":1,\"1673\":1,\"1680\":1}}],[\"egg\",{\"1\":{\"1656\":16,\"1670\":8,\"1673\":9,\"1680\":8,\"1687\":9,\"1702\":9}}],[\"embed\",{\"1\":{\"2891\":1}}],[\"empty\",{\"1\":{\"3388\":6}}],[\"emptyinterface\",{\"1\":{\"2208\":1,\"2220\":2,\"2239\":1,\"2241\":1}}],[\"emptinterface\",{\"1\":{\"2219\":1}}],[\"elif\",{\"1\":{\"3023\":1,\"3176\":1}}],[\"else能连续接多少个\",{\"1\":{\"3388\":1}}],[\"else\",{\"1\":{\"2260\":1,\"3015\":2,\"3023\":1,\"3075\":1,\"3084\":1,\"3087\":1,\"3090\":1,\"3096\":1,\"3114\":1,\"3115\":1,\"3116\":1,\"3119\":1,\"3176\":2,\"3250\":1,\"3342\":1,\"3388\":3}}],[\"elemsize\",{\"1\":{\"2014\":1}}],[\"elem\",{\"1\":{\"2010\":1,\"2012\":1,\"2014\":2,\"2206\":2,\"2253\":1,\"2257\":1,\"2258\":1,\"2260\":3,\"3054\":4}}],[\"es6\",{\"1\":{\"3388\":1}}],[\"escape\",{\"1\":{\"3388\":3}}],[\"escapes\",{\"1\":{\"2234\":2,\"2237\":1,\"2254\":1}}],[\"eslint一旦发现配置文件中有\",{\"1\":{\"3388\":1}}],[\"eslint会在所有父级组件中寻找配置文件\",{\"1\":{\"3388\":1}}],[\"eslintrc\",{\"1\":{\"3384\":1,\"3394\":2}}],[\"eslint\",{\"1\":{\"3375\":1,\"3380\":3,\"3383\":1,\"3388\":6,\"3394\":2}}],[\"eslint官网\",{\"1\":{\"3375\":1}}],[\"established\",{\"1\":{\"1289\":1,\"1290\":1}}],[\"estimation\",{\"0\":{\"12\":1}}],[\"err|error\",{\"1\":{\"3388\":1}}],[\"err\",{\"1\":{\"2052\":2,\"2082\":1,\"3113\":2,\"3286\":4,\"3295\":5,\"3297\":2,\"3325\":6,\"3327\":6,\"3341\":6,\"3342\":9,\"3388\":1}}],[\"errors=none\",{\"1\":{\"3129\":1}}],[\"errors\",{\"1\":{\"2891\":1,\"3135\":1}}],[\"error等\",{\"1\":{\"2891\":1}}],[\"error\",{\"0\":{\"696\":1},\"1\":{\"78\":1,\"1138\":1,\"2052\":2,\"2082\":1,\"3113\":2,\"3119\":4,\"3287\":1,\"3295\":2,\"3306\":1,\"3309\":2,\"3311\":1,\"3325\":3,\"3342\":3,\"3388\":4,\"3394\":2,\"3447\":1}}],[\"e\",{\"1\":{\"1892\":2,\"1893\":1,\"1894\":2,\"2040\":3,\"2041\":1,\"2043\":1,\"2044\":1,\"2052\":4,\"2058\":3,\"2059\":1,\"2060\":1,\"2070\":1,\"2071\":1,\"2082\":2,\"2090\":3,\"2091\":2,\"2239\":4,\"3177\":2,\"3388\":6}}],[\"eface\",{\"1\":{\"1890\":1,\"1892\":1,\"1895\":1,\"2208\":2,\"2213\":1,\"2219\":2,\"2221\":1,\"2222\":1,\"2236\":1,\"2260\":4}}],[\"etc\",{\"1\":{\"1469\":1}}],[\"eth1\",{\"1\":{\"1316\":1}}],[\"en\",{\"1\":{\"3452\":1}}],[\"enforce\",{\"1\":{\"3388\":1}}],[\"enable\",{\"1\":{\"3380\":1}}],[\"enabled\",{\"1\":{\"2491\":1,\"2503\":1}}],[\"enumerate\",{\"1\":{\"3054\":1}}],[\"end=\",{\"1\":{\"3175\":1}}],[\"endswith\",{\"1\":{\"3048\":1}}],[\"endif\",{\"1\":{\"2755\":1}}],[\"env\",{\"1\":{\"3388\":5,\"3423\":1,\"3428\":2}}],[\"envp\",{\"1\":{\"2783\":1}}],[\"envv\",{\"1\":{\"2783\":1}}],[\"entry\",{\"1\":{\"2748\":1,\"2761\":2}}],[\"entries\",{\"1\":{\"1916\":4}}],[\"entity\",{\"1\":{\"1528\":1}}],[\"encoding=\",{\"1\":{\"3175\":1,\"3176\":1}}],[\"encoding=none\",{\"1\":{\"3129\":1}}],[\"encoding\",{\"1\":{\"1165\":1,\"2891\":1,\"3134\":1}}],[\"engine=innodb\",{\"1\":{\"153\":1,\"237\":1,\"251\":1}}],[\"exports\",{\"1\":{\"3388\":1}}],[\"expressions\",{\"1\":{\"3388\":2}}],[\"expression表达式实现匿名函数功能的过程\",{\"1\":{\"3230\":1}}],[\"expression\",{\"1\":{\"3226\":1,\"3388\":2}}],[\"expvar\",{\"1\":{\"2891\":1}}],[\"ex\",{\"1\":{\"3176\":2,\"3388\":1}}],[\"extensions\",{\"1\":{\"3380\":1}}],[\"extends\",{\"1\":{\"3388\":1}}],[\"extend\",{\"1\":{\"3054\":1,\"3388\":1}}],[\"extra\",{\"1\":{\"1834\":1,\"1841\":2,\"3388\":5}}],[\"exc\",{\"1\":{\"3113\":1}}],[\"exception\",{\"1\":{\"3122\":1,\"3124\":3}}],[\"except\",{\"1\":{\"2885\":1,\"2887\":1,\"3106\":1,\"3109\":1,\"3110\":1,\"3111\":2,\"3112\":1,\"3113\":3,\"3116\":1,\"3119\":2,\"3175\":3,\"3176\":1,\"3177\":2}}],[\"exclusive\",{\"1\":{\"604\":1}}],[\"exit\",{\"1\":{\"2795\":1,\"3388\":2}}],[\"exe的后台进程\",{\"1\":{\"1478\":1}}],[\"example\",{\"1\":{\"479\":1}}],[\"ee\",{\"1\":{\"237\":1}}],[\"e0b2d28a35e1546ee0b9508fd961b59\",{\"1\":{\"24\":1}}],[\"cd\",{\"1\":{\"3403\":1}}],[\"cdn\",{\"1\":{\"1292\":1}}],[\"ci\",{\"1\":{\"3403\":1}}],[\"cuowu\",{\"1\":{\"3388\":1}}],[\"curly\",{\"1\":{\"3388\":4}}],[\"curd操作\",{\"1\":{\"3054\":1}}],[\"curg\",{\"1\":{\"2793\":2,\"2862\":1}}],[\"currently\",{\"1\":{\"2868\":1}}],[\"current\",{\"1\":{\"1916\":1,\"2868\":1}}],[\"ctx\",{\"1\":{\"3325\":1}}],[\"ctime\",{\"1\":{\"3093\":4}}],[\"c246\",{\"1\":{\"3048\":1}}],[\"c123456\",{\"1\":{\"3048\":1}}],[\"c12\",{\"1\":{\"3048\":1}}],[\"cmd\",{\"0\":{\"2892\":1},\"1\":{\"2891\":1,\"3368\":2}}],[\"cmpq\",{\"1\":{\"2755\":1}}],[\"cmpl\",{\"1\":{\"2753\":4}}],[\"cfg\",{\"1\":{\"2882\":1}}],[\"cx\",{\"1\":{\"2753\":1,\"2757\":4}}],[\"cgo测试程序\",{\"1\":{\"2882\":1}}],[\"cgo\",{\"1\":{\"2753\":1,\"2795\":1,\"2862\":2,\"2868\":1,\"2893\":1}}],[\"c++\",{\"1\":{\"2604\":1}}],[\"center\",{\"1\":{\"3048\":1}}],[\"central\",{\"1\":{\"2526\":1}}],[\"certificate\",{\"1\":{\"1201\":1}}],[\"cycle\",{\"1\":{\"2478\":1,\"2481\":2}}],[\"cname\",{\"1\":{\"3428\":4,\"3443\":1,\"3449\":3}}],[\"cn\",{\"1\":{\"1058\":1,\"1059\":1,\"3317\":1,\"3428\":2,\"3449\":1}}],[\"cnblogs\",{\"1\":{\"28\":1,\"1054\":1,\"1169\":1}}],[\"cssom树包括来自用户代理样式表的样式\",{\"1\":{\"1417\":1}}],[\"css规则转换为可以理解和使用的样式映射\",{\"1\":{\"1415\":1}}],[\"css\",{\"1\":{\"1411\":1}}],[\"cs\",{\"0\":{\"3457\":1},\"1\":{\"1044\":1}}],[\"csdnnews\",{\"1\":{\"1048\":1}}],[\"csdn\",{\"1\":{\"805\":1,\"1048\":1,\"1050\":1,\"3255\":1}}],[\"cwnd\",{\"1\":{\"976\":1,\"977\":1,\"985\":1,\"986\":1,\"991\":1,\"992\":1,\"995\":2,\"996\":1,\"998\":1,\"1000\":1,\"1001\":1}}],[\"cls\",{\"1\":{\"3093\":2}}],[\"classmethod\",{\"1\":{\"3093\":1}}],[\"class\",{\"1\":{\"3075\":1,\"3084\":1,\"3087\":1,\"3090\":1,\"3093\":1,\"3096\":4,\"3099\":3,\"3248\":1,\"3250\":1,\"3388\":3}}],[\"clause\",{\"0\":{\"696\":1}}],[\"clear\",{\"1\":{\"3054\":1,\"3069\":1}}],[\"cleared\",{\"1\":{\"2759\":1}}],[\"cld\",{\"1\":{\"2759\":1}}],[\"clock\",{\"1\":{\"3093\":5}}],[\"closefd\",{\"1\":{\"3137\":1}}],[\"closefd=true\",{\"1\":{\"3129\":1}}],[\"close\",{\"1\":{\"3116\":1,\"3173\":1,\"3175\":1,\"3176\":1,\"3327\":1,\"3341\":1}}],[\"closed\",{\"1\":{\"1286\":1}}],[\"closures\",{\"1\":{\"2109\":1}}],[\"closure\",{\"1\":{\"2109\":2}}],[\"cloud\",{\"1\":{\"1052\":1,\"1056\":1}}],[\"clistr\",{\"1\":{\"3342\":2}}],[\"clipboard\",{\"1\":{\"1407\":1}}],[\"clinethello请求\",{\"1\":{\"1217\":1}}],[\"clienthello\",{\"1\":{\"1216\":1}}],[\"client\",{\"1\":{\"795\":1,\"3286\":3,\"3295\":3,\"3297\":6}}],[\"clustered\",{\"1\":{\"213\":1}}],[\"cpuinit\",{\"1\":{\"2789\":1}}],[\"cpuid\",{\"1\":{\"2753\":1}}],[\"cpu\",{\"0\":{\"2566\":1},\"1\":{\"384\":2,\"385\":1,\"389\":1,\"1932\":3,\"1935\":2,\"2567\":3,\"2579\":1,\"2745\":1,\"2752\":1,\"2753\":1,\"2789\":1}}],[\"cpu占用\",{\"1\":{\"381\":1}}],[\"cc\",{\"1\":{\"237\":1}}],[\"chrono\",{\"1\":{\"1470\":1}}],[\"chrome\",{\"1\":{\"1458\":1,\"1464\":1,\"1491\":1}}],[\"choices\",{\"1\":{\"1099\":1}}],[\"chandir\",{\"1\":{\"2206\":3}}],[\"chan\",{\"1\":{\"2206\":1}}],[\"change\",{\"1\":{\"543\":1,\"544\":1}}],[\"character\",{\"1\":{\"1772\":1,\"3388\":1}}],[\"charset=utf\",{\"1\":{\"1164\":1}}],[\"chained\",{\"1\":{\"3388\":1}}],[\"chain\",{\"1\":{\"178\":1,\"179\":1}}],[\"checkout\",{\"1\":{\"3428\":2}}],[\"checkpoint\",{\"1\":{\"624\":1,\"625\":1,\"626\":2}}],[\"check\",{\"1\":{\"103\":1,\"104\":1,\"2759\":1,\"2765\":1,\"2777\":1,\"2778\":1,\"2799\":1}}],[\"crazy\",{\"1\":{\"3428\":2}}],[\"crash了\",{\"1\":{\"134\":1}}],[\"crash\",{\"1\":{\"105\":1,\"133\":1,\"135\":1,\"615\":1}}],[\"crc64在内的哈希函数\",{\"1\":{\"2891\":1}}],[\"crypto\",{\"1\":{\"2891\":1}}],[\"crlf\",{\"1\":{\"1530\":1}}],[\"created\",{\"1\":{\"1081\":1}}],[\"create\",{\"1\":{\"153\":1,\"237\":1,\"251\":1,\"2111\":3,\"2112\":2,\"2113\":1,\"2114\":1,\"2132\":3,\"2135\":2,\"2138\":1,\"2139\":1,\"3428\":1,\"3449\":1}}],[\"c\",{\"0\":{\"3454\":1},\"1\":{\"133\":1,\"134\":1,\"135\":2,\"153\":2,\"336\":1,\"338\":3,\"369\":1,\"370\":1,\"564\":1,\"637\":1,\"646\":1,\"674\":1,\"1631\":3,\"1635\":1,\"1770\":1,\"1774\":2,\"1965\":1,\"1972\":1,\"1981\":2,\"1985\":2,\"2103\":1,\"2111\":2,\"2112\":1,\"2113\":1,\"2114\":1,\"2132\":2,\"2272\":2,\"2286\":1,\"2293\":1,\"2604\":1,\"2748\":2,\"2778\":1,\"2780\":3,\"3028\":1,\"3048\":1,\"3069\":1,\"3090\":12,\"3176\":1,\"3295\":2,\"3327\":2,\"3341\":4,\"3365\":1,\"3388\":1}}],[\"c=0\",{\"1\":{\"674\":1,\"676\":1,\"3028\":1}}],[\"c=1\",{\"1\":{\"674\":1,\"676\":1}}],[\"c=10\",{\"1\":{\"83\":1}}],[\"c=100\",{\"1\":{\"22\":1}}],[\"c=c+1\",{\"1\":{\"97\":1,\"661\":1}}],[\"camelcase\",{\"1\":{\"3388\":1}}],[\"cat\",{\"1\":{\"3099\":2}}],[\"catch\",{\"1\":{\"2186\":1,\"3388\":3}}],[\"can\",{\"1\":{\"2795\":1,\"3084\":1,\"3104\":1}}],[\"cannot\",{\"1\":{\"2182\":1,\"3116\":1,\"3394\":2}}],[\"caching\",{\"1\":{\"2514\":1}}],[\"cache\",{\"1\":{\"655\":1,\"656\":1}}],[\"cast\",{\"1\":{\"3388\":1}}],[\"casgstatus\",{\"1\":{\"2793\":2}}],[\"cas\",{\"1\":{\"2480\":1}}],[\"case\",{\"1\":{\"2090\":2,\"2091\":1,\"2260\":2,\"2783\":1,\"3388\":7}}],[\"callee\",{\"1\":{\"3388\":1}}],[\"caller\",{\"1\":{\"3388\":2}}],[\"callerpc\",{\"1\":{\"2793\":1}}],[\"callergp\",{\"1\":{\"2793\":1}}],[\"callbacks\",{\"1\":{\"3388\":2}}],[\"callback\",{\"1\":{\"3388\":4}}],[\"calls\",{\"1\":{\"2789\":1,\"3388\":1}}],[\"call\",{\"1\":{\"2018\":2,\"2182\":1,\"2278\":2,\"2285\":2,\"2298\":1,\"2755\":2,\"2759\":4,\"2761\":3,\"2789\":4,\"3041\":2,\"3104\":3,\"3124\":1,\"3214\":1,\"3286\":1,\"3295\":1,\"3388\":3,\"3428\":1}}],[\"capisnew\",{\"1\":{\"3388\":1}}],[\"capitalize\",{\"1\":{\"3048\":1}}],[\"cap为3\",{\"1\":{\"1698\":1}}],[\"cap为9\",{\"1\":{\"1693\":1}}],[\"cap为5\",{\"1\":{\"1669\":1}}],[\"cap为0\",{\"1\":{\"1661\":1}}],[\"cap\",{\"1\":{\"1655\":1,\"1656\":4,\"1670\":2,\"1673\":2,\"1680\":2,\"1687\":6,\"1702\":6,\"1717\":6,\"2020\":2,\"3388\":1}}],[\"card`\",{\"1\":{\"251\":3}}],[\"card\",{\"1\":{\"192\":1,\"200\":1,\"205\":1}}],[\"ca\",{\"1\":{\"38\":1,\"1201\":1}}],[\"coercion\",{\"1\":{\"3388\":1}}],[\"cover\",{\"1\":{\"2893\":1}}],[\"collection\",{\"0\":{\"2592\":1}}],[\"column\",{\"0\":{\"696\":1}}],[\"copy\",{\"1\":{\"2216\":1,\"2236\":1,\"2237\":2,\"2241\":1,\"2244\":1,\"2249\":1,\"2250\":1,\"2759\":2}}],[\"codeaction\",{\"1\":{\"3394\":4,\"3397\":2}}],[\"codeactionsonsave\",{\"1\":{\"3380\":1}}],[\"codereview\",{\"1\":{\"2882\":1}}],[\"coded\",{\"1\":{\"2455\":1,\"2963\":2}}],[\"codetop\",{\"1\":{\"1614\":1}}],[\"code\",{\"1\":{\"1406\":1,\"1866\":2,\"2365\":1,\"2374\":1,\"2402\":1,\"2425\":1,\"2454\":1,\"2748\":1,\"2795\":1,\"3346\":1,\"3394\":1}}],[\"cookbook\",{\"1\":{\"1613\":1}}],[\"cookie\",{\"1\":{\"1566\":1}}],[\"cookie和整个互联网的流行搜索对结果进行排序和优先排序\",{\"1\":{\"1250\":1}}],[\"cookie与session模式\",{\"1\":{\"1189\":1}}],[\"coolshell\",{\"1\":{\"1058\":1,\"1059\":1}}],[\"could\",{\"1\":{\"3113\":1}}],[\"count=0\",{\"1\":{\"3190\":1}}],[\"counter\",{\"1\":{\"3023\":1}}],[\"count\",{\"1\":{\"1834\":1,\"1847\":1,\"1916\":1}}],[\"course\",{\"1\":{\"302\":1,\"3075\":2,\"3096\":4}}],[\"coupled\",{\"0\":{\"12\":1}}],[\"confusing\",{\"1\":{\"3388\":1}}],[\"confirm\",{\"1\":{\"3388\":1}}],[\"configuration\",{\"1\":{\"3397\":1}}],[\"config\",{\"1\":{\"3388\":1,\"3394\":2,\"3397\":1}}],[\"configfile\",{\"1\":{\"3380\":1}}],[\"cond\",{\"1\":{\"3388\":1}}],[\"condition\",{\"1\":{\"280\":1,\"3388\":3}}],[\"conn\",{\"1\":{\"3287\":2,\"3295\":2,\"3311\":2,\"3327\":3,\"3341\":3}}],[\"connect\",{\"1\":{\"1579\":1,\"3295\":1}}],[\"connection\",{\"1\":{\"68\":1,\"72\":1,\"1159\":1,\"1511\":1,\"1560\":1}}],[\"concat\",{\"1\":{\"3388\":2}}],[\"concatenate\",{\"1\":{\"3104\":1}}],[\"concurrent\",{\"1\":{\"2473\":2}}],[\"continue\",{\"1\":{\"3388\":3}}],[\"control\",{\"1\":{\"3388\":1}}],[\"contributors\",{\"1\":{\"2882\":1}}],[\"contributing\",{\"1\":{\"2882\":1}}],[\"context\",{\"1\":{\"2891\":1,\"3325\":2,\"3327\":1,\"3341\":3}}],[\"content\",{\"1\":{\"1090\":1,\"1093\":1,\"1096\":1,\"1156\":1,\"1162\":1,\"1165\":1,\"1572\":1}}],[\"container\",{\"1\":{\"2891\":1}}],[\"consistent\",{\"1\":{\"3388\":2}}],[\"consistency\",{\"1\":{\"144\":1}}],[\"console\",{\"1\":{\"3388\":2}}],[\"constructor\",{\"1\":{\"3388\":2}}],[\"constraints\",{\"1\":{\"2891\":1}}],[\"constant\",{\"1\":{\"3388\":1}}],[\"const\",{\"1\":{\"2473\":1,\"2864\":1,\"2868\":1,\"3301\":1,\"3342\":1,\"3388\":5}}],[\"convert\",{\"1\":{\"3113\":1}}],[\"convertibleto\",{\"1\":{\"2206\":1}}],[\"convention\",{\"1\":{\"1772\":2,\"2759\":1}}],[\"comment\",{\"1\":{\"3388\":2}}],[\"comments\",{\"1\":{\"3388\":2}}],[\"comma\",{\"1\":{\"3388\":4}}],[\"commonjs\",{\"1\":{\"3388\":1}}],[\"common\",{\"1\":{\"2206\":1,\"2748\":1}}],[\"commit和sync\",{\"1\":{\"658\":1}}],[\"commit为1\",{\"1\":{\"179\":1}}],[\"committed\",{\"1\":{\"149\":1,\"573\":1,\"584\":1}}],[\"commit\",{\"1\":{\"121\":1,\"174\":1,\"175\":1,\"178\":1,\"179\":2,\"348\":1,\"359\":1,\"368\":1,\"374\":1,\"435\":1,\"628\":1,\"667\":1,\"677\":1,\"681\":1}}],[\"computed\",{\"1\":{\"3388\":2}}],[\"compare\",{\"1\":{\"3388\":1}}],[\"comparable\",{\"1\":{\"2206\":1}}],[\"compile\",{\"1\":{\"2893\":1,\"3182\":1}}],[\"compress\",{\"1\":{\"2891\":1}}],[\"completion\",{\"1\":{\"2480\":1}}],[\"complexity\",{\"1\":{\"3388\":1}}],[\"complex\",{\"1\":{\"2206\":1}}],[\"complex128\",{\"1\":{\"2000\":1}}],[\"complex64\",{\"1\":{\"2000\":1}}],[\"comodo\",{\"1\":{\"1201\":1}}],[\"com\",{\"1\":{\"28\":1,\"32\":1,\"1046\":1,\"1052\":1,\"1054\":1,\"1056\":1,\"1155\":1,\"1169\":1,\"1190\":1,\"1248\":1,\"1250\":2,\"1263\":1,\"1272\":1,\"1275\":1,\"1279\":1,\"1470\":1,\"1882\":1,\"3048\":1,\"3318\":1,\"3347\":1,\"3368\":1,\"3388\":1,\"3428\":2,\"3438\":1,\"3447\":1,\"3451\":1,\"3452\":1}}],[\"ruanyifeng\",{\"1\":{\"3451\":1}}],[\"rule\",{\"1\":{\"3397\":1}}],[\"rules\",{\"1\":{\"3388\":3}}],[\"runs\",{\"1\":{\"3419\":1,\"3428\":1}}],[\"runoob\",{\"1\":{\"3119\":1}}],[\"runqsize\",{\"1\":{\"2872\":1}}],[\"runqtail\",{\"1\":{\"2864\":1,\"2872\":1}}],[\"runqhead\",{\"1\":{\"2864\":1,\"2872\":1}}],[\"runq\",{\"1\":{\"2838\":2,\"2839\":1,\"2840\":2,\"2841\":1,\"2842\":1,\"2864\":1}}],[\"runqput\",{\"1\":{\"2793\":1}}],[\"runnext\",{\"1\":{\"2791\":1,\"2793\":1,\"2864\":1}}],[\"runnable\",{\"1\":{\"2789\":1}}],[\"running\",{\"1\":{\"2350\":1,\"2362\":1,\"2373\":1,\"2420\":1}}],[\"run\",{\"1\":{\"2506\":1,\"2789\":2,\"2837\":1,\"3093\":2,\"3423\":1,\"3428\":5,\"3449\":1}}],[\"runtime1\",{\"1\":{\"2778\":1,\"2780\":1}}],[\"runtime0\",{\"1\":{\"2746\":1}}],[\"runtime\",{\"1\":{\"1865\":1,\"2007\":1,\"2098\":1,\"2219\":1,\"2337\":3,\"2342\":1,\"2345\":1,\"2402\":4,\"2415\":1,\"2416\":1,\"2419\":1,\"2442\":1,\"2506\":1,\"2559\":1,\"2740\":1,\"2741\":3,\"2743\":1,\"2748\":2,\"2753\":4,\"2755\":6,\"2757\":4,\"2759\":6,\"2761\":5,\"2762\":2,\"2763\":4,\"2771\":3,\"2778\":1,\"2780\":1,\"2783\":1,\"2786\":1,\"2789\":2,\"2790\":1,\"2791\":1,\"2793\":2,\"2795\":1,\"2809\":1,\"2828\":2,\"2838\":1,\"2839\":1,\"2850\":1,\"2868\":1,\"2891\":1}}],[\"rune是int32的一个内置别名\",{\"1\":{\"2001\":1,\"2027\":1}}],[\"rune\",{\"1\":{\"1772\":2,\"1998\":1}}],[\"rune类型作为int32类型的别名\",{\"1\":{\"1771\":1}}],[\"rpc方法\",{\"1\":{\"3327\":1}}],[\"rpc\",{\"0\":{\"3284\":1},\"1\":{\"3286\":2,\"3287\":3,\"3294\":1,\"3295\":3,\"3297\":1,\"3303\":1,\"3306\":1,\"3309\":3,\"3311\":3,\"3321\":1,\"3340\":3}}],[\"r+\",{\"1\":{\"3153\":1}}],[\"rb+\",{\"1\":{\"3155\":1}}],[\"rb\",{\"1\":{\"3151\":1,\"3177\":1}}],[\"rbf\",{\"1\":{\"22\":1}}],[\"rjust\",{\"1\":{\"3048\":1}}],[\"ring\",{\"1\":{\"2891\":1}}],[\"rdtsc\",{\"1\":{\"2753\":1}}],[\"r2\",{\"1\":{\"2272\":3,\"2273\":2}}],[\"r1\",{\"1\":{\"2272\":4,\"2273\":2}}],[\"rw\",{\"1\":{\"1902\":1,\"1904\":1,\"1905\":1,\"1906\":1,\"1908\":1,\"2047\":3,\"2048\":1,\"2054\":1,\"2055\":2,\"2058\":1,\"2075\":1}}],[\"r\",{\"1\":{\"1545\":1,\"1866\":4,\"2040\":1,\"2047\":1,\"2337\":2,\"2402\":2,\"2940\":1,\"3116\":1,\"3129\":1,\"3149\":1,\"3175\":4,\"3205\":2,\"3327\":2}}],[\"radix\",{\"1\":{\"3388\":1}}],[\"raise\",{\"1\":{\"3113\":1,\"3120\":1,\"3122\":1,\"3124\":2,\"3250\":1}}],[\"rank\",{\"1\":{\"2789\":1}}],[\"range函数参数\",{\"1\":{\"3018\":1}}],[\"range\",{\"1\":{\"1865\":1,\"3017\":1,\"3020\":1,\"3021\":2,\"3026\":1,\"3052\":3,\"3053\":1,\"3062\":2,\"3069\":1,\"3176\":2}}],[\"random\",{\"1\":{\"1220\":1,\"1225\":1,\"1241\":1,\"1242\":1}}],[\"rarp\",{\"1\":{\"711\":1}}],[\"rcvd\",{\"1\":{\"1288\":1}}],[\"rcvd状态\",{\"1\":{\"796\":1}}],[\"rcv\",{\"1\":{\"1035\":1,\"1037\":1,\"1041\":1}}],[\"rt0\",{\"0\":{\"2749\":1},\"1\":{\"2741\":3,\"2743\":3,\"2744\":1,\"2746\":1,\"2748\":4,\"2750\":1,\"2753\":1,\"2755\":1,\"2757\":1,\"2759\":1,\"2761\":1,\"2771\":2,\"2797\":1}}],[\"rtype>\",{\"1\":{\"2225\":1}}],[\"rtype\",{\"1\":{\"2206\":1,\"2220\":1,\"2221\":1,\"2222\":1,\"2224\":1,\"2229\":1,\"2241\":1}}],[\"rto\",{\"1\":{\"892\":1,\"894\":1,\"895\":1,\"896\":1,\"897\":1}}],[\"rtt\",{\"1\":{\"890\":1,\"891\":1,\"896\":1,\"897\":2}}],[\"rst\",{\"1\":{\"751\":1}}],[\"rodata\",{\"1\":{\"2763\":1}}],[\"rounding\",{\"1\":{\"2568\":1,\"2569\":1,\"2574\":1}}],[\"root\",{\"1\":{\"2481\":1,\"2492\":2,\"2495\":1,\"2496\":2,\"2497\":1,\"2531\":1,\"2532\":1,\"2534\":1,\"2623\":1,\"2628\":1,\"3388\":2}}],[\"ro\",{\"1\":{\"2260\":1}}],[\"rowid就是主键\",{\"1\":{\"502\":1}}],[\"rowid\",{\"1\":{\"501\":1,\"503\":1,\"504\":1}}],[\"rollback\",{\"1\":{\"175\":1,\"435\":1}}],[\"r4\",{\"1\":{\"242\":1}}],[\"r3\",{\"1\":{\"241\":1}}],[\"r5\",{\"1\":{\"221\":1,\"222\":1}}],[\"remote\",{\"1\":{\"3447\":1}}],[\"remove\",{\"1\":{\"3054\":2,\"3063\":1}}],[\"reference\",{\"1\":{\"3428\":1}}],[\"referenced\",{\"1\":{\"3394\":2}}],[\"reflect\",{\"1\":{\"2163\":2,\"2203\":3,\"2205\":1,\"2207\":2,\"2219\":3,\"2221\":2,\"2222\":1,\"2223\":1,\"2228\":1,\"2232\":3,\"2233\":1,\"2240\":1,\"2246\":2,\"2253\":1,\"2260\":1,\"2891\":1,\"3388\":2}}],[\"requires\",{\"1\":{\"3388\":1}}],[\"require\",{\"1\":{\"3388\":9,\"3394\":2}}],[\"required\",{\"1\":{\"3388\":1,\"3428\":1}}],[\"requested\",{\"1\":{\"3447\":1}}],[\"request\",{\"1\":{\"1123\":1,\"1175\":1,\"1176\":2,\"3287\":2,\"3295\":2,\"3309\":1,\"3311\":2,\"3325\":2,\"3394\":4,\"3397\":2}}],[\"req\",{\"1\":{\"3342\":1}}],[\"regex\",{\"1\":{\"3388\":4}}],[\"regexp\",{\"1\":{\"2891\":1,\"3388\":3}}],[\"regenerate\",{\"1\":{\"3346\":1}}],[\"registergreeterserver\",{\"1\":{\"3325\":1,\"3342\":1}}],[\"registerhelloservice\",{\"1\":{\"3306\":1,\"3309\":1,\"3311\":1}}],[\"registername\",{\"1\":{\"3287\":1,\"3303\":1,\"3306\":1,\"3309\":1}}],[\"re\",{\"1\":{\"3200\":2,\"3202\":2,\"3205\":3}}],[\"rest\",{\"1\":{\"3388\":4}}],[\"restricted\",{\"1\":{\"3388\":4}}],[\"res\",{\"1\":{\"3238\":2,\"3240\":2,\"3256\":4,\"3341\":2,\"3342\":2}}],[\"result\",{\"1\":{\"3026\":3}}],[\"reset\",{\"1\":{\"72\":1,\"1093\":1}}],[\"ret\",{\"1\":{\"2222\":2,\"2282\":2,\"2285\":1,\"2337\":2,\"2402\":2,\"2761\":2}}],[\"returns\",{\"1\":{\"3321\":1,\"3340\":3}}],[\"returned\",{\"1\":{\"2260\":1,\"3447\":1}}],[\"return\",{\"1\":{\"2052\":2,\"2082\":1,\"2111\":1,\"2132\":1,\"2135\":1,\"2158\":1,\"2163\":2,\"2166\":1,\"2172\":1,\"2178\":2,\"2188\":1,\"2195\":6,\"2208\":1,\"2222\":2,\"2234\":2,\"2239\":2,\"2260\":3,\"2272\":2,\"2309\":1,\"2320\":1,\"2324\":1,\"2337\":1,\"2378\":1,\"2402\":1,\"2425\":1,\"2427\":1,\"2454\":1,\"2793\":1,\"3025\":1,\"3026\":1,\"3028\":2,\"3084\":2,\"3087\":2,\"3090\":3,\"3093\":2,\"3096\":4,\"3176\":2,\"3238\":2,\"3240\":2,\"3248\":2,\"3250\":2,\"3257\":1,\"3287\":1,\"3295\":3,\"3306\":1,\"3309\":1,\"3311\":1,\"3325\":1,\"3342\":3,\"3388\":11}}],[\"retransmit\",{\"1\":{\"990\":1}}],[\"retransmission\",{\"1\":{\"892\":1}}],[\"repo\",{\"1\":{\"3430\":1}}],[\"reply\",{\"1\":{\"3286\":3,\"3287\":2,\"3295\":2,\"3297\":3,\"3309\":1,\"3311\":2}}],[\"repl\",{\"1\":{\"3190\":1}}],[\"representing\",{\"1\":{\"2014\":1}}],[\"repeatable\",{\"1\":{\"145\":1,\"150\":1,\"574\":1,\"588\":1}}],[\"reassign\",{\"1\":{\"3388\":2}}],[\"really\",{\"1\":{\"1916\":1,\"2239\":1}}],[\"readlines\",{\"1\":{\"3116\":1,\"3175\":1}}],[\"readline\",{\"1\":{\"3113\":1}}],[\"reader和io\",{\"1\":{\"2891\":1}}],[\"readme\",{\"1\":{\"2882\":1,\"2885\":1,\"2886\":1,\"2893\":1}}],[\"ready\",{\"1\":{\"2793\":1}}],[\"readwriter\",{\"1\":{\"1902\":1,\"1906\":1,\"2047\":1,\"2049\":1,\"2055\":1,\"2058\":1,\"2059\":1,\"2060\":1,\"2062\":1,\"2068\":1,\"2071\":2,\"2072\":1,\"2075\":1,\"2076\":1,\"2078\":1,\"2083\":1}}],[\"readonly\",{\"1\":{\"313\":1,\"314\":2}}],[\"readonly=true\",{\"1\":{\"311\":1}}],[\"read\",{\"1\":{\"145\":3,\"148\":1,\"149\":1,\"150\":1,\"169\":1,\"293\":1,\"317\":1,\"572\":1,\"573\":1,\"574\":1,\"580\":1,\"584\":1,\"588\":1,\"2052\":1,\"2083\":1,\"2239\":1,\"3119\":2,\"3175\":1,\"3177\":1}}],[\"reload\",{\"1\":{\"1475\":1}}],[\"releases\",{\"1\":{\"3359\":1}}],[\"releasem\",{\"1\":{\"2793\":1}}],[\"release\",{\"1\":{\"1463\":1}}],[\"rel=\",{\"1\":{\"1411\":1}}],[\"render树保存所有具有内容和计算样式的可见节点\",{\"1\":{\"1431\":1}}],[\"redeclare\",{\"1\":{\"3388\":1}}],[\"redis\",{\"1\":{\"2332\":1}}],[\"redirect\",{\"1\":{\"1120\":1}}],[\"redo\",{\"0\":{\"99\":1,\"614\":1,\"618\":1,\"627\":1},\"1\":{\"98\":1,\"105\":1,\"107\":1,\"111\":1,\"112\":1,\"113\":1,\"119\":2,\"121\":1,\"132\":1,\"134\":2,\"135\":1,\"139\":1,\"438\":1,\"615\":1,\"616\":1,\"617\":1,\"619\":2,\"620\":1,\"622\":1,\"628\":1,\"640\":1,\"642\":1,\"645\":1,\"648\":1,\"651\":1,\"664\":1,\"665\":1,\"667\":1,\"673\":1,\"674\":1,\"675\":1,\"676\":2,\"677\":1,\"680\":2,\"681\":1,\"682\":1}}],[\"recv\",{\"1\":{\"3341\":2,\"3342\":2}}],[\"recent\",{\"1\":{\"3104\":3,\"3124\":1}}],[\"receiver\",{\"1\":{\"2018\":1}}],[\"recoder\",{\"0\":{\"2947\":1}}],[\"recovered\",{\"1\":{\"2919\":1,\"2932\":1,\"2944\":1,\"2958\":1}}],[\"recover\",{\"0\":{\"2897\":1,\"2926\":1,\"2959\":1},\"1\":{\"2898\":1,\"2927\":1,\"2928\":1,\"2929\":1,\"2932\":2,\"2944\":1,\"2946\":1,\"2948\":1,\"2949\":1,\"2957\":1,\"2960\":2,\"2963\":1}}],[\"recovery\",{\"1\":{\"993\":1}}],[\"recur\",{\"1\":{\"38\":1}}],[\"recurrent\",{\"0\":{\"12\":1}}],[\"reordering\",{\"1\":{\"923\":1}}],[\"tsx\",{\"1\":{\"3380\":1}}],[\"ts\",{\"1\":{\"3380\":1}}],[\"tm\",{\"1\":{\"3093\":3}}],[\"two=2\",{\"1\":{\"3069\":1}}],[\"tuple\",{\"1\":{\"3058\":3}}],[\"tuser\",{\"1\":{\"273\":1,\"532\":1}}],[\"tcmalloc\",{\"1\":{\"2514\":2}}],[\"tcp报文生成\",{\"0\":{\"1300\":1}}],[\"tcp就会把http的数据拆解成一个一个的数据包进行发送\",{\"1\":{\"1294\":1}}],[\"tcp就会启动快重传和快恢复机制\",{\"1\":{\"983\":1}}],[\"tcp拥塞控制\",{\"1\":{\"1055\":1}}],[\"tcp重传机制\",{\"1\":{\"1053\":1}}],[\"tcp连接四次挥手\",{\"1\":{\"1051\":1}}],[\"tcp连接\",{\"0\":{\"1284\":1},\"1\":{\"1049\":1}}],[\"tcp连接三次握手四次挥手\",{\"1\":{\"1047\":1}}],[\"tcp开启快速重传\",{\"1\":{\"990\":1}}],[\"tcp必需要知道网络实际的数据处理带宽或是数据处理速度\",{\"1\":{\"923\":1}}],[\"tcp必需要解决的可靠传输以及包乱序\",{\"1\":{\"923\":1}}],[\"tcp如何保证可靠传输\",{\"0\":{\"880\":1}}],[\"tcp建立连接\",{\"1\":{\"835\":1}}],[\"tcp与udp应用的场景\",{\"1\":{\"780\":1}}],[\"tcp与udp区别\",{\"1\":{\"764\":1}}],[\"tcp首部长度较长一般是20字节\",{\"1\":{\"775\":1}}],[\"tcp是可靠交付数据的\",{\"1\":{\"772\":1}}],[\"tcp是面向连接的\",{\"0\":{\"756\":1},\"1\":{\"733\":1,\"766\":1,\"781\":1}}],[\"tcp协议是一对一传输\",{\"1\":{\"769\":1}}],[\"tcp头部格式\",{\"1\":{\"741\":1}}],[\"tcp的头格式是什么\",{\"0\":{\"740\":1}}],[\"tcp篇\",{\"0\":{\"702\":1,\"731\":1}}],[\"tcp\",{\"0\":{\"703\":1},\"1\":{\"64\":1,\"713\":1,\"737\":1,\"750\":1,\"751\":1,\"753\":1,\"778\":1,\"790\":1,\"867\":1,\"883\":1,\"1026\":1,\"1174\":1,\"1175\":3,\"1177\":1,\"1202\":2,\"1298\":2,\"1301\":1,\"1303\":1,\"1304\":1,\"1325\":1,\"1496\":1,\"1498\":1,\"1501\":1,\"1509\":1,\"1514\":1,\"1517\":1,\"1521\":1,\"3286\":1,\"3287\":1,\"3297\":1,\"3311\":1,\"3325\":1,\"3342\":1}}],[\"three=3\",{\"1\":{\"3069\":1}}],[\"thread\",{\"1\":{\"2514\":1,\"2754\":1,\"2795\":2}}],[\"throw\",{\"1\":{\"2778\":1,\"2789\":1,\"2795\":1,\"3388\":2}}],[\"this也不能赋值给that以外的其他值\",{\"1\":{\"3388\":1}}],[\"this\",{\"1\":{\"2748\":1,\"2789\":1,\"2795\":1,\"3388\":6}}],[\"that不能指向其他任何值\",{\"1\":{\"3388\":1}}],[\"that\",{\"1\":{\"2350\":1,\"2362\":1,\"2373\":1,\"2420\":1,\"2795\":1,\"3388\":3}}],[\"their\",{\"1\":{\"3388\":1}}],[\"the\",{\"1\":{\"1406\":2,\"2260\":1,\"2473\":2,\"2493\":1,\"2504\":1,\"2676\":1,\"2748\":6,\"2789\":2,\"2795\":2,\"3365\":1,\"3388\":1,\"3397\":1,\"3428\":1,\"3447\":1}}],[\"tt\",{\"1\":{\"2260\":2}}],[\"ttl是经过路由跳数\",{\"1\":{\"870\":1}}],[\"ttl\",{\"1\":{\"867\":1}}],[\"tfn\",{\"1\":{\"2018\":1}}],[\"tflag\",{\"1\":{\"2008\":2}}],[\"tftp\",{\"1\":{\"719\":1}}],[\"t3\",{\"1\":{\"2003\":1}}],[\"typ\",{\"1\":{\"1900\":1,\"2010\":1,\"2012\":1,\"2014\":2,\"2208\":1,\"2220\":1,\"2221\":1,\"2222\":1,\"2224\":1,\"2229\":1,\"2239\":1,\"2241\":1,\"2260\":5}}],[\"typescrip的编译器也会提示\",{\"1\":{\"3388\":1}}],[\"typeerror\",{\"1\":{\"3058\":1,\"3104\":1,\"3105\":1}}],[\"typelinksinit\",{\"1\":{\"2789\":1}}],[\"typeof\",{\"1\":{\"2163\":2,\"2207\":1,\"2208\":3,\"2210\":1,\"2212\":1,\"2219\":1,\"2221\":1,\"3388\":3}}],[\"typeoff\",{\"1\":{\"2008\":1,\"2018\":1}}],[\"type中拷贝来的\",{\"1\":{\"1900\":1,\"2224\":1}}],[\"typealg\",{\"1\":{\"1869\":1,\"2008\":1}}],[\"type\",{\"0\":{\"2089\":1,\"2204\":1},\"1\":{\"1162\":1,\"1772\":2,\"1834\":1,\"1839\":1,\"1868\":2,\"1869\":1,\"1890\":3,\"1892\":3,\"1895\":3,\"1900\":6,\"1903\":1,\"1912\":2,\"1916\":1,\"1917\":1,\"1965\":1,\"1981\":2,\"1985\":2,\"2003\":3,\"2007\":1,\"2008\":2,\"2009\":3,\"2010\":3,\"2012\":3,\"2014\":8,\"2015\":1,\"2018\":2,\"2020\":1,\"2029\":2,\"2041\":1,\"2052\":1,\"2082\":1,\"2090\":1,\"2099\":1,\"2158\":1,\"2163\":1,\"2166\":1,\"2172\":1,\"2178\":1,\"2188\":1,\"2195\":1,\"2203\":1,\"2205\":1,\"2206\":9,\"2207\":1,\"2208\":1,\"2213\":3,\"2214\":1,\"2220\":1,\"2221\":2,\"2222\":2,\"2223\":1,\"2224\":5,\"2225\":1,\"2229\":1,\"2236\":3,\"2241\":2,\"2350\":1,\"2362\":1,\"2373\":1,\"2420\":1,\"2459\":1,\"2477\":1,\"2778\":2,\"2862\":1,\"2864\":1,\"2868\":1,\"2872\":1,\"2907\":1,\"2919\":1,\"3177\":1,\"3287\":1,\"3295\":1,\"3309\":1,\"3311\":1,\"3325\":1,\"3342\":1}}],[\"t456\",{\"1\":{\"1760\":1}}],[\"tls协议版本\",{\"1\":{\"1224\":1}}],[\"tls协议版本号\",{\"1\":{\"1219\":1}}],[\"tls协议建立的详细流程\",{\"1\":{\"1215\":1}}],[\"tls协议基本流程\",{\"1\":{\"1210\":1}}],[\"tls\",{\"1\":{\"1204\":1,\"1239\":1,\"2754\":1,\"2755\":7,\"2757\":1}}],[\"template\",{\"1\":{\"3388\":2}}],[\"temporary\",{\"1\":{\"1120\":1}}],[\"ternary\",{\"1\":{\"3388\":3}}],[\"termination\",{\"1\":{\"2497\":1}}],[\"teach\",{\"1\":{\"3096\":2}}],[\"teacher\",{\"1\":{\"3096\":2}}],[\"test2json\",{\"1\":{\"2893\":1}}],[\"testing\",{\"1\":{\"2891\":1}}],[\"testarray\",{\"1\":{\"1640\":2}}],[\"test1\",{\"1\":{\"1640\":1}}],[\"test\",{\"1\":{\"1563\":3,\"2882\":1,\"3035\":1,\"3042\":1,\"3080\":1,\"3124\":1,\"3342\":1}}],[\"textdocument\",{\"1\":{\"3394\":4,\"3397\":2}}],[\"textoff\",{\"1\":{\"2018\":2}}],[\"text\",{\"1\":{\"1164\":1,\"1406\":1,\"2743\":1,\"2748\":1,\"2753\":1,\"2755\":1,\"2757\":1,\"2759\":1,\"2761\":1,\"2891\":1}}],[\"tencent\",{\"1\":{\"1052\":1,\"1056\":1}}],[\"telnet客户端\",{\"1\":{\"1465\":1}}],[\"telnet\",{\"1\":{\"719\":1,\"1459\":1,\"1465\":1}}],[\"t是表\",{\"1\":{\"516\":1}}],[\"timmer\",{\"1\":{\"3238\":3}}],[\"timer\",{\"1\":{\"2868\":1}}],[\"timediff\",{\"1\":{\"181\":1}}],[\"time\",{\"1\":{\"181\":1,\"861\":1,\"2350\":1,\"2362\":1,\"2373\":1,\"2420\":1,\"2868\":1,\"2891\":1,\"3093\":3,\"3175\":1,\"3238\":7,\"3341\":4,\"3342\":6}}],[\"timeout\",{\"1\":{\"67\":1,\"376\":2,\"378\":1,\"892\":1,\"898\":2}}],[\"title\",{\"1\":{\"3048\":1,\"3096\":11}}],[\"tips\",{\"0\":{\"2810\":1}}],[\"tinyint\",{\"1\":{\"251\":1}}],[\"try\",{\"1\":{\"3106\":1,\"3108\":1,\"3109\":2,\"3110\":1,\"3111\":2,\"3112\":1,\"3113\":3,\"3115\":1,\"3116\":1,\"3119\":2,\"3175\":1,\"3176\":1,\"3177\":1}}],[\"triangle\",{\"1\":{\"3090\":5}}],[\"true\",{\"1\":{\"2163\":1,\"2164\":1,\"2491\":1,\"2793\":2,\"2795\":1,\"2908\":1,\"2914\":1,\"2920\":1,\"2932\":1,\"2944\":1,\"3023\":1,\"3048\":4,\"3058\":2,\"3087\":1,\"3093\":1,\"3176\":1,\"3256\":1,\"3380\":2,\"3388\":15,\"3428\":2}}],[\"trailing\",{\"1\":{\"3388\":1}}],[\"tracking\",{\"1\":{\"2793\":1}}],[\"trackingseq\",{\"1\":{\"2793\":2}}],[\"track\",{\"1\":{\"2793\":1}}],[\"traceback\",{\"1\":{\"3104\":3,\"3122\":1,\"3124\":1}}],[\"trace\",{\"1\":{\"1581\":1,\"2893\":1}}],[\"transition\",{\"1\":{\"2793\":1}}],[\"transfer\",{\"1\":{\"1064\":1}}],[\"transaction\",{\"1\":{\"174\":1,\"308\":1,\"345\":1}}],[\"tree\",{\"1\":{\"478\":1,\"1406\":1,\"1421\":1}}],[\"trx\",{\"1\":{\"181\":2,\"628\":1,\"658\":1}}],[\"trx这个表中查询长事务\",{\"1\":{\"180\":1}}],[\"tag\",{\"1\":{\"2783\":2}}],[\"tabs\",{\"1\":{\"3388\":1}}],[\"tab\",{\"1\":{\"1900\":1,\"1903\":1,\"2049\":1,\"2055\":1,\"2224\":1,\"2225\":1,\"3388\":2}}],[\"tables\",{\"1\":{\"293\":1,\"317\":2,\"321\":1,\"346\":1,\"348\":2}}],[\"table\",{\"1\":{\"153\":1,\"237\":1,\"251\":1,\"342\":1}}],[\"target数据\",{\"1\":{\"41\":1}}],[\"target\",{\"1\":{\"17\":1,\"37\":1,\"40\":1,\"3428\":1}}],[\"t2\",{\"1\":{\"83\":2,\"2003\":1,\"2163\":2}}],[\"t1\",{\"1\":{\"83\":2,\"2003\":1,\"2163\":2}}],[\"tools\",{\"0\":{\"3464\":1}}],[\"tokens\",{\"1\":{\"3430\":1}}],[\"token\",{\"1\":{\"3428\":5,\"3429\":1,\"3430\":1,\"3431\":1}}],[\"total\",{\"1\":{\"3028\":3}}],[\"totype\",{\"1\":{\"2208\":1,\"2221\":1,\"2222\":1}}],[\"top\",{\"1\":{\"3388\":1}}],[\"topframe\",{\"1\":{\"2795\":1}}],[\"tophash\",{\"1\":{\"1836\":1}}],[\"to\",{\"1\":{\"68\":1,\"181\":1,\"1772\":4,\"1866\":1,\"2014\":1,\"2402\":1,\"2425\":1,\"2454\":1,\"2480\":1,\"2648\":1,\"2649\":1,\"2650\":2,\"2705\":2,\"2707\":1,\"2757\":1,\"2795\":2,\"2868\":3,\"3104\":1,\"3113\":1,\"3238\":1,\"3325\":2,\"3346\":1,\"3388\":1,\"3394\":2,\"3397\":1,\"3428\":1,\"3447\":3}}],[\"t\",{\"1\":{\"55\":1,\"97\":1,\"153\":2,\"217\":1,\"218\":1,\"236\":2,\"237\":2,\"246\":1,\"333\":1,\"335\":1,\"338\":1,\"356\":1,\"516\":1,\"518\":1,\"524\":2,\"661\":1,\"874\":1,\"1866\":1,\"1965\":3,\"1992\":2,\"2210\":2,\"2212\":1,\"2222\":3,\"2226\":1,\"2239\":6,\"3058\":9,\"3084\":1,\"3090\":5,\"3096\":3,\"3139\":1}}],[\"txt\",{\"1\":{\"19\":1,\"1893\":1,\"1904\":1,\"2040\":1,\"2047\":1,\"2058\":1,\"2075\":1,\"2885\":20,\"2887\":1,\"2888\":1,\"2889\":1,\"3113\":1,\"3175\":3,\"3176\":3}}],[\"1tabs\",{\"1\":{\"3397\":1}}],[\"1tbs\",{\"1\":{\"3388\":1}}],[\"1=0\",{\"1\":{\"2574\":1}}],[\"1~66\",{\"1\":{\"2524\":1}}],[\"1~31\",{\"1\":{\"1011\":1}}],[\"1字节=8位\",{\"1\":{\"1929\":1}}],[\"1的二进制数为100\",{\"1\":{\"1805\":1}}],[\"1进行与运算\",{\"1\":{\"1802\":1,\"1805\":1}}],[\"1位设为0\",{\"1\":{\"1752\":1}}],[\"1️⃣\",{\"1\":{\"1711\":1}}],[\"1协议\",{\"1\":{\"1512\":1}}],[\"1请求报文\",{\"1\":{\"1498\":1}}],[\"192\",{\"1\":{\"1315\":2,\"1316\":2,\"1371\":1,\"1373\":3}}],[\"19\",{\"0\":{\"946\":1}}],[\"18784a15\",{\"1\":{\"1190\":1}}],[\"18\",{\"0\":{\"939\":1},\"1\":{\"3075\":1,\"3096\":1,\"3428\":1}}],[\"17\",{\"0\":{\"931\":1},\"1\":{\"2885\":1}}],[\"15619895\",{\"1\":{\"3347\":1}}],[\"1500\",{\"1\":{\"1297\":1}}],[\"15\",{\"0\":{\"922\":1},\"1\":{\"1857\":1,\"2885\":1,\"3078\":1,\"3096\":1}}],[\"14什么的用常量代替\",{\"1\":{\"3388\":1}}],[\"1401283\",{\"1\":{\"1056\":1}}],[\"1450264\",{\"1\":{\"1052\":1}}],[\"14\",{\"0\":{\"882\":1,\"2423\":1},\"1\":{\"2396\":1,\"2422\":1,\"2431\":1,\"2448\":1,\"2452\":1,\"2455\":1,\"2457\":1,\"2458\":1,\"2885\":1,\"2963\":1}}],[\"134\",{\"1\":{\"2525\":1,\"2526\":1}}],[\"13014\",{\"1\":{\"1496\":1}}],[\"13\",{\"0\":{\"880\":1,\"2397\":1},\"1\":{\"2396\":1,\"2398\":1,\"2399\":1,\"2401\":1,\"2406\":1,\"2417\":1,\"2419\":1,\"2421\":1,\"2422\":1,\"2430\":1,\"2885\":1,\"3048\":1}}],[\"126\",{\"1\":{\"3048\":1}}],[\"123456\",{\"1\":{\"3286\":1,\"3289\":1,\"3293\":1}}],[\"1234567\",{\"1\":{\"3052\":1}}],[\"1234\",{\"1\":{\"3054\":2,\"3297\":2,\"3327\":1,\"3341\":2}}],[\"123\",{\"1\":{\"1760\":1,\"3069\":1}}],[\"128\",{\"1\":{\"1753\":1}}],[\"127\",{\"1\":{\"1470\":3,\"1491\":1,\"1559\":2,\"1753\":1,\"3327\":1}}],[\"12732052\",{\"1\":{\"1054\":1}}],[\"120\",{\"1\":{\"1034\":1,\"1036\":1,\"1037\":2,\"1039\":1}}],[\"12\",{\"0\":{\"866\":1,\"2391\":1},\"1\":{\"1202\":1,\"1981\":1,\"2336\":1,\"2392\":1,\"2393\":1,\"2403\":1,\"2405\":1,\"2417\":1,\"2429\":1,\"2446\":1,\"2455\":1,\"2885\":1,\"2907\":1,\"3063\":1,\"3084\":1}}],[\"1状态\",{\"1\":{\"849\":1,\"1393\":1}}],[\"1gb\",{\"1\":{\"619\":1}}],[\"1nf\",{\"1\":{\"423\":1,\"424\":1}}],[\"1s\",{\"1\":{\"379\":1}}],[\"1024\",{\"1\":{\"2795\":2}}],[\"1024+104\",{\"1\":{\"2753\":1}}],[\"101\",{\"1\":{\"3017\":1}}],[\"10100101\",{\"1\":{\"1755\":1}}],[\"10111000\",{\"1\":{\"1755\":1}}],[\"10xxxxxx\",{\"1\":{\"1753\":6,\"1755\":2}}],[\"10自带telnet\",{\"1\":{\"1465\":1}}],[\"105424412\",{\"1\":{\"1048\":1}}],[\"10\",{\"0\":{\"670\":1,\"856\":1},\"1\":{\"272\":1,\"389\":3,\"1315\":1,\"1316\":2,\"1317\":1,\"1687\":1,\"1702\":1,\"2402\":1,\"2885\":1,\"3048\":3,\"3052\":1,\"3062\":1,\"3069\":1,\"3104\":1,\"3124\":2,\"3256\":1,\"3341\":1,\"3342\":1}}],[\"100万\",{\"1\":{\"1644\":1}}],[\"10000\",{\"1\":{\"2789\":1,\"3176\":1}}],[\"1000\",{\"1\":{\"384\":1,\"1158\":1,\"3052\":2,\"3054\":5,\"3176\":1}}],[\"100\",{\"1\":{\"43\":2,\"210\":1,\"237\":1,\"384\":1,\"1317\":2,\"1371\":1,\"1373\":1,\"1640\":1,\"3053\":4,\"3054\":4,\"3062\":1,\"3069\":1,\"3176\":1}}],[\"1190000039101378\",{\"1\":{\"1882\":1}}],[\"111\",{\"1\":{\"1878\":1}}],[\"1110\",{\"1\":{\"1755\":1}}],[\"1110xxxx\",{\"1\":{\"1753\":1}}],[\"11110xxx\",{\"1\":{\"1753\":1}}],[\"110xxxxx\",{\"1\":{\"1753\":1}}],[\"11609\",{\"1\":{\"1059\":1}}],[\"11564\",{\"1\":{\"1058\":1}}],[\"114873086\",{\"1\":{\"805\":1}}],[\"11\",{\"0\":{\"860\":1},\"1\":{\"251\":2,\"1044\":1,\"1493\":1,\"2885\":1,\"3063\":1,\"3205\":1}}],[\"168\",{\"1\":{\"1315\":2,\"1316\":2,\"1371\":1,\"1373\":3}}],[\"160\",{\"1\":{\"1040\":1,\"1041\":2,\"1042\":3}}],[\"16\",{\"0\":{\"927\":1},\"1\":{\"237\":1,\"1972\":2,\"2753\":1,\"2759\":1,\"2885\":1,\"3084\":1,\"3087\":1}}],[\"16387854\",{\"1\":{\"28\":1}}],[\"1\",{\"0\":{\"396\":1,\"440\":1,\"555\":1,\"600\":1,\"614\":1,\"687\":1,\"705\":1,\"732\":1,\"1063\":1,\"2966\":1,\"3045\":1,\"3071\":1},\"1\":{\"18\":1,\"36\":1,\"118\":1,\"135\":1,\"153\":1,\"167\":1,\"210\":1,\"226\":1,\"237\":1,\"251\":1,\"288\":1,\"389\":1,\"630\":1,\"637\":1,\"646\":1,\"750\":2,\"751\":1,\"752\":1,\"753\":2,\"867\":1,\"986\":1,\"1000\":1,\"1011\":1,\"1021\":1,\"1371\":1,\"1373\":3,\"1470\":3,\"1491\":1,\"1498\":1,\"1501\":2,\"1512\":2,\"1541\":2,\"1545\":2,\"1546\":2,\"1555\":2,\"1556\":2,\"1559\":2,\"1568\":2,\"1631\":3,\"1634\":1,\"1635\":1,\"1638\":2,\"1656\":2,\"1670\":1,\"1673\":1,\"1680\":1,\"1687\":3,\"1702\":4,\"1717\":2,\"1752\":1,\"1796\":1,\"1799\":1,\"1802\":1,\"1804\":1,\"1805\":1,\"1808\":1,\"1850\":1,\"1866\":2,\"1878\":2,\"1900\":1,\"1929\":1,\"1954\":1,\"1965\":1,\"1970\":2,\"1971\":1,\"2103\":2,\"2158\":1,\"2166\":1,\"2224\":1,\"2272\":1,\"2294\":2,\"2300\":2,\"2309\":1,\"2317\":1,\"2333\":2,\"2335\":1,\"2337\":1,\"2352\":2,\"2370\":1,\"2378\":1,\"2396\":1,\"2400\":2,\"2403\":1,\"2417\":2,\"2421\":1,\"2422\":2,\"2425\":1,\"2431\":1,\"2446\":1,\"2453\":1,\"2454\":3,\"2455\":1,\"2457\":1,\"2459\":1,\"2480\":1,\"2491\":1,\"2539\":1,\"2540\":1,\"2550\":1,\"2551\":1,\"2574\":1,\"2746\":1,\"2778\":2,\"2783\":2,\"2789\":2,\"2885\":1,\"2907\":1,\"2963\":1,\"3015\":2,\"3017\":1,\"3020\":1,\"3021\":1,\"3023\":1,\"3026\":3,\"3048\":4,\"3052\":3,\"3053\":7,\"3054\":5,\"3058\":1,\"3062\":5,\"3069\":1,\"3093\":4,\"3104\":4,\"3116\":1,\"3129\":1,\"3176\":4,\"3205\":1,\"3240\":1,\"3246\":2,\"3248\":2,\"3250\":2,\"3256\":1,\"3286\":1,\"3287\":1,\"3311\":1,\"3321\":2,\"3325\":1,\"3327\":2,\"3340\":2,\"3341\":1,\"3388\":22}}],[\"09\",{\"1\":{\"3451\":1}}],[\"04\",{\"1\":{\"3394\":1}}],[\"02\",{\"1\":{\"3394\":1}}],[\"02d\",{\"1\":{\"3093\":3}}],[\"0x1009\",{\"1\":{\"2868\":1}}],[\"0x1004\",{\"1\":{\"2868\":1}}],[\"0x1003\",{\"1\":{\"2868\":1}}],[\"0x1002\",{\"1\":{\"2868\":1}}],[\"0x1001\",{\"1\":{\"2868\":1}}],[\"0x1000\",{\"1\":{\"2868\":1}}],[\"0xxxxxxx\",{\"1\":{\"1753\":1}}],[\"0字符\",{\"1\":{\"1766\":1}}],[\"0来表示字符串结束\",{\"1\":{\"1766\":1}}],[\"0101\",{\"1\":{\"1755\":1}}],[\"0100\",{\"1\":{\"1755\":1}}],[\"07ff\",{\"1\":{\"1753\":1}}],[\"0010\",{\"1\":{\"1753\":1,\"1755\":1}}],[\"0001\",{\"1\":{\"1753\":1}}],[\"0000\",{\"1\":{\"1753\":8,\"1755\":2}}],[\"00000000\",{\"1\":{\"1737\":1}}],[\"0080\",{\"1\":{\"1753\":1}}],[\"007f\",{\"1\":{\"1753\":1}}],[\"0d0a\",{\"1\":{\"1530\":1}}],[\"0806\",{\"1\":{\"1327\":1}}],[\"0800\",{\"1\":{\"1326\":1,\"1753\":1,\"1755\":1}}],[\"0～4\",{\"1\":{\"654\":1}}],[\"0\",{\"1\":{\"18\":1,\"21\":1,\"36\":1,\"74\":2,\"133\":1,\"135\":1,\"237\":1,\"629\":1,\"655\":1,\"674\":1,\"691\":1,\"867\":1,\"874\":1,\"944\":1,\"945\":1,\"1036\":1,\"1315\":2,\"1316\":2,\"1318\":4,\"1373\":3,\"1470\":6,\"1491\":2,\"1511\":1,\"1559\":4,\"1673\":1,\"1687\":1,\"1702\":1,\"1717\":2,\"1753\":1,\"1804\":1,\"1939\":1,\"1970\":1,\"1984\":1,\"2063\":2,\"2065\":2,\"2066\":2,\"2079\":2,\"2135\":2,\"2138\":1,\"2260\":3,\"2309\":1,\"2317\":1,\"2320\":1,\"2333\":2,\"2337\":2,\"2342\":1,\"2402\":2,\"2454\":2,\"2501\":1,\"2524\":1,\"2539\":1,\"2552\":1,\"2668\":1,\"2675\":1,\"2748\":1,\"2759\":1,\"2783\":1,\"2786\":1,\"2789\":1,\"2793\":1,\"2795\":3,\"3017\":2,\"3019\":2,\"3020\":2,\"3021\":2,\"3028\":1,\"3048\":1,\"3053\":1,\"3054\":1,\"3058\":3,\"3062\":2,\"3093\":3,\"3104\":2,\"3113\":2,\"3175\":1,\"3176\":3,\"3205\":1,\"3256\":1,\"3325\":4,\"3327\":2,\"3341\":1,\"3342\":1,\"3388\":90,\"3428\":1}}],[\"06\",{\"0\":{\"3\":1}}],[\">tokens\",{\"1\":{\"3430\":1}}],[\">setting\",{\"1\":{\"3430\":1}}],[\">stringtype\",{\"1\":{\"2236\":1}}],[\">8\",{\"1\":{\"2868\":1}}],[\">7\",{\"1\":{\"2868\":1}}],[\">6\",{\"1\":{\"2868\":1}}],[\">60\",{\"1\":{\"181\":1}}],[\">5\",{\"1\":{\"2868\":1}}],[\">4\",{\"1\":{\"2864\":1,\"2868\":1}}],[\">3\",{\"1\":{\"2864\":1,\"2868\":1}}],[\">2\",{\"1\":{\"2864\":1,\"2868\":1}}],[\">1\",{\"1\":{\"2864\":1,\"2868\":1}}],[\">10\",{\"1\":{\"289\":1}}],[\">m\",{\"1\":{\"2757\":1}}],[\">g0\",{\"1\":{\"2757\":1}}],[\">0\",{\"1\":{\"2569\":1,\"2864\":1,\"2868\":1}}],[\">就是参数的\",{\"1\":{\"2241\":1}}],[\">reflect\",{\"1\":{\"2224\":1}}],[\">eface\",{\"1\":{\"2224\":1}}],[\">i\",{\"1\":{\"2220\":1}}],[\">f\",{\"1\":{\"1895\":1}}],[\">nil\",{\"1\":{\"1892\":2,\"1903\":2}}],[\">>>\",{\"1\":{\"3104\":3,\"3233\":2,\"3246\":5}}],[\">><<\",{\"1\":{\"2995\":1}}],[\">>\",{\"1\":{\"1866\":1}}],[\">=\",{\"1\":{\"977\":1,\"3015\":1,\"3065\":2,\"3096\":1}}],[\">\",{\"1\":{\"16\":1,\"205\":3,\"276\":1,\"529\":1,\"1411\":2,\"1752\":1,\"1847\":1,\"1866\":1,\"1895\":1,\"2014\":1,\"2224\":1,\"2236\":1,\"2241\":1,\"2337\":1,\"2402\":1,\"2425\":1,\"2454\":3,\"2789\":1,\"2793\":1,\"3015\":1,\"3023\":1,\"3090\":3,\"3124\":1,\"3176\":1,\"3177\":1,\"3341\":1,\"3342\":1,\"3428\":1,\"3430\":2,\"3431\":3,\"3449\":1}}],[\"蓝色区域标记成\",{\"1\":{\"36\":1}}],[\"蓝色区域\",{\"1\":{\"16\":1,\"18\":1}}],[\"绿色区域标记成\",{\"1\":{\"36\":1}}],[\"绿色区域\",{\"1\":{\"16\":1,\"18\":1}}],[\"剔除规则是\",{\"1\":{\"16\":1}}],[\"剔除了绿色区域较小的样本\",{\"1\":{\"15\":1}}],[\"留下了绿色区域与蓝色区域\",{\"1\":{\"14\":1}}],[\"srv\",{\"1\":{\"3306\":2,\"3309\":2}}],[\"src\",{\"0\":{\"2890\":1},\"1\":{\"2741\":3,\"2882\":1,\"3428\":2,\"3449\":1}}],[\"src=\",{\"1\":{\"1411\":4}}],[\"s的\",{\"1\":{\"3096\":1}}],[\"sqrt\",{\"1\":{\"3090\":2,\"3176\":2}}],[\"sql标准的事务隔离级别包括\",{\"1\":{\"147\":1}}],[\"sql\",{\"0\":{\"696\":1},\"1\":{\"76\":1,\"78\":2,\"161\":1,\"262\":1,\"571\":1,\"692\":3}}],[\"s正在讲\",{\"1\":{\"3096\":1}}],[\"s正在观看爱情动作片\",{\"1\":{\"3096\":1}}],[\"s正在观看岛国爱情大电影\",{\"1\":{\"3075\":1}}],[\"s正在愉快的玩耍\",{\"1\":{\"3096\":1}}],[\"s正在玩斗地主\",{\"1\":{\"3084\":1,\"3087\":1}}],[\"s正在玩飞行棋\",{\"1\":{\"3084\":1,\"3087\":1}}],[\"s正在学习\",{\"1\":{\"3075\":1,\"3096\":1}}],[\"s只能观看\",{\"1\":{\"3075\":1,\"3096\":1}}],[\"s2\",{\"1\":{\"3048\":2}}],[\"s1\",{\"1\":{\"3048\":6}}],[\"suggest\",{\"1\":{\"3388\":1}}],[\"supported\",{\"1\":{\"3346\":1}}],[\"super\",{\"1\":{\"3096\":3,\"3388\":4}}],[\"submodules\",{\"1\":{\"3428\":1}}],[\"sub\",{\"1\":{\"3190\":1}}],[\"subq\",{\"1\":{\"2753\":1}}],[\"sum\",{\"1\":{\"2893\":1,\"3017\":3}}],[\"sourcetype\",{\"1\":{\"3388\":1}}],[\"source\",{\"1\":{\"3380\":1}}],[\"socket通信\",{\"1\":{\"3275\":1}}],[\"socket等\",{\"1\":{\"2891\":1}}],[\"sort\",{\"1\":{\"2891\":1,\"3388\":2}}],[\"so\",{\"1\":{\"2795\":1,\"2891\":1}}],[\"solaris\",{\"1\":{\"2795\":1}}],[\"something\",{\"1\":{\"2402\":1,\"2425\":1,\"2454\":1}}],[\"some\",{\"1\":{\"1866\":2}}],[\"skip\",{\"1\":{\"2783\":1}}],[\"sklearn\",{\"1\":{\"34\":3}}],[\"sklearnex\",{\"0\":{\"27\":1},\"1\":{\"29\":1,\"34\":1}}],[\"sb\",{\"1\":{\"2743\":2,\"2748\":2,\"2753\":4,\"2755\":5,\"2757\":3,\"2759\":5,\"2761\":6,\"2763\":3}}],[\"spread\",{\"1\":{\"3388\":3}}],[\"sprintf\",{\"1\":{\"3341\":1,\"3342\":1}}],[\"split\",{\"1\":{\"3188\":1}}],[\"spinning\",{\"1\":{\"2862\":1}}],[\"sp信息到g0\",{\"1\":{\"2795\":1}}],[\"sparse\",{\"1\":{\"3388\":1}}],[\"spacing\",{\"1\":{\"3388\":15}}],[\"spaced\",{\"1\":{\"3388\":2}}],[\"spaces\",{\"1\":{\"3388\":4}}],[\"space\",{\"1\":{\"1542\":1,\"3388\":5,\"3428\":1}}],[\"spam\",{\"1\":{\"3104\":3}}],[\"spans\",{\"1\":{\"2537\":1,\"2542\":1}}],[\"spanclass\",{\"1\":{\"2525\":1,\"2526\":2}}],[\"spanclass中\",{\"1\":{\"2524\":1}}],[\"span\",{\"1\":{\"2523\":2,\"2524\":2,\"2525\":2,\"2526\":1,\"2528\":1,\"2546\":1,\"2589\":3}}],[\"sp\",{\"1\":{\"2298\":1,\"2350\":2,\"2362\":2,\"2373\":2,\"2386\":1,\"2388\":1,\"2420\":2,\"2459\":1,\"2747\":1,\"2748\":2,\"2753\":6,\"2759\":4,\"2795\":1,\"2907\":1,\"2934\":1,\"2937\":1,\"2940\":1,\"2941\":1,\"2945\":1}}],[\"sweeper\",{\"1\":{\"2506\":1}}],[\"sweep\",{\"1\":{\"2473\":3,\"2506\":1}}],[\"swap\",{\"1\":{\"2293\":1,\"2294\":2,\"2296\":1,\"2298\":2,\"2299\":1,\"2300\":2,\"2301\":1,\"2303\":1}}],[\"switchcase\",{\"1\":{\"3388\":2}}],[\"switch\",{\"0\":{\"2089\":1},\"1\":{\"2090\":1,\"2260\":1,\"2783\":1,\"3388\":2}}],[\"sleep\",{\"1\":{\"2868\":1,\"3093\":2,\"3175\":1,\"3238\":2,\"3341\":2,\"3342\":2}}],[\"slots\",{\"1\":{\"3085\":1,\"3086\":2,\"3087\":1}}],[\"slot\",{\"1\":{\"2014\":2}}],[\"slicetype\",{\"1\":{\"2010\":1,\"2022\":1}}],[\"slice实现原理分析\",{\"1\":{\"1728\":1}}],[\"slice扩容规则\",{\"0\":{\"1710\":1}}],[\"slice由三个元素组成\",{\"1\":{\"1652\":1}}],[\"slice\",{\"1\":{\"1649\":1,\"1717\":5,\"1729\":1,\"1871\":1,\"2009\":1,\"2037\":1,\"2206\":1}}],[\"slide\",{\"0\":{\"10\":1}}],[\"stu\",{\"1\":{\"3096\":3}}],[\"stu2\",{\"1\":{\"3078\":3}}],[\"stu1\",{\"1\":{\"3078\":3}}],[\"student\",{\"1\":{\"3075\":1,\"3078\":2,\"3096\":2}}],[\"study\",{\"1\":{\"1461\":1,\"1463\":1,\"1467\":1,\"1472\":1,\"3075\":1,\"3078\":2,\"3096\":2}}],[\"st\",{\"1\":{\"2868\":1}}],[\"storage\",{\"1\":{\"2754\":1}}],[\"stopiteration\",{\"1\":{\"3249\":2,\"3250\":1}}],[\"stopnote\",{\"1\":{\"2872\":1}}],[\"stopwait\",{\"1\":{\"2872\":1}}],[\"stopped\",{\"1\":{\"2789\":1}}],[\"stop\",{\"1\":{\"1474\":1,\"2473\":2,\"2676\":1,\"3020\":3,\"3238\":2}}],[\"style\",{\"1\":{\"2748\":1,\"3388\":7,\"3397\":1}}],[\"styles\",{\"1\":{\"1411\":1}}],[\"stylesheet\",{\"1\":{\"1411\":1}}],[\"steal\",{\"1\":{\"2584\":1}}],[\"steps\",{\"1\":{\"3419\":1,\"3423\":1,\"3428\":1}}],[\"step\",{\"0\":{\"3421\":1},\"1\":{\"3021\":1}}],[\"step3\",{\"1\":{\"1722\":1}}],[\"step2\",{\"1\":{\"1720\":1}}],[\"step1\",{\"1\":{\"1711\":1}}],[\"star\",{\"1\":{\"3388\":3}}],[\"starting\",{\"1\":{\"3256\":4}}],[\"startpc\",{\"1\":{\"2793\":1,\"2868\":1}}],[\"startswith\",{\"1\":{\"3048\":2}}],[\"starts\",{\"1\":{\"2789\":1}}],[\"startup\",{\"1\":{\"2748\":1}}],[\"startbucket\",{\"1\":{\"1866\":1}}],[\"started\",{\"1\":{\"181\":1,\"2350\":1,\"2362\":1,\"2373\":1,\"2420\":1,\"2459\":1,\"2480\":1,\"2907\":1,\"2908\":1,\"2914\":1,\"3451\":1}}],[\"start\",{\"1\":{\"174\":1,\"1473\":1,\"1477\":1,\"1526\":1,\"1866\":1,\"2493\":1,\"2504\":1,\"3019\":2,\"3238\":2,\"3325\":1}}],[\"standard风格的依赖包\",{\"1\":{\"3388\":2}}],[\"standard\",{\"1\":{\"3388\":5}}],[\"statements\",{\"1\":{\"3388\":3}}],[\"staticmethod\",{\"1\":{\"3090\":1}}],[\"status==gwaiting\",{\"1\":{\"2868\":1}}],[\"status\",{\"1\":{\"2864\":1}}],[\"stackmin\",{\"1\":{\"2793\":1}}],[\"stackmap\",{\"1\":{\"2533\":1}}],[\"stackinit\",{\"1\":{\"2789\":1}}],[\"stack+stack\",{\"1\":{\"2753\":2}}],[\"stackguardmultiplier\",{\"1\":{\"2795\":1}}],[\"stackguard1\",{\"1\":{\"2753\":1,\"2795\":2,\"2868\":1}}],[\"stackguard0\",{\"1\":{\"2753\":1,\"2795\":2,\"2868\":2}}],[\"stackguard\",{\"1\":{\"2753\":1,\"2795\":1}}],[\"stack\",{\"1\":{\"2748\":1,\"2795\":9,\"2868\":2,\"3394\":2}}],[\"stacmap\",{\"1\":{\"2495\":1}}],[\"stw\",{\"1\":{\"2473\":1,\"2481\":1,\"2488\":1,\"2498\":1,\"2677\":1,\"2679\":1,\"2721\":1,\"2722\":1}}],[\"streamresdata\",{\"1\":{\"3340\":4,\"3342\":2}}],[\"streamreqdata\",{\"1\":{\"3340\":4,\"3341\":3,\"3342\":1}}],[\"stream\",{\"1\":{\"3331\":1,\"3340\":4,\"3342\":1}}],[\"strawberry\",{\"1\":{\"3053\":4}}],[\"strict\",{\"1\":{\"3388\":1}}],[\"strip\",{\"1\":{\"3048\":1,\"3113\":1}}],[\"string有默认值\",{\"1\":{\"3286\":1,\"3297\":1}}],[\"strings\",{\"1\":{\"2891\":1}}],[\"string>\",{\"1\":{\"2071\":1,\"2072\":1}}],[\"string的特性\",{\"1\":{\"1776\":1}}],[\"string需要一个起始地址\",{\"1\":{\"1766\":1}}],[\"string底层结构\",{\"1\":{\"1765\":1}}],[\"string=`q23`\",{\"1\":{\"1763\":1}}],[\"string=\",{\"1\":{\"1760\":1}}],[\"string在go中如何定义\",{\"1\":{\"1758\":1}}],[\"string\",{\"0\":{\"1733\":1,\"1756\":1},\"1\":{\"1769\":1,\"1791\":2,\"1951\":1,\"1995\":1,\"2003\":1,\"2010\":1,\"2020\":1,\"2037\":1,\"2044\":1,\"2052\":1,\"2071\":2,\"2082\":1,\"2090\":1,\"2158\":2,\"2163\":3,\"2166\":2,\"2168\":1,\"2169\":1,\"2172\":2,\"2175\":2,\"2176\":2,\"2178\":3,\"2188\":2,\"2195\":7,\"2206\":7,\"2220\":1,\"2226\":1,\"2243\":3,\"2261\":3,\"2425\":1,\"2454\":1,\"3184\":1,\"3186\":1,\"3188\":1,\"3190\":1,\"3192\":1,\"3194\":1,\"3196\":1,\"3286\":1,\"3287\":2,\"3295\":3,\"3297\":1,\"3309\":2,\"3311\":2,\"3321\":2,\"3340\":2,\"3388\":1}}],[\"str3\",{\"1\":{\"3048\":3}}],[\"str1\",{\"1\":{\"3048\":14}}],[\"str2\",{\"1\":{\"3048\":12}}],[\"strconv\",{\"1\":{\"2891\":1}}],[\"str\",{\"1\":{\"1769\":1,\"2008\":1,\"2090\":2,\"3104\":3,\"3176\":3,\"3215\":1,\"3388\":1}}],[\"struct等内置和自定义类型称之为\",{\"1\":{\"2037\":1}}],[\"structfield\",{\"1\":{\"2014\":1,\"2206\":4}}],[\"structtype\",{\"1\":{\"2014\":1}}],[\"struct\",{\"1\":{\"1769\":1,\"1834\":1,\"1839\":1,\"1869\":1,\"1890\":1,\"1892\":1,\"1895\":1,\"1900\":3,\"1903\":1,\"1916\":1,\"1923\":1,\"1965\":1,\"1981\":2,\"1985\":4,\"2003\":1,\"2008\":1,\"2010\":1,\"2012\":1,\"2013\":1,\"2014\":2,\"2018\":2,\"2052\":1,\"2082\":1,\"2099\":1,\"2158\":1,\"2163\":1,\"2166\":1,\"2172\":1,\"2178\":1,\"2188\":1,\"2195\":1,\"2206\":1,\"2213\":1,\"2220\":1,\"2224\":2,\"2229\":1,\"2236\":1,\"2241\":1,\"2350\":1,\"2362\":1,\"2373\":1,\"2402\":1,\"2420\":1,\"2459\":1,\"2477\":1,\"2480\":1,\"2778\":2,\"2862\":1,\"2864\":2,\"2868\":1,\"2872\":1,\"2907\":1,\"2919\":1,\"3287\":1,\"3295\":1,\"3311\":1,\"3325\":1,\"3342\":1}}],[\"ssl\",{\"1\":{\"1202\":1,\"1204\":1,\"1210\":1,\"1215\":1,\"1239\":1}}],[\"ssl+http\",{\"1\":{\"1200\":1}}],[\"ssthresh\",{\"1\":{\"976\":1,\"977\":1,\"985\":1,\"992\":1,\"996\":1,\"998\":1,\"1001\":1}}],[\"snailclimb\",{\"1\":{\"1044\":1}}],[\"snd\",{\"1\":{\"1034\":1,\"1038\":1,\"1039\":1,\"1040\":1,\"1042\":1}}],[\"snmp\",{\"1\":{\"719\":1}}],[\"sayhello\",{\"1\":{\"3321\":1,\"3325\":1,\"3327\":1}}],[\"save\",{\"1\":{\"2757\":2}}],[\"sample\",{\"1\":{\"1406\":1}}],[\"sack若告知这个包已被发送过\",{\"1\":{\"918\":1}}],[\"sack是对sack进行一个扩展\",{\"1\":{\"916\":1}}],[\"sack\",{\"0\":{\"911\":1,\"915\":1}}],[\"safe\",{\"1\":{\"105\":1,\"615\":1}}],[\"smtp邮件传输\",{\"1\":{\"784\":1}}],[\"smtp\",{\"1\":{\"719\":1}}],[\"s锁就行了\",{\"1\":{\"611\":1}}],[\"s锁\",{\"1\":{\"605\":1}}],[\"should\",{\"1\":{\"3397\":1}}],[\"shorthand\",{\"1\":{\"3388\":1}}],[\"showing\",{\"1\":{\"1406\":1}}],[\"show\",{\"1\":{\"376\":1,\"3093\":2}}],[\"shit\",{\"1\":{\"3048\":2}}],[\"shadow\",{\"1\":{\"3388\":3}}],[\"sha1\",{\"1\":{\"2891\":1}}],[\"share\",{\"1\":{\"1190\":1}}],[\"shared\",{\"1\":{\"605\":1}}],[\"symbol\",{\"1\":{\"3388\":2}}],[\"symmetric\",{\"1\":{\"3065\":1}}],[\"symantec\",{\"1\":{\"1201\":1}}],[\"syscall\",{\"1\":{\"2891\":1}}],[\"syscalltick\",{\"1\":{\"2864\":1}}],[\"sysmonnote\",{\"1\":{\"2872\":1}}],[\"sysmonwait\",{\"1\":{\"2872\":1}}],[\"sysauxv\",{\"1\":{\"2783\":2}}],[\"sysargs\",{\"1\":{\"2780\":1,\"2782\":1,\"2783\":1}}],[\"sys\",{\"1\":{\"2783\":1,\"2793\":1,\"2795\":1,\"3052\":2,\"3113\":2,\"3116\":1}}],[\"systemstack\",{\"1\":{\"2793\":1,\"2795\":1}}],[\"systems\",{\"1\":{\"2748\":1}}],[\"system32\",{\"1\":{\"1469\":1}}],[\"system\",{\"1\":{\"398\":1,\"399\":1}}],[\"syn\",{\"1\":{\"744\":1,\"750\":1,\"752\":1,\"1287\":2,\"1288\":3,\"1289\":1}}],[\"sync\",{\"1\":{\"654\":1,\"2891\":1,\"3341\":1,\"3342\":2,\"3388\":1}}],[\"syntax\",{\"0\":{\"696\":1},\"1\":{\"78\":1,\"1421\":1,\"3321\":1,\"3340\":1,\"3388\":1}}],[\"sigmask\",{\"1\":{\"2789\":2}}],[\"sigsave\",{\"1\":{\"2789\":1}}],[\"signals\",{\"1\":{\"2795\":1}}],[\"signal\",{\"1\":{\"2480\":1,\"2795\":1,\"2868\":1}}],[\"si\",{\"1\":{\"2748\":1,\"2753\":2}}],[\"siz\",{\"1\":{\"2341\":1,\"2350\":1,\"2362\":1,\"2373\":1,\"2402\":1,\"2420\":1,\"2459\":1,\"2793\":2,\"2907\":1}}],[\"size=8192\",{\"1\":{\"3428\":1}}],[\"sizeof\",{\"1\":{\"1965\":1,\"1981\":2,\"1985\":2,\"2778\":2}}],[\"size\",{\"1\":{\"1916\":2,\"1932\":1,\"2008\":1,\"2014\":3,\"2206\":1,\"2761\":1,\"2795\":6}}],[\"single\",{\"1\":{\"308\":1,\"345\":1}}],[\"simple\",{\"1\":{\"32\":1}}],[\"s\",{\"1\":{\"237\":1,\"608\":1,\"1760\":2,\"1763\":2,\"1774\":4,\"2260\":2,\"2741\":3,\"2743\":1,\"2748\":1,\"2753\":1,\"2755\":1,\"2757\":1,\"2759\":1,\"2761\":1,\"2797\":1,\"3075\":1,\"3096\":3,\"3099\":2,\"3113\":2,\"3238\":4,\"3287\":1,\"3311\":1,\"3325\":1,\"3342\":6}}],[\"scoped\",{\"1\":{\"3388\":1}}],[\"scores\",{\"1\":{\"3069\":19}}],[\"schedlink形成g链表\",{\"1\":{\"2872\":1}}],[\"schedlink组成一个m空闲链表\",{\"1\":{\"2872\":1}}],[\"schedtick\",{\"1\":{\"2864\":1}}],[\"schedt\",{\"1\":{\"2839\":1,\"2872\":1}}],[\"schedule\",{\"1\":{\"2795\":1}}],[\"sched\",{\"0\":{\"2871\":1},\"1\":{\"2789\":5,\"2793\":1,\"2795\":3,\"2836\":1,\"2839\":2,\"2868\":1}}],[\"schedinit\",{\"1\":{\"2759\":1,\"2768\":1,\"2772\":1,\"2787\":1,\"2789\":2,\"2802\":1}}],[\"schema\",{\"1\":{\"180\":1,\"181\":1}}],[\"scan\",{\"1\":{\"2525\":3,\"2528\":2}}],[\"scanwork\",{\"1\":{\"2477\":1}}],[\"script\",{\"1\":{\"3388\":1}}],[\"script>\",{\"1\":{\"1411\":2}}],[\"scratch\",{\"1\":{\"1609\":1}}],[\"scikit\",{\"1\":{\"29\":1,\"32\":2}}],[\"semi\",{\"1\":{\"3388\":3}}],[\"send\",{\"1\":{\"3341\":2,\"3342\":2}}],[\"sent\",{\"1\":{\"1287\":1}}],[\"sent状态\",{\"1\":{\"795\":1}}],[\"self\",{\"1\":{\"3075\":10,\"3084\":13,\"3087\":13,\"3090\":13,\"3093\":18,\"3096\":33,\"3099\":7,\"3248\":6,\"3250\":7,\"3388\":2}}],[\"select\",{\"1\":{\"55\":1,\"83\":1,\"175\":1,\"181\":1,\"217\":1,\"218\":1,\"236\":1,\"246\":1,\"273\":1,\"516\":1,\"518\":1,\"524\":2,\"532\":1}}],[\"separator\",{\"1\":{\"2783\":1}}],[\"segmentfault\",{\"1\":{\"1882\":1}}],[\"seed\",{\"1\":{\"1834\":1,\"2014\":1}}],[\"see\",{\"1\":{\"1108\":1,\"3346\":1,\"3428\":2}}],[\"sequences\",{\"1\":{\"3388\":1}}],[\"seq=20\",{\"1\":{\"909\":1}}],[\"seq=6\",{\"1\":{\"909\":1}}],[\"seq=10\",{\"1\":{\"909\":1}}],[\"seq=1\",{\"1\":{\"909\":1}}],[\"seq=3\",{\"1\":{\"898\":3,\"909\":2,\"910\":1}}],[\"seq5收到了\",{\"1\":{\"907\":1}}],[\"seq5\",{\"1\":{\"905\":1}}],[\"seq4\",{\"1\":{\"905\":1,\"907\":1}}],[\"seq3\",{\"1\":{\"905\":1}}],[\"seq2\",{\"1\":{\"904\":1,\"914\":1}}],[\"seq1\",{\"1\":{\"903\":1}}],[\"seq\",{\"1\":{\"743\":1}}],[\"search\",{\"1\":{\"478\":1,\"3186\":1}}],[\"session\",{\"1\":{\"335\":2,\"336\":1,\"337\":1,\"338\":3,\"339\":1}}],[\"secret\",{\"1\":{\"3428\":1}}],[\"secrets\",{\"1\":{\"3428\":2,\"3431\":1}}],[\"second\",{\"1\":{\"3093\":6,\"3341\":2,\"3342\":2}}],[\"second=0\",{\"1\":{\"3093\":1}}],[\"secondary\",{\"1\":{\"214\":1}}],[\"security\",{\"1\":{\"2882\":1}}],[\"sec\",{\"1\":{\"181\":1,\"3093\":1}}],[\"service\",{\"1\":{\"1147\":1,\"3321\":1,\"3340\":1}}],[\"serveconn\",{\"1\":{\"3287\":1,\"3311\":1}}],[\"serve\",{\"1\":{\"107\":1,\"3325\":1,\"3342\":1}}],[\"serverhello\",{\"1\":{\"1222\":1}}],[\"server层来说\",{\"1\":{\"248\":1}}],[\"server\",{\"1\":{\"58\":1,\"59\":1,\"68\":1,\"111\":1,\"323\":1,\"637\":1,\"643\":1,\"688\":1,\"689\":1,\"796\":1,\"1138\":1,\"1571\":1,\"3287\":1,\"3306\":1,\"3309\":2,\"3311\":2,\"3325\":3,\"3342\":5}}],[\"serializable\",{\"1\":{\"151\":1,\"575\":1,\"592\":1}}],[\"setitem\",{\"1\":{\"3217\":1}}],[\"setattr\",{\"1\":{\"3213\":1}}],[\"settings\",{\"1\":{\"3430\":1,\"3431\":1}}],[\"setter\",{\"1\":{\"3084\":1,\"3087\":1,\"3096\":3}}],[\"setter方法\",{\"1\":{\"3084\":1}}],[\"settls\",{\"1\":{\"2755\":1}}],[\"set4\",{\"1\":{\"3062\":2}}],[\"set3\",{\"1\":{\"3062\":2,\"3063\":2,\"3065\":4}}],[\"set2\",{\"1\":{\"3062\":2,\"3063\":5,\"3065\":12}}],[\"set1\",{\"1\":{\"3062\":3,\"3063\":3,\"3065\":16}}],[\"setup\",{\"1\":{\"2485\":1,\"3428\":1}}],[\"setstring\",{\"1\":{\"2232\":2,\"2242\":1,\"2243\":1,\"2244\":1,\"2246\":1,\"2253\":1,\"2257\":1,\"2261\":1}}],[\"setname\",{\"1\":{\"2178\":2,\"2180\":3,\"2182\":1}}],[\"set\",{\"1\":{\"97\":1,\"175\":1,\"176\":1,\"177\":1,\"311\":1,\"661\":1,\"3062\":2,\"3084\":1,\"3428\":1}}],[\"svm\",{\"0\":{\"12\":1}}],[\"vuepress\",{\"1\":{\"3425\":1,\"3428\":3,\"3449\":1}}],[\"vue文件中的js代码\",{\"1\":{\"3388\":1}}],[\"vue\",{\"1\":{\"3380\":1,\"3388\":1}}],[\"void\",{\"1\":{\"3388\":2}}],[\"voice抽象方法进行了重写并给出了不同的实现版本\",{\"1\":{\"3101\":1}}],[\"voice\",{\"1\":{\"3099\":4}}],[\"voxel\",{\"0\":{\"12\":1}}],[\"version\",{\"1\":{\"3354\":1,\"3428\":1}}],[\"vet\",{\"1\":{\"2893\":1}}],[\"vendor\",{\"1\":{\"2891\":1,\"2893\":2}}],[\"v的类型则没有限制\",{\"1\":{\"1790\":1}}],[\"v是字典中值对应的数据类型\",{\"1\":{\"1789\":1}}],[\"v\",{\"0\":{\"3454\":1},\"1\":{\"465\":2,\"1640\":3,\"1656\":6,\"1670\":3,\"1673\":3,\"1680\":3,\"1687\":9,\"1702\":9,\"1789\":1,\"1799\":1,\"2232\":2,\"2242\":1,\"2243\":4,\"2244\":1,\"2249\":1,\"2253\":2,\"2257\":1,\"2260\":12,\"2261\":4,\"2780\":3,\"3342\":1}}],[\"valid\",{\"1\":{\"3090\":2,\"3388\":2}}],[\"val\",{\"1\":{\"2783\":2,\"3028\":2,\"3052\":2}}],[\"valueerror\",{\"1\":{\"2260\":1,\"3113\":1}}],[\"valueof\",{\"1\":{\"2232\":1,\"2233\":1,\"2234\":1,\"2240\":1,\"2253\":1}}],[\"value而已\",{\"1\":{\"2115\":1}}],[\"value之间用\",{\"1\":{\"1559\":1}}],[\"value形式更详细地说明报文\",{\"1\":{\"1527\":1}}],[\"value\",{\"0\":{\"2185\":1,\"2227\":1},\"1\":{\"187\":3,\"1181\":1,\"1559\":2,\"1871\":1,\"1913\":1,\"2095\":1,\"2097\":1,\"2098\":1,\"2115\":1,\"2116\":1,\"2118\":1,\"2120\":2,\"2186\":2,\"2203\":1,\"2228\":1,\"2229\":1,\"2232\":2,\"2234\":2,\"2239\":3,\"2240\":1,\"2241\":1,\"2243\":1,\"2244\":1,\"2246\":2,\"2260\":7,\"2261\":1,\"2356\":1,\"2369\":1,\"2390\":1,\"3397\":1}}],[\"values\",{\"1\":{\"153\":1,\"237\":1,\"1772\":4,\"3397\":1}}],[\"vars\",{\"1\":{\"3388\":4}}],[\"varp\",{\"1\":{\"2459\":1}}],[\"var\",{\"1\":{\"1631\":1,\"1640\":1,\"1656\":4,\"1670\":2,\"1673\":2,\"1680\":2,\"1717\":1,\"1760\":1,\"1763\":1,\"1791\":1,\"1892\":1,\"1951\":1,\"2040\":1,\"2047\":1,\"2058\":1,\"2075\":1,\"2090\":1,\"2222\":1,\"2260\":1,\"2272\":1,\"2309\":2,\"2320\":1,\"2402\":1,\"2427\":1,\"2454\":3,\"2477\":1,\"2480\":1,\"2778\":3,\"2780\":1,\"3286\":1,\"3297\":1,\"3388\":20}}],[\"variables\",{\"1\":{\"376\":1,\"3431\":1}}],[\"varchar\",{\"1\":{\"237\":1,\"251\":2}}],[\"view\",{\"1\":{\"169\":1}}],[\"via\",{\"0\":{\"12\":1}}],[\"v1\",{\"1\":{\"158\":1}}],[\"v3\",{\"1\":{\"3428\":2}}],[\"v3的值是2\",{\"1\":{\"158\":1}}],[\"v3的值也是2\",{\"1\":{\"156\":1}}],[\"v3是2\",{\"1\":{\"157\":1}}],[\"v3也都是2\",{\"1\":{\"155\":1}}],[\"v2值是1\",{\"1\":{\"158\":1}}],[\"v2是1\",{\"1\":{\"157\":1}}],[\"v2的值是2\",{\"1\":{\"156\":1}}],[\"v2\",{\"1\":{\"155\":1,\"1811\":1,\"1813\":1,\"1817\":1,\"3428\":1}}],[\"guard\",{\"1\":{\"3388\":1}}],[\"guido\",{\"1\":{\"3177\":1}}],[\"guintptr\",{\"1\":{\"2795\":1,\"2838\":1,\"2862\":1,\"2864\":2,\"2872\":2}}],[\"g的状态值\",{\"1\":{\"2868\":1}}],[\"gscanpreempted\",{\"1\":{\"2868\":1}}],[\"gscanwaiting\",{\"1\":{\"2868\":1}}],[\"gscansyscall\",{\"1\":{\"2868\":1}}],[\"gscanrunning\",{\"1\":{\"2868\":1}}],[\"gscanrunnable\",{\"1\":{\"2868\":1}}],[\"gscan\",{\"1\":{\"2868\":6}}],[\"gsyscall状态\",{\"1\":{\"2868\":1}}],[\"gsyscall\",{\"1\":{\"2868\":2}}],[\"gdb\",{\"1\":{\"2868\":1}}],[\"gdead\",{\"1\":{\"2793\":3,\"2868\":1}}],[\"gmoribund\",{\"1\":{\"2868\":2}}],[\"gwaiting状态\",{\"1\":{\"2868\":1}}],[\"gwaiting\",{\"1\":{\"2868\":2}}],[\"gfree\",{\"1\":{\"2864\":1}}],[\"gfget\",{\"1\":{\"2793\":1}}],[\"g启动函数包含runtime\",{\"1\":{\"2793\":1}}],[\"gtrackingperiod\",{\"1\":{\"2793\":1}}],[\"g列表等待重复利用\",{\"1\":{\"2793\":1}}],[\"g列表中\",{\"1\":{\"2793\":1}}],[\"g列表中获取一个g对象\",{\"1\":{\"2793\":1}}],[\"g在运行结束后会重新放入dead\",{\"1\":{\"2793\":1}}],[\"g加入到队列中\",{\"1\":{\"2789\":1}}],[\"g0的最大栈内存地址\",{\"1\":{\"2868\":1}}],[\"g0\",{\"1\":{\"2753\":2,\"2756\":2,\"2757\":6,\"2792\":1,\"2795\":2,\"2798\":1,\"2827\":1,\"2829\":1,\"2831\":4,\"2849\":1,\"2862\":2}}],[\"gpreempted\",{\"1\":{\"2868\":1}}],[\"gpm协程调度模型原理及结构分析\",{\"1\":{\"2818\":1}}],[\"gpm\",{\"0\":{\"2814\":1,\"2854\":1},\"1\":{\"2855\":1,\"2857\":1}}],[\"gpm调度过程源码分析\",{\"1\":{\"2731\":1,\"2817\":1}}],[\"gp\",{\"1\":{\"2793\":2}}],[\"gphase\",{\"1\":{\"2502\":1}}],[\"greeter\",{\"1\":{\"3321\":1,\"3340\":1,\"3342\":3}}],[\"grey\",{\"1\":{\"2629\":1}}],[\"grpc的\",{\"1\":{\"3331\":1}}],[\"grpc\",{\"0\":{\"3259\":1,\"3315\":1,\"3349\":1},\"1\":{\"3268\":1,\"3269\":1,\"3325\":2,\"3327\":2,\"3341\":3,\"3342\":3,\"3346\":4,\"3352\":1,\"3368\":2}}],[\"grape\",{\"1\":{\"3053\":3}}],[\"grade\",{\"0\":{\"12\":1},\"1\":{\"3096\":11}}],[\"grunning状态\",{\"1\":{\"2868\":1}}],[\"grunning\",{\"1\":{\"2868\":2}}],[\"grunnable\",{\"1\":{\"2793\":1,\"2868\":2}}],[\"g\",{\"0\":{\"2867\":1},\"1\":{\"2345\":1,\"2753\":4,\"2755\":1,\"2757\":2,\"2769\":1,\"2789\":7,\"2790\":2,\"2793\":11,\"2795\":24,\"2803\":2,\"2828\":1,\"2829\":1,\"2833\":1,\"2837\":5,\"2838\":1,\"2840\":2,\"2841\":1,\"2843\":1,\"2856\":1,\"2859\":1,\"2862\":9,\"2868\":4,\"2869\":1,\"3256\":3,\"3325\":3,\"3383\":1,\"3388\":6,\"3428\":1}}],[\"g2\",{\"1\":{\"2289\":1}}],[\"gcopystack\",{\"1\":{\"2868\":1}}],[\"gcoff\",{\"1\":{\"2502\":1,\"2505\":1}}],[\"gcinit\",{\"1\":{\"2789\":1}}],[\"gc标记\",{\"1\":{\"2645\":1}}],[\"gcdrainn中\",{\"1\":{\"2559\":1}}],[\"gcdrain和runtime\",{\"1\":{\"2559\":1}}],[\"gcdatamask\",{\"1\":{\"2532\":1}}],[\"gcdata\",{\"1\":{\"2008\":1}}],[\"gcwaiting\",{\"1\":{\"2872\":1}}],[\"gcw\",{\"1\":{\"2554\":1,\"2555\":1}}],[\"gcbssmask\",{\"1\":{\"2532\":1}}],[\"gcblackenenabled\",{\"1\":{\"2491\":1,\"2501\":1}}],[\"gcbackgroundmode\",{\"1\":{\"2470\":1,\"2473\":1,\"2484\":1}}],[\"gcmarkbits\",{\"1\":{\"2546\":1,\"2548\":1,\"2550\":1,\"2551\":1,\"2552\":1}}],[\"gcmarktermination\",{\"1\":{\"2499\":1}}],[\"gcmark\",{\"1\":{\"2490\":1}}],[\"gcmode\",{\"1\":{\"2473\":1,\"2480\":1}}],[\"gcphase\",{\"1\":{\"2490\":1,\"2499\":1}}],[\"gccontrollerstate\",{\"1\":{\"2477\":2}}],[\"gccontroller\",{\"1\":{\"2475\":1,\"2476\":1,\"2477\":1,\"2478\":1,\"2494\":1,\"2584\":1}}],[\"gc全程需要stw\",{\"1\":{\"2472\":1}}],[\"gcforceblockmode\",{\"1\":{\"2472\":1,\"2473\":1}}],[\"gcforcemode\",{\"1\":{\"2471\":1,\"2473\":1}}],[\"gc\",{\"0\":{\"2463\":1,\"2482\":1,\"2566\":1,\"2591\":1,\"2592\":1},\"1\":{\"2008\":1,\"2468\":1,\"2473\":3,\"2475\":1,\"2481\":3,\"2484\":1,\"2486\":1,\"2490\":2,\"2491\":1,\"2497\":1,\"2506\":2,\"2508\":1,\"2525\":1,\"2559\":1,\"2567\":2,\"2579\":1,\"2581\":2,\"2583\":1,\"2628\":1,\"2645\":1,\"2666\":2,\"2704\":1,\"2726\":1,\"2787\":1,\"2793\":1,\"2868\":4}}],[\"git\",{\"1\":{\"3428\":1,\"3444\":1,\"3447\":2}}],[\"github\",{\"0\":{\"3401\":1},\"1\":{\"3368\":1,\"3388\":1,\"3403\":1,\"3408\":1,\"3425\":1,\"3426\":1,\"3428\":8,\"3437\":1,\"3438\":1,\"3440\":1,\"3441\":1,\"3443\":1,\"3447\":2,\"3451\":1,\"3452\":1}}],[\"gitee\",{\"1\":{\"1044\":1}}],[\"given\",{\"1\":{\"3365\":1}}],[\"gidle\",{\"1\":{\"2793\":1,\"2868\":1}}],[\"gin框架\",{\"1\":{\"1598\":1}}],[\"ghaction\",{\"1\":{\"3428\":2}}],[\"gh\",{\"1\":{\"1292\":1,\"3428\":2}}],[\"goland\",{\"1\":{\"3369\":1}}],[\"golang单元测试程序\",{\"1\":{\"2882\":1}}],[\"golang核心实现都在这里\",{\"1\":{\"2882\":1}}],[\"golang文档说明\",{\"1\":{\"2882\":1}}],[\"golang每个版本的功能列表归档文件\",{\"1\":{\"2882\":1}}],[\"golang官方作者清单\",{\"1\":{\"2882\":1}}],[\"golang并发调度的gmp模型\",{\"1\":{\"2820\":1}}],[\"golang并发编程\",{\"1\":{\"2731\":1,\"2817\":1,\"2818\":1}}],[\"golang调度器gpm原理与调度全分析\",{\"1\":{\"2819\":1}}],[\"golang中gc的三色标记\",{\"1\":{\"2549\":1}}],[\"golang中垃圾回收支持三种模式\",{\"1\":{\"2469\":1}}],[\"golang中map底层b值的计算逻辑\",{\"1\":{\"1883\":1}}],[\"golang源码系列\",{\"1\":{\"1728\":1}}],[\"golang\",{\"1\":{\"1609\":1,\"1880\":1,\"1886\":1,\"1924\":1,\"1989\":1,\"2036\":1,\"2095\":1,\"2154\":1,\"2200\":1,\"2327\":1,\"2330\":1,\"2515\":1,\"2517\":1,\"2732\":1,\"2733\":1,\"2816\":1,\"2856\":1,\"2898\":1,\"3342\":1,\"3368\":3}}],[\"gofmt\",{\"1\":{\"2893\":1}}],[\"goidgen\",{\"1\":{\"2872\":1}}],[\"gobuf\",{\"1\":{\"2868\":1}}],[\"gogetenv\",{\"1\":{\"2789\":1}}],[\"gomaxprocs\",{\"1\":{\"2789\":2}}],[\"goenvs\",{\"1\":{\"2789\":1}}],[\"goexit\",{\"1\":{\"2457\":1}}],[\"goargs\",{\"1\":{\"2789\":1}}],[\"go程序的性能分析工具\",{\"1\":{\"2893\":1}}],[\"go程序启动过程\",{\"1\":{\"2809\":1}}],[\"go程序启动流程\",{\"0\":{\"2728\":1}}],[\"go程序设计语言\",{\"1\":{\"1590\":1}}],[\"goto\",{\"1\":{\"2337\":1,\"2402\":1,\"2417\":1,\"2418\":1}}],[\"go1\",{\"1\":{\"2336\":1,\"2399\":1,\"2455\":1,\"2885\":18,\"2891\":1,\"3354\":1}}],[\"goroutine的执行提供了底层线程能力支持\",{\"1\":{\"2858\":1}}],[\"goroutine\",{\"1\":{\"2289\":1,\"2345\":1,\"2366\":1,\"2757\":1,\"2761\":1,\"2762\":1,\"2769\":1,\"2772\":1,\"2789\":1,\"2848\":1,\"2849\":2,\"2856\":2,\"2862\":1,\"2868\":1,\"2900\":1,\"2906\":1,\"2930\":1}}],[\"go之聊聊struct的内存对齐\",{\"1\":{\"1925\":1}}],[\"go的map就是利用这种方式解决\",{\"1\":{\"1816\":1}}],[\"go的源文件总是按uft\",{\"1\":{\"1757\":1}}],[\"go语言包依赖工具\",{\"1\":{\"2893\":1}}],[\"go语言必知\",{\"0\":{\"2879\":1}}],[\"go语言垃圾回收采用标记\",{\"1\":{\"2466\":1}}],[\"go语言中函数作为变量\",{\"1\":{\"2186\":1}}],[\"go语言中的map通过与运算找桶的编号\",{\"1\":{\"1876\":1}}],[\"go语言中map负载因子默认是6\",{\"1\":{\"1846\":1}}],[\"go语言中map是散列表的引用\",{\"1\":{\"1788\":1}}],[\"go语言标准库学习之strings\",{\"1\":{\"1783\":1}}],[\"go中的map\",{\"0\":{\"1832\":1}}],[\"go中的string被定义为只读类型\",{\"1\":{\"1777\":1}}],[\"go中把数组看作是值传递\",{\"1\":{\"1639\":1}}],[\"go内置的函数len可以返回数组中元素个数\",{\"1\":{\"1630\":1}}],[\"go源码阅读\",{\"1\":{\"1625\":1}}],[\"go数据结构和基础\",{\"1\":{\"1611\":1}}],[\"go\",{\"0\":{\"2463\":1,\"2749\":1,\"3459\":1},\"1\":{\"1587\":1,\"1598\":1,\"1607\":1,\"1608\":1,\"1623\":1,\"1624\":1,\"1642\":1,\"1729\":1,\"1782\":1,\"1887\":1,\"1913\":1,\"1923\":1,\"1990\":1,\"1994\":1,\"2004\":1,\"2015\":1,\"2038\":1,\"2097\":2,\"2120\":1,\"2156\":1,\"2212\":1,\"2268\":1,\"2276\":1,\"2288\":1,\"2291\":1,\"2296\":1,\"2307\":1,\"2332\":1,\"2396\":1,\"2514\":1,\"2532\":1,\"2608\":1,\"2726\":1,\"2730\":1,\"2735\":1,\"2740\":1,\"2748\":1,\"2750\":1,\"2753\":1,\"2755\":1,\"2757\":1,\"2759\":1,\"2761\":1,\"2764\":1,\"2771\":2,\"2778\":1,\"2780\":1,\"2783\":1,\"2786\":1,\"2795\":2,\"2809\":1,\"2822\":1,\"2837\":1,\"2877\":1,\"2884\":1,\"2888\":1,\"2891\":2,\"2893\":3,\"3286\":1,\"3287\":1,\"3295\":1,\"3297\":1,\"3301\":1,\"3306\":1,\"3309\":1,\"3321\":3,\"3323\":1,\"3340\":1,\"3341\":2,\"3342\":2,\"3344\":1,\"3346\":4,\"3352\":1,\"3354\":2,\"3356\":1,\"3367\":1,\"3368\":6},\"2\":{\"1626\":1,\"1732\":1,\"1785\":1,\"1884\":1,\"1919\":1,\"1987\":1,\"2034\":1,\"2093\":1,\"2152\":1,\"2198\":1,\"2262\":1,\"2328\":1,\"2462\":1,\"2590\":1,\"2727\":1,\"2813\":1,\"2878\":1,\"2896\":1,\"2964\":1}}],[\"good\",{\"1\":{\"3048\":1}}],[\"goodbye\",{\"1\":{\"3034\":1}}],[\"goos\",{\"1\":{\"2755\":1}}],[\"goole\",{\"1\":{\"1263\":1,\"1272\":1,\"1279\":1}}],[\"google\",{\"1\":{\"1248\":1,\"1250\":2,\"3342\":1,\"3368\":2}}],[\"godaddy\",{\"1\":{\"1201\":1}}],[\"generator\",{\"1\":{\"3388\":3}}],[\"generate\",{\"1\":{\"3346\":1,\"3365\":1}}],[\"gen\",{\"1\":{\"3346\":1,\"3368\":3}}],[\"gender\",{\"1\":{\"3087\":2}}],[\"gender属性\",{\"1\":{\"3087\":1}}],[\"genqueue\",{\"1\":{\"2868\":2}}],[\"genu\",{\"1\":{\"2753\":1}}],[\"genmask\",{\"1\":{\"1315\":1}}],[\"getting\",{\"1\":{\"3451\":1}}],[\"getter方法\",{\"1\":{\"3084\":2}}],[\"getstreamserver\",{\"1\":{\"3342\":1}}],[\"getstream\",{\"1\":{\"3340\":1,\"3341\":1,\"3342\":1}}],[\"getsizeof\",{\"1\":{\"3052\":2}}],[\"getitem\",{\"1\":{\"3216\":1}}],[\"getattribute\",{\"1\":{\"3212\":1}}],[\"getattr\",{\"1\":{\"3211\":1}}],[\"get方法也是通过键获取对应的值但是可以设置默认值\",{\"1\":{\"3069\":1}}],[\"getcallersp\",{\"1\":{\"2795\":1}}],[\"getcallerpc\",{\"1\":{\"2793\":1,\"2795\":1}}],[\"getg\",{\"1\":{\"2789\":1,\"2793\":3,\"2795\":2}}],[\"getpagesize\",{\"1\":{\"2786\":1}}],[\"getncpu\",{\"1\":{\"2786\":1}}],[\"getname\",{\"1\":{\"2178\":2,\"2180\":3,\"2184\":1,\"2188\":3,\"2193\":1,\"2195\":5}}],[\"getfunc\",{\"1\":{\"2195\":8}}],[\"get是请求方法\",{\"1\":{\"1546\":1}}],[\"get\",{\"1\":{\"1169\":1,\"1171\":1,\"1175\":4,\"1176\":2,\"1177\":1,\"1534\":1,\"1538\":1,\"1545\":1,\"1574\":1,\"2755\":1,\"2757\":1,\"3069\":2}}],[\"get与post的区别\",{\"0\":{\"1168\":1}}],[\"geektime\",{\"1\":{\"56\":1}}],[\"gzip\",{\"1\":{\"1167\":1,\"2891\":1}}],[\"gay\",{\"1\":{\"3087\":2}}],[\"garbage\",{\"0\":{\"2592\":1}}],[\"gateway\",{\"1\":{\"1144\":1,\"1318\":1}}],[\"gamma=2\",{\"1\":{\"22\":1}}],[\"glist\",{\"1\":{\"2864\":1}}],[\"glioma\",{\"0\":{\"12\":1}}],[\"globl\",{\"1\":{\"2763\":1}}],[\"globals\",{\"1\":{\"3388\":3}}],[\"globalsign\",{\"1\":{\"1201\":1}}],[\"global\",{\"1\":{\"311\":1,\"313\":1,\"3388\":3,\"3394\":4}}],[\"gg\",{\"1\":{\"237\":1}}],[\"home\",{\"1\":{\"3238\":3}}],[\"home=timmer\",{\"1\":{\"3238\":1}}],[\"hour\",{\"1\":{\"3093\":7}}],[\"hour=0\",{\"1\":{\"3093\":1}}],[\"holds\",{\"1\":{\"2748\":1}}],[\"host\",{\"1\":{\"1153\":1,\"1292\":1,\"1559\":2,\"1560\":1,\"1562\":2,\"1568\":2}}],[\"hmap\",{\"1\":{\"1834\":1,\"1847\":1,\"1848\":3,\"1866\":1}}],[\"hi\",{\"1\":{\"2158\":3,\"2163\":2,\"2166\":3,\"2169\":1,\"2172\":7,\"2175\":1,\"2178\":3,\"2753\":1,\"2795\":5}}],[\"hiter\",{\"1\":{\"1866\":1}}],[\"hidden的节点会出现在render树上\",{\"1\":{\"1429\":1}}],[\"high\",{\"0\":{\"12\":1}}],[\"h\",{\"1\":{\"493\":1,\"1850\":1,\"1866\":4}}],[\"hanlder\",{\"1\":{\"3301\":2,\"3306\":1,\"3309\":2}}],[\"handler\",{\"1\":{\"2795\":1,\"3287\":1,\"3301\":1,\"3309\":1,\"3311\":1}}],[\"handlers\",{\"1\":{\"2795\":1}}],[\"handle\",{\"1\":{\"2795\":1,\"3388\":1}}],[\"handleasyncevent\",{\"1\":{\"2793\":1}}],[\"half\",{\"1\":{\"3090\":5}}],[\"hardcoded\",{\"1\":{\"2868\":1}}],[\"has\",{\"1\":{\"2480\":1,\"3087\":1,\"3116\":1}}],[\"hasher\",{\"1\":{\"2014\":1}}],[\"hashing\",{\"1\":{\"2014\":1}}],[\"hash和equal\",{\"1\":{\"1868\":1}}],[\"hash0\",{\"1\":{\"1834\":1}}],[\"hash值与m\",{\"1\":{\"1802\":1}}],[\"hashmap\",{\"0\":{\"1797\":1}}],[\"hash\",{\"0\":{\"464\":1},\"1\":{\"441\":1,\"463\":1,\"465\":1,\"1799\":1,\"1801\":1,\"1802\":1,\"1834\":1,\"1869\":1,\"1900\":1,\"2008\":2,\"2014\":2,\"2224\":1,\"2891\":1}}],[\"have\",{\"0\":{\"696\":1},\"1\":{\"78\":1}}],[\"hel\",{\"1\":{\"3048\":1}}],[\"helloreply\",{\"1\":{\"3321\":2,\"3325\":2}}],[\"hellorequest\",{\"1\":{\"3321\":2,\"3325\":1,\"3327\":1}}],[\"helloservicer\",{\"1\":{\"3309\":2}}],[\"helloservicename\",{\"1\":{\"3301\":1,\"3306\":1,\"3309\":1}}],[\"helloservicestub\",{\"1\":{\"3295\":4}}],[\"helloservice\",{\"1\":{\"3286\":1,\"3287\":4,\"3295\":1,\"3301\":1,\"3303\":2,\"3306\":1,\"3307\":1,\"3311\":3}}],[\"hello\",{\"0\":{\"2821\":1},\"1\":{\"289\":1,\"2425\":1,\"2454\":1,\"2822\":1,\"2823\":1,\"2851\":1,\"3032\":1,\"3048\":11,\"3053\":4,\"3286\":1,\"3287\":2,\"3289\":1,\"3293\":1,\"3295\":2,\"3297\":1,\"3309\":1,\"3311\":2,\"3323\":1,\"3325\":1}}],[\"he\",{\"1\":{\"3048\":1}}],[\"hex等\",{\"1\":{\"2891\":1}}],[\"heaparena\",{\"1\":{\"2536\":1,\"2544\":2}}],[\"heap\",{\"1\":{\"2419\":1,\"2420\":1,\"2459\":1,\"2891\":1}}],[\"head\",{\"1\":{\"1575\":1}}],[\"header\",{\"1\":{\"1181\":1,\"1527\":1,\"1530\":2,\"1534\":2,\"2007\":1}}],[\"here\",{\"1\":{\"1\":1}}],[\"h$ip\",{\"1\":{\"63\":1}}],[\"http请求等\",{\"1\":{\"3275\":1}}],[\"http请求格式\",{\"1\":{\"1257\":1}}],[\"http1\",{\"1\":{\"1511\":1,\"1512\":1}}],[\"http协议的请求报文和响应报文的结构基本相同\",{\"1\":{\"1525\":1}}],[\"http协议\",{\"0\":{\"1453\":1}}],[\"http协议里的各类请求方法\",{\"1\":{\"1183\":1}}],[\"http与https有哪些区别\",{\"0\":{\"1199\":1}}],[\"http的优缺点是哪些\",{\"0\":{\"1178\":1}}],[\"http的状态码有哪些\",{\"0\":{\"1075\":1}}],[\"http常见的字段有哪些\",{\"0\":{\"1149\":1}}],[\"http是基于tcp协议进行传输的\",{\"1\":{\"1282\":1}}],[\"http是一种在计算机世界里专门在两点之间传输文字\",{\"1\":{\"1074\":1}}],[\"http是什么\",{\"0\":{\"1063\":1}}],[\"http篇\",{\"0\":{\"1062\":1}}],[\"http\",{\"0\":{\"1455\":1,\"1522\":1},\"1\":{\"719\":1,\"783\":1,\"1064\":1,\"1076\":1,\"1170\":1,\"1173\":1,\"1174\":1,\"1175\":1,\"1177\":1,\"1181\":1,\"1200\":1,\"1202\":2,\"1203\":1,\"1204\":2,\"1258\":1,\"1301\":1,\"1454\":1,\"1463\":1,\"1467\":1,\"1472\":1,\"1483\":1,\"1490\":1,\"1491\":1,\"1498\":2,\"1501\":2,\"1507\":1,\"1510\":1,\"1512\":1,\"1515\":1,\"1523\":1,\"1530\":1,\"1532\":1,\"1534\":1,\"1540\":1,\"1541\":1,\"1545\":1,\"1546\":1,\"1550\":1,\"1555\":1,\"1560\":2,\"1568\":1,\"1569\":1,\"1570\":1,\"3388\":1}}],[\"https是如何建立起来的\",{\"0\":{\"1209\":1}}],[\"https是如何解决http的不安全风险\",{\"0\":{\"1205\":1}}],[\"https技术\",{\"1\":{\"1198\":1}}],[\"https技术进行加密\",{\"1\":{\"1193\":1}}],[\"https\",{\"1\":{\"28\":1,\"32\":1,\"719\":1,\"783\":1,\"805\":1,\"1044\":1,\"1046\":1,\"1048\":1,\"1050\":1,\"1052\":1,\"1054\":1,\"1056\":1,\"1058\":1,\"1059\":1,\"1169\":1,\"1190\":1,\"1200\":1,\"1201\":1,\"1202\":2,\"1203\":1,\"1204\":2,\"1214\":1,\"1292\":1,\"1301\":1,\"1882\":1,\"3255\":1,\"3317\":1,\"3318\":1,\"3346\":1,\"3347\":1,\"3352\":1,\"3375\":1,\"3388\":1,\"3428\":2,\"3437\":1,\"3438\":1,\"3447\":1,\"3451\":1,\"3452\":1}}],[\"html模板引擎\",{\"1\":{\"2891\":1}}],[\"html标记分为开始标记和结束标记\",{\"1\":{\"1404\":1}}],[\"html\",{\"1\":{\"28\":1,\"1054\":1,\"1058\":1,\"1059\":1,\"1164\":1,\"1169\":1,\"1255\":1,\"2891\":1,\"3388\":2,\"3451\":1}}],[\"octal\",{\"1\":{\"3388\":2}}],[\"ome\",{\"1\":{\"3238\":1}}],[\"overrides\",{\"1\":{\"3388\":1}}],[\"override\",{\"1\":{\"3098\":1}}],[\"overflow\",{\"1\":{\"1838\":1,\"1839\":1}}],[\"obj\",{\"1\":{\"3388\":1}}],[\"object\",{\"1\":{\"3075\":1,\"3084\":1,\"3087\":2,\"3090\":1,\"3093\":1,\"3096\":1,\"3099\":1,\"3273\":1,\"3388\":8}}],[\"objdump\",{\"1\":{\"2893\":1}}],[\"o提供了一些基本的接口\",{\"1\":{\"2891\":1}}],[\"o中查询g的时间\",{\"1\":{\"2872\":1}}],[\"org\",{\"1\":{\"3342\":1,\"3368\":2,\"3375\":1,\"3388\":1}}],[\"orange\",{\"1\":{\"3058\":1}}],[\"ordinary\",{\"1\":{\"2748\":1}}],[\"or\",{\"1\":{\"2239\":1,\"3048\":2,\"3062\":1}}],[\"origin\",{\"1\":{\"1470\":1}}],[\"output\",{\"1\":{\"3365\":1}}],[\"out=\",{\"1\":{\"3346\":1}}],[\"out=plugins=grpc\",{\"1\":{\"3323\":1}}],[\"outter\",{\"1\":{\"3240\":1}}],[\"out\",{\"1\":{\"2206\":1,\"3053\":1,\"3346\":1}}],[\"our\",{\"1\":{\"1406\":1}}],[\"oserror\",{\"1\":{\"3113\":1}}],[\"osstack\",{\"1\":{\"2795\":4}}],[\"os\",{\"1\":{\"1893\":1,\"1894\":1,\"1895\":1,\"1904\":1,\"1905\":1,\"1906\":2,\"2040\":2,\"2041\":1,\"2044\":1,\"2047\":2,\"2048\":1,\"2049\":1,\"2055\":1,\"2058\":1,\"2060\":1,\"2062\":1,\"2068\":1,\"2075\":1,\"2078\":1,\"2090\":2,\"2783\":1,\"2786\":1,\"2891\":1,\"3113\":1}}],[\"osinit\",{\"1\":{\"2759\":1,\"2767\":1,\"2785\":1,\"2786\":1,\"2789\":1,\"2801\":1}}],[\"osi模型或者tcp\",{\"0\":{\"705\":1}}],[\"osi\",{\"0\":{\"703\":1}}],[\"old\",{\"1\":{\"3428\":1}}],[\"oldpackagetest\",{\"1\":{\"3342\":1}}],[\"oldp\",{\"1\":{\"2862\":1}}],[\"oldoverflow\",{\"1\":{\"1839\":1}}],[\"oldbuckets置为nil\",{\"1\":{\"1852\":1}}],[\"oldbuckets指向旧桶\",{\"1\":{\"1848\":1}}],[\"oldbuckets\",{\"1\":{\"1830\":1,\"1834\":1}}],[\"oldcap>1024\",{\"1\":{\"1715\":1}}],[\"oldcap<1024\",{\"1\":{\"1714\":1}}],[\"oldcap\",{\"1\":{\"1713\":1,\"1717\":5}}],[\"ops\",{\"1\":{\"3388\":2}}],[\"operator\",{\"1\":{\"3388\":2}}],[\"operators\",{\"1\":{\"3388\":2}}],[\"opener=none\",{\"1\":{\"3129\":1}}],[\"open函数\",{\"1\":{\"3127\":1}}],[\"opendefer\",{\"1\":{\"2459\":1}}],[\"open\",{\"1\":{\"1893\":1,\"1904\":1,\"2040\":1,\"2047\":1,\"2058\":1,\"2075\":1,\"2455\":1,\"2963\":2,\"3113\":1,\"3116\":2,\"3119\":1,\"3129\":1,\"3173\":1,\"3175\":3,\"3176\":1,\"3177\":2}}],[\"openresty\",{\"1\":{\"1460\":1,\"1467\":1,\"1472\":1}}],[\"option\",{\"1\":{\"3321\":1,\"3340\":1,\"3365\":1}}],[\"options\",{\"1\":{\"1580\":1,\"3365\":1,\"3380\":1,\"3428\":1}}],[\"other\",{\"1\":{\"1108\":1}}],[\"ok\",{\"1\":{\"1078\":1,\"1501\":1,\"1555\":1,\"1556\":1,\"1878\":2,\"2040\":1,\"2047\":1,\"2058\":1,\"2075\":1,\"2755\":1,\"2789\":2}}],[\"okr\",{\"0\":{\"2\":1},\"1\":{\"8\":1}}],[\"o操作\",{\"1\":{\"496\":1,\"2868\":1}}],[\"only\",{\"1\":{\"3104\":1}}],[\"one=1\",{\"1\":{\"3069\":1}}],[\"one\",{\"1\":{\"2018\":1,\"3388\":2,\"3397\":1}}],[\"on\",{\"1\":{\"377\":1,\"381\":1,\"2182\":1,\"3365\":1,\"3388\":1,\"3411\":1,\"3413\":1,\"3419\":1,\"3428\":2}}],[\"o\",{\"1\":{\"200\":1,\"205\":2,\"384\":1,\"497\":2}}],[\"oom\",{\"1\":{\"69\":1}}],[\"off\",{\"1\":{\"3388\":1}}],[\"offset\",{\"1\":{\"1866\":1,\"2868\":3}}],[\"of\",{\"0\":{\"12\":1},\"1\":{\"1916\":3,\"2014\":3,\"2216\":1,\"2236\":1,\"2237\":2,\"2241\":1,\"2244\":1,\"2249\":1,\"2250\":1,\"2298\":1,\"2350\":1,\"2362\":1,\"2373\":1,\"2420\":1,\"2480\":2,\"2748\":1,\"2868\":1,\"3053\":1,\"3388\":1,\"3397\":1}}],[\"项目配置为自己\",{\"1\":{\"3440\":1}}],[\"项目进行打包并部署\",{\"1\":{\"3425\":1}}],[\"项目\",{\"1\":{\"7\":1,\"1597\":1,\"1619\":1}}],[\"阅读大型网站技术架构\",{\"1\":{\"5\":1}}],[\"pnpm\",{\"1\":{\"3428\":5}}],[\"png\",{\"1\":{\"791\":1,\"1292\":1,\"1407\":1,\"2866\":1,\"2870\":1,\"2874\":1,\"3360\":1,\"3363\":1,\"3366\":1}}],[\"pb\",{\"1\":{\"3344\":1}}],[\"pd\",{\"1\":{\"3321\":1}}],[\"pdead\",{\"1\":{\"2864\":1}}],[\"pets\",{\"1\":{\"3099\":2}}],[\"pet\",{\"1\":{\"3099\":5}}],[\"pear\",{\"1\":{\"3053\":4}}],[\"pep\",{\"1\":{\"2978\":1,\"3075\":1}}],[\"permission\",{\"1\":{\"3447\":1}}],[\"permanently\",{\"1\":{\"1102\":1}}],[\"perimeter\",{\"1\":{\"3090\":4}}],[\"personal\",{\"1\":{\"3430\":1}}],[\"person\",{\"1\":{\"3058\":5,\"3084\":7,\"3087\":7,\"3096\":3}}],[\"per\",{\"1\":{\"2757\":2,\"3388\":3}}],[\"python提供了re模块来支持正则表达式相关操作\",{\"1\":{\"3179\":1}}],[\"python\",{\"0\":{\"3461\":1},\"1\":{\"3103\":1,\"3218\":1},\"2\":{\"3206\":1,\"3258\":1}}],[\"python从语法层面并没有像java或c\",{\"1\":{\"3101\":1}}],[\"python并没有从语法上严格保证私有属性或方法的私密性\",{\"1\":{\"3080\":1}}],[\"python程序设计\",{\"1\":{\"3078\":1,\"3096\":1}}],[\"python中的集合跟数学上的集合是一致的\",{\"1\":{\"3060\":1}}],[\"python中可以处理任意大小的整数\",{\"1\":{\"2968\":1}}],[\"py\",{\"1\":{\"3031\":1,\"3033\":1,\"3035\":1,\"3040\":1,\"3042\":1,\"3124\":1}}],[\"py文件中定义了两个同名函数\",{\"1\":{\"3030\":1}}],[\"pypi\",{\"1\":{\"32\":1}}],[\"pprof\",{\"1\":{\"2893\":1}}],[\"plusplus\",{\"1\":{\"3388\":1}}],[\"plugins\",{\"1\":{\"3346\":1,\"3388\":1}}],[\"plugin\",{\"1\":{\"2891\":1,\"3394\":4}}],[\"play\",{\"1\":{\"3084\":3,\"3087\":2,\"3096\":1}}],[\"placeholder\",{\"1\":{\"3394\":2}}],[\"place\",{\"1\":{\"1\":1}}],[\"p处于pdead状态则无法被再次调度\",{\"1\":{\"2868\":1}}],[\"pgcstop\",{\"1\":{\"2864\":1}}],[\"psyscall\",{\"1\":{\"2864\":1}}],[\"pitaya\",{\"1\":{\"3053\":4}}],[\"pidle\",{\"1\":{\"2864\":1,\"2872\":1}}],[\"pip\",{\"1\":{\"32\":1}}],[\"php的smarty等\",{\"1\":{\"2891\":1}}],[\"physpagesize\",{\"1\":{\"2783\":1,\"2786\":2}}],[\"phantom\",{\"1\":{\"145\":1}}],[\"p会记录自己执行\",{\"1\":{\"2578\":1}}],[\"pc\",{\"1\":{\"2350\":1,\"2362\":1,\"2373\":1,\"2420\":1,\"2459\":1,\"2755\":1,\"2793\":2,\"2795\":1,\"2868\":1,\"2907\":1,\"2934\":1,\"2938\":1,\"2940\":1,\"2945\":1}}],[\"p2\",{\"1\":{\"2272\":2}}],[\"p1\",{\"1\":{\"2272\":4}}],[\"ptrsize\",{\"1\":{\"2783\":1,\"2793\":1}}],[\"ptr\",{\"1\":{\"2014\":1,\"2206\":1,\"2229\":1,\"2241\":1,\"2243\":1,\"2244\":2,\"2249\":1,\"2251\":1,\"2258\":1,\"2260\":9,\"2261\":1,\"2793\":2,\"2795\":1}}],[\"ptrtype\",{\"1\":{\"2012\":1,\"2260\":1}}],[\"ptrtothis\",{\"1\":{\"2008\":1}}],[\"ptrdata\",{\"1\":{\"2008\":1}}],[\"pkgpath\",{\"1\":{\"1900\":1,\"2014\":1,\"2018\":1,\"2206\":1}}],[\"purge\",{\"1\":{\"3198\":1}}],[\"puintptr\",{\"1\":{\"2862\":3,\"2872\":1}}],[\"push\",{\"1\":{\"3410\":1,\"3412\":1,\"3413\":3,\"3428\":3}}],[\"pushq\",{\"1\":{\"2761\":2}}],[\"pushdown\",{\"1\":{\"280\":1}}],[\"puts\",{\"1\":{\"3341\":2}}],[\"putstreamserver\",{\"1\":{\"3342\":1}}],[\"putstream\",{\"1\":{\"3340\":1,\"3341\":1,\"3342\":1}}],[\"put\",{\"1\":{\"1577\":1}}],[\"port\",{\"1\":{\"3342\":2}}],[\"porxy\",{\"1\":{\"3297\":1}}],[\"poly\",{\"1\":{\"3098\":1}}],[\"popitem\",{\"1\":{\"3069\":2}}],[\"pop\",{\"1\":{\"3054\":2,\"3063\":1,\"3069\":1}}],[\"popq\",{\"1\":{\"2761\":2}}],[\"power\",{\"1\":{\"1916\":1}}],[\"pointer\",{\"1\":{\"1834\":2,\"1869\":3,\"1890\":1,\"1892\":1,\"1895\":1,\"1900\":1,\"1903\":1,\"2014\":1,\"2182\":1,\"2208\":1,\"2213\":1,\"2220\":1,\"2224\":1,\"2229\":1,\"2236\":1,\"2239\":2,\"2241\":1,\"2260\":2,\"2459\":1,\"2783\":1,\"2793\":2,\"2795\":2,\"2919\":1}}],[\"point\",{\"1\":{\"103\":1,\"104\":2,\"2480\":1,\"2748\":1}}],[\"posts\",{\"0\":{\"3465\":1}}],[\"postgres\",{\"1\":{\"2891\":1}}],[\"post\",{\"1\":{\"1169\":1,\"1172\":1,\"1175\":4,\"1177\":1,\"1538\":1,\"1576\":1,\"3317\":1}}],[\"pos和check\",{\"1\":{\"104\":1}}],[\"pos\",{\"1\":{\"103\":1,\"104\":1,\"623\":1,\"625\":1,\"626\":1}}],[\"p$port\",{\"1\":{\"63\":1}}],[\"padded\",{\"1\":{\"3388\":1}}],[\"pairs\",{\"1\":{\"3388\":1}}],[\"pass\",{\"1\":{\"3041\":2,\"3099\":1}}],[\"pack\",{\"1\":{\"2893\":1}}],[\"package\",{\"1\":{\"1631\":1,\"1656\":2,\"1670\":1,\"1673\":1,\"1680\":1,\"2823\":1,\"3286\":1,\"3287\":1,\"3295\":1,\"3297\":1,\"3301\":1,\"3309\":1,\"3311\":1,\"3321\":1,\"3340\":1,\"3342\":1,\"3388\":1}}],[\"pattern\",{\"1\":{\"3182\":1,\"3184\":1,\"3186\":1,\"3188\":1,\"3190\":1,\"3192\":1,\"3194\":1,\"3196\":1,\"3388\":2}}],[\"path\",{\"1\":{\"2891\":1,\"3388\":1}}],[\"patents\",{\"1\":{\"2882\":1}}],[\"patch\",{\"1\":{\"34\":2}}],[\"parens\",{\"1\":{\"3388\":5}}],[\"paren\",{\"1\":{\"3388\":2}}],[\"parseroptions\",{\"1\":{\"3388\":1}}],[\"parser\",{\"1\":{\"3388\":1}}],[\"parse\",{\"1\":{\"3365\":1}}],[\"parsedebugvars\",{\"1\":{\"2789\":1}}],[\"parameters\",{\"1\":{\"3388\":1}}],[\"params\",{\"1\":{\"3388\":2}}],[\"param\",{\"1\":{\"3388\":1}}],[\"para2\",{\"1\":{\"3226\":1,\"3229\":1}}],[\"para1\",{\"1\":{\"3226\":1,\"3229\":1}}],[\"partial\",{\"1\":{\"1096\":1}}],[\"panic结构体\",{\"1\":{\"2919\":1}}],[\"panic指针\",{\"1\":{\"2907\":1}}],[\"panic执行defer时会把它标记为true\",{\"1\":{\"2907\":1}}],[\"panica2\",{\"1\":{\"2949\":1,\"2951\":1,\"2952\":1,\"2955\":2,\"2958\":1}}],[\"panica1\",{\"1\":{\"2913\":1,\"2916\":1,\"2917\":1,\"2921\":1,\"2922\":1}}],[\"panica\",{\"1\":{\"2904\":1,\"2906\":2,\"2913\":1,\"2914\":1,\"2917\":1,\"2918\":1,\"2920\":1,\"2922\":1,\"2928\":2,\"2930\":1,\"2949\":2,\"2951\":2,\"2952\":2,\"2954\":1,\"2957\":1,\"2958\":1}}],[\"panic\",{\"0\":{\"2897\":1,\"2903\":1},\"1\":{\"2232\":1,\"2245\":1,\"2246\":1,\"2248\":1,\"2260\":1,\"2332\":1,\"2350\":3,\"2362\":3,\"2373\":3,\"2420\":3,\"2457\":1,\"2459\":2,\"2460\":1,\"2461\":1,\"2900\":1,\"2902\":1,\"2904\":1,\"2905\":3,\"2906\":1,\"2907\":2,\"2908\":4,\"2913\":2,\"2914\":4,\"2916\":3,\"2918\":1,\"2919\":2,\"2922\":1,\"2924\":2,\"2925\":2,\"2927\":1,\"2928\":1,\"2930\":1,\"2932\":1,\"2933\":2,\"2934\":2,\"2935\":1,\"2944\":2,\"2945\":1,\"2946\":2,\"2948\":1,\"2949\":2,\"2951\":3,\"2955\":1,\"2957\":1,\"2958\":2,\"2963\":2,\"3286\":2,\"3295\":1,\"3297\":1,\"3325\":2,\"3327\":2,\"3341\":1,\"3342\":2}}],[\"pa\",{\"1\":{\"2172\":8,\"2174\":5,\"2175\":1,\"2176\":1,\"2178\":6,\"2180\":3}}],[\"pages\",{\"1\":{\"3419\":1,\"3428\":7,\"3440\":1,\"3441\":1,\"3443\":1}}],[\"pagesz\",{\"1\":{\"2783\":1}}],[\"page\",{\"0\":{\"0\":1,\"10\":1},\"1\":{\"496\":1,\"655\":1,\"656\":1,\"2523\":1,\"3238\":1}}],[\"p\",{\"0\":{\"2863\":1},\"1\":{\"28\":1,\"63\":1,\"1046\":1,\"1054\":1,\"1169\":1,\"1640\":3,\"1656\":4,\"1670\":2,\"1673\":2,\"1680\":2,\"1687\":7,\"1702\":7,\"2487\":1,\"2528\":2,\"2554\":3,\"2555\":1,\"2560\":1,\"2564\":2,\"2565\":1,\"2578\":1,\"2789\":2,\"2790\":2,\"2793\":7,\"2802\":1,\"2803\":2,\"2835\":1,\"2838\":5,\"2839\":1,\"2840\":1,\"2841\":1,\"2843\":1,\"2848\":1,\"2857\":1,\"2859\":1,\"2862\":4,\"2864\":1,\"2865\":1,\"2928\":2,\"2949\":2,\"3318\":1}}],[\"prunning\",{\"1\":{\"2864\":1}}],[\"prime\",{\"1\":{\"3176\":2}}],[\"primary\",{\"1\":{\"226\":1,\"237\":1,\"251\":1}}],[\"print\",{\"1\":{\"3015\":1,\"3017\":1,\"3023\":3,\"3026\":1,\"3032\":1,\"3034\":1,\"3041\":2,\"3048\":32,\"3052\":7,\"3053\":12,\"3054\":7,\"3058\":8,\"3062\":4,\"3063\":3,\"3065\":16,\"3069\":13,\"3075\":3,\"3084\":2,\"3087\":2,\"3090\":5,\"3093\":1,\"3096\":5,\"3099\":2,\"3113\":3,\"3116\":2,\"3119\":3,\"3175\":7,\"3176\":3,\"3177\":4,\"3205\":3,\"3238\":3,\"3246\":2,\"3248\":5,\"3250\":1,\"3256\":7}}],[\"print等\",{\"1\":{\"2891\":1}}],[\"printf\",{\"1\":{\"1640\":3,\"1656\":2,\"1670\":1,\"1673\":1,\"1680\":1,\"1687\":3,\"1702\":3,\"1717\":3,\"1760\":1,\"1763\":1,\"1774\":2}}],[\"println\",{\"1\":{\"1631\":4,\"1774\":2,\"1878\":2,\"1951\":1,\"1965\":2,\"1981\":2,\"1985\":2,\"2020\":2,\"2090\":3,\"2103\":1,\"2111\":1,\"2132\":1,\"2135\":1,\"2158\":2,\"2163\":1,\"2166\":3,\"2172\":3,\"2178\":3,\"2182\":1,\"2184\":1,\"2188\":2,\"2195\":2,\"2210\":1,\"2232\":1,\"2253\":1,\"2272\":1,\"2294\":1,\"2300\":1,\"2309\":1,\"2320\":1,\"2333\":3,\"2335\":1,\"2337\":1,\"2352\":2,\"2370\":2,\"2378\":2,\"2400\":2,\"2402\":1,\"2823\":1,\"2904\":3,\"2913\":1,\"2928\":3,\"2949\":3,\"3286\":1,\"3297\":1,\"3327\":1,\"3341\":3,\"3342\":3}}],[\"prettier\",{\"1\":{\"3394\":4}}],[\"prefer\",{\"1\":{\"3388\":6}}],[\"preemption\",{\"1\":{\"2868\":1}}],[\"preempt\",{\"1\":{\"2868\":1}}],[\"pre\",{\"1\":{\"1232\":1}}],[\"prepare\",{\"1\":{\"665\":1,\"677\":1,\"682\":1,\"2795\":1}}],[\"prepare状态\",{\"1\":{\"119\":1}}],[\"prediction\",{\"0\":{\"12\":1}}],[\"project\",{\"0\":{\"3463\":1}}],[\"props\",{\"1\":{\"3388\":1}}],[\"property\",{\"1\":{\"3084\":2,\"3087\":2,\"3096\":4,\"3388\":5}}],[\"property包装器来包装getter和setter方法\",{\"1\":{\"3083\":1}}],[\"property装饰器\",{\"1\":{\"3082\":1}}],[\"prompt\",{\"1\":{\"3388\":1}}],[\"promise\",{\"1\":{\"3388\":1}}],[\"production\",{\"1\":{\"3388\":1}}],[\"protcol\",{\"1\":{\"3295\":2}}],[\"prototype\",{\"1\":{\"3388\":1}}],[\"prototypes\",{\"1\":{\"3388\":1}}],[\"protoc\",{\"1\":{\"3323\":1,\"3346\":2,\"3365\":1,\"3368\":3}}],[\"protocol\",{\"1\":{\"1064\":1,\"3358\":1}}],[\"proto\",{\"1\":{\"3321\":1,\"3323\":1,\"3325\":4,\"3327\":2,\"3340\":1,\"3341\":4,\"3342\":8,\"3365\":2,\"3388\":2}}],[\"proto3\",{\"1\":{\"3321\":1,\"3340\":1}}],[\"protobuf的\",{\"1\":{\"3359\":1}}],[\"protobuf\",{\"1\":{\"3269\":1,\"3316\":1,\"3339\":1,\"3368\":2}}],[\"process\",{\"1\":{\"3388\":5}}],[\"processor\",{\"1\":{\"2857\":1}}],[\"procresize\",{\"1\":{\"2789\":1}}],[\"procs设置成cpu个数\",{\"1\":{\"2789\":1}}],[\"procs\",{\"1\":{\"2789\":3}}],[\"provides\",{\"1\":{\"2789\":1}}],[\"program\",{\"1\":{\"2748\":2,\"3394\":4}}],[\"programs\",{\"1\":{\"1609\":1}}],[\"proxy\",{\"1\":{\"1114\":1,\"3273\":1,\"3295\":2,\"3297\":2,\"3306\":1,\"3309\":2,\"3311\":2}}],[\"proximity\",{\"0\":{\"12\":1}}],[\"profile\",{\"1\":{\"1\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,Et(t,{fields:[p.heading,p.text,p.customFields],storeFields:[p.heading,p.text,p.customFields]})]));self.onmessage=({data:{query:e,locale:t,options:s}})=>{self.postMessage(kt(e,vt[t],s))};
//# sourceMappingURL=index.js.map
